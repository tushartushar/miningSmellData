Implementation smell,Namespace,Class,File,Method,Description
Long Method,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The method has 465 lines of code.
Long Method,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The method has 105 lines of code.
Long Method,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The method has 255 lines of code.
Long Method,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The method has 112 lines of code.
Long Statement,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The length of the statement  "//				SeriesTypesController scontroller = new SeriesTypesController(controller.chart'controller'UITableViewStyle.Grouped); 		   " is 122.
Long Statement,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,Initialize,The length of the statement  "//			System.Drawing.RectangleF r = new System.Drawing.RectangleF(0'0'this.View.Bounds.Width'this.View.Bounds.Height-42);						 " is 120.
Long Statement,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,Initialize,The length of the statement  "			// do not uncomment .....--- for rotate event NSObject notificationObserver  = NSNotificationCenter.DefaultCenter.AddObserver("UIDeviceOrientationDidChangeNotification"' DeviceRotated ); " is 186.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitBasic,The length of the statement  "			StyleItem item2 = new StyleItem("Subtitle"'"Here is more description"'UITableViewCellStyle.Subtitle'UITableViewCellAccessory.None); " is 131.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitBasic,The length of the statement  "			StyleItem item3 = new StyleItem("Value 1 - no accessory"'"Here is more description"'UITableViewCellStyle.Value1'UITableViewCellAccessory.None); " is 143.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitBasic,The length of the statement  "			StyleItem item4 = new StyleItem("Value 2 - no accessory"'"Here is more description"'UITableViewCellStyle.Value2'UITableViewCellAccessory.None); " is 143.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitBasic,The length of the statement  "			StyleItem item6 = new StyleItem("DetailDisclosureButton"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DetailDisclosureButton); " is 138.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitBasic,The length of the statement  "			StyleItem item7 = new StyleItem("DisclosureIndicator"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DisclosureIndicator); " is 132.
Long Statement,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The length of the statement  "			StyleItem item2 = new StyleItem("Two images"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DisclosureIndicator); " is 123.
Long Statement,TChartFeatures,StyleDemoTableDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDelegate.cs,RowSelected,The length of the statement  "/* pep commented temp			UITableViewController nextController = new CheckmarkDemoTableController(UITableViewStyle.Grouped); " is 122.
Long Statement,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	 " is 126.
Long Statement,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle; " is 123.
Long Statement,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The length of the statement  "						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		 " is 120.
Long Statement,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The length of the statement  "						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		 " is 121.
Long Statement,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The length of the statement  "						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		 " is 121.
Long Statement,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The length of the statement  "						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		 " is 124.
Long Statement,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The length of the statement  "						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		 " is 121.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitBasic,The length of the statement  "			LegendItem item2 = new LegendItem("Subtitle"'"Here is more description"'UITableViewCellStyle.Subtitle'UITableViewCellAccessory.None); " is 133.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitBasic,The length of the statement  "			LegendItem item3 = new LegendItem("Value 1 - no accessory"'"Here is more description"'UITableViewCellStyle.Value1'UITableViewCellAccessory.None); " is 145.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitBasic,The length of the statement  "			LegendItem item4 = new LegendItem("Value 2 - no accessory"'"Here is more description"'UITableViewCellStyle.Value2'UITableViewCellAccessory.None); " is 145.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitBasic,The length of the statement  "			LegendItem item6 = new LegendItem("DetailDisclosureButton"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DetailDisclosureButton); " is 140.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitBasic,The length of the statement  "			LegendItem item7 = new LegendItem("DisclosureIndicator"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DisclosureIndicator); " is 134.
Long Statement,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The length of the statement  "			//LegendItem item2 = new LegendItem("Two images"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.DisclosureIndicator); " is 127.
Long Statement,TChartFeatures,LegendDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDelegate.cs,RowSelected,The length of the statement  "/* pep commented temp			UITableViewController nextController = new CheckmarkDemoTableController(UITableViewStyle.Grouped); " is 122.
Long Statement,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The length of the statement  "			AspectItem itemZoomScroll = new AspectItem("ZoomScroll Auto"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.None); " is 124.
Long Statement,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The length of the statement  "			switcherZoomScroll.On=_parentController.chart.Chart.Aspect.ZoomScrollStyle==Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Auto; " is 129.
Long Statement,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The length of the statement  "			AspectItem itemZoomStyle = new AspectItem("Zoom InChart"'""'UITableViewCellStyle.Default'UITableViewCellAccessory.None); " is 120.
Long Statement,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The length of the statement  "			switcherZoomStyle.On=(_parentController.chart.Chart.Aspect.ZoomStyle == Steema.TeeChart.Drawing.Aspect.ZoomStyles.InChart);			 " is 123.
Long Statement,TChartFeatures,AspectDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDelegate.cs,RowSelected,The length of the statement  "/* pep commented temp			UITableViewController nextController = new CheckmarkDemoTableController(UITableViewStyle.Grouped); " is 122.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage; " is 152.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1]; " is 133.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values; " is 153.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left; " is 128.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor; " is 128.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				 " is 132.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left; " is 129.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor; " is 126.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left; " is 129.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor; " is 126.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0]; " is 126.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1]; " is 127.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true; " is 123.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart"); " is 128.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area()); " is 159.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4); " is 143.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				 " is 127.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor; " is 132.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				 " is 124.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool)); " is 177.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool)); " is 177.
Long Statement,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The length of the statement  "					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true; " is 125.
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton button = new UIGlassButton(new RectangleF(20' 265' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton button = new UIGlassButton(new RectangleF(20' 265' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton button = new UIGlassButton(new RectangleF(20' 265' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton button = new UIGlassButton(new RectangleF(20' 265' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonStatistical = new UIGlassButton(new RectangleF(20' 315' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonStatistical = new UIGlassButton(new RectangleF(20' 315' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonStatistical = new UIGlassButton(new RectangleF(20' 315' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonStatistical = new UIGlassButton(new RectangleF(20' 315' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonAbout = new UIGlassButton(new RectangleF(20' 365' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonAbout = new UIGlassButton(new RectangleF(20' 365' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonAbout = new UIGlassButton(new RectangleF(20' 365' 280' 48));
Magic Number,TChartFeatures,RootViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\RootViewController.xib.cs,ViewDidLoad,The following statement contains a magic number: UIGlassButton buttonAbout = new UIGlassButton(new RectangleF(20' 365' 280' 48));
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: button.Frame = new System.Drawing.RectangleF(0'0'26'26);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: button.Frame = new System.Drawing.RectangleF(0'0'26'26);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(50'9'215'23);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(50'9'215'23);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(50'9'215'23);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(50'9'215'23);
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,RowsInSection,The following statement contains a magic number: if (section == 0)  				return 7;  			else  			    return 4;
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,RowsInSection,The following statement contains a magic number: if (section == 0)  				return 7;  			else  			    return 4;
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,NumberOfSections,The following statement contains a magic number: return 2;
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,GetCell,The following statement contains a magic number: if (indexPath.Section == 1)  			{  				row += 7;  				cellId = _section2CellId;  			}
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,StyleDemoTableDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\StyleDemoTableDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,EditableTableController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\EditableTableController.cs,ViewDidLoad,The following statement contains a magic number: _button.Frame = new System.Drawing.RectangleF(285'80'23'23);
Magic Number,TChartFeatures,EditableTableController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\EditableTableController.cs,ViewDidLoad,The following statement contains a magic number: _button.Frame = new System.Drawing.RectangleF(285'80'23'23);
Magic Number,TChartFeatures,EditableTableController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\EditableTableController.cs,ViewDidLoad,The following statement contains a magic number: _button.Frame = new System.Drawing.RectangleF(285'80'23'23);
Magic Number,TChartFeatures,EditableTableController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\EditableTableController.cs,ViewDidLoad,The following statement contains a magic number: _button.Frame = new System.Drawing.RectangleF(285'80'23'23);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,line1_BeforeDrawValues,The following statement contains a magic number: if(_controller.chart.Axes.Left.Maximum > 0)  				_controller.chart.Axes.Left.Draw(g.ChartXCenter - 10'g.ChartXCenter - 20'g.ChartXCenter'true);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,line1_BeforeDrawValues,The following statement contains a magic number: if(_controller.chart.Axes.Left.Maximum > 0)  				_controller.chart.Axes.Left.Draw(g.ChartXCenter - 10'g.ChartXCenter - 20'g.ChartXCenter'true);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,line1_BeforeDrawValues,The following statement contains a magic number: posAxis = _controller.chart.Axes.Left.CalcYPosValue(10);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,line1_BeforeDrawValues,The following statement contains a magic number: _controller.chart.Axes.Bottom.Draw(posAxis + 10' posAxis + 40' posAxis' true);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,line1_BeforeDrawValues,The following statement contains a magic number: _controller.chart.Axes.Bottom.Draw(posAxis + 10' posAxis + 40' posAxis' true);
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: _controller.chart.Axes.Left.Grid.DrawEvery = 3;
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  				Steema.TeeChart.Styles.Line line1 = new Steema.TeeChart.Styles.Line();  				_controller.chart.Series.Add(line1);  				_controller.chart.Aspect.View3D = false;  				_controller.chart.Chart.Invalidate();  				/*Random Rnd = new Random();  				_controller.chart.Aspect.View3D = false;  				for(int t = 0; t <= 20; ++t)  					line1.Add(t' ((Rnd.Next(100)) + 1) - ((Rnd.Next(70)) + 1)' UIColor.Yellow.CGColor);  				  				_controller.chart.Axes.Left.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Bottom.AxisPen.Color = UIColor.White.CGColor;  				_controller.chart.Axes.Left.AxisPen.Width = 1;  				_controller.chart.Axes.Bottom.AxisPen.Width = 1;  				line1.BeforeDrawValues += new Steema.TeeChart.Styles.Series.PaintChartEventHandler(line1_BeforeDrawValues);  				*/  				    _controller.chart.Series[0].FillSampleValues(50);  			/*		_controller.chart.Header.Visible = true;  					_controller.chart.Header.Text = "My Header Text";  					_controller.chart.Header.Alignment = MonoTouch.CoreText.CTTextAlignment.Left;  					_controller.chart.Header.Font.Size=20;  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Gradient.Visible=false;  					_controller.chart.Legend.Transparency = 50;*/				  				/*  				_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				_controller.chart.Legend.Font.Color = UIColor.Black.CGColor;  				_controller.chart.Legend.Shadow.Visible=false;  					_controller.chart.Panel.MarginTop = 10;  				_controller.chart.SubHeader.Visible = true;  				_controller.chart.SubHeader.Alignment = MonoTouch.CoreText.CTTextAlignment.Right;  					_controller.chart.SubHeader.Text = "SubHeader";  				_controller.chart.SubHeader.Font.Color = UIColor.Yellow.CGColor;  				_controller.chart.SubHeader.Font.Size = 12;*/  					break;  				case 1:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points());  				    _controller.chart.Series[0].FillSampleValues(100);  					break;  				case 2:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Area());	  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[1].FillSampleValues(5);  					_controller.chart.Series[2].FillSampleValues(5);  					_controller.chart.Aspect.View3D = false;  				    Steema.TeeChart.Styles.Area area1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area2 = _controller.chart.Series[1] as Steema.TeeChart.Styles.Area;  				    Steema.TeeChart.Styles.Area area3 = _controller.chart.Series[2] as Steema.TeeChart.Styles.Area;  				    area1.Transparency = 40;  				    area2.Transparency = 40;  					area3.Transparency = 40;  	  					break;  				case 3:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.FastLine());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues(400);  					break;  				case 4:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizLine());  					_controller.chart.Series[0].FillSampleValues(25);  					break;  				case 5:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar());  				    					_controller.chart.Series[0].Add(3'"Pears"'UIColor.Red.CGColor);  					_controller.chart.Series[0].Add(4'"Apples"'UIColor.Blue.CGColor);  					_controller.chart.Series[0].Add(2'"Oranges"'UIColor.Green.CGColor);  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Pen.Visible =false;  				(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bar).Marks.Shadow.Visible=false;  								_controller.chart.AfterDraw += new Steema.TeeChart.PaintChartEventHandler(chart_AfterDraw);  				//_controller.chart.GetAxisLabel += new Steema.TeeChart.GetAxisLabelEventHandler(_controller_GetAxisLabel);  				_controller.chart.Header.Font.Name = "Arial";  				_controller.chart.Header.Font.Size = 20;  				  					/*_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Series[0].FillSampleValues(5);  				    Steema.TeeChart.Styles.Bar bar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.Bar;  					bar1.ColorEachPoint = true;  					bar1.Marks.Visible = true;  				    bar1.Marks.Transparent = true;  					bar1.Marks.ArrowLength = -15;  				    bar1.Marks.Arrow.Visible = false;*/  								  					break;  				case 6:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBar());  					_controller.chart.Series[0].FillSampleValues(5);  					_controller.chart.Aspect.View3D=false;  				    Steema.TeeChart.Styles.HorizBar hbar1 = _controller.chart.Series[0] as Steema.TeeChart.Styles.HorizBar;				      				    hbar1.MarksOnBar = true;  					break;  				case 7:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pie());  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(30);  					_controller.chart.Series[0].Add(40);  					_controller.chart.Series[0].Add(70);  				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).EdgeStyle = Steema.TeeChart.Drawing.EdgeStyles.Flat;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).BevelPercent=15;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Color = UIColor.FromRGB(255'255'255).CGColor;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Pie).Marks.Font.Size = 10;			  					_controller.chart.Series[0].Marks.Visible=true;  					_controller.chart.Series[0].Marks.Transparent=true;				   					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Legend.Font.Size = 10;  				     					_controller.chart.Aspect.Chart3DPercent=40;  					break;  				case 8:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Shape());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible =true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Style = Steema.TeeChart.Styles.ShapeStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Shape).Gradient.EndColor = UIColor.FromRGB(255'0'0).CGColor;  				  					_controller.chart.Series[0].FillSampleValues();  					break;  				case 9:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Arrow());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Arrow).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 10:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bubble());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.Visible = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bubble).Pointer.Gradient.EndColor=UIColor.FromRGB(255'255'255).CGColor;	  					_controller.chart.Series[0].FillSampleValues();								  					break;  				case 11:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gantt());  					_controller.chart.Legend.Visible = true;  					_controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  					_controller.chart.Legend.Transparent = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 12:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Candle());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 13:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Donut());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Circled = true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Donut).Pen.Visible = false;  					_controller.chart.Series[0].Marks.Visible=false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Top;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 12;				    					_controller.chart.Series[0].FillSampleValues(4);				  					_controller.chart.Aspect.View3D=true;  					break;  				case 14:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Volume());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Volume).LinePen.Width = 2;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 15:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bar3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 16:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Points3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 17:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Polar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Polar).Circled = true;  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 18:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarBar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 19:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Radar());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 20:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Clock());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Clock).Circled = true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 21:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.WindRose());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 22:			  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Pyramid());  					_controller.chart.Series[0].FillSampleValues(4);	  					break;  				case 23:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 24:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinePoint());  					_controller.chart.Aspect.View3D = false;  				    _controller.chart.Series[0].FillSampleValues();				  					break;  				case 25:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.BarJoin());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 26:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ColorGrid());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 27:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Waterfall());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 28:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Histogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Histogram).LinesPen.Visible=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 29:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Error());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ColorEachPoint=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Error).ErrorPen.Width = 5;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 30:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ErrorBar());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.ErrorBar).ColorEachPoint=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 31:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Contour());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 32:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Smith());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Smith).Circled=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 33:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Bezier());  					_controller.chart.Aspect.View3D=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Style = Steema.TeeChart.Styles.PointerStyles.Circle;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).Pointer.Pen.Visible=false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Width = 2;				  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Bezier).LinePen.Color = UIColor.Red.CGColor;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 34:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Calendar());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 35:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HighLow());  					_controller.chart.Aspect.View3D=false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 36:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TriSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 37:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Funnel());  					_controller.chart.Aspect.View3D	= false;  					_controller.chart.Series[0].FillSampleValues(20);				  					break;  				case 38:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Box());  					_controller.chart.Series[0].FillSampleValues();		  					break;  				case 39:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizBox());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 40:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizArea());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 41:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Tower());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues(5);		  					_controller.chart.Walls.Visible = false;				     					_controller.chart.Axes.Bottom.Ticks.Visible = false;  					_controller.chart.Axes.Bottom.MinorTicks.Visible =false;	  					_controller.chart.Axes.Left.Ticks.Visible = false;  					_controller.chart.Axes.Left.MinorTicks.Visible =false;	  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.Tower).Pen.Visible=false;	  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					_controller.chart.Aspect.Orthogonal = false;  					_controller.chart.Aspect.Rotation = -25;			  					_controller.chart.Aspect.Zoom = 70;	  					_controller.chart.Aspect.Chart3DPercent = 75;  				    _controller.chart.Header.Text = "Drag to Rotate the Chart";  				    _controller.chart.Header.Visible = true;  					break;  				case 42:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PointFigure());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 43:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Gauges());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 44:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Vector3D());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 45:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.HorizHistogram());  					_controller.chart.Aspect.View3D = false;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.HorizHistogram).LinesPen.Visible=false;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 46:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Map());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 47:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImageBar());  					_controller.chart.Series[0].FillSampleValues();		  				    UIImage img = UIImage.FromFile("bulb_on.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImageBar).Image = img.CGImage;  					break;  				case 48:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Kagi());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 49:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Renko());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 50:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.IsoSurface());  					_controller.chart.Aspect.View3D=true;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 51:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Darvas());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 52:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VolumePipe());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Legend.Visible = true;  				    _controller.chart.Legend.Transparent = true;  				    _controller.chart.Legend.Alignment = Steema.TeeChart.LegendAlignments.Bottom;  				    _controller.chart.Legend.Symbol.Pen.Visible = false;  				    _controller.chart.Legend.Font.Size = 14;  					_controller.chart.Series[0].FillSampleValues(4);				  					break;  				case 53:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.ImagePoint());  					_controller.chart.Series[0].FillSampleValues(5);			  				    _controller.chart.Aspect.View3D	= false;  				    UIImage img2 = UIImage.FromFile("bulb_off.png");  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.HorizSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).Pointer.VertSize = 30;				  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.ImagePoint).PointImage = img2.CGImage;  					break;  				case 54:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.CircularGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.CircularGauge).Value = 65;			  					break;  				case 55:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.LinearGauge());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 56:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.VerticalLinearGauge());		  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.Ticks.Visible = true;  				 	(_controller.chart.Series[0] as Steema.TeeChart.Styles.VerticalLinearGauge).Axis.MinorTicks.Visible = true;				  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 57:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.NumericGauge());  				    (_controller.chart.Series[0] as Steema.TeeChart.Styles.NumericGauge).Value = 123;  					break;  				case 58:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.OrgSeries());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 59:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.TagCloud());  					_controller.chart.Series[0].FillSampleValues(50);				  					break;  				case 60:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.PolarGrid());  					_controller.chart.Aspect.View3D = false;  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 61:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.Ternary());  					_controller.chart.Series[0].FillSampleValues();				  					break;  				case 62:  					_controller.chart.Series.Add(new Steema.TeeChart.Styles.KnobGauge());  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).ActiveCenter=true;  					(_controller.chart.Series[0] as Steema.TeeChart.Styles.KnobGauge).Value = 50;  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,SeriesTypesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{  				new ItemInfo(0'"Line"'"SeriesIcons/line.png")'  				new ItemInfo(1'"Points"'"SeriesIcons/Points.png")'  				new ItemInfo(2'"Area"'"SeriesIcons/area.png")'  				new ItemInfo(3'"FastLine"'"SeriesIcons/fastline.png")'  				new ItemInfo(4'"HorizLine"'"SeriesIcons/horizline.png")'  				new ItemInfo(5'"Bar"'"SeriesIcons/bar.png")'  				new ItemInfo(6'"HorizBar"'"SeriesIcons/horizbar.png")'  				new ItemInfo(7'"Pie"'"SeriesIcons/pie.png")'  				new ItemInfo(8'"Shape"'"SeriesIcons/shape.png")'  				new ItemInfo(9'"Arrow"'"SeriesIcons/arrow.png")'  				new ItemInfo(10'"Bubble"'"SeriesIcons/bubbles.png")'  				new ItemInfo(11'"Gantt"'"SeriesIcons/gantt.png")'  				new ItemInfo(12'"Candle"'"SeriesIcons/candle.png")'  				new ItemInfo(13'"Donut"'"SeriesIcons/donut.png")'  				new ItemInfo(14'"Volume"'"SeriesIcons/volume.png")'  				new ItemInfo(15'"Bar3D"'"SeriesIcons/bar3D.png")'  				new ItemInfo(16'"Points3D"'"SeriesIcons/Points.png")'  				new ItemInfo(17'"Polar"'"SeriesIcons/polar.png")'  				new ItemInfo(18'"PolarBar"'"SeriesIcons/polarbar.png")'  				new ItemInfo(19'"Radar"'"SeriesIcons/radar.png")'  				new ItemInfo(20'"Clock"'"SeriesIcons/clock.png")'  				new ItemInfo(21'"WindRose"'"SeriesIcons/windrose.png")'  				new ItemInfo(22'"Pyramid"'"SeriesIcons/pyramid.png")'  				new ItemInfo(23'"Surface"'"SeriesIcons/Surface.png")'  				new ItemInfo(24'"LinePoint"'"SeriesIcons/linepoint.png")'  				new ItemInfo(25'"BarJoin"'"SeriesIcons/barjoin.png")'  				new ItemInfo(26'"ColorGrid"'"SeriesIcons/colorgrid.png")'  				new ItemInfo(27'"Waterfall"'"SeriesIcons/waterfall.png")'  				new ItemInfo(28'"Histogram"'"SeriesIcons/histogram.png")'  				new ItemInfo(29'"Error"'"SeriesIcons/error.png")'  				new ItemInfo(30'"ErrorBar"'"SeriesIcons/errorbar.png")'  				new ItemInfo(31'"Contour"'"SeriesIcons/contour.png")'  				new ItemInfo(32'"Smith"'"SeriesIcons/smith.png")'  				new ItemInfo(33'"Bezier"'"SeriesIcons/bezier.png")'  				new ItemInfo(34'"Calendar"'"SeriesIcons/calendar.png")'  				new ItemInfo(35'"HighLow"'"SeriesIcons/highlow.png")'  				new ItemInfo(36'"TriSurface"'"SeriesIcons/Surface.png")'  				new ItemInfo(37'"Funnel"'"SeriesIcons/funnel.png")'  				new ItemInfo(38'"Box"'"SeriesIcons/box.png")'  				new ItemInfo(39'"HorizBox"'"SeriesIcons/horizbox.png")'  				new ItemInfo(40'"HorizArea"'"SeriesIcons/horizarea.png")'  				new ItemInfo(41'"Tower"'"SeriesIcons/tower.png")'  				new ItemInfo(42'"PointFigure"'"SeriesIcons/pointnfigure.png")'  				new ItemInfo(43'"Gauges"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(44'"Vector3D"'"SeriesIcons/vector3d.png")'  				new ItemInfo(45'"HorizHistogram"'"SeriesIcons/horizhistogram.png")'  				new ItemInfo(46'"Map"'"SeriesIcons/map.png")'  				new ItemInfo(47'"ImageBar"'"SeriesIcons/bar.png")'  				new ItemInfo(48'"Kagi"'"SeriesIcons/kagi.png")'  				new ItemInfo(49'"Renko"'"SeriesIcons/renko.png")'  				new ItemInfo(50'"IsoSurface"'"SeriesIcons/isosurface.png")'  				new ItemInfo(51'"Darvas"'"SeriesIcons/darvas.png")'  				new ItemInfo(52'"VolumePipe"'"SeriesIcons/volumepipe.png")'  				new ItemInfo(53'"ImagePoint"'"SeriesIcons/Points.png")'  				new ItemInfo(54'"CircularGauge"'"SeriesIcons/circulargauge.png")'  				new ItemInfo(55'"LinearGauge"'"SeriesIcons/lineargauge.png")'  				new ItemInfo(56'"VerticalLinearGauge"'"SeriesIcons/vertgauge.png")'  				new ItemInfo(57'"NumericGauge"'"SeriesIcons/numericgauge.png")'  				new ItemInfo(58'"OrgSeries"'"SeriesIcons/org.png")'  				new ItemInfo(59'"TagCloud"'"SeriesIcons/tagcloud.png")'  				new ItemInfo(60'"PolarGrid"'"SeriesIcons/PolarGrid.png")'  				new ItemInfo(61'"Ternary"'"SeriesIcons/ternary.png")'  				new ItemInfo(61'"KnobGauge"'"SeriesIcons/knobgauge.png")  			};
Magic Number,TChartFeatures,SeriesTypesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SeriesTypesDataSource.cs,GetCell,The following statement contains a magic number: cell.IndentationWidth=10;
Magic Number,TChartFeatures,SettingsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SettingsDelegate.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Row)  			{  /*				case 0:  //					nextController = new SeriesTypesController(_controller.chart' _chartController 'UITableViewStyle.Grouped);  					nextController = new SeriesTypesController(UITableViewStyle.Grouped);  					break;*/  				case 0:  					nextController = new AspectController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 1:  					nextController = new ThemesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 2:  					nextController = new ColorPalettesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 3:  					nextController = new LegendController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 4:  					nextController = new ToolsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 5:  					nextController = new FunctionsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 6:  					nextController = new EditableTableController(UITableViewStyle.Grouped);  					break;  				default:  					break;  			}
Magic Number,TChartFeatures,SettingsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SettingsDelegate.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Row)  			{  /*				case 0:  //					nextController = new SeriesTypesController(_controller.chart' _chartController 'UITableViewStyle.Grouped);  					nextController = new SeriesTypesController(UITableViewStyle.Grouped);  					break;*/  				case 0:  					nextController = new AspectController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 1:  					nextController = new ThemesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 2:  					nextController = new ColorPalettesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 3:  					nextController = new LegendController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 4:  					nextController = new ToolsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 5:  					nextController = new FunctionsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 6:  					nextController = new EditableTableController(UITableViewStyle.Grouped);  					break;  				default:  					break;  			}
Magic Number,TChartFeatures,SettingsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SettingsDelegate.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Row)  			{  /*				case 0:  //					nextController = new SeriesTypesController(_controller.chart' _chartController 'UITableViewStyle.Grouped);  					nextController = new SeriesTypesController(UITableViewStyle.Grouped);  					break;*/  				case 0:  					nextController = new AspectController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 1:  					nextController = new ThemesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 2:  					nextController = new ColorPalettesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 3:  					nextController = new LegendController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 4:  					nextController = new ToolsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 5:  					nextController = new FunctionsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 6:  					nextController = new EditableTableController(UITableViewStyle.Grouped);  					break;  				default:  					break;  			}
Magic Number,TChartFeatures,SettingsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SettingsDelegate.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Row)  			{  /*				case 0:  //					nextController = new SeriesTypesController(_controller.chart' _chartController 'UITableViewStyle.Grouped);  					nextController = new SeriesTypesController(UITableViewStyle.Grouped);  					break;*/  				case 0:  					nextController = new AspectController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 1:  					nextController = new ThemesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 2:  					nextController = new ColorPalettesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 3:  					nextController = new LegendController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 4:  					nextController = new ToolsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 5:  					nextController = new FunctionsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 6:  					nextController = new EditableTableController(UITableViewStyle.Grouped);  					break;  				default:  					break;  			}
Magic Number,TChartFeatures,SettingsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\SettingsDelegate.cs,RowSelected,The following statement contains a magic number: switch (indexPath.Row)  			{  /*				case 0:  //					nextController = new SeriesTypesController(_controller.chart' _chartController 'UITableViewStyle.Grouped);  					nextController = new SeriesTypesController(UITableViewStyle.Grouped);  					break;*/  				case 0:  					nextController = new AspectController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 1:  					nextController = new ThemesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 2:  					nextController = new ColorPalettesController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 3:  					nextController = new LegendController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 4:  					nextController = new ToolsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 5:  					nextController = new FunctionsController(_controller.chart'_chartController'UITableViewStyle.Grouped);  					break;  				case 6:  					nextController = new EditableTableController(UITableViewStyle.Grouped);  					break;  				default:  					break;  			}
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDataSource.cs,ThemesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"BlackIsBackTheme"'"")'  				new ItemInfo(1'"OperaTheme"'"")'  				new ItemInfo(2'"TeeChartTheme"'"")'  				new ItemInfo(3'"ExcelTheme"'"")'  				new ItemInfo(4'"ClassicTheme"'"")'  				new ItemInfo(5'"XPTheme"'"")'  				new ItemInfo(6'"WebTheme"'"")'  				new ItemInfo(7'"BusinessTheme"'"")'  				new ItemInfo(8'"BlueSkyTheme"'"")'  				new ItemInfo(9'"GrayscaleTheme"'"")'  				new ItemInfo(10'"RandomTheme"'"")  			};
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ThemesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ThemesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.BlackIsBackTheme theme = new Steema.TeeChart.Themes.BlackIsBackTheme(_controller.chart.Chart);  						theme.Apply();  						break;  					case 1:  						Steema.TeeChart.Themes.OperaTheme theme1 = new Steema.TeeChart.Themes.OperaTheme(_controller.chart.Chart);  						theme1.Apply();  						break;  					case 2:  						Steema.TeeChart.Themes.TeeChartTheme theme2 = new Steema.TeeChart.Themes.TeeChartTheme(_controller.chart.Chart);  						theme2.Apply();  						break;  					case 3:  						Steema.TeeChart.Themes.ExcelTheme theme3 = new Steema.TeeChart.Themes.ExcelTheme(_controller.chart.Chart);  						theme3.Apply();  						break;  					case 4:  						Steema.TeeChart.Themes.ClassicTheme theme4 = new Steema.TeeChart.Themes.ClassicTheme(_controller.chart.Chart);  						theme4.Apply();  						break;  					case 5:  						Steema.TeeChart.Themes.XPTheme theme5 = new Steema.TeeChart.Themes.XPTheme(_controller.chart.Chart);  						theme5.Apply();  						break;  					case 6:  						Steema.TeeChart.Themes.WebTheme theme6 = new Steema.TeeChart.Themes.WebTheme(_controller.chart.Chart);  						theme6.Apply();  						break;  					case 7:  						Steema.TeeChart.Themes.BusinessTheme theme7 = new Steema.TeeChart.Themes.BusinessTheme(_controller.chart.Chart);  						theme7.Apply();  						break;  					case 8:  						Steema.TeeChart.Themes.BlueSkyTheme theme8 = new Steema.TeeChart.Themes.BlueSkyTheme(_controller.chart.Chart);  						theme8.Apply();  						break;  					case 9:  						Steema.TeeChart.Themes.GrayscaleTheme theme9 = new Steema.TeeChart.Themes.GrayscaleTheme(_controller.chart.Chart);  						theme9.Apply();  						break;  					case 10:  						Steema.TeeChart.Themes.RandomTheme theme10 = new Steema.TeeChart.Themes.RandomTheme(_controller.chart.Chart);  						theme10.Apply();  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.TeeChartPalette);		  						break;  					case 1:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ExcelPalette);		  						break;  					case 2:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.VictorianPalette);		  						break;  					case 3:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.PastelsPalette);		  						break;  					case 4:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.SolidPalette);		  						break;  					case 5:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ClassicPalette);		  						break;  					case 6:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WebPalette);		  						break;  					case 7:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.ModernPalette);		  						break;  					case 8:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.RainbowPalette);		  						break;  					case 9:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsXPPalette);		  						break;  					case 10:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.MacOSPalette);		  						break;  					case 11:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WindowsVistaPalette);		  						break;  					case 12:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.GrayscalePalette);		  						break;  					case 13:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OperaPalette);		  						break;  					case 14:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.WarmPalette);		  						break;  					case 15:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.CoolPalette);		  						break;  					case 16:  						Steema.TeeChart.Themes.ColorPalettes.ApplyPalette(_controller.chart.Chart'Steema.TeeChart.Themes.Theme.OnBlackPalette);		  						break;  					default:  						break;				  				}
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,ColorPalettesDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ColorPalettesDataSource.cs,ColorPalettesDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"TeeChart"'"")'  				new ItemInfo(1'"Excel"'"")'  				new ItemInfo(2'"Victorian"'"")'  				new ItemInfo(3'"Pastels"'"")'  				new ItemInfo(4'"Solid"'"")'  				new ItemInfo(5'"Classic"'"")'  				new ItemInfo(6'"Web"'"")'  				new ItemInfo(7'"Modern"'"")'  				new ItemInfo(8'"Rainbow"'"")'  				new ItemInfo(9'"Win. XP"'"")'  				new ItemInfo(10'"Mac OS"'"")'  				new ItemInfo(11'"Windows Vista"'"")'  				new ItemInfo(12'"Grayscale"'"")'  				new ItemInfo(13'"Opera"'"")'  				new ItemInfo(14'"Warm"'"")'  				new ItemInfo(15'"Cool"'"")'  				new ItemInfo(16'"OnBlack"'"")  			};
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,InitAdvanced,The following statement contains a magic number: slider.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,RowsInSection,The following statement contains a magic number: if (section == 0)  				return 6;  			else  			    return 4;
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,RowsInSection,The following statement contains a magic number: if (section == 0)  				return 6;  			else  			    return 4;
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,GetCell,The following statement contains a magic number: if (indexPath.Section == 1)  			{  				row += 7;  				cellId = _section2CellId;  			}
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,LegendDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\LegendDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: slider3DPercent.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: slider3DPercent.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: slider3DPercent.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: slider3DPercent.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: sliderRotation.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: sliderRotation.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: sliderRotation.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,InitAdvanced,The following statement contains a magic number: sliderRotation.Frame = new RectangleF(140'9'150'23);
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,RowsInSection,The following statement contains a magic number: return 5;
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,GetCell,The following statement contains a magic number: if (indexPath.Section == 1)  			{  				row += 7;  				cellId = _section2CellId;  			}
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,AspectDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AspectDataSource.cs,GetCell,The following statement contains a magic number: if (info.Image != null)  			{  				cell.ImageView.Frame = new RectangleF(0'0'150'100);  				cell.ImageView.HighlightedImage = info.Image;  				cell.ImageView.Image = info.Image;		  			}
Magic Number,TChartFeatures,ChartViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ChartViewController.xib.cs,Initialize,The following statement contains a magic number: System.Drawing.RectangleF r = new System.Drawing.RectangleF(0'0'this.View.Bounds.Width'this.View.Bounds.Height-42);
Magic Number,TChartFeatures,ChartViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ChartViewController.xib.cs,Initialize,The following statement contains a magic number: series1.Value = bLevel*100;
Magic Number,TChartFeatures,ChartViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ChartViewController.xib.cs,Initialize,The following statement contains a magic number: series1.Markers[2].AllowEdit=true;
Magic Number,TChartFeatures,ChartViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ChartViewController.xib.cs,Initialize,The following statement contains a magic number: series1.Markers[2].Text= "Battery Level";
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: float ix = (this.View.Bounds.Right /2) - 55.5f;
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: UIGlassButton buttonSite = new UIGlassButton(new RectangleF((this.View.Bounds.Right /2)-(105)' 275f'220f'25f));
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: UIGlassButton buttonSite = new UIGlassButton(new RectangleF((this.View.Bounds.Right /2)-(105)' 275f'220f'25f));
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: var labelRect = new RectangleF((this.View.Bounds.Right /2)-90' 300f'200f'25f);
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: var labelRect = new RectangleF((this.View.Bounds.Right /2)-90' 300f'200f'25f);
Magic Number,TChartFeatures,AboutViewController,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\AboutViewController.xib.cs,Initialize,The following statement contains a magic number: var imageRect = new RectangleF(ix-9' 30f' 127f' 80f);
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  			{  				case 0:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Annotation());  				    int i = _controller.chart.Tools.Count-1;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Text = "My Annotation";  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Top = 50;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Left = 100;  				    (_controller.chart.Tools[i] as Steema.TeeChart.Tools.Annotation).Shape.Font.Size = 15;		  					break;  				case 1:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ChartImage());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ChartImage).Image = UIImage.FromFile("SeriesIcons/line.png").CGImage;  					break;  				case 2:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=false;    					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].FillSampleValues(4);  					_controller.chart.Chart.Series[1].FillSampleValues(4);				  					_controller.chart.Chart.Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  					_controller.chart.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ExtraLegend());  					_controller.chart.Legend.Visible = true;				      				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Series = _controller.chart.Series[1];  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.LegendStyle = Steema.TeeChart.LegendStyles.Values;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Left = 100;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ExtraLegend).Legend.Top = 100;  					break;  				case 3:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridBand());  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Axis = _controller.chart.Axes.Left;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band1.Color = UIColor.Gray.CGColor;  				    (_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.GridBand).Band2.Color = UIColor.DarkGray.CGColor;				  					break;  				case 4:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GridTranspose());  				    // should be a surface serues  					break;  				case 5:  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Rotate());  					break;  				case 6:  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Bar());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  								  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorLine());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Value = 30;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorLine).Pen.Color = UIColor.Red.CGColor;  					break;  				case 7:			  				    _controller.chart.Chart.Series.RemoveAllSeries();  					_controller.chart.Chart.Aspect.ClipPoints=true;  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					_controller.chart.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					_controller.chart.Chart.Series[0].Add(10);  					_controller.chart.Chart.Series[0].Add(20);  					_controller.chart.Chart.Series[0].Add(50);  					_controller.chart.Chart.Series[0].Add(14);  					_controller.chart.Chart.Series[0].Add(5);  					_controller.chart.Chart.Series[0].Add(40);  							  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ColorBand());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Axis = _controller.chart.Axes.Left;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Start = 20;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).End = 36;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Width = 2;					  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.ColorBand).Pen.Color = UIColor.Red.CGColor;  					break;  				case 8:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  				    Steema.TeeChart.TChart c = _controller.chart;  				    c.Chart.Series.RemoveAllSeries();  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c.Chart.Series[0].FillSampleValues();  					c.Chart.Series[1].FillSampleValues();  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesBandTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series = c.Chart.Series[0];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Series2 = c.Chart.Series[1];  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesBandTool).Gradient.Visible = true;  					break;  				case 9:  				    _controller.chart.Chart.Aspect.ZoomScrollStyle=Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;				  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SubChartTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts.AddChart("My SubChart");  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series.Add(new Steema.TeeChart.Styles.Area());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SubChartTool).Charts[0].Chart.Series[0].FillSampleValues(4);  					break;  				case 10:  				    Steema.TeeChart.TChart cc = _controller.chart;  				    cc.Chart.Series.RemoveAllSeries();  					cc.Chart.Series.Add(new Steema.TeeChart.Styles.Line());		  					cc.Chart.Series[0].Add(100);  					cc.Chart.Series[0].Add(300);  					cc.Chart.Series[0].Add(600);  					cc.Chart.Series[0].Add(800);  					cc.Chart.Series[0].Add(700);  					cc.Chart.Series[0].Add(200);  					cc.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesRegionTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Series=cc.Chart.Series[0];				  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).UseOrigin = true;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Origin=500;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Color = UIColor.Yellow.CGColor;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.SeriesRegionTool).Transparency=50;  					break;  				case 11:  				    Steema.TeeChart.TChart c2 = _controller.chart;  				    c2.Chart.Series.RemoveAllSeries();  					c2.Chart.Series.Add(new Steema.TeeChart.Styles.Surface());  					c2.Chart.Series[0].FillSampleValues();  					c2.Chart.Legend.Visible=true;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendPalette());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.LegendPalette).Series=c2.Chart.Series[0];				  					break;  				case 12:  				    Steema.TeeChart.TChart c3 = _controller.chart;  				    c3.Chart.Series.RemoveAllSeries();  					c3.Chart.Series.Add(new Steema.TeeChart.Styles.Line());  					c3.Chart.Series[0].FillSampleValues(100);  					c3.Chart.Aspect.ZoomScrollStyle = Steema.TeeChart.Drawing.Aspect.ZoomScrollStyles.Manual;  					c3.Chart.Aspect.View3D=false;  					_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisBreaksTool());  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).Axis=c3.Axes.Bottom;  					(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool).GapSize=20;  				    Steema.TeeChart.Tools.AxisBreak break1 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    Steema.TeeChart.Tools.AxisBreak break2 = new Steema.TeeChart.Tools.AxisBreak((_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.AxisBreaksTool));  				    break1.StartValue = 20;  				    break1.EndValue = 30;  					break2.StartValue = 50;  					break2.EndValue = 60;  					break;  				case 13:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DataTableTool());  					//(_controller.chart.Tools[_controller.chart.Tools.Count-1] as Steema.TeeChart.Tools.DataTableTool).TableLegend.Visible=true;  					break;				  				case 14:  					break;  				case 15:  					break;  				case 16:  					break;  				case 17:  					break;  				case 18:  					break;  				case 19:  					break;  				case 20:  					break;  				case 21:  					break;  				case 22:  					break;  				case 23:  					break;  				case 24:  					break;  				case 25:  					break;  				case 26:  					break;  				case 27:  					break;  				case 28:  					break;  				case 29:  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.MarksTip());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.NearestPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PageNumber());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.PieTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LegendScrollBar());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesAnimation());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SurfaceNearestTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CursorTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragMarks());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisArrow());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DrawLine());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.DragPoint());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.GanttTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.AxisScroll());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesHotspot());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ZoomTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ScrollTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.LightTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FibonacciTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Marker());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.FaderTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.RectangleTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Selector());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesStats());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.SeriesTranspose());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.ClipSeries());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.BannerTool());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.Magnify());  					//_controller.chart.Tools.Add(new Steema.TeeChart.Tools.CustomHotspot());  					break;  				case 30:  					break;  				case 31:  					break;  				case 32:  					break;  				case 33:  					break;  				case 34:  					break;  				case 35:  					break;  				case 36:  					break;  				case 37:  					break;  				case 38:  					break;  				case 39:  					break;  				case 40:  					break;  				case 41:  					break;  				case 42:  					break;  				default:  					break;				  			}
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,ToolsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\ToolsDataSource.cs,ToolsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Annotation"'"")'  				new ItemInfo(1'"ChartImage"'"")'  				new ItemInfo(2'"ExtraLegend"'"")'  				new ItemInfo(3'"GridBand"'"")'  				new ItemInfo(4'"GridTranspose"'"")'  				new ItemInfo(5'"Rotate"'"")'  				new ItemInfo(6'"ColorLine"'"")'  				new ItemInfo(7'"ColorBand"'"")'  				new ItemInfo(8'"SeriesBandTool"'"")'				  				new ItemInfo(9'"SubChartTool"'"")'  				new ItemInfo(10'"SeriesRegionTool"'"")'  				new ItemInfo(11'"LegendPalette"'"")'  				new ItemInfo(12'"AxisBreaksTool"'"")  				//new ItemInfo(13'"DataTableTool"'"")'  				//new ItemInfo(10'"Marker"'"")'  				//new ItemInfo(5'"MarksTip"'"")'  				//new ItemInfo(6'"NearestPoint"'"")'  				//new ItemInfo(7'"PageNumber"'"")'  				//new ItemInfo(8'"PieTool"'"")'  				//new ItemInfo(10'"LegendScrollBar"'"")'  				//new ItemInfo(11'"SeriesAnimation"'"")'  				//new ItemInfo(12'"SurfaceNearestTool"'"")'  				//new ItemInfo(13'"CursorTool"'"")'  				//new ItemInfo(14'"DragMarks"'"")'  				//new ItemInfo(15'"AxisArrow"'"")'  				//new ItemInfo(18'"DrawLine"'"")'  				//new ItemInfo(19'"DragPoint"'"")'  				//new ItemInfo(20'"GanttTool"'"")'  				//new ItemInfo(21'"AxisScroll"'"")'  				//new ItemInfo(22'"SeriesHotspot"'"")'  				//new ItemInfo(23'"ZoomTool"'"")'  				//new ItemInfo(24'"ScrollTool"'"")'  				//new ItemInfo(25'"LightTool"'"")'  				//new ItemInfo(26'"FibonacciTool"'"")'  				//new ItemInfo(29'"FaderTool"'"")'  				//new ItemInfo(30'"RectangleTool"'"")'  				//new ItemInfo(31'"Selector"'"")'  				//new ItemInfo(34'"SeriesStats"'"")'  				//new ItemInfo(35'"SeriesTranspose"'"")'  				//new ItemInfo(37'"ClipSeries"'"")'  				//new ItemInfo(38'"BannerTool"'"")'  				//new ItemInfo(39'"Magnify"'"")'  				//new ItemInfo(41'"CustomHotspot"'"")'  			};
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDelegate,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDelegate.cs,RowSelected,The following statement contains a magic number: switch (row)  				{  					case 0:				          						line1.Function = new Steema.TeeChart.Functions.Add();break;  					case 1:  						line1.Function = new Steema.TeeChart.Functions.Subtract();break;  					case 2:  						line1.Function = new Steema.TeeChart.Functions.Multiply();break;  					case 3:  						line1.Function = new Steema.TeeChart.Functions.Divide();break;  					case 4:  						line1.Function = new Steema.TeeChart.Functions.High();break;  					case 5:  						line1.Function = new Steema.TeeChart.Functions.Low();break;  					case 6:  						line1.Function = new Steema.TeeChart.Functions.Average();break;  					case 7:  						line1.Function = new Steema.TeeChart.Functions.Count();break;  					case 8:  						line1.Function = new Steema.TeeChart.Functions.Momentum();break;  					case 9:  						line1.Function = new Steema.TeeChart.Functions.MomentumDivision();break;  					case 10:  						line1.Function = new Steema.TeeChart.Functions.Cumulative();break;  					case 11:  						line1.Function = new Steema.TeeChart.Functions.ExpAverage();break;  					case 12:  						line1.Function = new Steema.TeeChart.Functions.Smoothing();break;  					case 13:  						line1.Function = new Steema.TeeChart.Functions.Custom();break;  					case 14:  						line1.Function = new Steema.TeeChart.Functions.RootMeanSquare();break;  					case 15:  						line1.Function = new Steema.TeeChart.Functions.StdDeviation();break;  					case 16:  						line1.Function = new Steema.TeeChart.Functions.Stochastic();break;  					case 17:  						line1.Function = new Steema.TeeChart.Functions.ExpMovAverage();break;  					case 18:  						line1.Function = new Steema.TeeChart.Functions.Performance();break;  					case 19:  						line1.Function = new Steema.TeeChart.Functions.CrossPoints();break;  					case 20:  						line1.Function = new Steema.TeeChart.Functions.CompressOHLC();break;  					case 21:  						line1.Function = new Steema.TeeChart.Functions.CLVFunction();break;  					case 22:  						line1.Function = new Steema.TeeChart.Functions.OBVFunction();break;  					case 23:  						line1.Function = new Steema.TeeChart.Functions.CCIFunction();break;  					case 24:  						line1.Function = new Steema.TeeChart.Functions.MovingAverage();break;  					case 25:  						line1.Function = new Steema.TeeChart.Functions.PVOFunction();break;  					case 26:  						line1.Function = new Steema.TeeChart.Functions.DownSampling();break;  					case 27:  						line1.Function = new Steema.TeeChart.Functions.TrendFunction();break;  					case 28:  						line1.Function = new Steema.TeeChart.Functions.CorrelationFunction();break;  					case 29:  						line1.Function = new Steema.TeeChart.Functions.VarianceFunction();break;  					case 30:  						line1.Function = new Steema.TeeChart.Functions.PerimeterFunction();break;  					case 31:  						line1.Function = new Steema.TeeChart.Functions.PolyFitting();break;  					case 32:  						line1.Function = new Steema.TeeChart.Functions.Bollinger();break;  					case 33:  						line1.Function = new Steema.TeeChart.Functions.MACDFunction();break;  					case 34:  						line1.Function = new Steema.TeeChart.Functions.RSIFunction();break;  					case 35:  						line1.Function = new Steema.TeeChart.Functions.ADXFunction();break;  					case 36:  						line1.Function = new Steema.TeeChart.Functions.MedianFunction();break;  					case 37:  						line1.Function = new Steema.TeeChart.Functions.ModeFunction();break;  					case 38:  						line1.Function = new Steema.TeeChart.Functions.ExpTrendFunction();break;  					case 39:  						line1.Function = new Steema.TeeChart.Functions.HistogramFunction();break;  					case 40:  						line1.Function = new Steema.TeeChart.Functions.SARFunction();break;  					default:  						break;				  				}
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
Magic Number,TChartFeatures,FunctionsDataSource,C:\repos\xamarin_Seminars\2012-02-23-ThirdPartyLibraries\TeeChart\TChartFeatures\FunctionsDataSource.cs,FunctionsDataSource,The following statement contains a magic number: Items = new List<ItemInfo>()  			{			  				new ItemInfo(0'"Add"'"")'  				new ItemInfo(1'"Subtract"'"")'  				new ItemInfo(2'"Multiply"'"")'  				new ItemInfo(3'"Divide"'"")'  				new ItemInfo(4'"High"'"")'  				new ItemInfo(5'"Low"'"")'  				new ItemInfo(6'"Average"'"")'  				new ItemInfo(7'"Count"'"")'  				new ItemInfo(8'"Momentum"'"")'  				new ItemInfo(9'"MomentumDivision"'"")'  				new ItemInfo(10'"Cumulative"'"")'  				new ItemInfo(11'"ExpAverage"'"")'  				new ItemInfo(12'"Smoothing"'"")'  				new ItemInfo(13'"Custom"'"")'  				new ItemInfo(14'"RootMeanSquare"'"")'  				new ItemInfo(15'"StdDeviation"'"")'  				new ItemInfo(16'"Stochastic"'"")'  				new ItemInfo(17'"ExpMovAverage"'"")'  				new ItemInfo(18'"Performance"'"")'  				new ItemInfo(19'"CrossPoints"'"")'  				new ItemInfo(20'"CompressOHLC"'"")'  				new ItemInfo(21'"CLVFunction"'"")'  				new ItemInfo(22'"OBVFunction"'"")'  				new ItemInfo(23'"CCIFunction"'"")'  				new ItemInfo(24'"MovingAverage"'"")'  				new ItemInfo(25'"PVOFunction"'"")'  				new ItemInfo(26'"DownSampling"'"")'  				new ItemInfo(27'"TrendFunction"'"")'  				new ItemInfo(28'"CorrelationFunction"'"")'  				new ItemInfo(29'"VarianceFunction"'"")'  				new ItemInfo(30'"PerimeterFunction"'"")'  				new ItemInfo(31'"PolyFitting"'"")'  				new ItemInfo(32'"Bollinger"'"")'  				new ItemInfo(33'"MACDFunction"'"")'  				new ItemInfo(34'"RSIFunction"'"")'  				new ItemInfo(35'"ADXFunction"'"")'  				new ItemInfo(36'"MedianFunction"'"")'  				new ItemInfo(37'"ModeFunction"'"")'  				new ItemInfo(38'"ExpTrendFunction"'"")'  				new ItemInfo(39'"HistogramFunction"'"")'  				new ItemInfo(40'"SARFunction"'"")	  			};
