Implementation smell,Namespace,Class,File,Method,Description
Long Method,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The method has 124 lines of code.
Long Method,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Worker,The method has 133 lines of code.
Long Statement,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The length of the statement  "				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height)); " is 123.
Long Statement,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Worker,The length of the statement  "							source = new RGBLuminanceSource(srcbitmap' screenImage.Width' screenImage.Height); //.crop(0' cropY' 0' screenImage.Height - cropY - cropY); " is 140.
Long Statement,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,Initialize,The length of the statement  "				var tf = MonoTouch.CoreGraphics.CGAffineTransform.MakeScale (1.25f' 1.25f); //CGAffineTransformScale(_picker.cameraViewTransform' CAMERA_TRANSFORM' CAMERA_TRANSFORM); " is 166.
Long Statement,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,ToggleTorch,The length of the statement  "			var device = MonoTouch.AVFoundation.AVCaptureDevice.DefaultDeviceWithMediaType(MonoTouch.AVFoundation.AVMediaType.Video); " is 121.
Long Statement,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,Torch,The length of the statement  "				var device = MonoTouch.AVFoundation.AVCaptureDevice.DefaultDeviceWithMediaType(MonoTouch.AVFoundation.AVMediaType.Video); " is 121.
Long Statement,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,ViewWillAppear,The length of the statement  "//				NSNotificationCenter.DefaultCenter.AddObserver(new NSString("PLCameraViewIrisAnimationDidEndNotification")' (notification) => {    " is 133.
Empty Catch Block,ZXing.Mobile,ZxingScanner,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,DidOutputSampleBuffer,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingScanner,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,DidOutputSampleBuffer,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Worker,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,StopWorker,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,StopWorker,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,ToggleTorch,The method has an empty catch block.
Empty Catch Block,ZXing.Mobile,ZxingCameraViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingCameraViewController.cs,Torch,The method has an empty catch block.
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var width = rect.Width * 15/16;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var width = rect.Width * 15/16;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var height = rect.Height * 4/10;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var height = rect.Height * 4/10;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var xPad = (rect.Width - width) / 2;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var yPad = (rect.Height - height) / 2;
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: cg.FillRect(new RectangleF(xPad + 1' yPad + (height / 2) - 2' width - 2' 4));
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: cg.FillRect(new RectangleF(xPad + 1' yPad + (height / 2) - 2' width - 2' 4));
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: cg.FillRect(new RectangleF(xPad + 1' yPad + (height / 2) - 2' width - 2' 4));
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: cg.FillRect(new RectangleF(xPad + 1' yPad + (height / 2) - 2' width - 2' 4));
Magic Number,ZXing.Mobile,ZxingOverlayView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingOverlayView.cs,Draw,The following statement contains a magic number: var t = new System.Threading.Timer(tc' null' 250' System.Threading.Timeout.Infinite);
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingViewController,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingViewController.cs,ViewDidLoad,The following statement contains a magic number: if (ShowButtons)  			{  				buttonCancel = new UIButton(UIButtonType.RoundedRect);  				buttonCancel.Frame = new System.Drawing.RectangleF(20' 20' 130' 30);  				buttonCancel.SetTitle("Cancel"' UIControlState.Normal);  				buttonCancel.Alpha = 0.3f;  				buttonCancel.SetTitleColor(UIColor.White' UIControlState.Normal);  				buttonCancel.TintColor = UIColor.Gray;  				buttonCancel.TouchUpInside += (sender' e) => {  					this.Scan(null);  				};    				this.View.AddSubview(buttonCancel);    				buttonFlash = new UIButton(UIButtonType.RoundedRect);  				buttonFlash.Frame = new System.Drawing.RectangleF(170' 20' 130' 30);  				buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  				buttonFlash.Alpha = 0.3f;  				buttonFlash.TintColor = UIColor.Gray;  				buttonFlash.SetTitleColor(UIColor.White' UIControlState.Normal);  				//buttonFlash.HorizontalAlignment = UIControlContentHorizontalAlignment.Right;  				buttonFlash.TouchUpInside += (sender' e) => {  					if (captureDevice != null)  					{  						if (captureDevice.TorchAvailable)  						{  							MonoTouch.Foundation.NSError err = null;    							captureDevice.LockForConfiguration(out err);    							if (captureDevice.TorchMode == AVCaptureTorchMode.Auto || captureDevice.TorchMode == AVCaptureTorchMode.Off)  								captureDevice.TorchMode = AVCaptureTorchMode.On;  							else  								captureDevice.TorchMode = AVCaptureTorchMode.Off;    							captureDevice.UnlockForConfiguration();    							this.BeginInvokeOnMainThread(() => {  								if (buttonFlash.CurrentTitle == "Flash On")  									buttonFlash.SetTitle("Flash Off"' UIControlState.Normal);  								else  									buttonFlash.SetTitle("Flash On"' UIControlState.Normal);  							});  						}  					}  				};  				this.View.AddSubview(buttonFlash);  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,ZxingSurfaceView,The following statement contains a magic number: var picFrameWidth = Math.Round(screenFrame.Width * 0.90);
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,ZxingSurfaceView,The following statement contains a magic number: var picFrameHeight = Math.Round(screenFrame.Height * 0.60);
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,ZxingSurfaceView,The following statement contains a magic number: var picFrameX = (screenFrame.Width - picFrameWidth) / 2;
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,ZxingSurfaceView,The following statement contains a magic number: var picFrameY = (screenFrame.Height - picFrameHeight) / 2;
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,Initialize,The following statement contains a magic number: if (this.OverlayView != null)   			{  				this.OverlayView.Frame = Frame;  				this.AddSubview(this.OverlayView);  			}  			else  			{  				//Setup Overlay  				var overlaySize = new SizeF (this.Frame.Width' this.Frame.Height - 44);    				var topBg = new UIView (new RectangleF (0' 0' this.Frame.Width' (overlaySize.Height - picFrame.Height) / 2));  				topBg.Frame = new RectangleF (0' 0' this.Frame.Width' this.Frame.Height * 0.30f);  				topBg.BackgroundColor = UIColor.Black;  				topBg.Alpha = 0.6f;    				var bottomBg = new UIView (new RectangleF (0' topBg.Frame.Height + picFrame.Height' this.Frame.Width' topBg.Frame.Height));  				bottomBg.Frame = new RectangleF (0' this.Frame.Height * 0.70f' this.Frame.Width' this.Frame.Height * 0.30f);  				bottomBg.BackgroundColor = UIColor.Black;  				bottomBg.Alpha = 0.6f;    				//var grad = new MonoTouch.CoreAnimation.CAGradientLayer();  				//grad.Frame = bottomBg.Bounds;  				//grad.Colors = new CGColor[] { new CGColor()UIColor.Black' UIColor.FromWhiteAlpha(0.0f' 0.6f) };  				//bottomBg.Layer.InsertSublayer(grad' 0);  			  				//			[v.layer insertSublayer:gradient atIndex:0];      				var redLine = new UIView (new RectangleF (0' this.Frame.Height * 0.5f - 2.0f' this.Frame.Width' 4.0f));  				redLine.BackgroundColor = UIColor.Red;  				redLine.Alpha = 0.4f;    				this.AddSubview (redLine);  				this.AddSubview (topBg);  				this.AddSubview (bottomBg);    				var textTop = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.10f' this.Frame.Width' 42)'  				Text = Scanner.TopText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 2'  				BackgroundColor = UIColor.Clear  			};    				this.AddSubview (textTop);    				var textBottom = new UILabel ()   			{  				Frame = new RectangleF(0' this.Frame.Height *  0.825f - 32f' this.Frame.Width' 64)'  				Text = Scanner.BottomText'  				Font = UIFont.SystemFontOfSize(13)'  				TextAlignment = UITextAlignment.Center'  				TextColor = UIColor.White'  				Lines = 3'  				BackgroundColor = UIColor.Clear    			};    				this.AddSubview (textBottom);      				InvokeOnMainThread(delegate {  					// Setting tool bar  					var toolBar = new UIToolbar(new RectangleF(0' UIScreen.MainScreen.Bounds.Height - 44' 320' 44));  					toolBar.Items = new UIBarButtonItem[] {  						new UIBarButtonItem("Cancel"' UIBarButtonItemStyle.Done'   						                    delegate {    							_parentViewController.BarCodeScanned(null);  							//DismissViewController();  							  						})'  						new UIBarButtonItem(UIBarButtonSystemItem.FlexibleSpace)'  						new UIBarButtonItem("Light"' UIBarButtonItemStyle.Done'  						                    delegate {  							//TODO: Flash  							_parentViewController.ToggleTorch();  						})'  					};    					toolBar.TintColor = UIColor.Black;  					Add(toolBar);  				});	    				//_textCue = new UILabel ()  				//{  				//	Frame = new RectangleF(0'topBg.Frame.Bottom - 50'this.Frame.Width'21)'  				//	Text = "Adjust barcode according to arrows"'  				//	Font = UIFont.SystemFontOfSize(13)'  				//	TextAlignment = UITextAlignment.Center'  				//	TextColor = UIColor.Clear'  				//	Opaque = true'  				//BackgroundColor = UIColor.Clear// UIColor.FromRGBA(0'0'0'0)'  				//};  				  				//_greenBottomArrow = new UIImageView (UIImage.FromBundle ("Images/green_down_arrow.png"));  				//_greenBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' this.Frame.Width' 19);  				//_greenTopArrow = new UIImageView (UIImage.FromBundle ("Images/green_up_arrow.png"));  				//_greenTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				//_whiteBottomArrow = new UIImageView (UIImage.FromBundle ("Images/white_down_arrow.png"));  				//_whiteBottomArrow.Frame = new RectangleF (0' topBg.Frame.Bottom - 19' 320' 19);  				//_whiteTopArrow = new UIImageView (UIImage.FromBundle ("Images/white_up_arrow.png"));  				//_whiteTopArrow.Frame = new RectangleF (0' bottomBg.Frame.Top' 320' 19);  				  				  				//AddSubview (_textCue);  				//AddSubview (_greenBottomArrow);  				//AddSubview (_greenTopArrow);  				//AddSubview (_whiteBottomArrow);  				//AddSubview (_whiteTopArrow);  				  				//_greenBottomArrow.Image.Dispose ();  				//_greenTopArrow.Image.Dispose ();  				//_textCue.Dispose ();  				//_whiteBottomArrow.Image.Dispose ();  				//_whiteTopArrow.Image.Dispose ();  				//_mainView.Image.Dispose ();  				  			}
Magic Number,ZXing.Mobile,ZxingSurfaceView,C:\repos\xamarin_Seminars\2012-11-29-BarcodeScanning\ZXing.Net.Mobile\src\ZXing.Net.Mobile\MonoTouch\ZxingSurfaceView.cs,StartWorker,The following statement contains a magic number: WorkerTimer = NSTimer.CreateRepeatingTimer(TimeSpan.FromMilliseconds(150)' delegate {   				Worker();   			});
