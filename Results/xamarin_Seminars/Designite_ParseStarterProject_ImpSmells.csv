Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ParseStarterProject,ParseHelper,C:\repos\xamarin_Seminars\2013-02-28-PracticalPushNotifications\Parse\ParsePushNotifications\Components\parse-1.0\samples\ParseStarterProject\ParseStarterProject\ParseHelper.cs,ToPfObject,The length of the statement  "				string keyName = Attribute.IsDefined(prop'typeof(DataMemberAttribute)) ? ((DataMemberAttribute)Attribute.GetCustomAttribute(prop'typeof(DataMemberAttribute))).Name : prop.Name; " is 176.
Long Statement,ParseStarterProject,ParseHelper,C:\repos\xamarin_Seminars\2013-02-28-PracticalPushNotifications\Parse\ParsePushNotifications\Components\parse-1.0\samples\ParseStarterProject\ParseStarterProject\ParseHelper.cs,ToObject,The length of the statement  "				string keyName = Attribute.IsDefined(prop'typeof(DataMemberAttribute)) ? ((DataMemberAttribute)Attribute.GetCustomAttribute(prop'typeof(DataMemberAttribute))).Name : prop.Name; " is 176.
Complex Conditional,ParseStarterProject,ParseHelper,C:\repos\xamarin_Seminars\2013-02-28-PracticalPushNotifications\Parse\ParsePushNotifications\Components\parse-1.0\samples\ParseStarterProject\ParseStarterProject\ParseHelper.cs,ToObject,The conditional expression  "!keys.Contains(keyName) && keyName != "UpdatedAt" && keyName != "CreatedAt" && keyName != "ObjectId""  is complex.
Magic Number,ParseStarterProject,HighScoreViewController,C:\repos\xamarin_Seminars\2013-02-28-PracticalPushNotifications\Parse\ParsePushNotifications\Components\parse-1.0\samples\ParseStarterProject\ParseStarterProject\UI\HighScoreViewController.cs,GetHighScores,The following statement contains a magic number: query.Limit = 100;
Missing Default,ParseStarterProject,HighScoreViewController,C:\repos\xamarin_Seminars\2013-02-28-PracticalPushNotifications\Parse\ParsePushNotifications\Components\parse-1.0\samples\ParseStarterProject\ParseStarterProject\UI\HighScoreViewController.cs,FoundResults,The following switch statement is missing a default case: switch(score.Dificulty)  				{  				case GameDificulty.Easy:  					easySection.Add(element);  					break;  				case GameDificulty.Medium:  					mediumSection.Add(element);  					break;  				case GameDificulty.Hard:  					hardSection.Add (element);  					break;  				}
