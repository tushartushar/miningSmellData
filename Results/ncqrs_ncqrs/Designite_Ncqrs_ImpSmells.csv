Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Ncqrs.Domain,UnitOfWork,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\UnitOfWork.cs,UnitOfWork,The method has 6 parameters. Parameters: commandId' domainRepository' eventStore' snapshotStore' eventBus' snapshottingPolicy
Long Parameter List,Ncqrs.Eventing,CommittedEvent,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\CommittedEvent.cs,CommittedEvent,The method has 7 parameters. Parameters: commitId' eventIdentifier' eventSourceId' eventSequence' eventTimeStamp' payload' eventVersion
Long Parameter List,Ncqrs.Eventing,UncommittedEvent,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\UncommittedEvent.cs,UncommittedEvent,The method has 7 parameters. Parameters: eventIdentifier' eventSourceId' eventSequence' initialVersionOfEventSource' eventTimeStamp' payload' eventVersion
Long Parameter List,Ncqrs.Eventing.Storage,StoredEvent,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\StoredEvent.cs,StoredEvent,The method has 6 parameters. Parameters: eventIdentifier' eventTimeStamp' eventName' eventVersion' eventSourceId' eventSequence
Long Parameter List,Ncqrs.Eventing.Storage,StoredEvent<T>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\StoredEvent.cs,StoredEvent,The method has 7 parameters. Parameters: eventIdentifier' eventTimeStamp' eventName' eventVersion' eventSourceId' eventSequence' data
Long Identifier,Ncqrs.Eventing.Sourcing.Snapshotting,SimpleSnapshottingPolicy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Snapshotting\SimpleSnapshottingPolicy.cs,,The length of the parameter DefaultSnapshotIntervalInEvents is 31.
Long Identifier,Ncqrs.Eventing.Storage.SQL,Queries,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\SQL\Queries.cs,,The length of the parameter SelectEventsFromBeginningOfTime is 31.
Long Identifier,Ncqrs.Eventing.Storage.SQL,MsSqlServerEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\SQL\MsSqlServerEventStore.cs,StoreMultipleSources,The length of the parameter eventStreamContainingMultipleSources is 36.
Long Statement,Ncqrs.Commanding,CommandBase,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandBase.cs,GetKnownTypes,The length of the statement  "                throw new InvalidOperationException("No Ncqrs.Commanding.IKnownCommandsEnumerator implementation registered with the NcqrsEnvironment."); " is 137.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,MapsToAggregateRootMethodAttributeHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\MapsToAggregateRootMethodAttributeHandler.cs,Map,The length of the statement  "            Action executorAction = () => executor.ExecuteActionOnExistingInstance(GetAggregateRootId' GetAggregateRootType' action); " is 121.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,MapsToAggregateRootMethodAttributeHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\MapsToAggregateRootMethodAttributeHandler.cs,GetAggregateRootType,The length of the statement  "                commandType.GetCustomAttributes(typeof(MapsToAggregateRootMethodAttribute)' false).Cast<MapsToAggregateRootMethodAttribute> " is 123.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,MapsToAggregateRootMethodOrConstructorAttributeHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\MapsToAggregateRootMethodOrConstructorAttributeHandler.cs,Map,The length of the statement  "            Action executorAction = () => executor.ExecuteActionOnExistingOrCreatingNewInstance(GetAggregateRootId' GetAggregateRootType' existingAction' create);" is 150.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,MapsToAggregateRootMethodOrConstructorAttributeHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\MapsToAggregateRootMethodOrConstructorAttributeHandler.cs,GetAggregateRootType,The length of the statement  "                commandType.GetCustomAttributes(typeof(MapsToAggregateRootMethodOrConstructorAttribute)' false).Cast<MapsToAggregateRootMethodOrConstructorAttribute>" is 149.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,MapsToAggregateRootMethodOrConstructorAttributeHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\MapsToAggregateRootMethodOrConstructorAttributeHandler.cs,ValidateCommandType,The length of the statement  "            bool containsThisAttribute = mappedCommandType.IsDefined(typeof(MapsToAggregateRootMethodOrConstructorAttribute)' false);" is 121.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Attributes,AttributeBasedCommandMapper,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Attributes\AttributeBasedCommandMapper.cs,Map,The length of the statement  "            throw new CommandMappingException(string.Format("Could not find any mapping attribute handlers for mapping command of type {0}."' command.GetType().AssemblyQualifiedName)); " is 172.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,WithId,The length of the statement  "            var mappedmethod = new MappedCommandToAggregateRootMethod<TCommand' TAggRoot>(getaggregaterootfunc' getidfromcommandfunc); " is 122.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,UseExistingOrCreateNew,The length of the statement  "            Contract.Requires<ArgumentNullException>(aggregaterootcreatorfunc != null' "aggregaterootcreatorfunc can not be null."); " is 120.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,UseExistingOrCreateNew,The length of the statement  "            var mappedmethod = new MappedCommandToAggregateRootMethodOrConstructor<TCommand' TAggRoot>(getidfromcommandfunc' aggregaterootcreatorfunc); " is 139.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,UseExistingOrCreateNew,The length of the statement  "            Contract.Requires<ArgumentNullException>(aggregaterootcreatorfunc != null' "aggregaterootcreatorfunc can not be null."); " is 120.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,UseExistingOrCreateNew,The length of the statement  "            var mappedmethod = new MappedCommandToAggregateRootMethodOrConstructor<TCommand' TAggRoot>(getidfromcommandfunc' getaggregaterootfunc' aggregaterootcreatorfunc); " is 161.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRoot<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRoot.cs,CreateNew,The length of the statement  "            Contract.Requires<ArgumentNullException>(aggregaterootcreatorfunc != null' "aggregaterootcreatorfunc can not be null."); " is 120.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping.Fluent,MappedCommandToAggregateRootConstructor<TCommand;TAggRoot>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\Fluent\MappedCommandToAggregateRootConstructor.cs,StoreIn,The length of the statement  "            Contract.Requires<ArgumentNullException>(storeaggregaterootinfunc != null' "storeaggregaterootinfunc can not be null."); " is 120.
Long Statement,Ncqrs.Commanding.CommandExecution.Mapping,PropertiesToMethodMapper,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Commanding\CommandExecution\Mapping\PropertiesToMethodMapper.cs,MakeSureAllPropertieOrdinalsAreUnique,The length of the statement  "                throw new CommandMappingException("Cannot map multiple properties with the same name " + firstDuplicate.TargetName + "."); " is 122.
Long Statement,Ncqrs.Domain,AggregateRootExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\AggregateExtensions.cs,GetSnapshotInterfaceType,The length of the statement  "                Log.WarnFormat("Aggregate root {0} contains multiple snapshot interfaces while only one is allowed."' aggregateType.FullName); " is 126.
Long Statement,Ncqrs.Domain,AggregateRootExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\AggregateExtensions.cs,GetSnapshotInterfaceType,The length of the statement  "            Log.DebugFormat("Found snapshot interface {0} on aggregate root {1}."' snapshotableInterfaceType.FullName' aggregateType.FullName); " is 131.
Long Statement,Ncqrs.Domain,AggregateRoot,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\AggregateRoot.cs,OnEventApplied,The length of the statement  "                Log.DebugFormat("Calling event applied callback {0} for event {1} in aggregate root {2}"' callback.GetHashCode()' appliedEvent' this); " is 134.
Long Statement,Ncqrs.Domain,UnitOfWork,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\UnitOfWork.cs,ContractInvariants,The length of the statement  "            Contract.Invariant(Contract.ForAll(_dirtyInstances' (instance => instance != null))' "None of the dirty instances can be null."); " is 129.
Long Statement,Ncqrs.Eventing,UncommittedEventStream,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\UncommittedEventStream.cs,UpdateEventSourceInformation,The length of the statement  "            var newInformation = new EventSourceInformation(evnt.EventSourceId' evnt.InitialVersionOfEventSource' evnt.EventSequence); " is 122.
Long Statement,Ncqrs.Eventing.Sourcing,EventSource,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\EventSource.cs,InitializeFromSnapshot,The length of the statement  "            Log.DebugFormat("Initializing event source {0} from snapshot (version {1})."' snapshot.EventSourceId' snapshot.Version); " is 120.
Long Statement,Ncqrs.Eventing.Sourcing,EventSource,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\EventSource.cs,ApplyEvent,The length of the statement  "            var wrappedEvent = new UncommittedEvent(_idGenerator.GenerateNewId()' EventSourceId' eventSequence' _initialVersion' DateTime.UtcNow' evnt' eventVersion); " is 154.
Long Statement,Ncqrs.Eventing.Sourcing,EventSource,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\EventSource.cs,GetNextSequence,The length of the statement  "            // 628426 31 Feb 2011 - the following absolutely needed to ensure correct sequencing' as incorrect versions were being passed to event store " is 140.
Long Statement,Ncqrs.Eventing.Sourcing,TypeThresholdedActionBasedDomainEventHandler,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\TypeThresholdedActionBasedSourcedEventHandler.cs,ShouldHandleThisEventData,The length of the statement  "            // true if event type and the threshold type represent the same type' or if the theshold type is in the inheritance hierarchy  " is 125.
Long Statement,Ncqrs.Eventing.Sourcing,SourcedEvent,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\SourcedEvent.cs,ClaimEvent,The length of the statement  "            if (this.EventSourceId != UndefinedValues.UndefinedEventSourceId) throw new InvalidOperationException(string.Format("The event is already owned by event source with id {0}."' this.EventSourceId)); " is 196.
Long Statement,Ncqrs.Eventing.Storage,AttributeEventTypeResolver,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\AttributeEventTypeResolver.cs,ThrowIfNameExists,The length of the statement  "                string message = string.Format("Could not add event '{0}' for type '{1}' as the type '{2}' is already using this name."' name' type' otherType); " is 144.
Long Statement,Ncqrs.Eventing.Storage,ISnapshotStoreContracts,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\ISnapshotStore.cs,GetSnapshot,The length of the statement  "            Contract.Ensures(Contract.Result<Snapshot>() != null ? Contract.Result<Snapshot>().EventSourceId == eventSourceId : true); " is 122.
Long Statement,Ncqrs.Eventing.Storage,StoredEvent<T>,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\StoredEvent.cs,Clone,The length of the statement  "            return new StoredEvent<TOther>(EventIdentifier' EventTimeStamp' EventName' EventVersion' EventSourceId' EventSequence' data); " is 125.
Long Statement,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadStoredEvent,The length of the statement  "            return new CommittedEvent(commitId' eventIdentifier' id' sequence' timeStamp' _formatter.Deserialize(serializedPayload' eventName)' eventVersion); " is 146.
Long Statement,Ncqrs,NcqrsEnvironment,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\NcqrsEnvironment.cs,InitDefaults,The length of the statement  "            SetDefault<IAggregateSnapshotter>(new DefaultAggregateSnapshotter(Get<IAggregateRootCreationStrategy>()' Get<IAggregateSupportsSnapshotValidator>())); " is 150.
Long Statement,Ncqrs,NcqrsEnvironment,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\NcqrsEnvironment.cs,Configure,The length of the statement  "            Contract.Requires<InvalidOperationException>(!IsConfigured' "Cannot configure the environment when it is already configured."); " is 127.
Long Statement,Ncqrs.Config,IEnvironmentConfigurationContracts,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Config\IEnvironmentConfiguration.cs,TryGet,The length of the statement  "            Contract.Ensures(Contract.Result<bool>() ? Contract.ValueAtReturn(out result) != null : Contract.ValueAtReturn(out result) == null); " is 132.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,ExpressionBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\ExpressionBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "                throw new ArgumentException("aggregateRoot need to be of type AggregateRootMappedWithExpressions to be used in a ExpressionBasedEventHandlerMappingStrategy."); " is 159.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,ExpressionBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\ExpressionBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "                    var message = String.Format("The method {0}.{1} could not be mapped as an event handler' since it is static."' mappinghandler.ActionMethodInfo.DeclaringType.Name' mappinghandler.ActionMethodInfo.Name); " is 201.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,AttributeBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\AttributeBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "            foreach (var method in targetType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)) " is 137.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,AttributeBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\AttributeBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "                        var message = String.Format("The method {0}.{1} could not be mapped as an event handler' since it is static."' method.DeclaringType.Name' method.Name); " is 151.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,AttributeBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\AttributeBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "                        var message = String.Format("The method {0}.{1} could not be mapped as an event handler' since it has {2} parameters where 1 is required."' method.DeclaringType.Name' method.Name' NumberOfParameters(method)); " is 208.
Long Statement,Ncqrs.Eventing.Sourcing.Mapping,ConventionBasedEventHandlerMappingStrategy,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Sourcing\Mapping\ConventionBasedEventHandlerMappingStrategy.cs,GetEventHandlers,The length of the statement  "                var handler = new TypeThresholdedActionBasedDomainEventHandler(invokeAction' firstParameterType' methodCopy.Name' true); " is 120.
Long Statement,Ncqrs.Eventing.Storage.SQL,MsSqlServerEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\SQL\MsSqlServerEventStore.cs,ReadEventFromDbReader,The length of the statement  "            var evnt = new CommittedEvent(dummyCommitId' document.EventIdentifier' document.EventSourceId' document.EventSequence' document.EventTimeStamp' payload' document.EventVersion); " is 176.
Long Statement,Ncqrs.Eventing.Storage.SQL,MsSqlServerEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\SQL\MsSqlServerEventStore.cs,SaveEvents,The length of the statement  "            Contract.Requires<ArgumentNullException>(uncommittedEvents != null' "The argument uncommittedEvents could not be null."); " is 121.
Virtual Method Call from Constructor,Ncqrs.Domain,AggregateRootMappedWithExpressions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\AggregateRootMappedWithExpressions.cs,AggregateRootMappedWithExpressions,The constructor "AggregateRootMappedWithExpressions" calls a virtual method "InitializeEventHandlers".
Virtual Method Call from Constructor,Ncqrs.Domain,AggregateRootMappedWithExpressions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Domain\AggregateRootMappedWithExpressions.cs,AggregateRootMappedWithExpressions,The constructor "AggregateRootMappedWithExpressions" calls a virtual method "InitializeEventHandlers".
Empty Catch Block,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,ReleaseWriteLock,The method has an empty catch block.
Empty Catch Block,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,ReleaseReadLock,The method has an empty catch block.
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadFrom,The following statement contains a magic number: var indexBuf = new byte[4];
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadFrom,The following statement contains a magic number: (reader.Read(indexBuf' 0' 4) == 4) && version < maxVersion
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadFrom,The following statement contains a magic number: (reader.Read(indexBuf' 0' 4) == 4) && version < maxVersion
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,Store,The following statement contains a magic number: writer.Write(BitConverter.GetBytes(bytes.Length)' 0' 4);
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadStoredEvent,The following statement contains a magic number: var commitId = new Guid(reader.ReadBytes(16));
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,ReadStoredEvent,The following statement contains a magic number: var eventIdentifier = new Guid(reader.ReadBytes(16));
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,UpdateEventSourceIndexFile,The following statement contains a magic number: var bytes = new byte[indicies.Length * 8];
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,UpdateEventSourceIndexFile,The following statement contains a magic number: var bytesIndex = i * 8;
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,UpdateEventSourceIndexFile,The following statement contains a magic number: byteIndexOffset < 8
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,UpdateEventSourceIndexFile,The following statement contains a magic number: writer.Write(bytes' 0' 8);
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,GetEventSourceIndexForVersion,The following statement contains a magic number: reader.Seek(version * 8' SeekOrigin.Begin);
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,GetEventSourceIndexForVersion,The following statement contains a magic number: var indexBytes = new byte[8];
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,GetEventSourceIndexForVersion,The following statement contains a magic number: reader.Read(indexBytes' 0' 8);
Magic Number,Ncqrs.Eventing.Storage.NoDB,NoDBEventStore,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\NoDBEventStore.cs,GetVersion,The following statement contains a magic number: return file.Length / 8;
Magic Number,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,ReadStoredEvent,The following statement contains a magic number: return new StoredEvent<JObject>(new Guid(data[0])' new DateTime(long.Parse(data[1])' DateTimeKind.Utc)'                                              data[2]'                                              new Version(data[3])' id' version'                                              JObject.Parse(data[4]));
Magic Number,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,ReadStoredEvent,The following statement contains a magic number: return new StoredEvent<JObject>(new Guid(data[0])' new DateTime(long.Parse(data[1])' DateTimeKind.Utc)'                                              data[2]'                                              new Version(data[3])' id' version'                                              JObject.Parse(data[4]));
Magic Number,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,ReadStoredEvent,The following statement contains a magic number: return new StoredEvent<JObject>(new Guid(data[0])' new DateTime(long.Parse(data[1])' DateTimeKind.Utc)'                                              data[2]'                                              new Version(data[3])' id' version'                                              JObject.Parse(data[4]));
Magic Number,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,GetPath,The following statement contains a magic number: string foldername = eventSourceId.ToString().Substring(0' 2);
Magic Number,Ncqrs.Eventing.Storage.NoDB,StoredEventExtensions,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\Eventing\Storage\NoDB\StoredEventExtensions.cs,GetPath,The following statement contains a magic number: string filename = eventSourceId.ToString().Substring(2);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: DateTime baseDate = new DateTime(1900' 1' 1);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: byte[] msecsArray = BitConverter.GetBytes((long)(msecs.TotalMilliseconds / 3.333333));
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(daysArray' daysArray.Length - 2' guidArray' guidArray.Length - 6' 2);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
Magic Number,Ncqrs,GuidCombGenerator,C:\research\architectureSmells\repos\ncqrs_ncqrs\Framework\src\Ncqrs\GuidCombGenerator.cs,GenerateNewId,The following statement contains a magic number: Array.Copy(msecsArray' msecsArray.Length - 4' guidArray' guidArray.Length - 4' 4);
