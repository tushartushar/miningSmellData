Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,BuildAssembly,Cyclomatic complexity of the method is 11
Long Parameter List,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,AssertConfig,The method has 6 parameters. Parameters: xmlConfig' webinfotype' sessionFactoryHolderType' isDebug' pluralize' verifyModelsAgainstDBSchema
Long Parameter List,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,AssertConfig,The method has 7 parameters. Parameters: xmlConfig' webinfotype' sessionFactoryHolderType' isDebug' pluralize' verifyModelsAgainstDBSchema' defaultFlushType
Long Parameter List,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,AssertConfig,The method has 8 parameters. Parameters: xmlConfig' webinfotype' sessionFactoryHolderType' isDebug' pluralize' verifyModelsAgainstDBSchema' defaultFlushType' searchable
Long Parameter List,Castle.ActiveRecord.Tests.Model.CompositeUserType,DoubleStringType,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\CompositeUserType\DoubleStringType.cs,NullSafeSet,The method has 5 parameters. Parameters: cmd' value' index' settable' session
Long Identifier,Castle.ActiveRecord.Tests,DefaultConfigurationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DefaultConfigurationsTestCase.cs,,The length of the parameter connection_connection_string_name is 33.
Long Statement,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,FetchCount,The length of the statement  "			Assert.AreEqual(1' Blog.FetchCount("Name=?"' "hammett's blog")' "Try to fetch the number of blogs with the specified name' "  " is 124.
Long Statement,Castle.ActiveRecord.Tests,ActiveRecordWithoutBaseTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordWithoutBaseTestCase.cs,DiscriminatorUse,The length of the statement  "                "<hibernate-mapping  auto-import=\"true\" default-lazy=\"false\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"urn:nhibernate-mapping-2.2\">\r\n"+ " is 211.
Long Statement,Castle.ActiveRecord.Tests,ActiveRecordWithoutBaseTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordWithoutBaseTestCase.cs,DiscriminatorUse,The length of the statement  "                "  <class name=\"Castle.ActiveRecord.Tests.Model.RulesModel.PersistedRule' Castle.ActiveRecord.Tests\" table=\"PersistedRule\" discriminator-value=\"0\" lazy=\"false\">\r\n"+ " is 174.
Long Statement,Castle.ActiveRecord.Tests,ActiveRecordWithoutBaseTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordWithoutBaseTestCase.cs,DiscriminatorUse,The length of the statement  "                "    <subclass name=\"Castle.ActiveRecord.Tests.Model.RulesModel.WorkDaysRules' Castle.ActiveRecord.Tests\" discriminator-value=\"2\" lazy=\"false\">\r\n"+ " is 155.
Long Statement,Castle.ActiveRecord.Tests,AnyRelationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\AnyRelationTestCase.cs,XmlConfigTest,The length of the statement  "				"<hibernate-mapping  auto-import=\"true\" default-lazy=\"false\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"urn:nhibernate-mapping-2.2\">\r\n" + " is 212.
Long Statement,Castle.ActiveRecord.Tests,AnyRelationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\AnyRelationTestCase.cs,XmlConfigTest,The length of the statement  "				"        <meta-value value=\"BANK_ACCOUNT\" class=\"Castle.ActiveRecord.Tests.Model.AnyModel.BankAccounts' Castle.ActiveRecord.Tests\" />\r\n" + " is 144.
Long Statement,Castle.ActiveRecord.Tests,AnyRelationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\AnyRelationTestCase.cs,XmlConfigTest,The length of the statement  "				"        <meta-value value=\"CREDIT_CARD\" class=\"Castle.ActiveRecord.Tests.Model.AnyModel.CreditCards' Castle.ActiveRecord.Tests\" />\r\n" + " is 142.
Long Statement,Castle.ActiveRecord.Tests,DefaultConfigurationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DefaultConfigurationsTestCase.cs,Throws_when_invalid_database_specified,The length of the statement  "				"Specified value (IDontExist!) is not valid for 'database' attribute. Valid values are: 'MsSqlServer2000' 'MsSqlServer2005' 'MsSqlServer2008' " + " is 145.
Long Statement,Castle.ActiveRecord.Tests,DefaultConfigurationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DefaultConfigurationsTestCase.cs,Throws_when_invalid_database_specified,The length of the statement  "				"'SQLite' 'MySql' 'MySql5' 'Firebird' 'PostgreSQL' 'PostgreSQL81' 'PostgreSQL82' 'MsSqlCe' 'Oracle8i' 'Oracle9i' 'Oracle10g'."' " is 127.
Long Statement,Castle.ActiveRecord.Tests,NHSearchTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NHSearchTestCase.cs,AddSearchProperties,The length of the statement  "			searchConfig[0] = new MutableConfiguration("hibernate.search.default.directory_provider"' "NHibernate.Search.Storage.FSDirectoryProvider' NHibernate.Search"); " is 158.
Long Statement,Castle.ActiveRecord.Tests,NHSearchTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NHSearchTestCase.cs,AddSearchProperties,The length of the statement  "			searchConfig[2] = new MutableConfiguration("hibernate.search.analyzer"' "Lucene.Net.Analysis.Standard.StandardAnalyzer' Lucene.Net"); " is 133.
Long Statement,Castle.ActiveRecord.Tests,SimpleQueryWithParameterTypesTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SimpleQueryWithParameterTypesTestCase.cs,TestExceptionThrownWhenNoOverrideProvided,The length of the statement  "			var exception = Assert.Throws<ActiveRecordException>(() => new SimpleQuery<ProductWithGuid>(Query' Key1.ToString()[0] + "%").Execute()); " is 136.
Long Statement,Castle.ActiveRecord.Tests,SimpleQueryWithParameterTypesTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SimpleQueryWithParameterTypesTestCase.cs,TestExceptionNotThrownWhenOverrideProvided,The length of the statement  "			var results = new SimpleQuery<ProductWithGuid>(Query' new ValueAndTypeTuple(NHibernateUtil.String' Key1.ToString()[0] + "%")).Execute(); " is 136.
Long Statement,Castle.ActiveRecord.Tests,StatelessSessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StatelessSessionScopeTestCase.cs,Unsupported_actions_should_have_squattery_exceptions,The length of the statement  "ActiveRecord is currently running within a StatelessSessionScope. Stateless sessions are faster than normal sessions' but they do not support all methods and properties that a normal session allows.  " is 198.
Long Statement,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertyValidateWithARVBGeneric,The length of the statement  "			Assert.IsTrue(user.ValidationErrorMessages.Length == 3'"Both nested props are required and should have error messages"); " is 120.
Long Statement,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertValidateWithARVBNonGeneric,The length of the statement  "			Assert.IsTrue(user.ValidationErrorMessages.Length == 3' "Both nested props are required and should have error messages"); " is 121.
Long Statement,Castle.ActiveRecord.Tests,SessionScopeAutoflushTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeAutoflushTestCase.cs,NHibernateVerification,The length of the statement  "			using (ISession session = ActiveRecordMediator.GetSessionFactoryHolder().GetSessionFactory(typeof(ActiveRecordBase)).OpenSession()) " is 131.
Long Statement,Castle.ActiveRecord.Tests,SessionScopeAutoflushTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeAutoflushTestCase.cs,SessionTxVerification,The length of the statement  "			using (ISession session = ActiveRecordMediator.GetSessionFactoryHolder().GetSessionFactory(typeof(ActiveRecordBase)).OpenSession()) " is 131.
Long Statement,Castle.ActiveRecord.Tests,SessionScopeAutoflushTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeAutoflushTestCase.cs,NHibernateNoTxVerification,The length of the statement  "			using (ISession session = ActiveRecordMediator.GetSessionFactoryHolder().GetSessionFactory(typeof(ActiveRecordBase)).OpenSession()) " is 131.
Long Statement,Castle.ActiveRecord.Tests,LazyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\LazyTestCase.cs,CanLoadLazyProperty,The length of the statement  "			string teststring = @"data:image/png;base64' iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9YGARc5KB0XV+IAAAAddEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIFRoZSBHSU1Q72QlbgAAAF1JREFUGNO9zL0NglAAxPEfdLTs4BZM4DIO4C7OwQg2JoQ9LE1exdlYvBBeZ7jqch9//q1uH4TLzw4d6+ErXMMcXuHWxId3KOETnnXXV6MJpcq2MLaI97CER3N0vr4MkhoXe0rZigAAAABJRU5ErkJggg=="; " is 379.
Long Statement,Castle.ActiveRecord.Tests,LazyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\LazyTestCase.cs,CanLoadLazyProperty,The length of the statement  "				LazyObjectWithLazyBlobProperty lazyFromDb = (LazyObjectWithLazyBlobProperty) ActiveRecordMediator.FindByPrimaryKey(typeof(LazyObjectWithLazyBlobProperty)' id); " is 159.
Long Statement,Castle.ActiveRecord.Tests,LazyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\LazyTestCase.cs,CanLoadLazyBelongsToOutsideOfScope,The length of the statement  "			ActiveRecordStarter.Initialize(GetConfigSource()' typeof(ScopelessLazy)' typeof(ObjectWithLazyAssociation)' typeof(VeryLazyObject2));  " is 133.
Long Statement,Castle.ActiveRecord.Tests,LazyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\LazyTestCase.cs,CanLoadLazyBelongsToOutsideOfScope,The length of the statement  "			var objFromDb = (ObjectWithLazyAssociation) ActiveRecordMediator.FindByPrimaryKey(typeof(ObjectWithLazyAssociation)' obj.Id); " is 125.
Long Statement,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,TestCustomSessionFactoryholder,The length of the statement  "				@"<activerecord isWeb=""true"" sessionfactoryholdertype=""Castle.ActiveRecord.Tests.Config.MySessionFactoryHolder' Castle.ActiveRecord.Tests"">" " is 144.
Long Statement,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,TestDebug,The length of the statement  "				@"<activerecord isDebug=""true"" isWeb=""true"" sessionfactoryholdertype=""Castle.ActiveRecord.Tests.Config.MySessionFactoryHolder' Castle.ActiveRecord.Tests"">" " is 161.
Long Statement,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,AssertConfig,The length of the statement  "			AssertConfig(xmlConfig' webinfotype' sessionFactoryHolderType' isDebug' pluralize' verifyModelsAgainstDBSchema' DefaultFlushType.Classic); " is 138.
Long Statement,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,AssertConfig,The length of the statement  "			AssertConfig(xmlConfig' webinfotype' sessionFactoryHolderType' isDebug' pluralize' verifyModelsAgainstDBSchema' defaultFlushType' false); " is 137.
Long Statement,Castle.ActiveRecord.Tests.Config,ConfigurationSource,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Config\ConfigurationSource.cs,GetDefaultHibernateConfigAndCloseActiveRecordSection,The length of the statement  "							<add key=""connection.connection_string"" value=""Data Source=.;Initial Catalog=test;Integrated Security=True;Pooling=False"" /> " is 128.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,Check_that_attribute_is_created,The length of the statement  "			var foundAttributes = (AddEventListenerAttribute[]) assembly.GetCustomAttributes(typeof (AddEventListenerAttribute)' false); " is 124.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U1_Listeners_be_excluded_from_connections,The length of the statement  "			InitializeMultiple(BuildAssembly(new AddEventListenerAttribute(typeof(NonAttributedPreLoadListener)){Exclude = new Type[] {typeof(Test2ARBase)}})); " is 147.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U1_Listeners_be_included_to_specific_connections_only,The length of the statement  "			InitializeMultiple(BuildAssembly(new AddEventListenerAttribute(typeof(NonAttributedPreLoadListener)) { Include = new Type[] { typeof(Test2ARBase) } })); " is 152.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U3c_Listeners_can_be_included_for_specific_events_only,The length of the statement  "			Initialize(BuildAssembly(new AddEventListenerAttribute(typeof(MultipleEventListener)) { IncludeEvent = new Type[] { typeof(IPreUpdateEventListener) } })); " is 154.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U3c_Listeners_can_be_excluded_from_specific_events,The length of the statement  "			Initialize(BuildAssembly(new AddEventListenerAttribute(typeof(MultipleEventListener)) { ExcludeEvent = new Type[] { typeof(IPreUpdateEventListener) } })); " is 154.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U4_Listeners_can_be_configured_to_be_used_as_singleton,The length of the statement  "			Assert.AreSame(GetRegisteredListeners(e=>e.PreInsertEventListeners)[0]' GetRegisteredListeners(e=>e.PreUpdateEventListeners)[0]); " is 129.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,U4_Listeners_are_not_singletons_by_default,The length of the statement  "			Assert.AreNotSame(GetRegisteredListeners(e => e.PreInsertEventListeners)[0]' GetRegisteredListeners(e => e.PreUpdateEventListeners)[0]); " is 136.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,BuildAssembly,The length of the statement  "			var assemblyBuilder = Thread.GetDomain().DefineDynamicAssembly(new AssemblyName(assemblyName)' AssemblyBuilderAccess.Save); " is 123.
Long Statement,Castle.ActiveRecord.Tests.Event,AssemblyAttributesTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\AssemblyAttributesTest.cs,BuildAssembly,The length of the statement  "				assemblyBuilder.SetCustomAttribute(new CustomAttributeBuilder(attribute.GetType().GetConstructor(constructorArgs)' constructorValues' properties' propertyValues));				 " is 163.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,Event_listeners_are_registered_only_once,The length of the statement  "            InitializeSingleBase(typeof(SamplePostInsertListener)' typeof(SamplePostUpdateListener)' typeof(SamplePostDeleteListener)); " is 123.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,Event_listeners_are_registered_only_once,The length of the statement  "            Assert.AreEqual(1' Array.FindAll(GetRegisteredListeners(e => e.PostInsertEventListeners)' l => (l is SamplePostInsertListener)).Length); " is 136.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,Event_listeners_are_registered_only_once,The length of the statement  "            Assert.AreEqual(1' Array.FindAll(GetRegisteredListeners(e => e.PostUpdateEventListeners)' l => (l is SamplePostUpdateListener)).Length); " is 136.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,Event_listeners_are_registered_only_once,The length of the statement  "            Assert.AreEqual(1' Array.FindAll(GetRegisteredListeners(e => e.PostDeleteEventListeners)' l => (l is SamplePostDeleteListener)).Length); " is 136.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,U1_C5_U4_No_replacement_on_excluded_configs,The length of the statement  "			AssertListenerWasRegistered<NHibernate.Event.Default.DefaultLoadEventListener' ActiveRecordBase>(e => e.LoadEventListeners); " is 124.
Long Statement,Castle.ActiveRecord.Tests.Event,EventListenerAttributeTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Event\EventListenerAttributeTest.cs,U1_C5_U4_No_replacement_on_excluded_configs,The length of the statement  "			AssertListenerWasNotRegistered<NHibernate.Event.Default.DefaultLoadEventListener' Test2ARBase>(e => e.LoadEventListeners); " is 122.
Empty Catch Block,Castle.ActiveRecord.Tests,AbstractActiveRecordTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\AbstractActiveRecordTest.cs,Drop,The method has an empty catch block.
Empty Catch Block,Castle.ActiveRecord.Tests,SessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeTestCase.cs,AnExceptionInvalidatesTheScopeAndPreventItsFlushing,The method has an empty catch block.
Empty Catch Block,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,InvalidSessionCache,The method has an empty catch block.
Empty Catch Block,Castle.ActiveRecord.Tests,TransactionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TransactionScopeTestCase.cs,NestedTransactionWithRollbackOnDispose,The method has an empty catch block.
Empty Catch Block,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,CheckScope,The method has an empty catch block.
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordLinqTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordLinqTestCase.cs,RelationsOneToMany,The following statement contains a magic number: Assert.AreEqual(2' blog.Posts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToMany,The following statement contains a magic number: Assert.AreEqual(2' blog.Posts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsWithCompositeKey,The following statement contains a magic number: Assert.AreEqual(2' group1.Agents.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsWithCompositeKey,The following statement contains a magic number: Assert.AreEqual(2' agent1.Groups.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(2' blog.UnPublishedPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(3' blog.RecentPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(post1.Id' ((Post) blog.RecentPosts[2]).Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,DeleteAll,The following statement contains a magic number: Assert.AreEqual(2' blogs.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,FetchCount,The following statement contains a magic number: Assert.AreEqual(2' Blog.FetchCount());
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordTestCase.cs,ExistsTest,The following statement contains a magic number: Assert.IsFalse(Blog.Exists(1000));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordWithoutBaseTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordWithoutBaseTestCase.cs,SimpleOperations,The following statement contains a magic number: rule.Count = 5;
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordWithoutBaseTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordWithoutBaseTestCase.cs,SimpleOperations,The following statement contains a magic number: rule.Days = 4;
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,SlicedOperation,The following statement contains a magic number: Post[] posts = Post.CustomSlicedFind(Expression.Eq("Blog"' blog)' 1' 2);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,SlicedOperation,The following statement contains a magic number: Assert.AreEqual(2' posts.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToMany,The following statement contains a magic number: Assert.AreEqual(2' blog.Posts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(2' blog.UnPublishedPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(3' blog.RecentPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordBaseGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordBaseGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(post1.Id' (blog.RecentPosts[2] as Post).Id);
Magic Number,Castle.ActiveRecord.Tests,JoinedSubClassTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\JoinedSubClassTestCase.cs,Entities,The following statement contains a magic number: Assert.AreEqual( 2' ents.Length );
Magic Number,Castle.ActiveRecord.Tests,DifferentDatabaseScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DifferentDatabaseScopeTestCase.cs,UsingSessionAndTransactionScope,The following statement contains a magic number: Assert.AreEqual( 2' blogs2.Length );
Magic Number,Castle.ActiveRecord.Tests,DifferentDatabaseScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DifferentDatabaseScopeTestCase.cs,SequenceOfTransactions,The following statement contains a magic number: Assert.AreEqual( 2' blogs.Length );
Magic Number,Castle.ActiveRecord.Tests,DifferentDatabaseScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\DifferentDatabaseScopeTestCase.cs,SequenceOfTransactions,The following statement contains a magic number: Assert.AreEqual( 2' blogs2.Length );
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithMapTypeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithMapTypeTestCase.cs,NestedParents,The following statement contains a magic number: nestedParent.Inner.DateProp = DateTime.Today.AddDays(-10);
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithMapTypeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithMapTypeTestCase.cs,NestedParents,The following statement contains a magic number: nestedParent.Inner.IntProp = 12;
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithRelationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithRelationsTestCase.cs,Operations,The following statement contains a magic number: operation.PaymentPlan.ExpirationDate = DateTime.Today.AddDays(-10);
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithRelationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithRelationsTestCase.cs,Operations,The following statement contains a magic number: operation.PaymentPlan.NumberOfPayments = 12;
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithRelationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithRelationsTestCase.cs,Operations,The following statement contains a magic number: payment1.Expiration  =DateTime.Today.AddDays(10);
Magic Number,Castle.ActiveRecord.Tests,NestedClassWithRelationsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedClassWithRelationsTestCase.cs,Operations,The following statement contains a magic number: payment1.Amount = 10;
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,ExistsTest,The following statement contains a magic number: Assert.IsFalse(Blog.Exists(1000));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,SlicedOperation,The following statement contains a magic number: Post[] posts = Post.SlicedFindAll(1' 2' Expression.Eq("Blog"' blog));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,SlicedOperation,The following statement contains a magic number: Assert.AreEqual(2' posts.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToMany,The following statement contains a magic number: Assert.AreEqual(2' blog.Posts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(2' blog.UnPublishedPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(3' blog.RecentPosts.Count);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordGenericsTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordGenericsTestCase.cs,RelationsOneToManyWithWhereAndOrder,The following statement contains a magic number: Assert.AreEqual(post1.Id' ((Post) blog.RecentPosts[2]).Id);
Magic Number,Castle.ActiveRecord.Tests,SessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeTestCase.cs,NestedSessionScopeAndLazyLoad,The following statement contains a magic number: Assert.AreEqual( 3' product1.Categories.Count );
Magic Number,Castle.ActiveRecord.Tests,SessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeTestCase.cs,NestedSessionScopeAndLazyLoad,The following statement contains a magic number: Assert.AreEqual( 3' product2.Categories.Count );
Magic Number,Castle.ActiveRecord.Tests,SessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeTestCase.cs,NestedSessionScopeAndLazyLoad,The following statement contains a magic number: Assert.AreEqual( 3' product3.Categories.Count );
Magic Number,Castle.ActiveRecord.Tests,SessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SessionScopeTestCase.cs,AnExceptionInvalidatesTheScopeAndPreventItsFlushing,The following statement contains a magic number: post = new Post(new Blog(100)' "title"' "contents"' "castle");
Magic Number,Castle.ActiveRecord.Tests,StrictModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StrictModelTestCase.cs,Creation,The following statement contains a magic number: Assert.AreEqual(3' refEsts.Length);
Magic Number,Castle.ActiveRecord.Tests,StrictModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StrictModelTestCase.cs,DistinctTypes,The following statement contains a magic number: Assert.AreEqual( 4' estratos.Length );
Magic Number,Castle.ActiveRecord.Tests,StrictModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StrictModelTestCase.cs,DistinctTypes,The following statement contains a magic number: Assert.AreEqual( 5' estratos.Length );
Magic Number,Castle.ActiveRecord.Tests,StrictModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StrictModelTestCase.cs,UsageWithReferences,The following statement contains a magic number: Assert.AreEqual( 4' estratos.Length );
Magic Number,Castle.ActiveRecord.Tests,StrictModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StrictModelTestCase.cs,UsageWithReferences,The following statement contains a magic number: Assert.AreEqual( 5' estratos.Length );
Magic Number,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,ManyToManyUsingSet,The following statement contains a magic number: coolGadget.Price = 250.39f;
Magic Number,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,ManyToManyUsingIDBag,The following statement contains a magic number: myOrder.OrderedDate = new DateTime(2006' 12' 25);
Magic Number,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,ManyToManyUsingIDBag,The following statement contains a magic number: myOrder.OrderedDate = new DateTime(2006' 12' 25);
Magic Number,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,ManyToManyUsingIDBag,The following statement contains a magic number: myOrder.OrderedDate = new DateTime(2006' 12' 25);
Magic Number,Castle.ActiveRecord.Tests,TableHierarchyTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TableHierarchyTestCase.cs,ManyToManyUsingIDBag,The following statement contains a magic number: coolGadget.Price = 330.23f;
Magic Number,Castle.ActiveRecord.Tests,TransactionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TransactionScopeTestCase.cs,MixingSessionScopeAndTransactionScopes2,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,TransactionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TransactionScopeTestCase.cs,MixingSessionScopeAndTransactionScopes3,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,TransactionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\TransactionScopeTestCase.cs,MixingSessionScopeAndTransactionScopes3,The following statement contains a magic number: Assert.AreEqual(10' posts.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FillData,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,Exists,The following statement contains a magic number: Assert.AreEqual(10' Blog.FindAll(new DetachedQuery("from Blog")).Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,Exists,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list[9].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list[9].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual("n10"' list[9].Name);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindOne,The following statement contains a magic number: Blog f = Blog.FindOne(  				new DetachedQuery("from Blog f where f.Id=:value").SetInt32("value"' 10));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,FindOne,The following statement contains a magic number: Assert.AreEqual(10' f.Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Blog[] list = Blog.SlicedFindAll(5' 9' new DetachedQuery("from Blog"));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Blog[] list = Blog.SlicedFindAll(5' 9' new DetachedQuery("from Blog"));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(5' list.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(6' list[0].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(10' list[4].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(10' list[4].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryGenericTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryGenericTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual("n10"' list[4].Name);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FillData,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,Exists,The following statement contains a magic number: Assert.AreEqual(10' Blog.FindAll(new DetachedQuery("from Blog")).Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,Exists,The following statement contains a magic number: i <= 10
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list[9].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual(10' list[9].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindAll,The following statement contains a magic number: Assert.AreEqual("n10"' list[9].Name);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindOne,The following statement contains a magic number: Blog f = Blog.FindOne(  				new DetachedQuery("from Blog f where f.Id=:value").SetInt32("value"'10));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,FindOne,The following statement contains a magic number: Assert.AreEqual(10' f.Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Blog[] list = Blog.SlicedFindAll(5' 9' new DetachedQuery("from Blog"));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Blog[] list = Blog.SlicedFindAll(5' 9' new DetachedQuery("from Blog"));
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(5' list.Length);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(6' list[0].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(10' list[4].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual(10' list[4].Id);
Magic Number,Castle.ActiveRecord.Tests,ActiveRecordDetachedQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\ActiveRecordDetachedQueryTestCase.cs,SlidedFindAll,The following statement contains a magic number: Assert.AreEqual("n10"' list[4].Name);
Magic Number,Castle.ActiveRecord.Tests,CompositeNestedClassTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CompositeNestedClassTestCase.cs,CompositeNestedComponents,The following statement contains a magic number: dependent.DateProp = new DateTime(2000' 1' 1);
Magic Number,Castle.ActiveRecord.Tests,NHSearchTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NHSearchTestCase.cs,AddSearchProperties,The following statement contains a magic number: searchConfig = new MutableConfiguration[3];
Magic Number,Castle.ActiveRecord.Tests,NHSearchTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NHSearchTestCase.cs,AddSearchProperties,The following statement contains a magic number: searchConfig[2] = new MutableConfiguration("hibernate.search.analyzer"' "Lucene.Net.Analysis.Standard.StandardAnalyzer' Lucene.Net");
Magic Number,Castle.ActiveRecord.Tests,SimpleQueryWithParameterTypesTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\SimpleQueryWithParameterTypesTestCase.cs,TestSetup,The following statement contains a magic number: Assert.That(ProductWithGuid.FindAll().Length' Is.EqualTo(2));
Magic Number,Castle.ActiveRecord.Tests,StatelessSessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StatelessSessionScopeTestCase.cs,Inversively_adding_to_a_detached_entitys_collections_works,The following statement contains a magic number: i < 10
Magic Number,Castle.ActiveRecord.Tests,StatelessSessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StatelessSessionScopeTestCase.cs,Inversively_adding_to_a_detached_entitys_collections_works,The following statement contains a magic number: Assert.AreEqual(10' Blog.Find(1).Posts.Count);
Magic Number,Castle.ActiveRecord.Tests,StatelessSessionScopeTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\StatelessSessionScopeTestCase.cs,Updating_detached_entities_collections_does_not_work,The following statement contains a magic number: i < 10
Magic Number,Castle.ActiveRecord.Tests,EnumModelTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\EnumModelTestCase.cs,SaveAndQueryEnumModel,The following statement contains a magic number: Assert.AreEqual(first.Roles.Count' 3);
Magic Number,Castle.ActiveRecord.Tests,CountQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CountQueryTestCase.cs,CountQuery_ByType,The following statement contains a magic number: Assert.AreEqual(3' recordCount);
Magic Number,Castle.ActiveRecord.Tests,CountQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CountQueryTestCase.cs,CountQuery_ByTypeAndCriteria,The following statement contains a magic number: Assert.AreEqual(2' recordCount);
Magic Number,Castle.ActiveRecord.Tests,CountQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CountQueryTestCase.cs,CountQuery_PositionalParameters,The following statement contains a magic number: Assert.AreEqual(2' recordCount);
Magic Number,Castle.ActiveRecord.Tests,CountQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CountQueryTestCase.cs,CountQuery_DetachedCriteria,The following statement contains a magic number: Assert.AreEqual(2' recordCount);
Magic Number,Castle.ActiveRecord.Tests,CountQueryTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\CountQueryTestCase.cs,CountQuery_ByTypeAndBadCriteria,The following statement contains a magic number: Assert.AreEqual(2' recordCount);
Magic Number,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertyValidateWithARVBGeneric,The following statement contains a magic number: Assert.IsTrue(user.ValidationErrorMessages.Length == 3'"Both nested props are required and should have error messages");
Magic Number,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertyValidateWithARVBGeneric,The following statement contains a magic number: Assert.IsTrue(user.PropertiesValidationErrorMessages.Count == 2'"Two properties should be invalid");
Magic Number,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertValidateWithARVBNonGeneric,The following statement contains a magic number: Assert.IsTrue(user.ValidationErrorMessages.Length == 3' "Both nested props are required and should have error messages");
Magic Number,Castle.ActiveRecord.Tests,NestedModelValidation,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\NestedModelValidation.cs,DoesNestedPropertValidateWithARVBNonGeneric,The following statement contains a magic number: Assert.IsTrue(user.PropertiesValidationErrorMessages.Count == 2' "Two properties should be invalid");
Magic Number,Castle.ActiveRecord.Tests.Bugs,ARIssue293TestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Bugs\ARIssue293TestCase.cs,Should_execute_formula,The following statement contains a magic number: Assert.AreEqual(2' blogs[0].SomeFormula);
Magic Number,Castle.ActiveRecord.Tests.Model.Linq,Blog,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\Linq\Blog.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (_name != null ? _name.GetHashCode() : 0);
Magic Number,Castle.ActiveRecord.Tests.Model.Linq,Blog,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\Linq\Blog.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (_author != null ? _author.GetHashCode() : 0);
Magic Number,Castle.ActiveRecord.Tests.Model.Linq,Blog,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\Linq\Blog.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (_posts != null ? _posts.GetHashCode() : 0);
Magic Number,Castle.ActiveRecord.Tests.Model.Linq,Widget,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\Linq\Widget.cs,GetHashCode,The following statement contains a magic number: return (Id*397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' user.ValidationErrorMessages.Length);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[2]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[3]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[4]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' user.PropertiesValidationErrorMessages.Count);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCaseGeneric,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.Generic.cs,Hierarchy,The following statement contains a magic number: p1.Age = 25;
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' user.ValidationErrorMessages.Length);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[2]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[3]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual("This is a required field"' user.ValidationErrorMessages[4]);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,ErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' user.PropertiesValidationErrorMessages.Count);
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,Hierarchy,The following statement contains a magic number: p1.Age = 25;
Magic Number,Castle.ActiveRecord.Tests.Validation,ValidationTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ValidationTestCase.cs,IsUniqueTimeoutExpiredBug,The following statement contains a magic number: i < 5
Magic Number,Castle.ActiveRecord.Tests.Validation,ARValidatorTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ARValidatorTestCase.cs,HasErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' validator.PropertiesValidationErrorMessages.Count);
Magic Number,Castle.ActiveRecord.Tests.Validation,ARValidatorTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ARValidatorTestCase.cs,HasErrorMessages,The following statement contains a magic number: Assert.AreEqual(5' validator.ValidationErrorMessages.Length);
Magic Number,Castle.ActiveRecord.Tests.Validation,ARValidatorTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ARValidatorTestCase.cs,HasErrorMessages,The following statement contains a magic number: Assert.AreEqual(2' validator.PropertiesValidationErrorMessages.Count);
Magic Number,Castle.ActiveRecord.Tests.Validation,ARValidatorTestCase,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Validation\ARValidatorTestCase.cs,HasErrorMessages,The following statement contains a magic number: Assert.AreEqual(2' validator.ValidationErrorMessages.Length);
Magic Number,Castle.ActiveRecord.Tests.Conversation,ConversationScenarioTest,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Conversation\ConversationScenarioTest.cs,ArrangeRecords,The following statement contains a magic number: PostLazy post = new PostLazy()      		                	{      		                		Blog = blog'      		                		Category = "Scenario"'      		                		Title = "The Convesration is here"'      		                		Contents = "A new way for AR in fat clients"'      		                		Created = new DateTime(2010' 1' 1)'      		                		Published = true      		                	};
Magic Number,Castle.ActiveRecord.Tests.Model.CompositeUserType,DoubleStringType,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\CompositeUserType\DoubleStringType.cs,GetHashCode,The following statement contains a magic number: return a[0].GetHashCode() + 31 * a[1].GetHashCode();
Magic Number,Castle.ActiveRecord.Tests.Model.CompositeUserType,DoubleStringType,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\CompositeUserType\DoubleStringType.cs,DeepCopy,The following statement contains a magic number: string[] result = new string[2];
Magic Number,Castle.ActiveRecord.Tests.Model.CompositeUserType,DoubleStringType,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\Model\CompositeUserType\DoubleStringType.cs,NullSafeSet,The following statement contains a magic number: string[] strings = (value == null) ? new string[2] : (string[]) value;
Magic Number,Castle.ActiveRecord.Tests.PropertyAccessTests,TestCases,D:\research\architectureSmells\repos\castleproject_ActiveRecord\src\Castle.ActiveRecord.Tests\PropertyAccessTests\TestCases.cs,createSampleProject,The following statement contains a magic number: var task2 = new Task() { Name = "Upload Zip"' Project = project' ScheduledDate = DateTime.Today.AddDays(7)};
