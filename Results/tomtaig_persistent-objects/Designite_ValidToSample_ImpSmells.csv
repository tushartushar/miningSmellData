Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,Cyclomatic complexity of the method is 18
Long Statement,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,The length of the statement  "	var myEntityConfigurer = RepositoryConfiguration.Persist<MyEntity> ().WithValidToStrategy (() => DateTime.Now).WithTypeAlias ("my_entity"); " is 139.
Long Statement,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,The length of the statement  "	Console.WriteLine ("Before 1st version of object accessed using date {0}: {1}"' timestamp1.ToString ("HH:mm:ssss")' repository.ReadFromHistory<MyEntity> ("1"' timestamp0)); " is 172.
Long Statement,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,The length of the statement  "	Console.WriteLine ("First version of object accessed using date {0}: {1}"' timestamp1.ToString ("HH:mm:ssss")' repository.ReadFromHistory<MyEntity> ("1"' timestamp1)); " is 167.
Long Statement,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,The length of the statement  "	Console.WriteLine ("Second version of object accessed using date {0}: {1}"' timestamp2.ToString ("HH:mm:ssss")' repository.ReadFromHistory<MyEntity> ("1"' timestamp2)); " is 168.
Missing Default,ValidToSample,Program,C:\repos\tomtaig_persistent-objects\samples\valid-to\Program.cs,Main,The following switch statement is missing a default case: switch (key.KeyChar) {  case '1':  	myEntityConfigurer.MemoryRepository (new XmlSerializer ());  	break;  case '2':  	var entityFilePath = Path.Combine (Environment.CurrentDirectory' "entities");  	if (Directory.Exists (entityFilePath)) {  		Directory.Delete (entityFilePath' true);  	}  	myEntityConfigurer.FileSystemRepository (new XmlSerializer ()).WithStoragePath (entityFilePath);  	break;  case '3':  	var sqliteCS = new ConnectionStringSettings {  		ConnectionString = "Data Source=test.db"  	};  	myEntityConfigurer.SqLiteRepository ().DatabaseSelectionStrategy (new SingleSqLiteFileStrategy {  		ConnectionString = sqliteCS  	}).TableObjectStorage (new XmlSerializer ());  	break;  case '4':  	var sqlCS = new ConnectionStringSettings {  		ConnectionString = "Data Source=.\\SQLEXPRESS;Database=testing;Integrated Security=SSPI"  	};  	myEntityConfigurer.SqlServerRepository ().DatabaseSelectionStrategy (new SingleDatabaseStrategy {  		ConnectionString = sqlCS  	}).TableObjectStorage (new XmlSerializer ());  	break;  }  
