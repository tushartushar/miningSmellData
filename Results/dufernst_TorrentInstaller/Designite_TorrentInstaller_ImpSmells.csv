Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,setState,Cyclomatic complexity of the method is 26
Complex Method,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,updateLauncherState,Cyclomatic complexity of the method is 18
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,setProgress,The length of the statement  "	remainingStats.Text = "Time remaining:           " + getTimeString (toDownload / cds) + "\n" + "Download remaining: " + getSizeString (toDownload); " is 147.
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,initOptionMenuButton,The length of the statement  "	optionMenu.Location = new Point (optionMenu.Location.X - optionMenu.Parent.Location.X' optionMenu.Location.Y - optionMenu.Parent.Location.Y); " is 141.
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,initDownloadSpeed,The length of the statement  "	downloadSpeed.Location = new Point (downloadSpeed.Location.X - downloadSpeed.Parent.Location.X' downloadSpeed.Location.Y - downloadSpeed.Parent.Location.Y); " is 156.
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,initRemaining,The length of the statement  "	remainingStats.Location = new Point (remainingStats.Location.X - remainingStats.Parent.Location.X' remainingStats.Location.Y - remainingStats.Parent.Location.Y); " is 161.
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,setDownloadSpeed,The length of the statement  "	downloadSpeed.Text = "Downloading:   " + getSizeString (currentDownloadSpeed) + "/s\n" + "Uploading:         " + getSizeString (currentUploadSpeed) + "/s"; " is 155.
Long Statement,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,setUploadSpeed,The length of the statement  "	downloadSpeed.Text = "Downloading:   " + getSizeString (currentDownloadSpeed) + "/s\n" + "Uploading:         " + getSizeString (currentUploadSpeed) + "/s"; " is 155.
Long Statement,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,startEngine,The length of the statement  "	engineSettings.AllowedEncryption = MonoTorrent.Client.Encryption.EncryptionTypes.RC4Full | MonoTorrent.Client.Encryption.EncryptionTypes.RC4Header; " is 147.
Long Statement,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,getOtherStats,The length of the statement  "	return debug += "State: " + torrentManager.State + "\n" + "Name: " + torrentManager.Torrent.Name + "\n" + "Progress: " + torrentManager.Progress + "\n" + "Downloaded: " + torrentManager.Monitor.DataBytesDownloaded + "\n" + "Uploaded: " + torrentManager.Monitor.DataBytesUploaded + "\n" + "Read rate: " + clientEngine.DiskManager.ReadRate + "\n" + "Write rate: " + clientEngine.DiskManager.WriteRate + "\n" + "Warning: " + torrentManager.TrackerManager.CurrentTracker.WarningMessage + "\n" + "Failure: " + torrentManager.TrackerManager.CurrentTracker.FailureMessage + "\n" + "OConnections: " + clientEngine.ConnectionManager.OpenConnections + "\n" + "HOConnections: " + clientEngine.ConnectionManager.HalfOpenConnections + "\n" + "MOConnections: " + clientEngine.ConnectionManager.MaxOpenConnections + "\n" + "MHOConnections: " + clientEngine.ConnectionManager.MaxHalfOpenConnections + "\n" + "Fast resume used: " + usedFastResume + "\n" + "Total download: " + torrent.Size + "\n"; " is 980.
Empty Catch Block,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,startDHT,The method has an empty catch block.
Empty Catch Block,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The method has an empty catch block.
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,AnimatedProgressBar,The following statement contains a magic number: head.Height = 7;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,AnimatedProgressBar,The following statement contains a magic number: animation.Width = 12;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,AnimatedProgressBar,The following statement contains a magic number: animationTimer.Interval = 35;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,setProgress,The following statement contains a magic number: this.Width = (int)((progress * fullBar) / 100);  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,updateHead,The following statement contains a magic number: if (this.Width >= 17) {  	head.Location = new System.Drawing.Point (this.Width - 17' 1);  	head.Width = 17;  }  else {  	head.Width = this.Width;  	head.Location = new System.Drawing.Point (0' 1);  }  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,updateHead,The following statement contains a magic number: if (this.Width >= 17) {  	head.Location = new System.Drawing.Point (this.Width - 17' 1);  	head.Width = 17;  }  else {  	head.Width = this.Width;  	head.Location = new System.Drawing.Point (0' 1);  }  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,updateHead,The following statement contains a magic number: if (this.Width >= 17) {  	head.Location = new System.Drawing.Point (this.Width - 17' 1);  	head.Width = 17;  }  else {  	head.Width = this.Width;  	head.Location = new System.Drawing.Point (0' 1);  }  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,updateHead,The following statement contains a magic number: head.Location = new System.Drawing.Point (this.Width - 17' 1);  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,updateHead,The following statement contains a magic number: head.Width = 17;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,UpdateAnimation,The following statement contains a magic number: animationX += 6;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,UpdateAnimation,The following statement contains a magic number: if (animationX + 12 > fullBar)  	animationX = 0.0;  
Magic Number,TorrentInstaller,AnimatedProgressBar,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\AnimatedProgressBar.cs,UpdateAnimation,The following statement contains a magic number: if (animationX + 10.0 > this.Width)  	animation.Visible = false;  else  	animation.Visible = true;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = dsize / 1024;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if (dsize / 1000 >= 1.0 && (dsize / 1000) / 1000 < 1.0) {  	dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  	ex = "MB";  }  else if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate ((dsize / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: if ((dsize / 1000) / 1000 >= 1.0) {  	dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  	ex = "GB";  }  else {  	dsize = Math.Truncate (dsize * 100) / 100;  	ex = "KB";  }  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (((dsize / 1024) / 1024) * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (dsize * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getSizeString,The following statement contains a magic number: dsize = Math.Truncate (dsize * 100) / 100;  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: if (hours > 0)  	result += hours % 24 + "h  ";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: result += hours % 24 + "h  ";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: if (minutes > 0 && days == 0)  	result += minutes % 60 + "m  ";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: result += minutes % 60 + "m  ";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: if (seconds > 0 && hours == 0)  	result += seconds % 60 + "s";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: result += seconds % 60 + "s";  
Magic Number,TorrentInstaller,MainWindow,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\MainWindow.cs,getTimeString,The following statement contains a magic number: if (days > 14)  	result = ".....";  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,startEngine,The following statement contains a magic number: engineSettings.GlobalMaxHalfOpenConnections = 10;  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,initTorrent,The following statement contains a magic number: torrentSettings = new TorrentSettings (4' 100' 600 * 1024' 60 * 1024' false);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,Stop,The following statement contains a magic number: if (torrentManager.State != TorrentState.Hashing) {  	torrentManager.Stop ();  	while (torrentManager.State != TorrentState.Stopped)  		Thread.Sleep (250);  	BEncodedList bl = new BEncodedList ();  	FastResume fr = torrentManager.SaveFastResume ();  	BEncodedDictionary item = fr.Encode ();  	bl.Add (item);  	File.WriteAllBytes (fastResumeFile' bl.Encode ());  }  else  	torrentManager.Stop ();  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,Stop,The following statement contains a magic number: while (torrentManager.State != TorrentState.Stopped)  	Thread.Sleep (250);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,Stop,The following statement contains a magic number: Thread.Sleep (250);  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,setSettings,The following statement contains a magic number: torrentManager.Settings.MaxDownloadSpeed = 100;  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,getAveragedUploadSpeed,The following statement contains a magic number: averagedUploadSpeed = (averagedUploadSpeed * 4 + torrentManager.Monitor.UploadSpeed) / 5;  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,getAveragedUploadSpeed,The following statement contains a magic number: averagedUploadSpeed = (averagedUploadSpeed * 4 + torrentManager.Monitor.UploadSpeed) / 5;  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,getAveragedDownloadSpeed,The following statement contains a magic number: averagedDownloadSpeed = (averagedDownloadSpeed * 4 + torrentManager.Monitor.DownloadSpeed) / 5;  
Magic Number,TorrentInstaller,WoWTorrent,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Torrent.cs,getAveragedDownloadSpeed,The following statement contains a magic number: averagedDownloadSpeed = (averagedDownloadSpeed * 4 + torrentManager.Monitor.DownloadSpeed) / 5;  
Magic Number,TorrentInstaller,Updater,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Updater.cs,Run,The following statement contains a magic number: while (true) {  	Thread.Sleep (1000);  	mainWindow.Invoke (mainWindow.updateValDelegate);  }  
Magic Number,TorrentInstaller,Updater,C:\repos\dufernst_TorrentInstaller\TorrentInstaller\Updater.cs,Run,The following statement contains a magic number: Thread.Sleep (1000);  
