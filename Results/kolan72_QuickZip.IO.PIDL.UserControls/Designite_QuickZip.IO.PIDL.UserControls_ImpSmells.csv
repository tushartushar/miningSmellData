Implementation smell,Namespace,Class,File,Method,Description
Long Method,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,KeyToBitmap,The method has 105 lines of code.
Long Method,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The method has 108 lines of code.
Long Method,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,FileList,The method has 115 lines of code.
Complex Method,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnEnableDragDropChanged,Cyclomatic complexity of the method is 8
Complex Method,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,getSelectedItems,Cyclomatic complexity of the method is 10
Complex Method,QuickZip.IO.PIDL.UserControls,ExModelComparer,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Comparer\ExModelComparer.cs,Compare,Cyclomatic complexity of the method is 24
Complex Method,QuickZip.IO.PIDL.UserControls,ExModelToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExModelToIconConverter.cs,ValueToKey,Cyclomatic complexity of the method is 9
Complex Method,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,KeyToBitmap,Cyclomatic complexity of the method is 10
Complex Method,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ValueToKey,Cyclomatic complexity of the method is 9
Complex Method,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,KeyToBitmap,Cyclomatic complexity of the method is 10
Complex Method,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,Cyclomatic complexity of the method is 19
Complex Method,QuickZip.IO.PIDL.UserControls.ViewModel,DirectoryTreeItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\MVVM\DirectoryTreeItemViewModel.cs,BroadcastChange,Cyclomatic complexity of the method is 12
Complex Method,QuickZip.IO.PIDL.UserControls.ViewModel,CurrentDirectoryViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\MVVM\CurrentDirectoryViewModel.cs,SetInternalCollection,Cyclomatic complexity of the method is 38
Long Parameter List,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SHGetFileInfo,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,ProgressEventArgs,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\ProgressEventArgs.cs,init,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,ProgressEventArgs,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\ProgressEventArgs.cs,ProgressEventArgs,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,ProgressRoutedEventArgs,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\ProgressRoutedEventArgs.cs,init,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,ProgressRoutedEventArgs,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\ProgressRoutedEventArgs.cs,ProgressRoutedEventArgs,The method has 7 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The method has 17 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,DirectoryTreeCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\Commands\DirectoryTreeCommands.cs,SetupCommands,The method has 6 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,FileListCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Commands\FileListCommands.cs,SetupCommands,The method has 14 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,FileList,The method has 10 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls.ViewModel,ExViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\ViewModel\ExViewModel.cs,OnProgress,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls.ViewModel,ExViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\ViewModel\ExViewModel.cs,RaiseProgressEvent,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls.ViewModel,RootModelBase,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\ViewModel\RootModelBase.cs,RaiseProgressEvent,The method has 5 parameters.
Long Parameter List,QuickZip.IO.PIDL.UserControls.ViewModel,DirectoryTreeItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\MVVM\DirectoryTreeItemViewModel.cs,DirectoryTreeItemViewModel,The method has 5 parameters.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnMouseMove,The length of the statement  "	bool isSelected = sender is TreeView ? (sender as TreeView).SelectedValue != null : (sender as Selector).SelectedIndex != -1; " is 125.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnMouseMove,The length of the statement  "	if ((e.LeftButton == MouseButtonState.Pressed || e.RightButton == MouseButtonState.Pressed) && !IsDragging (uiSender)) { " is 120.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnMouseMove,The length of the statement  "			if (Math.Abs (position.X - _startPoint.X) < SystemParameters.MinimumHorizontalDragDistance || Math.Abs (position.Y - _startPoint.Y) < SystemParameters.MinimumVerticalDragDistance) { " is 181.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The length of the statement  "	bool isSelected = sender is TreeView ? (sender as TreeView).SelectedValue != null : sender is ListBox ? listBoxMouseOverSelectedItem (sender as ListBox) : (sender as Selector).SelectedIndex != -1; " is 196.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,CanDrop,The length of the statement  "	return !(String.Equals (file1' targetDir' StringComparison.InvariantCultureIgnoreCase)) && !(file1.Length > targetDir.Length ? file1.StartsWith (targetDir) : targetDir.StartsWith (file1)); " is 188.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnDrop,The length of the statement  "			string[] addList = e.Data.GetDataPresent (DataObjectEx.DataFormats_EntryString) ? (string[])e.Data.GetData (DataObjectEx.DataFormats_EntryString) : (string[])e.Data.GetData (DataFormats.FileDrop); " is 196.
Long Statement,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnDrop,The length of the statement  "						handler = (System.IO.Tools.WorkFinishedEventHandler)delegate (object send' System.IO.Tools.WorkFinishedEventArgs args) { " is 120.
Long Statement,QuickZip.IO.PIDL.UserControls,ExModelToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExModelToIconConverter.cs,ValueToKey,The length of the statement  "			if (imageFilter.IndexOf (key' StringComparison.InvariantCultureIgnoreCase) != -1 || specialExtFilter.Split (''').Contains (key)) { " is 130.
Long Statement,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,IsSpecialFolder,The length of the statement  "	return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2); " is 247.
Long Statement,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The length of the statement  "			Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic); " is 128.
Long Statement,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The length of the statement  "			g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft)); " is 206.
Long Statement,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,ValueToKey,The length of the statement  "			if (imageFilter.IndexOf (fastKey' StringComparison.InvariantCultureIgnoreCase) != -1 || specialExtFilter.Split (''').Contains (fastKey)) " is 136.
Long Statement,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The length of the statement  "	else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) { " is 125.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadBitmap,The length of the statement  "	//Memory Leak fixes' for more info : http://social.msdn.microsoft.com/forums/en-US/wpf/thread/edcf2482-b931-4939-9415-15b3515ddac6/ " is 131.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadBitmap,The length of the statement  "		BitmapSource bmSource = Imaging.CreateBitmapSourceFromHBitmap (hBitmap' IntPtr.Zero' Int32Rect.Empty' BitmapSizeOptions.FromEmptyOptions ()); " is 141.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The length of the statement  "			Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2)); " is 170.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The length of the statement  "		Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2)); " is 141.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetIconImage,The length of the statement  "	bool isImage = !String.IsNullOrEmpty (ext) && imageFilter.IndexOf (ext' StringComparison.InvariantCultureIgnoreCase) != -1; " is 123.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetIconImage,The length of the statement  "			WriteableBitmap bitmap = new WriteableBitmap (iconDic.ContainsKey (fastExtKey) ? iconDic [fastExtKey] : loadBitmap (KeyToBitmap (fastKey' size))); " is 146.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetIconImage,The length of the statement  "			thumbnailInfo info = new thumbnailInfo (bitmap' key' size' new System.Drawing.Size (bitmap.PixelWidth' bitmap.PixelHeight)' currentRoll); " is 137.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ValueToKey,The length of the statement  "			if (imageFilter.IndexOf (key' StringComparison.InvariantCultureIgnoreCase) != -1 || specialExtFilter.Split (''').Contains (key)) { " is 130.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The length of the statement  "			Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic); " is 128.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The length of the statement  "			g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft)); " is 206.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The length of the statement  "	else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) { " is 125.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverterBase,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverterBase.cs,ValueToKey,The length of the statement  "			if (imageFilter.IndexOf (fastKey' StringComparison.InvariantCultureIgnoreCase) != -1 || specialExtFilter.Split (''').Contains (fastKey)) " is 136.
Long Statement,QuickZip.IO.PIDL.UserControls,FolderToIconConverterBase,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverterBase.cs,IsSpecialFolder,The length of the statement  "	return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2); " is 247.
Long Statement,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,mode2,The length of the statement  "	if (item is DirectoryInfoEx || item is DirectoryModel || (item is ExViewModel && (item as ExViewModel).EmbeddedModel is DirectoryModel)) " is 136.
Long Statement,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,mode3,The length of the statement  "	else if (item is DirectoryInfoEx || item is DirectoryModel || (item is ExViewModel && (item as ExViewModel).EmbeddedModel is DirectoryModel)) " is 141.
Long Statement,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The length of the statement  "			if (System.Windows.Forms.MessageBox.Show (String.Format ("Are you sure want to permanently remove these {0} item{1}?"' itemCount' itemCount > 1 ? "s" : "")' "Delete"' System.Windows.Forms.MessageBoxButtons.YesNo) == System.Windows.Forms.DialogResult.Yes) " is 254.
Long Statement,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The length of the statement  "			return getCurrentFunc () != null && ((getCurrentFunc ().EmbeddedDirectoryEntry.Attributes & FileAttributes.ReadOnly) != 0) && Clipboard.ContainsFileDropList (); " is 160.
Long Statement,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The length of the statement  "			ContextMenuHelper.InvokeCommand (getSelectionFunc () [0].EmbeddedEntry.Parent' selectedItems' "properties"' new System.Drawing.Point ((int)position.X' (int)position.Y)); " is 169.
Long Statement,QuickZip.IO.PIDL.UserControls,DirectoryTree,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\DirectoryTree.xaml.cs,OnApplyTemplate,The length of the statement  "		RaiseEvent (new ProgressRoutedEventArgs (ProgressEvent' new ProgressEventArgs (0' "DirectoryTree Loaded"' WorkType.Unknown' WorkStatusType.wsCompleted' WorkResultType.wrSuccess))); " is 180.
Long Statement,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,ArrangeOverride,The length of the statement  "		_border.Arrange (new Rect (_adornedElement.ActualWidth - finalSize.Width - 15' _adornedElement.ActualHeight - finalSize.Height + 15' finalSize.Width' finalSize.Height)); " is 169.
Long Statement,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The length of the statement  "	_textBox.GotKeyboardFocus += (KeyboardFocusChangedEventHandler)delegate (object sender' KeyboardFocusChangedEventArgs e) { " is 122.
Long Statement,QuickZip.IO.PIDL.UserControls,FileListCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Commands\FileListCommands.cs,SetupCommands,The length of the statement  "			rootModel.CurrentDirectoryModel.SelectedViewModels [0].Expand (rootModel' rootModel.CurrentDirectoryModel.SelectedViewModels [0].EmbeddedModel); " is 144.
Long Statement,QuickZip.IO.PIDL.UserControls,FileListCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Commands\FileListCommands.cs,SetupCommands,The length of the statement  "			if ((rootModel.CurrentDirectoryModel.EmbeddedDirectoryModel.EmbeddedDirectoryEntry.Attributes & FileAttributes.ReadOnly) != 0) " is 126.
Long Statement,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnApplyTemplate,The length of the statement  "	DependencyPropertyDescriptor descriptor = DependencyPropertyDescriptor.FromProperty (FileListLookupBoxAdorner.TextProperty' typeof(FileListLookupBoxAdorner)); " is 158.
Long Statement,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnApplyTemplate,The length of the statement  "		RaiseEvent (new ProgressRoutedEventArgs (ProgressEvent' new ProgressEventArgs (0' "FileList Loaded"' WorkType.Unknown' WorkStatusType.wsCompleted' WorkResultType.wrSuccess))); " is 175.
Long Statement,QuickZip.IO.PIDL.UserControls.Model,ExModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\Model\ExModel.cs,Equals,The length of the statement  "			return ((obj as ExModel).FullName.Equals (FullName) && (obj as ExModel).LastWriteTime.Equals (LastWriteTime) && (obj as ExModel).EntryType.Equals (EntryType) && (obj as ExModel).IsEditable.Equals (IsEditable) && (obj as ExModel).CreationTime.Equals (CreationTime)//LastAccessTime может поменяться как при просмотре свойств файла' так и при добавлении нового' поэтому для экономии времени не обновляем " is 400.
Long Statement,QuickZip.IO.PIDL.UserControls.ViewModel,DirectoryTreeItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\MVVM\DirectoryTreeItemViewModel.cs,BroascastCurrentDirectoryChanging,The length of the statement  "		if (this.EmbeddedDirectoryModel.EmbeddedDirectoryEntry.Equals (newDirectory) || IOTools.HasParent (newDirectory' this.EmbeddedDirectoryModel.EmbeddedDirectoryEntry) || IOTools.HasParent (this.EmbeddedDirectoryModel.EmbeddedDirectoryEntry' newDirectory)) { " is 255.
Long Statement,QuickZip.IO.PIDL.UserControls.ViewModel,DirectoryTreeItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\MVVM\DirectoryTreeItemViewModel.cs,getDirectories,The length of the statement  "	return new DispatcherNotifiedObservableCollection<DirectoryTreeItemViewModel> (from dir in EmbeddedDirectoryModel.EmbeddedDirectoryEntry.GetDirectories () " is 154.
Long Statement,QuickZip.IO.PIDL.UserControls.ViewModel,DirectoryTreeItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\DirectoryTree\MVVM\DirectoryTreeItemViewModel.cs,setUpBackgroundWorker,The length of the statement  "	bgWorker_loadSub = new BackgroundTaskManager<DispatcherNotifiedObservableCollection<DirectoryTreeItemViewModel>> (() =>  { " is 122.
Long Statement,QuickZip.IO.PIDL.UserControls.ViewModel,CurrentDirectoryViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\MVVM\CurrentDirectoryViewModel.cs,ChangeSortMethod,The length of the statement  "	ExComparer.SortDirectionType direction = sortDirection == ListSortDirection.Ascending ? ExComparer.SortDirectionType.sortAssending : ExComparer.SortDirectionType.sortDescending; " is 177.
Long Statement,QuickZip.IO.PIDL.UserControls.ViewModel,SimpleRoutedCommand,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\MVVM\Tools\SimpleRoutedCommand.cs,init,The length of the statement  "	_commandBinding = new CommandBinding (_routedCommand' (ExecutedRoutedEventHandler)delegate (object sender' ExecutedRoutedEventArgs e) { " is 135.
Complex Conditional,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,mode2,The conditional expression  "item is DirectoryInfoEx || item is DirectoryModel || (item is ExViewModel && (item as ExViewModel).EmbeddedModel is DirectoryModel)"  is complex.
Complex Conditional,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,mode3,The conditional expression  "item is DirectoryInfoEx || item is DirectoryModel || (item is ExViewModel && (item as ExViewModel).EmbeddedModel is DirectoryModel)"  is complex.
Empty Catch Block,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnMouseMove,The method has an empty catch block.
Empty Catch Block,QuickZip.IO.PIDL.UserControls.Model,DriveModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\Model\DriveModel.cs,DriveModel,The method has an empty catch block.
Empty Catch Block,QuickZip.IO.PIDL.UserControls.ViewModel,CurrentDirectoryViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\MVVM\CurrentDirectoryViewModel.cs,Refresh,The method has an empty catch block.
Empty Catch Block,QuickZip.IO.PIDL.UserControls.ViewModel,FileListViewItemViewModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\MVVM\FileListItemViewModel.cs,Run,The method has an empty catch block.
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: if (_mouseOverFileList) {  	_startPoint = new Point (-10000' 10000);  	return;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: if (_mouseOverFileList) {  	_startPoint = new Point (-10000' 10000);  	return;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: _startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: _startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: if (isSelected && !IsMouseOverScrollbar (uiElement' e)) {  	_startPoint = e.GetPosition (null);  	if (e.LeftButton == MouseButtonState.Pressed && e.ClickCount == 1 && sender is ListBox) {  		e.Handled = true;  	}  }  else  	_startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: if (isSelected && !IsMouseOverScrollbar (uiElement' e)) {  	_startPoint = e.GetPosition (null);  	if (e.LeftButton == MouseButtonState.Pressed && e.ClickCount == 1 && sender is ListBox) {  		e.Handled = true;  	}  }  else  	_startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: _startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,DragDropHelperEx,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Components\DragDropHelper\DragDropHelperEx.cs,OnPreviewMouseDown,The following statement contains a magic number: _startPoint = new Point (-10000' 10000);  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,IsSpecialFolder,The following statement contains a magic number: return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,IsSpecialFolder,The following statement contains a magic number: return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (size == IconSize.small) {  	font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  	height = g.MeasureString (ext' font).Height;  	rightOffset = 0;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\ExToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileNameToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FileNameToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,isVistaUp,The following statement contains a magic number: return (Environment.OSVersion.Version.Major >= 6);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: if (dispatcher) {  	target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  		//UI Thread  		var delta = target.Height - height;  		var newWidth = width > target.Width ? (int)target.Width : width;  		var newHeight = height > target.Height ? (int)target.Height : height;  		Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  		try {  			target.WritePixels (outRect' bits' stride' 0);  			if (freezeBitmap) {  				target.Freeze ();  			}  		}  		catch (Exception e) {  			Debug.WriteLine (e.Message);  			System.Diagnostics.Debugger.Break ();  		}  	}));  }  else {  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect (spacing' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap)  			target.Freeze ();  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  	//UI Thread  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap) {  			target.Freeze ();  		}  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }));  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  	//UI Thread  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap) {  			target.Freeze ();  		}  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }));  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  	//UI Thread  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap) {  			target.Freeze ();  		}  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }));  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,copyBitmap,The following statement contains a magic number: target.Dispatcher.BeginInvoke (DispatcherPriority.Background' new ThreadStart (delegate {  	//UI Thread  	var delta = target.Height - height;  	var newWidth = width > target.Width ? (int)target.Width : width;  	var newHeight = height > target.Height ? (int)target.Height : height;  	Int32Rect outRect = new Int32Rect ((int)((target.Width - newWidth) / 2)' (int)(delta >= 0 ? delta : 0) / 2 + spacing' newWidth - (spacing * 2)' newWidth - (spacing * 2));  	try {  		target.WritePixels (outRect' bits' stride' 0);  		if (freezeBitmap) {  			target.Freeze ();  		}  	}  	catch (Exception e) {  		Debug.WriteLine (e.Message);  		System.Diagnostics.Debugger.Break ();  	}  }));  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,PollIconCallback,The following statement contains a magic number: if (size == IconSize.jumbo || size == IconSize.thumbnail)  	inputBitmap = resizeJumbo (origBitmap' outputSize' 5);  else  	inputBitmap = resizeImage (origBitmap' outputSize' 0);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,PollIconCallback,The following statement contains a magic number: inputBitmap = resizeJumbo (origBitmap' outputSize' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,PollThumbnailCallback,The following statement contains a magic number: try {  	string thumbPath = input.key;  	Bitmap origBitmap;  	origBitmap = new Bitmap (KeyToBitmap (input.key' IconSize.thumbnail));  	Bitmap inputBitmap = resizeImage (origBitmap' IconSizeToSize (size)' 5);  	BitmapSource inputBitmapSource = loadBitmap (inputBitmap);  	origBitmap.Dispose ();  	inputBitmap.Dispose ();  	inputBitmapSource.Freeze ();  	//Update back to source.  	Dispatcher.CurrentDispatcher.BeginInvoke (DispatcherPriority.Background' new EventHandler (delegate {  		iconDic [input.key] = inputBitmapSource;  	}));  	copyBitmap (inputBitmapSource' writeBitmap' true' 0' true);  	//false  }  catch (Exception ex) {  	Debug.WriteLine ("PollThumbnailCallback " + ex.Message + "(" + input.key + ")");  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ExtKeyToKey,The following statement contains a magic number: if (extKey.Length > 2 && extKey [extKey.Length - 2] == '+')  	return extKey.Substring (0' extKey.Length - 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ExtKeyToKey,The following statement contains a magic number: if (extKey.Length > 2 && extKey [extKey.Length - 2] == '+')  	return extKey.Substring (0' extKey.Length - 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ExtKeyToKey,The following statement contains a magic number: if (extKey.Length > 2 && extKey [extKey.Length - 2] == '+')  	return extKey.Substring (0' extKey.Length - 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,ExtKeyToKey,The following statement contains a magic number: return extKey.Substring (0' extKey.Length - 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: switch (size) {  case IconSize.thumbnail:  	return new System.Drawing.Size (96' 96);  case IconSize.jumbo:  	return new System.Drawing.Size (64' 64);  case IconSize.extraLarge:  	return new System.Drawing.Size (48' 48);  case IconSize.large:  	return new System.Drawing.Size (32' 32);  default:  	return new System.Drawing.Size (16' 16);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (96' 96);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (96' 96);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (64' 64);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (64' 64);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (48' 48);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (48' 48);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (32' 32);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (32' 32);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,IconSizeToSize,The following statement contains a magic number: return new System.Drawing.Size (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 16)  	return IconSize.small;  else if (size <= 32)  	return IconSize.large;  else if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 16)  	return IconSize.small;  else if (size <= 32)  	return IconSize.large;  else if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 16)  	return IconSize.small;  else if (size <= 32)  	return IconSize.large;  else if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 32)  	return IconSize.large;  else if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 32)  	return IconSize.large;  else if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,SizeToIconSize,The following statement contains a magic number: if (size <= 47)  	return IconSize.extraLarge;  //else if (iconSize <= 72) return IconSize.jumbo;  else  	return IconSize.thumbnail;  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (ext != "") {  	ext = ext.Substring (0' 1).ToUpper () + ext.Substring (1).ToLower ();  	using (Graphics g = Graphics.FromImage (folderBitmap)) {  		g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  		Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  		float height = g.MeasureString (ext' font).Height;  		float rightOffset = folderBitmap.Width / 5;  		if (size == IconSize.small) {  			font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  			height = g.MeasureString (ext' font).Height;  			rightOffset = 0;  		}  		g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  	}  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (folderBitmap)) {  	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.AntiAlias;  	Font font = new Font ("Comic Sans MS"' folderBitmap.Width / 5' System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Italic);  	float height = g.MeasureString (ext' font).Height;  	float rightOffset = folderBitmap.Width / 5;  	if (size == IconSize.small) {  		font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  		height = g.MeasureString (ext' font).Height;  		rightOffset = 0;  	}  	g.DrawString (ext' font' System.Drawing.Brushes.Black' new RectangleF (0' folderBitmap.Height - height' folderBitmap.Width - rightOffset' height)' new StringFormat (StringFormatFlags.DirectionRightToLeft));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: if (size == IconSize.small) {  	font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  	height = g.MeasureString (ext' font).Height;  	rightOffset = 0;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,GetFileBasedFSBitmap,The following statement contains a magic number: font = new Font ("Arial"' 5' System.Drawing.FontStyle.Bold);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.Width < 256)  	bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  else if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeImage (bitmap' new System.Drawing.Size (256' 256)' 0);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: if (bitmap.GetPixel (100' 100) == empty && bitmap.GetPixel (200' 200) == empty && bitmap.GetPixel (200' 200) == empty) {  	_imgList.ImageListSize = SysImageListSize.largeIcons;  	bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,loadJumbo,The following statement contains a magic number: bitmap = resizeJumbo (_imgList.Icon (_imgList.IconIndex (lookup)).ToBitmap ()' new System.Drawing.Size (200' 200)' 5);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,Convert,The following statement contains a magic number: switch (values.Length) {  case 1:  	return Convert (values [0]' targetType' parameter' culture);  case 2:  	if (values [1] is int)  		return Convert (values [0]' targetType' values [1]' culture);  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverterBase,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverterBase.cs,IsSpecialFolder,The following statement contains a magic number: return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FolderToIconConverterBase,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverterBase.cs,IsSpecialFolder,The following statement contains a magic number: return path.EndsWith (":\\") || path.EndsWith (":") || (path.StartsWith ("::") && path.Split ('\\').Count () <= 2) || (path.StartsWith (DirectoryInfoEx.CurrentUserDirectory.FullName) && PathEx.FullNameToGuidName (path).Split ('\\').Count () <= 2);  
Magic Number,QuickZip.IO.PIDL.UserControls,NullIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\NullIconConverter.cs,Convert,The following statement contains a magic number: return new Bitmap (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,NullIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\NullIconConverter.cs,Convert,The following statement contains a magic number: return new Bitmap (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,NullIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\NullIconConverter.cs,Convert,The following statement contains a magic number: return new Bitmap (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,NullIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\NullIconConverter.cs,Convert,The following statement contains a magic number: return new Bitmap (16' 16);  
Magic Number,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,SelectTemplate,The following statement contains a magic number: switch (Mode) {  case 2:  	return mode2 (item' container);  case 3:  	return mode3 (item' container);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,SelectTemplate,The following statement contains a magic number: switch (Mode) {  case 2:  	return mode2 (item' container);  case 3:  	return mode3 (item' container);  }  
Magic Number,QuickZip.IO.PIDL.UserControls,UCUtils,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\UCUtils.cs,SizeInK,The following statement contains a magic number: if (sizeink <= 999.99)  	return sizeink.ToString ("#0.00") + " kb";  
Magic Number,QuickZip.IO.PIDL.UserControls,UCUtils,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\UCUtils.cs,SizeInK,The following statement contains a magic number: if (sizeinm <= 999.99)  	return sizeinm.ToString ("###'###'###'##0.#") + " mb";  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,ArrangeOverride,The following statement contains a magic number: if (_isVisible) {  	_border.Arrange (new Rect (_adornedElement.ActualWidth - finalSize.Width - 15' _adornedElement.ActualHeight - finalSize.Height + 15' finalSize.Width' finalSize.Height));  }  else// if is not is editable mode' no need to show elements.   {  	_border.Arrange (new Rect (0' 0' 0' 0));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,ArrangeOverride,The following statement contains a magic number: if (_isVisible) {  	_border.Arrange (new Rect (_adornedElement.ActualWidth - finalSize.Width - 15' _adornedElement.ActualHeight - finalSize.Height + 15' finalSize.Width' finalSize.Height));  }  else// if is not is editable mode' no need to show elements.   {  	_border.Arrange (new Rect (0' 0' 0' 0));  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,ArrangeOverride,The following statement contains a magic number: _border.Arrange (new Rect (_adornedElement.ActualWidth - finalSize.Width - 15' _adornedElement.ActualHeight - finalSize.Height + 15' finalSize.Width' finalSize.Height));  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,ArrangeOverride,The following statement contains a magic number: _border.Arrange (new Rect (_adornedElement.ActualWidth - finalSize.Width - 15' _adornedElement.ActualHeight - finalSize.Height + 15' finalSize.Width' finalSize.Height));  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The following statement contains a magic number: _border.BorderThickness = new Thickness (2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The following statement contains a magic number: _border.CornerRadius = new CornerRadius (8);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The following statement contains a magic number: _border.Padding = new Thickness (2);  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The following statement contains a magic number: _textBox.Width = 100;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileListLookupBoxAdorner,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Adorner\FileListLookupBoxAdorner.cs,BuildTextBox,The following statement contains a magic number: _crossButton.Width = 16;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,FileList,The following statement contains a magic number: RootModel.PropertyChanged += (PropertyChangedEventHandler)delegate (object sender' PropertyChangedEventArgs args) {  	if (args.PropertyName == "CurrentDirectory") {  		CurrentDirectory = RootModel.CurrentDirectory;  		ScrollViewer scrollViewer = UITools.FindVisualChild<ScrollViewer> (this);  		if (scrollViewer != null)  			scrollViewer.ScrollToHome ();  		ExToIconConverter ati = this.TryFindResource ("ati") as ExToIconConverter;  		if (ati.IconCount > 500)  			ati.ClearInstanceCache ();  	}  };  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,FileList,The following statement contains a magic number: if (args.PropertyName == "CurrentDirectory") {  	CurrentDirectory = RootModel.CurrentDirectory;  	ScrollViewer scrollViewer = UITools.FindVisualChild<ScrollViewer> (this);  	if (scrollViewer != null)  		scrollViewer.ScrollToHome ();  	ExToIconConverter ati = this.TryFindResource ("ati") as ExToIconConverter;  	if (ati.IconCount > 500)  		ati.ClearInstanceCache ();  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,FileList,The following statement contains a magic number: if (ati.IconCount > 500)  	ati.ClearInstanceCache ();  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewModeChanged,The following statement contains a magic number: if (!args.NewValue.Equals (args.OldValue)) {  	FileList fl = (FileList)sender;  	ViewMode viewMode = (ViewMode)args.NewValue;  	string viewName = (viewMode.ToString ()).Substring (2) + "View";  	switch (viewMode) {  	case ViewMode.vmExtraLargeIcon:  	case ViewMode.vmLargeIcon:  		viewName = "IconView";  		break;  	}  	ViewBase view = (ViewBase)(fl.TryFindResource (viewName));  	;  	if (view != null)  		fl.View = view;  	fl.UpdateCollumnHeader ();  	if ((int)viewMode > (int)ViewMode.vmIcon && fl.ViewSize < (int)viewMode)  		fl.ViewSize = (int)viewMode;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: switch (newSize) {  case 13:  	newViewMode = ViewMode.vmTile;  	break;  case 14:  	newViewMode = ViewMode.vmGrid;  	break;  case 15:  	newViewMode = ViewMode.vmList;  	break;  case 16:  	newViewMode = ViewMode.vmSmallIcon;  	break;  default:  	if (newSize <= 16)  		newViewMode = ViewMode.vmSmallIcon;  	else if (newSize <= 48)  		newViewMode = ViewMode.vmIcon;  	else if (newSize <= 80)  		newViewMode = ViewMode.vmLargeIcon;  	else  		newViewMode = ViewMode.vmExtraLargeIcon;  	break;  }  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 16)  	newViewMode = ViewMode.vmSmallIcon;  else if (newSize <= 48)  	newViewMode = ViewMode.vmIcon;  else if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 16)  	newViewMode = ViewMode.vmSmallIcon;  else if (newSize <= 48)  	newViewMode = ViewMode.vmIcon;  else if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 16)  	newViewMode = ViewMode.vmSmallIcon;  else if (newSize <= 48)  	newViewMode = ViewMode.vmIcon;  else if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 48)  	newViewMode = ViewMode.vmIcon;  else if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 48)  	newViewMode = ViewMode.vmIcon;  else if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewSizeChanged,The following statement contains a magic number: if (newSize <= 80)  	newViewMode = ViewMode.vmLargeIcon;  else  	newViewMode = ViewMode.vmExtraLargeIcon;  
Magic Number,QuickZip.IO.PIDL.UserControls.Model,DriveModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\Model\DriveModel.cs,DriveModel,The following statement contains a magic number: try {  	DriveInfo driveInfo = new DriveInfo (dir.FullName.Replace (":\\"' ""));  	IsReady = driveInfo.IsReady;  	if (IsReady) {  		VolumeLabel = driveInfo.VolumeLabel;  		TotalSize = driveInfo.TotalSize;  		FreeSpace = driveInfo.AvailableFreeSpace;  		DriveType = driveInfo.DriveType;  		DriveFormat = driveInfo.DriveFormat;  		PercentFull = (int)((float)(TotalSize - FreeSpace) / (float)TotalSize * 100);  	}  }  //0.5  catch (ArgumentException)//Drive not found   {  }  
Magic Number,QuickZip.IO.PIDL.UserControls.Model,DriveModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\Model\DriveModel.cs,DriveModel,The following statement contains a magic number: if (IsReady) {  	VolumeLabel = driveInfo.VolumeLabel;  	TotalSize = driveInfo.TotalSize;  	FreeSpace = driveInfo.AvailableFreeSpace;  	DriveType = driveInfo.DriveType;  	DriveFormat = driveInfo.DriveFormat;  	PercentFull = (int)((float)(TotalSize - FreeSpace) / (float)TotalSize * 100);  }  
Magic Number,QuickZip.IO.PIDL.UserControls.Model,DriveModel,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\MVVM\Model\DriveModel.cs,DriveModel,The following statement contains a magic number: PercentFull = (int)((float)(TotalSize - FreeSpace) / (float)TotalSize * 100);  
Missing Default,QuickZip.IO.PIDL.UserControls,ExModelComparer,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Comparer\ExModelComparer.cs,Compare,The following switch statement is missing a default case: switch (SortBy) {  case ExComparer.SortCriteria.sortByName:  	retVal = nc.Compare (x.Name' y.Name);  	break;  //case ExComparer.SortCriteria.sortByType: retVal = nc.Compare(PathEx.GetExtension(x.Name).ToLower()'  //        PathEx.GetExtension(y.Name).ToLower()); break;  case ExComparer.SortCriteria.sortByFullName:  	retVal = nc.Compare (x.FullName' y.FullName);  	break;  case ExComparer.SortCriteria.sortByLabel:  	retVal = nc.Compare (x.Label' y.Label);  	break;  case ExComparer.SortCriteria.sortByLength:  	long xSize = x is FileModel ? (x as FileModel).Length : 0;  	long ySize = y is FileModel ? (y as FileModel).Length : 0;  	retVal = xSize.CompareTo (ySize);  	break;  case ExComparer.SortCriteria.sortByCreationTime:  	retVal = x.CreationTime.CompareTo (y.CreationTime);  	break;  case ExComparer.SortCriteria.sortByLastWriteTime:  	retVal = x.LastWriteTime.CompareTo (y.LastWriteTime);  	break;  case ExComparer.SortCriteria.sortByLastAccessTime:  	retVal = x.LastAccessTime.CompareTo (y.LastAccessTime);  	break;  }  
Missing Default,QuickZip.IO.PIDL.UserControls,FolderToIconConverter,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\Converter\IconConverter\FolderToIconConverter.cs,Convert,The following switch statement is missing a default case: switch (values.Length) {  case 1:  	return Convert (values [0]' targetType' parameter' culture);  case 2:  	if (values [1] is int)  		return Convert (values [0]' targetType' values [1]' culture);  	break;  }  
Missing Default,QuickZip.IO.PIDL.UserControls,ExDataTemplateSelector,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\Tools\TemplateSelector\ExDataTemplateSelector.cs,SelectTemplate,The following switch statement is missing a default case: switch (Mode) {  case 2:  	return mode2 (item' container);  case 3:  	return mode3 (item' container);  }  
Missing Default,QuickZip.IO.PIDL.UserControls,SharedCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\Commands\SharedCommands.cs,SetupCommands,The following switch statement is missing a default case: switch (command) {  case "open":  	OpenCommand.Execute (null);  	break;  case "openas":  	OpenCommand.Execute (null);  	break;  case "rename":  	RenameCommand.Execute (null);  	break;  case "refresh":  	RefreshCommand.Execute (null);  	break;  }  
Missing Default,QuickZip.IO.PIDL.UserControls,FileListCommands,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\Commands\FileListCommands.cs,SetupCommands,The following switch statement is missing a default case: switch (type.ToLower ()) {  case "zip":  case "7z":  	return true;  }  
Missing Default,QuickZip.IO.PIDL.UserControls,FileList,C:\repos\kolan72_QuickZip.IO.PIDL.UserControls\UserControls\FileList\FileList.xaml.cs,OnViewModeChanged,The following switch statement is missing a default case: switch (viewMode) {  case ViewMode.vmExtraLargeIcon:  case ViewMode.vmLargeIcon:  	viewName = "IconView";  	break;  }  
