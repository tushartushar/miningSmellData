Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Delete,The method has 5 parameters.
Long Statement,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,SaveUsingDevStorage,The length of the statement  "		existingEntity = context.CreateQuery<EntityCheat> (EntitySetName).Where (e => e.PartitionKey == entityCheat.PartitionKey && e.RowKey == entityCheat.RowKey).SingleOrDefault (); " is 175.
Long Statement,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,EnsureRowKey,The length of the statement  "		Trace.TraceWarning (string.Format ("Item {0} probably should have had a value for RowKey when it was saved but didn't' so one was generated."' rowKey)); " is 152.
Long Statement,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,GetETag,The length of the statement  "	return Context.Entities.Where (e => ((dynamic)e.Entity).PartitionKey == dynItem.PartitionKey && ((dynamic)e.Entity).RowKey == dynItem.RowKey).Select (e => e.ETag).SingleOrDefault (); " is 182.
Long Statement,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The length of the statement  "			throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException); " is 122.
Long Statement,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Delete,The length of the statement  "	var itemsToDelete = Context.CreateQuery<TItem> (this.EntitySetName).AsEnumerable ().Where (item => (item as dynamic).RowKey == rowKey && (item as dynamic).Timestamp == concurrency); " is 181.
Magic Number,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The following statement contains a magic number: try {  	context.SaveChangesWithRetries (SaveChangesOptions.ReplaceOnUpdate);  	return items;  }  catch (DataServiceRequestException ex) {  	var innerException = ex.InnerException as DataServiceClientException;  	if (innerException == null) {  		throw;  	}  	// Exceptions: http://technet.microsoft.com/en-us/library/dd179438.aspx  	// 400 BadRequest: DuplicatePropertiesSpecified' EntityTooLarge' InvalidValueType'   	//   PropertiesNeedValue' PropertyNameTooLong' TooManyProperties'   	//   XMethodIncorrectCount' XMethodIncorrectValue' XMethodNotUsingPost.  	if (innerException.StatusCode == 400)// 400 = "Bad Request"  	 {  		return Handle400DataServiceClientException (items' ex);  	}  	// 412 UpdateConditionNotSatisfied (concurrency)  	else if (innerException.StatusCode != 412) {  		throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException);  	}  	else {  		throw;  	}  }  
Magic Number,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The following statement contains a magic number: try {  	context.SaveChangesWithRetries (SaveChangesOptions.ReplaceOnUpdate);  	return items;  }  catch (DataServiceRequestException ex) {  	var innerException = ex.InnerException as DataServiceClientException;  	if (innerException == null) {  		throw;  	}  	// Exceptions: http://technet.microsoft.com/en-us/library/dd179438.aspx  	// 400 BadRequest: DuplicatePropertiesSpecified' EntityTooLarge' InvalidValueType'   	//   PropertiesNeedValue' PropertyNameTooLong' TooManyProperties'   	//   XMethodIncorrectCount' XMethodIncorrectValue' XMethodNotUsingPost.  	if (innerException.StatusCode == 400)// 400 = "Bad Request"  	 {  		return Handle400DataServiceClientException (items' ex);  	}  	// 412 UpdateConditionNotSatisfied (concurrency)  	else if (innerException.StatusCode != 412) {  		throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException);  	}  	else {  		throw;  	}  }  
Magic Number,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The following statement contains a magic number: if (innerException.StatusCode == 400)// 400 = "Bad Request"   {  	return Handle400DataServiceClientException (items' ex);  }  // 412 UpdateConditionNotSatisfied (concurrency)  else if (innerException.StatusCode != 412) {  	throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException);  }  else {  	throw;  }  
Magic Number,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The following statement contains a magic number: if (innerException.StatusCode == 400)// 400 = "Bad Request"   {  	return Handle400DataServiceClientException (items' ex);  }  // 412 UpdateConditionNotSatisfied (concurrency)  else if (innerException.StatusCode != 412) {  	throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException);  }  else {  	throw;  }  
Magic Number,Rolcore.Repository.WindowsAzure.StorageClientImpl,TableServiceContextRepositoryWriter,C:\repos\Rollins_Rolcore\src\Rolcore.Repository.WindowsAzure.StorageClientImpl\TableServiceContextRepositoryWriter.cs,Save,The following statement contains a magic number: if (innerException.StatusCode != 412) {  	throw new RepositoryConcurrencyException ("Record has been modified outside the current save operation."' innerException);  }  else {  	throw;  }  
