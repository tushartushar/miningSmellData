Implementation smell,Namespace,Class,File,Method,Description
Long Method,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,WndProc,The method has 105 lines of code.
Long Method,Gemini.Modules.Xna.Services,InputMapperBase,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\InputMapperBase.cs,MapKey,The method has 323 lines of code.
Complex Method,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,HandleDeviceReset,Cyclomatic complexity of the method is 10
Complex Method,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,WndProc,Cyclomatic complexity of the method is 69
Complex Method,Gemini.Modules.Xna.Services,InputMapperBase,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\InputMapperBase.cs,MapKey,Cyclomatic complexity of the method is 175
Long Parameter List,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,WndProc,The method has 5 parameters.
Long Parameter List,Gemini.Modules.Xna.Util,NativeMethods,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Util\NativeMethods.cs,CreateWindowEx,The method has 12 parameters.
Long Statement,Gemini.Modules.Xna.Controls,DrawingSurface,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\DrawingSurface.cs,EnsureRenderTarget,The length of the statement  "		_renderTarget = new RenderTarget2D (GraphicsDevice' (int)ActualWidth' (int)ActualHeight' false' SurfaceFormat.Color' DepthFormat.Depth24Stencil8); " is 146.
Long Statement,Gemini.Modules.Xna.Controls,DrawingSurface,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\DrawingSurface.cs,SetViewport,The length of the statement  "	_graphicsDeviceService.GraphicsDevice.Viewport = new Viewport (0' 0' Math.Max (1' (int)ActualWidth)' Math.Max (1' (int)ActualHeight)); " is 134.
Long Statement,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,CreateHostWindow,The length of the statement  "	return NativeMethods.CreateWindowEx (0' WindowClass' ""' NativeMethods.WS_CHILD | NativeMethods.WS_VISIBLE' 0' 0' (int)Width' (int)Height' hWndParent' IntPtr.Zero' IntPtr.Zero' 0); " is 180.
Long Statement,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,WndProc,The length of the statement  "		_mouseState.ScreenPosition = PointToScreen (new Point (NativeMethods.GetXLParam ((int)lParam)' NativeMethods.GetYLParam ((int)lParam))); " is 136.
Long Statement,Gemini.Modules.Xna.Services,HwndHostInputMapper,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\HwndHostInputMapper.cs,HandleMouseEvent,The length of the statement  "	_currentState = new MouseState ((int)position.X' (int)position.Y' e.WheelDelta' MapButtonState (e.LeftButton)' MapButtonState (e.MiddleButton)' MapButtonState (e.RightButton)' MapButtonState (e.X1Button)' MapButtonState (e.X2Button)); " is 234.
Long Statement,Gemini.Modules.Xna.Services,HwndHostInputMapper,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\HwndHostInputMapper.cs,GetMouseState,The length of the statement  "		_currentState = new MouseState (_currentState.X' _currentState.Y' 0' _currentState.LeftButton' _currentState.MiddleButton' _currentState.RightButton' _currentState.XButton1' _currentState.XButton2); " is 198.
Long Statement,Gemini.Modules.Xna.Services,UIElementInputMapper,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\UIElementInputMapper.cs,HandleMouseEvent,The length of the statement  "	_currentState = new MouseState ((int)position.X' (int)position.Y' wheelDelta' MapButtonState (e.LeftButton)' MapButtonState (e.MiddleButton)' MapButtonState (e.RightButton)' MapButtonState (e.XButton1)' MapButtonState (e.XButton2)); " is 232.
Long Statement,Gemini.Modules.Xna.Services,UIElementInputMapper,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Services\UIElementInputMapper.cs,GetMouseState,The length of the statement  "		_currentState = new MouseState (_currentState.X' _currentState.Y' 0' _currentState.LeftButton' _currentState.MiddleButton' _currentState.RightButton' _currentState.XButton1' _currentState.XButton2); " is 198.
Magic Number,Gemini.Modules.Xna.Util,NativeMethods,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Util\NativeMethods.cs,HighWord,The following statement contains a magic number: return (short)(input >> 16);  
Missing Default,Gemini.Modules.Xna.Controls,DrawingSurface,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\DrawingSurface.cs,HandleDeviceReset,The following switch statement is missing a default case: switch (_graphicsDeviceService.GraphicsDevice.GraphicsDeviceStatus) {  case GraphicsDeviceStatus.Lost:  	// If the graphics device is lost' we cannot use it at all.  	return false;  case GraphicsDeviceStatus.NotReset:  	// If device is in the not-reset state' we should try to reset it.  	deviceNeedsReset = true;  	break;  }  
Missing Default,Gemini.Modules.Xna.Controls,GraphicsDeviceControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.Xna\Controls\GraphicsDeviceControl.cs,WndProc,The following switch statement is missing a default case: switch (msg) {  case NativeMethods.WM_MOUSEWHEEL:  	if (_mouseInWindow) {  		int delta = NativeMethods.GetWheelDeltaWParam (wParam.ToInt32 ());  		RaiseHwndMouseWheel (new HwndMouseEventArgs (_mouseState' delta' 0));  	}  	break;  case NativeMethods.WM_LBUTTONDOWN:  	_mouseState.LeftButton = MouseButtonState.Pressed;  	RaiseHwndLButtonDown (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_LBUTTONUP:  	_mouseState.LeftButton = MouseButtonState.Released;  	RaiseHwndLButtonUp (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_LBUTTONDBLCLK:  	RaiseHwndLButtonDblClick (new HwndMouseEventArgs (_mouseState' MouseButton.Left));  	break;  case NativeMethods.WM_RBUTTONDOWN:  	_mouseState.RightButton = MouseButtonState.Pressed;  	RaiseHwndRButtonDown (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_RBUTTONUP:  	_mouseState.RightButton = MouseButtonState.Released;  	RaiseHwndRButtonUp (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_RBUTTONDBLCLK:  	RaiseHwndRButtonDblClick (new HwndMouseEventArgs (_mouseState' MouseButton.Right));  	break;  case NativeMethods.WM_MBUTTONDOWN:  	_mouseState.MiddleButton = MouseButtonState.Pressed;  	RaiseHwndMButtonDown (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_MBUTTONUP:  	_mouseState.MiddleButton = MouseButtonState.Released;  	RaiseHwndMButtonUp (new HwndMouseEventArgs (_mouseState));  	break;  case NativeMethods.WM_MBUTTONDBLCLK:  	RaiseHwndMButtonDblClick (new HwndMouseEventArgs (_mouseState' MouseButton.Middle));  	break;  case NativeMethods.WM_XBUTTONDOWN:  	if (((int)wParam & NativeMethods.MK_XBUTTON1) != 0) {  		_mouseState.X1Button = MouseButtonState.Pressed;  		RaiseHwndX1ButtonDown (new HwndMouseEventArgs (_mouseState));  	}  	else if (((int)wParam & NativeMethods.MK_XBUTTON2) != 0) {  		_mouseState.X2Button = MouseButtonState.Pressed;  		RaiseHwndX2ButtonDown (new HwndMouseEventArgs (_mouseState));  	}  	break;  case NativeMethods.WM_XBUTTONUP:  	if (((int)wParam & NativeMethods.MK_XBUTTON1) != 0) {  		_mouseState.X1Button = MouseButtonState.Released;  		RaiseHwndX1ButtonUp (new HwndMouseEventArgs (_mouseState));  	}  	else if (((int)wParam & NativeMethods.MK_XBUTTON2) != 0) {  		_mouseState.X2Button = MouseButtonState.Released;  		RaiseHwndX2ButtonUp (new HwndMouseEventArgs (_mouseState));  	}  	break;  case NativeMethods.WM_XBUTTONDBLCLK:  	if (((int)wParam & NativeMethods.MK_XBUTTON1) != 0)  		RaiseHwndX1ButtonDblClick (new HwndMouseEventArgs (_mouseState' MouseButton.XButton1));  	else if (((int)wParam & NativeMethods.MK_XBUTTON2) != 0)  		RaiseHwndX2ButtonDblClick (new HwndMouseEventArgs (_mouseState' MouseButton.XButton2));  	break;  case NativeMethods.WM_MOUSEMOVE:  	// If the application isn't in focus' we don't handle this message  	if (!_applicationHasFocus)  		break;  	// record the prevous and new position of the mouse  	_mouseState.ScreenPosition = PointToScreen (new Point (NativeMethods.GetXLParam ((int)lParam)' NativeMethods.GetYLParam ((int)lParam)));  	if (!_mouseInWindow) {  		_mouseInWindow = true;  		RaiseHwndMouseEnter (new HwndMouseEventArgs (_mouseState));  		// Track the previously focused window' and set focus to this window.  		_hWndPrev = NativeMethods.GetFocus ();  		NativeMethods.SetFocus (_hWnd);  		// send the track mouse event so that we get the WM_MOUSELEAVE message  		var tme = new NativeMethods.TRACKMOUSEEVENT {  			cbSize = Marshal.SizeOf (typeof(NativeMethods.TRACKMOUSEEVENT))'  			dwFlags = NativeMethods.TME_LEAVE'  			hWnd = hwnd  		};  		NativeMethods.TrackMouseEvent (ref tme);  	}  	if (_mouseState.ScreenPosition != _previousPosition)  		RaiseHwndMouseMove (new HwndMouseEventArgs (_mouseState));  	_previousPosition = _mouseState.ScreenPosition;  	break;  case NativeMethods.WM_MOUSELEAVE:  	// If we have capture' we ignore this message because we're just  	// going to reset the cursor position back into the window  	if (_isMouseCaptured)  		break;  	// Reset the state which releases all buttons and   	// marks the mouse as not being in the window.  	ResetMouseState ();  	RaiseHwndMouseLeave (new HwndMouseEventArgs (_mouseState));  	NativeMethods.SetFocus (_hWndPrev);  	break;  }  
