Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Gemini.Modules.GraphEditor.Controls,AnimationHelper,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\AnimationHelper.cs,StartAnimation,The method has 7 parameters.
Long Parameter List,Gemini.Modules.GraphEditor.Controls,ConnectionDragCompletedEventArgs,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ConnectionDragCompletedEventArgs.cs,ConnectionDragCompletedEventArgs,The method has 5 parameters.
Long Parameter List,Gemini.Modules.GraphEditor.Controls,ConnectionDraggingEventArgs,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ConnectionDraggingEventArgs.cs,ConnectionDraggingEventArgs,The method has 5 parameters.
Long Statement,Gemini.Modules.GraphEditor.Controls,GraphControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\GraphControl.cs,GetMaxZIndex,The length of the statement  "	return _elementItemsControl.Items.Cast<object> ().Select (item => (ElementItem)_elementItemsControl.ItemContainerGenerator.ContainerFromItem (item)).Select (elementItem => elementItem.ZIndex).Concat (new[] { " is 207.
Long Statement,Gemini.Modules.GraphEditor.Controls,GraphControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\GraphControl.cs,OnConnectorItemDragStarted,The length of the statement  "	var eventArgs = new ConnectionDragStartedEventArgs (ConnectionDragStartedEvent' this' _draggingSourceConnector.ParentElementItem' _draggingSourceConnector); " is 156.
Long Statement,Gemini.Modules.GraphEditor.Controls,GraphControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\GraphControl.cs,OnConnectorItemDragging,The length of the statement  "	var connectionDraggingEventArgs = new ConnectionDraggingEventArgs (ConnectionDraggingEvent' this' _draggingSourceConnector.ParentElementItem' _draggingConnectionDataContext' _draggingSourceConnector); " is 200.
Long Statement,Gemini.Modules.GraphEditor.Controls,GraphControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\GraphControl.cs,OnConnectorItemDragCompleted,The length of the statement  "	RaiseEvent (new ConnectionDragCompletedEventArgs (ConnectionDragCompletedEvent' this' _draggingSourceConnector.ParentElementItem' _draggingConnectionDataContext' _draggingSourceConnector)); " is 189.
Long Statement,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The length of the statement  "	AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' delegate { " is 150.
Long Statement,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The length of the statement  "	AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null); " is 146.
Long Statement,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ZoomTo,The length of the statement  "	ZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))); " is 132.
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' delegate {  	//  	// At the end of the animation' ensure that we are snapped to the specified content offset.  	// Due to zooming in on the content focus point and rounding errors' the content offset may  	// be slightly off what we want at the end of the animation and this bit of code corrects it.  	//  	ContentOffsetX = contentRect.X;  	ContentOffsetY = contentRect.Y;  });  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' delegate {  	//  	// At the end of the animation' ensure that we are snapped to the specified content offset.  	// Due to zooming in on the content focus point and rounding errors' the content offset may  	// be slightly off what we want at the end of the animation and this bit of code corrects it.  	//  	ContentOffsetX = contentRect.X;  	ContentOffsetY = contentRect.Y;  });  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: ZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2)));  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: ZoomPointToViewportCenter (newScale' new Point (contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2)));  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,SnapTo,The following statement contains a magic number: ContentOffsetX = contentPoint.X - (ContentViewportWidth / 2);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,SnapTo,The following statement contains a magic number: ContentOffsetY = contentPoint.Y - (ContentViewportHeight / 2);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomPointToViewportCenter,The following statement contains a magic number: AnimationHelper.StartAnimation (this' ViewportZoomFocusXProperty' ViewportWidth / 2' AnimationDuration);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,AnimatedZoomPointToViewportCenter,The following statement contains a magic number: AnimationHelper.StartAnimation (this' ViewportZoomFocusYProperty' ViewportHeight / 2' AnimationDuration);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ZoomPointToViewportCenter,The following statement contains a magic number: ContentOffsetX = contentZoomFocus.X - (ContentViewportWidth / 2);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ZoomPointToViewportCenter,The following statement contains a magic number: ContentOffsetY = contentZoomFocus.Y - (ContentViewportHeight / 2);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c._enableContentOffsetUpdateFromScale) {  	try {  		//   		// Disable content focus syncronization.  We are about to update content offset whilst zooming  		// to ensure that the viewport is focused on our desired content focus point.  Setting this  		// to 'true' stops the automatic update of the content focus when content offset changes.  		//  		c._disableContentFocusSync = true;  		//  		// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  		// focused on the content focus point (and also so that the content focus is locked to the   		// viewport focus point - this is how the google maps style zooming works).  		//  		double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  		double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  		double contentOffsetX = viewportOffsetX / c.ContentScale;  		double contentOffsetY = viewportOffsetY / c.ContentScale;  		c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  		c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  	}  	finally {  		c._disableContentFocusSync = false;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c._enableContentOffsetUpdateFromScale) {  	try {  		//   		// Disable content focus syncronization.  We are about to update content offset whilst zooming  		// to ensure that the viewport is focused on our desired content focus point.  Setting this  		// to 'true' stops the automatic update of the content focus when content offset changes.  		//  		c._disableContentFocusSync = true;  		//  		// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  		// focused on the content focus point (and also so that the content focus is locked to the   		// viewport focus point - this is how the google maps style zooming works).  		//  		double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  		double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  		double contentOffsetX = viewportOffsetX / c.ContentScale;  		double contentOffsetY = viewportOffsetY / c.ContentScale;  		c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  		c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  	}  	finally {  		c._disableContentFocusSync = false;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c._enableContentOffsetUpdateFromScale) {  	try {  		//   		// Disable content focus syncronization.  We are about to update content offset whilst zooming  		// to ensure that the viewport is focused on our desired content focus point.  Setting this  		// to 'true' stops the automatic update of the content focus when content offset changes.  		//  		c._disableContentFocusSync = true;  		//  		// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  		// focused on the content focus point (and also so that the content focus is locked to the   		// viewport focus point - this is how the google maps style zooming works).  		//  		double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  		double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  		double contentOffsetX = viewportOffsetX / c.ContentScale;  		double contentOffsetY = viewportOffsetY / c.ContentScale;  		c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  		c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  	}  	finally {  		c._disableContentFocusSync = false;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c._enableContentOffsetUpdateFromScale) {  	try {  		//   		// Disable content focus syncronization.  We are about to update content offset whilst zooming  		// to ensure that the viewport is focused on our desired content focus point.  Setting this  		// to 'true' stops the automatic update of the content focus when content offset changes.  		//  		c._disableContentFocusSync = true;  		//  		// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  		// focused on the content focus point (and also so that the content focus is locked to the   		// viewport focus point - this is how the google maps style zooming works).  		//  		double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  		double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  		double contentOffsetX = viewportOffsetX / c.ContentScale;  		double contentOffsetY = viewportOffsetY / c.ContentScale;  		c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  		c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  	}  	finally {  		c._disableContentFocusSync = false;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: try {  	//   	// Disable content focus syncronization.  We are about to update content offset whilst zooming  	// to ensure that the viewport is focused on our desired content focus point.  Setting this  	// to 'true' stops the automatic update of the content focus when content offset changes.  	//  	c._disableContentFocusSync = true;  	//  	// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  	// focused on the content focus point (and also so that the content focus is locked to the   	// viewport focus point - this is how the google maps style zooming works).  	//  	double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  	double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  	double contentOffsetX = viewportOffsetX / c.ContentScale;  	double contentOffsetY = viewportOffsetY / c.ContentScale;  	c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  	c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  }  finally {  	c._disableContentFocusSync = false;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: try {  	//   	// Disable content focus syncronization.  We are about to update content offset whilst zooming  	// to ensure that the viewport is focused on our desired content focus point.  Setting this  	// to 'true' stops the automatic update of the content focus when content offset changes.  	//  	c._disableContentFocusSync = true;  	//  	// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  	// focused on the content focus point (and also so that the content focus is locked to the   	// viewport focus point - this is how the google maps style zooming works).  	//  	double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  	double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  	double contentOffsetX = viewportOffsetX / c.ContentScale;  	double contentOffsetY = viewportOffsetY / c.ContentScale;  	c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  	c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  }  finally {  	c._disableContentFocusSync = false;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: try {  	//   	// Disable content focus syncronization.  We are about to update content offset whilst zooming  	// to ensure that the viewport is focused on our desired content focus point.  Setting this  	// to 'true' stops the automatic update of the content focus when content offset changes.  	//  	c._disableContentFocusSync = true;  	//  	// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  	// focused on the content focus point (and also so that the content focus is locked to the   	// viewport focus point - this is how the google maps style zooming works).  	//  	double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  	double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  	double contentOffsetX = viewportOffsetX / c.ContentScale;  	double contentOffsetY = viewportOffsetY / c.ContentScale;  	c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  	c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  }  finally {  	c._disableContentFocusSync = false;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: try {  	//   	// Disable content focus syncronization.  We are about to update content offset whilst zooming  	// to ensure that the viewport is focused on our desired content focus point.  Setting this  	// to 'true' stops the automatic update of the content focus when content offset changes.  	//  	c._disableContentFocusSync = true;  	//  	// Whilst zooming in or out keep the content offset up-to-date so that the viewport is always  	// focused on the content focus point (and also so that the content focus is locked to the   	// viewport focus point - this is how the google maps style zooming works).  	//  	double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);  	double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);  	double contentOffsetX = viewportOffsetX / c.ContentScale;  	double contentOffsetY = viewportOffsetY / c.ContentScale;  	c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  	c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  }  finally {  	c._disableContentFocusSync = false;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ResetViewportZoomFocus,The following statement contains a magic number: ViewportZoomFocusX = ViewportWidth / 2;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,ResetViewportZoomFocus,The following statement contains a magic number: ViewportZoomFocusY = ViewportHeight / 2;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationX,The following statement contains a magic number: if (_contentOffsetTransform != null) {  	double scaledContentWidth = _unScaledExtent.Width * ContentScale;  	if (scaledContentWidth < ViewportWidth) {  		//  		// When the content can fit entirely within the viewport' center it.  		//  		_contentOffsetTransform.X = (ContentViewportWidth - _unScaledExtent.Width) / 2;  	}  	else {  		_contentOffsetTransform.X = -ContentOffsetX;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationX,The following statement contains a magic number: if (scaledContentWidth < ViewportWidth) {  	//  	// When the content can fit entirely within the viewport' center it.  	//  	_contentOffsetTransform.X = (ContentViewportWidth - _unScaledExtent.Width) / 2;  }  else {  	_contentOffsetTransform.X = -ContentOffsetX;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationX,The following statement contains a magic number: _contentOffsetTransform.X = (ContentViewportWidth - _unScaledExtent.Width) / 2;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationY,The following statement contains a magic number: if (_contentOffsetTransform != null) {  	double scaledContentHeight = _unScaledExtent.Height * ContentScale;  	if (scaledContentHeight < ViewportHeight) {  		//  		// When the content can fit entirely within the viewport' center it.  		//  		_contentOffsetTransform.Y = (ContentViewportHeight - _unScaledExtent.Height) / 2;  	}  	else {  		_contentOffsetTransform.Y = -ContentOffsetY;  	}  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationY,The following statement contains a magic number: if (scaledContentHeight < ViewportHeight) {  	//  	// When the content can fit entirely within the viewport' center it.  	//  	_contentOffsetTransform.Y = (ContentViewportHeight - _unScaledExtent.Height) / 2;  }  else {  	_contentOffsetTransform.Y = -ContentOffsetY;  }  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateTranslationY,The following statement contains a magic number: _contentOffsetTransform.Y = (ContentViewportHeight - _unScaledExtent.Height) / 2;  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateContentZoomFocusX,The following statement contains a magic number: ContentZoomFocusX = ContentOffsetX + (_constrainedContentViewportWidth / 2);  
Magic Number,Gemini.Modules.GraphEditor.Controls,ZoomAndPanControl,C:\repos\corick_sfml-2d-lucid\gemini-master\src\Gemini.Modules.GraphEditor\Controls\ZoomAndPanControl.cs,UpdateContentZoomFocusY,The following statement contains a magic number: ContentZoomFocusY = ContentOffsetY + (_constrainedContentViewportHeight / 2);  
