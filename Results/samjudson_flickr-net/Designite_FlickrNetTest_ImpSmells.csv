Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FlickrNetTest,ActivityTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ActivityTests.cs,ActivityUserPhotosBasicTests,Cyclomatic complexity of the method is 8
Complex Method,FlickrNetTest,ReflectionMethodTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ReflectionMethodTests.cs,ReflectionMethodsCheckWeSupportAndParametersMatch,Cyclomatic complexity of the method is 9
Long Statement,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetContactsPublicPhotosAsyncTest,The length of the statement  "            f.PhotosGetContactsPublicPhotosAsync(TestData.TestUserId' 5' true' true' true' PhotoSearchExtras.All' r => { w.OnNext(r); w.OnCompleted(); }); " is 142.
Long Statement,FlickrNetTest.Async,PhotosetsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosetsAsyncTests.cs,PhotosetsGeneralAsyncTest,The length of the statement  "                f.PhotosetsEditMetaAsync(photoset.PhotosetId' "New Title"' "New Description"' r => { w2.OnNext(r); w2.OnCompleted(); }); " is 120.
Long Statement,FlickrNetTest.Async,PhotosetsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosetsAsyncTests.cs,PhotosetsGetPhotosAsyncTest,The length of the statement  "            Instance.PhotosetsGetPhotosAsync(photoset.PhotosetId' PhotoSearchExtras.All' PrivacyFilter.PublicPhotos' 1' 50' MediaType.All' r => { w.OnNext(r); w.OnCompleted(); }); " is 167.
Long Statement,FlickrNetTest,PhotosLicensesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosLicensesTests.cs,PhotosLicensesSetLicenseTest,The length of the statement  "            var newLicense = origLicense == LicenseType.AttributionCC ? LicenseType.AttributionNoDerivativesCC : LicenseType.AttributionCC; " is 127.
Long Statement,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The length of the statement  "                              "Latitude is not within the boundary box. {0} outside {1} and {2} for photo {3}"' p.Latitude' b.MinimumLatitude' b.MaximumLatitude' p.WebUrl); " is 142.
Long Statement,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The length of the statement  "                              "Longitude is not within the boundary box. {0} outside {1} and {2} for photo {3}"' p.Longitude' b.MinimumLongitude' b.MaximumLongitude' p.WebUrl); " is 146.
Long Statement,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRussianTextReturned,The length of the statement  "            var o = new PhotoSearchOptions { PerPage = 200' Extras = PhotoSearchExtras.Tags | PhotoSearchExtras.Description' Text = russian }; " is 130.
Long Statement,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRussianTextReturned,The length of the statement  "            photos.ShouldContain(p => p.Tags.Any(t => t == russian) || p.Title.Contains(russian) || p.Description.Contains(russian)); " is 121.
Long Statement,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,GetContextTest,The length of the statement  "                Assert.AreEqual(photos[photos.Count - 2].PhotoId' context2.PreviousPhoto.PhotoId' "PreviousPhoto should be the last but one photo in photoset."); " is 145.
Long Statement,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsGetListWithExtras,The length of the statement  "            firstPhotoSet.PrimaryPhoto.LargeSquareThumbnailUrl.ShouldNotBeNullOrEmpty("LargeSquareThumbnailUrl should not be empty."); " is 122.
Long Statement,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsCreateAddPhotosTest,The length of the statement  "            var photoId1 = AuthInstance.UploadPicture(s' "Test1.jpg"' initialPhotoTitle' initialPhotoDescription' initialTags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible); " is 199.
Long Statement,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsCreateAddPhotosTest,The length of the statement  "            var photoId2 = AuthInstance.UploadPicture(s' "Test2.jpg"' initialPhotoTitle' initialPhotoDescription' initialTags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible); " is 199.
Long Statement,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsCreateAddPhotosTest,The length of the statement  "                var photos = AuthInstance.PhotosetsGetPhotos(photoset.PhotosetId' PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.Media' PrivacyFilter.None' 1' 30' MediaType.None); " is 169.
Long Statement,FlickrNetTest,PhotosSerializationTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSerializationTests.cs,PhotosSerializationSkipBlankPhotoRowTest,The length of the statement  "                    <photo id=""3662960087"" owner=""18499405@N00"" secret=""9f8fcf9269"" server=""3379"" farm=""4"" title=""gecko closeup""  " is 120.
Long Statement,FlickrNetTest,PhotosSerializationTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSerializationTests.cs,PhotosSerializationSkipBlankPhotoRowTest,The length of the statement  "                    <photo id=""3662960087"" owner=""18499405@N00"" secret=""9f8fcf9269"" server=""3379"" farm=""4"" title=""gecko closeup""  " is 120.
Long Statement,FlickrNetTest,PhotosSerializationTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSerializationTests.cs,PhotosSerializationSkipBlankPhotoRowTest,The length of the statement  "                        ispublic=""1"" isfriend=""0"" isfamily=""0"" dateupload=""1246050291"" tags=""reptile jinaacom geckocloseup geckoanatomy jinaajinahibrahim"" latitude=""1.45"" /> " is 161.
Long Statement,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesPlacesForContactsBasicTest,The length of the statement  "            var places = f.PlacesPlacesForContacts(PlaceType.Country' null' null' 0' ContactSearch.AllContacts' DateTime.MinValue' DateTime.MinValue' DateTime.MinValue' DateTime.MinValue); " is 176.
Long Statement,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesPlacesForContactsFullParamTest,The length of the statement  "            var places = f.PlacesPlacesForContacts(PlaceType.Country' null' null' 1' ContactSearch.AllContacts' lastYear' today' lastYear' today); " is 134.
Long Statement,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetPlaceTypes,The length of the statement  "                Assert.IsTrue(Enum.IsDefined(typeof(PlaceType)' kp.Id)' "PlaceType with ID " + kp.Id + " and Value '" + kp.Name + "' not defined in PlaceType enum."); " is 150.
Long Statement,FlickrNetTest,PushTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PushTests.cs,SubscribeUnsubscribeTest,The length of the statement  "            f.PushSubscribe(topic' callback' verify' null' lease' null' null' 0' 0' 0' FlickrNet.RadiusUnit.None' FlickrNet.GeoAccuracy.None' null' null); " is 142.
Long Statement,FlickrNetTest,PushTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PushTests.cs,SubscribeTwiceUnsubscribeTest,The length of the statement  "            f.PushSubscribe(topic' callback1' verify' null' lease' null' null' 0' 0' 0' FlickrNet.RadiusUnit.None' FlickrNet.GeoAccuracy.None' null' null); " is 143.
Long Statement,FlickrNetTest,PushTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PushTests.cs,SubscribeTwiceUnsubscribeTest,The length of the statement  "            f.PushSubscribe(topic' callback2' verify' null' lease' null' null' 0' 0' 0' FlickrNet.RadiusUnit.None' FlickrNet.GeoAccuracy.None' null' null); " is 143.
Long Statement,FlickrNetTest,ActivityTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ActivityTests.cs,ActivityUserPhotosBasicTests,The length of the statement  "                        if (e.EventType == ActivityEventType.Note || e.EventType == ActivityEventType.Comment || e.EventType == ActivityEventType.Tag) " is 126.
Long Statement,FlickrNetTest,AuthTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\AuthTests.cs,AuthClassBasicTest,The length of the statement  "            string authResponse = "<auth><token>TheToken</token><perms>delete</perms><user nsid=\"41888973@N00\" username=\"Sam Judson\" fullname=\"Sam Judson\" /></auth>"; " is 160.
Long Statement,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListFullParamTest,The length of the statement  "            var photos = AuthInstance.FavoritesGetList(TestData.TestUserId' DateTime.Now.AddYears(-4)' DateTime.Now' PhotoSearchExtras.All' 1' 10); " is 135.
Long Statement,FlickrNetTest,GroupsPoolsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsPoolsTests.cs,GroupsPoolsAddBasicTest,The length of the statement  "            string photoId = f.UploadPicture(s' "Test.jpg"' title' desc' tags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible); " is 151.
Long Statement,FlickrNetTest,GroupsPoolsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsPoolsTests.cs,GroupsPoolGetPhotosFullParamTest,The length of the statement  "            PhotoCollection photos = f.GroupsPoolsGetPhotos(TestData.GroupId' null' TestData.TestUserId' PhotoSearchExtras.All' 1' 20); " is 123.
Long Statement,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPublicPhotosBasicTest,The length of the statement  "            var photos = f.PeopleGetPublicPhotos(TestData.TestUserId' 1' 100' SafetyLevel.None' PhotoSearchExtras.OriginalDimensions); " is 122.
Long Statement,FlickrNetTest,PhotosCommentsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosCommentsTests.cs,PhotosCommentsGetListBasicTest,The length of the statement  "            Assert.AreEqual("Sam lucky you NYCis so cool can't wait to go again it's my fav city along with San fran"' comments[0].CommentHtml); " is 132.
Long Statement,FlickrNetTest,PhotoSearchOptionsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotoSearchOptionsTests.cs,PhotoSearchOptionsCalculateSlideshowUrlBasicTest,The length of the statement  "            const string expected = "https://www.flickr.com/show.gne?api_method=flickr.photos.search&method_params=text|kittens;in_gallery|1"; " is 130.
Long Statement,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosBasicTest,The length of the statement  "            PhotosetPhotoCollection set = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.All' PrivacyFilter.None' 1' 10); " is 129.
Long Statement,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosFilterMediaTest,The length of the statement  "            var theset = Instance.PhotosetsGetPhotos("72157600283870192"' PhotoSearchExtras.Media' PrivacyFilter.None' 1' 100' MediaType.Videos); " is 133.
Long Statement,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosFilterMediaTest,The length of the statement  "            var theset2 = Instance.PhotosetsGetPhotos("72157600283870192"' PhotoSearchExtras.Media' PrivacyFilter.None' 1' 100' MediaType.Photos); " is 134.
Long Statement,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,ShouldReturnDateTakenWhenAsked,The length of the statement  "            var theset = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.DateTaken | PhotoSearchExtras.DateUploaded' 1' 10); " is 131.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotoInfoParseFull,The length of the statement  "                             + "<location latitude=\"54.971831\" longitude=\"-1.612683\" accuracy=\"16\" context=\"0\" place_id=\"Ke8IzXlQV79yxA\" woeid=\"15532\">" " is 135.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosForLocationReturnsPhotos,The length of the statement  "            var photos = Instance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo' PerPage = 10 }); " is 153.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGetGetLocationTest,The length of the statement  "            var photos = AuthInstance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo }); " is 143.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGetGetLocationNullTest,The length of the statement  "            var photos = AuthInstance.PhotosSearch(new PhotoSearchOptions { HasGeo = false' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo }); " is 144.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGetCorrectLocationTest,The length of the statement  "            var photo = AuthInstance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo }).First(); " is 150.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoSetContextTest,The length of the statement  "            var photo = AuthInstance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo }).First(); " is 150.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoSetLocationTest,The length of the statement  "            var photo = AuthInstance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo }).First(); " is 150.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoSetLocationTest,The length of the statement  "                AuthInstance.PhotosGeoSetLocation(photo.PhotoId' origGeo.Latitude' origGeo.Longitude' origGeo.Accuracy' origGeo.Context); " is 121.
Long Statement,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoPhotosForLocationBasicTest,The length of the statement  "            var photos2 = AuthInstance.PhotosGeoPhotosForLocation(photo.Latitude' photo.Longitude' photo.Accuracy' PhotoSearchExtras.All' 0' 0); " is 132.
Long Statement,FlickrNetTest,PhotosSearchAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosSearchAsyncTests.cs,PhotosGetContactsPhotosAsyncTest,The length of the statement  "            AuthInstance.PhotosGetContactsPhotosAsync(50' true' true' true' PhotoSearchExtras.All' r => { w.OnNext(r); w.OnCompleted(); }); " is 127.
Long Statement,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetPagesTest,The length of the statement  "            f.PhotosGetNotInSet(new PartialSearchOptions() { Page = 1' PerPage = 10' PrivacyFilter = PrivacyFilter.CompletelyPrivate }); " is 124.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureAsyncBasicTest,The length of the statement  "            f.UploadPictureAsync(s' "Test.jpg"' title' desc' tags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible' " is 138.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureBasicTest,The length of the statement  "            string photoId = f.UploadPicture(s' "Test.jpg"' title' desc' tags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible); " is 151.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,DownloadAndUploadImage,The length of the statement  "            var photoId = AuthInstance.UploadPicture(ms' "test.jpg"' "Test Photo"' "Test Description"' ""' false' false' false' ContentType.Photo' SafetyLevel.Safe' HiddenFromSearch.Hidden); " is 178.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,ReplacePictureBasicTest,The length of the statement  "            string photoId = f.UploadPicture(s' "Test.jpg"' title' desc' tags' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.Visible); " is 151.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureFromUrl,The length of the statement  "                    string photoId = f.UploadPicture(s' "google.png"' "Google Image"' "Google"' ""' false' false' false' ContentType.Photo' SafetyLevel.None' HiddenFromSearch.None); " is 161.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadLargeVideoFromUrl,The length of the statement  "                    string photoId = f.UploadPicture(s' "bunny.mp4"' "Big Buck Bunny"' "Sample Video"' ""' false' false' false' ContentType.Photo' SafetyLevel.None' HiddenFromSearch.None); " is 168.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureVideoTests,The length of the statement  "            string[] filenames = { "sample_mpeg4.mp4"' "sample_sorenson.mov"' "sample_iTunes.mov"' "sample_iPod.m4v"' "sample.3gp"' "sample_3GPP2.3g2" }; " is 141.
Long Statement,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureVideoTests,The length of the statement  "                        string photoId = f.UploadPicture(s' file' "Video Upload Test"' file' "video' test"' false' false' false' ContentType.Other' SafetyLevel.Safe' HiddenFromSearch.None); " is 165.
Long Statement,FlickrNetTest,ReflectionMethodTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ReflectionMethodTests.cs,ReflectionGetMethodInfoTest,The length of the statement  "            Assert.AreEqual("The requested method was not found."' method.Errors[0].Description' "First error should have code of 1"); " is 122.
Long Statement,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosBasic,The length of the statement  "            Assert.AreEqual(photos.Count' Math.Min(photos.Total' photos.PerPage)' "PopularPhotos.Count should equal either PopularPhotos.Total or PopularPhotos.PerPage."); " is 159.
Long Statement,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosNoParamsTest,The length of the statement  "            Assert.AreEqual(photos.Count' Math.Min(photos.Total' photos.PerPage)' "PopularPhotos.Count should equal either PopularPhotos.Total or PopularPhotos.PerPage."); " is 159.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotoReferrersBasicTest,The length of the statement  "            Assert.AreEqual(referrers.Count' Math.Min(referrers.Total' referrers.PerPage)' "Count should either be equal to Total or PerPage."); " is 132.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotosetsReferrersBasicTest,The length of the statement  "            // I often get 0 referrers for a particular given date. As this method only works for the previous 28 days I cannot pick a fixed date. " is 134.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotosetsReferrersBasicTest,The length of the statement  "            Assert.AreEqual(referrers.Count' Math.Min(referrers.Total' referrers.PerPage)' "Count should either be equal to Total or PerPage."); " is 132.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotostreamReferrersBasicTest,The length of the statement  "            // I often get 0 referrers for a particular given date. As this method only works for the previous 28 days I cannot pick a fixed date. " is 134.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotostreamReferrersBasicTest,The length of the statement  "            Assert.AreEqual(referrers.Count' Math.Min(referrers.Total' referrers.PerPage)' "Count should either be equal to Total or PerPage."); " is 132.
Long Statement,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetCollectionReferrersBasicTest,The length of the statement  "            Assert.AreEqual(referrers.Count' Math.Min(referrers.Total' referrers.PerPage)' "Count should either be equal to Total or PerPage."); " is 132.
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosSearchRussianAsync,The following statement contains a magic number: o.PerPage = 100;
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetContactsPublicPhotosAsyncTest,The following statement contains a magic number: f.PhotosGetContactsPublicPhotosAsync(TestData.TestUserId' 5' true' true' true' PhotoSearchExtras.All' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetCountsAsyncTest,The following statement contains a magic number: DateTime date1 = DateTime.Today.AddMonths(-12);
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetCountsAsyncTest,The following statement contains a magic number: DateTime date2 = DateTime.Today.AddMonths(-6);
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetCountsAsyncTest,The following statement contains a magic number: Assert.AreEqual(2' counts.Count' "Should be two counts returned.");
Magic Number,FlickrNetTest.Async,PhotosAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosAsyncTests.cs,PhotosGetRecentAsyncTest,The following statement contains a magic number: f.PhotosGetRecentAsync(1' 50' PhotoSearchExtras.All' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,PhotosetsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosetsAsyncTests.cs,PhotosetsGetContextAsyncTest,The following statement contains a magic number: var photos = f.PhotosetsGetPhotos(photosetId' 1' 100);
Magic Number,FlickrNetTest.Async,PhotosetsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosetsAsyncTests.cs,PhotosetsGetPhotosAsyncTest,The following statement contains a magic number: Instance.PhotosetsGetPhotosAsync(photoset.PhotosetId' PhotoSearchExtras.All' PrivacyFilter.PublicPhotos' 1' 50' MediaType.All' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetCollectionDomainsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetCollectionDomainsAsyncTest,The following statement contains a magic number: f.StatsGetCollectionDomainsAsync(d' 1' 25' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotoDomainsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotoDomainsAsyncTest,The following statement contains a magic number: f.StatsGetPhotoDomainsAsync(d' 1' 25' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotostreamDomainsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotostreamDomainsAsyncTest,The following statement contains a magic number: f.StatsGetPhotostreamDomainsAsync(d' 1' 25' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotosetDomainsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotosetDomainsAsyncTest,The following statement contains a magic number: f.StatsGetPhotosetDomainsAsync(d' 1' 25' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetCollectionStatsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotoStatsAsyncTest,The following statement contains a magic number: DateTime d = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotostreamStatsAsyncTest,The following statement contains a magic number: var range = Enumerable.Range(7' 5);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotostreamStatsAsyncTest,The following statement contains a magic number: var range = Enumerable.Range(7' 5);
Magic Number,FlickrNetTest.Async,StatsAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\StatsAsyncTests.cs,StatsGetPhotostreamStatsAsyncTest,The following statement contains a magic number: list.Count.ShouldBe(5);
Magic Number,FlickrNetTest,AuthHelper,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Auth\AuthHelper.cs,AuthHelperMethod,The following statement contains a magic number: System.Threading.Thread.Sleep(1000 * 30);
Magic Number,FlickrNetTest,AuthHelper,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Auth\AuthHelper.cs,AuthHelperMethod,The following statement contains a magic number: System.Threading.Thread.Sleep(1000 * 30);
Magic Number,FlickrNetTest,BaseTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BaseTest.cs,ErrorLogging,The following statement contains a magic number: System.Threading.Thread.Sleep(200);
Magic Number,FlickrNetTest,BaseTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BaseTest.cs,ErrorLogging,The following statement contains a magic number: (_testCount % 10) > 0
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: var b = new BoundaryBox(8.68194' 50.11222' 13.29750' 52.52222);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: var b = new BoundaryBox(8.68194' 50.11222' 13.29750' 52.52222);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: var b = new BoundaryBox(8.68194' 50.11222' 13.29750' 52.52222);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: var b = new BoundaryBox(8.68194' 50.11222' 13.29750' 52.52222);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: Assert.IsTrue(259.9 < e && e < 260.0);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxCalculateSizesFrankfurtToBerlin,The following statement contains a magic number: Assert.IsTrue(259.9 < e && e < 260.0);
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxWithValidPointStringSetCorrectly,The following statement contains a magic number: Assert.That(b.MinimumLatitude' Is.EqualTo(2M));
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxWithValidPointStringSetCorrectly,The following statement contains a magic number: Assert.That(b.MaximumLongitude' Is.EqualTo(3M));
Magic Number,FlickrNetTest,BoundaryTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\BoundaryTests.cs,BoundaryBoxWithValidPointStringSetCorrectly,The following statement contains a magic number: Assert.That(b.MaximumLatitude' Is.EqualTo(4M));
Magic Number,FlickrNetTest,FlickrConfigurationSettingsTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FlickrConfigurationSettingsTest.cs,FlickrConfigurationSettingsConstructorTest,The following statement contains a magic number: Assert.AreEqual(1024' target.CacheSize);
Magic Number,FlickrNetTest,FlickrConfigurationSettingsTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FlickrConfigurationSettingsTest.cs,FlickrConfigurationSettingsConstructorTest,The following statement contains a magic number: Assert.AreEqual(8800' target.ProxyPort);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussRepliesAddTest,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussRepliesAddTest,The following statement contains a magic number: topicReplies = AuthInstance.GroupsDiscussRepliesGetList(topicId' 1' 100);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussRepliesGetListTest,The following statement contains a magic number: var topics = AuthInstance.GroupsDiscussTopicsGetList(TestData.GroupId' 1' 100);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussRepliesGetListTest,The following statement contains a magic number: var replies = AuthInstance.GroupsDiscussRepliesGetList(firstTopic.TopicId' 1' 10);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussTopicsAddTest,The following statement contains a magic number: var topics = AuthInstance.GroupsDiscussTopicsGetList(groupId' 1' 5);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussTopicsGetListTest,The following statement contains a magic number: var topics = AuthInstance.GroupsDiscussTopicsGetList(TestData.GroupId' 1' 10);
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussTopicsGetListTest,The following statement contains a magic number: Assert.AreEqual(10' topics.Count' "Count should be 10.");
Magic Number,FlickrNetTest,GroupsDiscussTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsDiscussTests.cs,GroupsDiscussTopicsGetListEditableTest,The following statement contains a magic number: var topics = AuthInstance.GroupsDiscussTopicsGetList(groupId' 1' 20);
Magic Number,FlickrNetTest,PhotosGetContactsPublicPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPublicPhotosTests.cs,PhotosGetContactsPublicPhotosAllParamsTest,The following statement contains a magic number: int count = 4;
Magic Number,FlickrNetTest,PhotosGetContactsPublicPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPublicPhotosTests.cs,PhotosGetContactsPublicPhotosExceptExtrasTest,The following statement contains a magic number: int count = 4;
Magic Number,FlickrNetTest,PhotosGetContactsPublicPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPublicPhotosTests.cs,PhotosGetContactsPublicPhotosUserIdCountExtrasTest,The following statement contains a magic number: int count = 5;
Magic Number,FlickrNetTest,PhotosGetContactsPublicPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPublicPhotosTests.cs,PhotosGetContactsPublicPhotosUserIdCountTest,The following statement contains a magic number: int count = 5;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchBasicSearch,The following statement contains a magic number: Assert.AreEqual(100' photos.PerPage' "PhotosPerPage should be 100.");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSignedTest,The following statement contains a magic number: var o = new PhotoSearchOptions {Tags = "Test"' PerPage = 5};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSignedTest,The following statement contains a magic number: Assert.AreEqual(5' photos.PerPage' "PerPage should equal 5.");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchFavorites,The following statement contains a magic number: Assert.IsTrue(p.Count < 100' "Should be less than 100 results returned. Count = " + p.Count);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchCameraIphone,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             Camera = "iPhone 5S"'                                             MinUploadDate = DateTime.Now.AddDays(-7)'                                             MaxUploadDate = DateTime.Now'                                             Extras = PhotoSearchExtras.Tags                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotoSearchByPathAlias,The following statement contains a magic number: var o = new PhotoSearchOptions              {                  GroupPathAlias = "api"'                  PerPage = 10              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPage,The following statement contains a magic number: var o = new PhotoSearchOptions {PerPage = 10' Tags = "Test"};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPage,The following statement contains a magic number: Assert.AreEqual(10' photos.PerPage' "PhotosPerPage should be 10.");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPage,The following statement contains a magic number: Assert.AreEqual(10' photos.Count' "Count should be 10.");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchGetMultipleLicenses,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             Tags = "microsoft"'                                             PerPage = 500'                                             SortOrder = PhotoSearchSortOrder.DatePostedDescending                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSearchTwice,The following statement contains a magic number: var o = new PhotoSearchOptions {Tags = "microsoft"' PerPage = 10};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSearchTwice,The following statement contains a magic number: Assert.AreEqual(10' photos.PerPage' "Per page is not 10");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSearchTwice,The following statement contains a magic number: o.PerPage = 50;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSearchTwice,The following statement contains a magic number: Assert.AreEqual(50' photos.PerPage' "Per page has not changed?");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchSearchTwice,The following statement contains a magic number: Assert.AreEqual(50' photos.PerPage' "Per page has changed!");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPageTest,The following statement contains a magic number: var o = new PhotoSearchOptions {Tags = "colorful"' PerPage = 10' Page = 3};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPageTest,The following statement contains a magic number: var o = new PhotoSearchOptions {Tags = "colorful"' PerPage = 10' Page = 3};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPageTest,The following statement contains a magic number: Assert.AreEqual(3' photos.Page);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotoSearchByStyles,The following statement contains a magic number: var o = new PhotoSearchOptions              {                  Text = "nature"'                  Page = 1'                  PerPage = 10'                  Styles = new[] { style }              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchIsCommons,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             IsCommons = true'                                             Tags = "newyork"'                                             PerPage = 10'                                             Extras = PhotoSearchExtras.License                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDateTakenGranualityTest,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             UserId = "8748614@N05"'                                             Tags = "primavera"'                                             PerPage = 500'                                             Extras = PhotoSearchExtras.DateTaken                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: Assert.AreEqual(100' photos.PerPage);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateTaken = new DateTime(2009' 5' 18' 4' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchDetailedTest,The following statement contains a magic number: var dateUploaded = new DateTime(2009' 5' 19' 21' 21' 46);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchTagsTest,The following statement contains a magic number: var o = new PhotoSearchOptions {PerPage = 10' Tags = "test"' Extras = PhotoSearchExtras.Tags};
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchTagsTest,The following statement contains a magic number: photos.PerPage.ShouldBe(10);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchTagsTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Ideally should be 10' but sometimes returns 9");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchTagsTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Ideally should be 10' but sometimes returns 9");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPageMultipleTest,The following statement contains a magic number: o.MinUploadDate = DateTime.Today.AddDays(-4);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPageMultipleTest,The following statement contains a magic number: o.MaxUploadDate = DateTime.Today.AddDays(-2);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPageMultipleTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPerPageMultipleTest,The following statement contains a magic number: o.PerPage = 100;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: var b = new BoundaryBox(103.675997' 1.339811' 103.689456' 1.357764' GeoAccuracy.World);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: var b = new BoundaryBox(103.675997' 1.339811' 103.689456' 1.357764' GeoAccuracy.World);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: var b = new BoundaryBox(103.675997' 1.339811' 103.689456' 1.357764' GeoAccuracy.World);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: var b = new BoundaryBox(103.675997' 1.339811' 103.689456' 1.357764' GeoAccuracy.World);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: Math.Abs(p.Latitude - 0) < 1e-8 && Math.Abs(p.Longitude - 0) < 1e-8
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchPhotoSearchBoundaryBox,The following statement contains a magic number: Math.Abs(p.Latitude - 0) < 1e-8 && Math.Abs(p.Longitude - 0) < 1e-8
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatCultureTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchTagCollectionTest,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             UserId = TestData.TestUserId'                                             PerPage = 10'                                             Extras = PhotoSearchExtras.Tags                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchMultipleTagsTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchInterestingnessBasicTest,The following statement contains a magic number: var o = new PhotoSearchOptions                          {                              SortOrder = PhotoSearchSortOrder.InterestingnessDescending'                              Tags = "colorful"'                              PerPage = 500                          };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchInterestingnessBasicTest,The following statement contains a magic number: Assert.AreEqual(500' ps.PerPage' "PhotosPerPage should be 500");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchGroupIdTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatLongGeoRadiusTest,The following statement contains a magic number: o.MinTakenDate = DateTime.Today.AddYears(-3);
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatLongGeoRadiusTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatLongGeoRadiusTest,The following statement contains a magic number: o.Latitude = 61.600447;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatLongGeoRadiusTest,The following statement contains a magic number: o.Longitude = 5.035064;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLatLongGeoRadiusTest,The following statement contains a magic number: o.Radius = 4.75f;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLargeRadiusTest,The following statement contains a magic number: const double lat = 61.600447;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLargeRadiusTest,The following statement contains a magic number: const double lon = 5.035064;
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLargeRadiusTest,The following statement contains a magic number: var o = new PhotoSearchOptions                          {                              PerPage = 100'                              HasGeo = true'                              MinTakenDate = DateTime.Today.AddYears(-3)'                              Latitude = lat'                              Longitude = lon'                              Radius = 5.432123456f'                              RadiusUnits = RadiusUnit.Kilometers                          };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLargeRadiusTest,The following statement contains a magic number: var o = new PhotoSearchOptions                          {                              PerPage = 100'                              HasGeo = true'                              MinTakenDate = DateTime.Today.AddYears(-3)'                              Latitude = lat'                              Longitude = lon'                              Radius = 5.432123456f'                              RadiusUnits = RadiusUnit.Kilometers                          };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchLargeRadiusTest,The following statement contains a magic number: var o = new PhotoSearchOptions                          {                              PerPage = 100'                              HasGeo = true'                              MinTakenDate = DateTime.Today.AddYears(-3)'                              Latitude = lat'                              Longitude = lon'                              Radius = 5.432123456f'                              RadiusUnits = RadiusUnit.Kilometers                          };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchUrlLimitTest,The following statement contains a magic number: i < 200
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRussianTagsReturned,The following statement contains a magic number: var o = new PhotoSearchOptions { PerPage = 200' Extras = PhotoSearchExtras.Tags' Tags = "фото" };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRussianTextReturned,The following statement contains a magic number: var o = new PhotoSearchOptions { PerPage = 200' Extras = PhotoSearchExtras.Tags | PhotoSearchExtras.Description' Text = russian };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRotation,The following statement contains a magic number: var o = new PhotoSearchOptions                                         {                                             Extras = PhotoSearchExtras.Rotation'                                             UserId = TestData.TestUserId'                                             PerPage = 100                                         };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchRotation,The following statement contains a magic number: Assert.AreEqual(90' photo.Rotation' "Rotation should be 90 for this photo.");
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchContactsPhotos,The following statement contains a magic number: var contacts = AuthInstance.ContactsGetList(1' 1000).Select(c => c.UserId).ToList();
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,PhotosSearchContactsPhotos,The following statement contains a magic number: var o = new PhotoSearchOptions                          {                              UserId = "me"'                              Contacts = ContactSearch.AllContacts'                              PerPage = 50                          };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifExposure,The following statement contains a magic number: var options = new PhotoSearchOptions                                {                                    ExifMinExposure = 10'                                    ExifMaxExposure = 30'                                    Extras = PhotoSearchExtras.PathAlias'                                    PerPage = 5                                };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifExposure,The following statement contains a magic number: var options = new PhotoSearchOptions                                {                                    ExifMinExposure = 10'                                    ExifMaxExposure = 30'                                    Extras = PhotoSearchExtras.PathAlias'                                    PerPage = 5                                };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifExposure,The following statement contains a magic number: var options = new PhotoSearchOptions                                {                                    ExifMinExposure = 10'                                    ExifMaxExposure = 30'                                    Extras = PhotoSearchExtras.PathAlias'                                    PerPage = 5                                };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifAperture,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  ExifMinAperture = 0.0'                  ExifMaxAperture = 1/2'                  Extras = PhotoSearchExtras.PathAlias'                  PerPage = 5              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifAperture,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  ExifMinAperture = 0.0'                  ExifMaxAperture = 1/2'                  Extras = PhotoSearchExtras.PathAlias'                  PerPage = 5              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifFocalLength,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  ExifMinFocalLength = 400'                  ExifMaxFocalLength = 800'                  Extras = PhotoSearchExtras.PathAlias'                  PerPage = 5              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifFocalLength,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  ExifMinFocalLength = 400'                  ExifMaxFocalLength = 800'                  Extras = PhotoSearchExtras.PathAlias'                  PerPage = 5              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,SearchByExifFocalLength,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  ExifMinFocalLength = 400'                  ExifMaxFocalLength = 800'                  Extras = PhotoSearchExtras.PathAlias'                  PerPage = 5              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,ExcludeUserTest,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  Tags = "colorful"'                  MinTakenDate = DateTime.Today.AddDays(-7)'                  MaxTakenDate = DateTime.Today.AddDays(-1)'                  PerPage = 10              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,ExcludeUserTest,The following statement contains a magic number: var options = new PhotoSearchOptions              {                  Tags = "colorful"'                  MinTakenDate = DateTime.Today.AddDays(-7)'                  MaxTakenDate = DateTime.Today.AddDays(-1)'                  PerPage = 10              };
Magic Number,FlickrNetTest,PhotosSearchTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSearchTests.cs,ExcessiveTagsShouldNotThrowUriFormatException,The following statement contains a magic number: var list = Enumerable.Range(1' 9000).Select(i => "reallybigtag" + i).ToList();
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,GetContextTest,The following statement contains a magic number: Assert.AreEqual(photos[photos.Count - 2].PhotoId' context2.PreviousPhoto.PhotoId' "PreviousPhoto should be the last but one photo in photoset.");
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsGetListBasicTest,The following statement contains a magic number: Assert.IsTrue(photosets.Count > 100' "Should be greater than 100 photosets. (" + photosets.Count + " returned)");
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsGetListWithExtras,The following statement contains a magic number: var testUserPhotoSets = AuthInstance.PhotosetsGetList(TestData.TestUserId' 1' 5' PhotoSearchExtras.All);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetsCreateAddPhotosTest,The following statement contains a magic number: var photos = AuthInstance.PhotosetsGetPhotos(photoset.PhotosetId' PhotoSearchExtras.OriginalFormat | PhotoSearchExtras.Media' PrivacyFilter.None' 1' 30' MediaType.None);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetInfo.NumberOfVideos.ShouldBe(2);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetInfo.NumberOfPhotos.ShouldBe(72);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetInfo.Total.ShouldBe(74);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetListInfo.NumberOfVideos.ShouldBe(2);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetListInfo.NumberOfPhotos.ShouldBe(72);
Magic Number,FlickrNetTest,PhotosetsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsTests.cs,PhotosetGetInfoGetList,The following statement contains a magic number: photosetListInfo.Total.ShouldBe(74);
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosIncorrectCountTest,The following statement contains a magic number: Should.Throw<ArgumentOutOfRangeException>(() => AuthInstance.PhotosGetContactsPhotos(51));
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosBasicTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PhotosGetContactsPhotos(10);
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosBasicTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Should return 9-10 photos");
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosBasicTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Should return 9-10 photos");
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosExtrasTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PhotosGetContactsPhotos(10' false' false' false' PhotoSearchExtras.All);
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosExtrasTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Should return 9-10 photos");
Magic Number,FlickrNetTest,PhotosGetContactsPhotos,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetContactsPhotos.cs,PhotosGetContactsPhotosExtrasTest,The following statement contains a magic number: photos.Count.ShouldBeInRange(9' 10' "Should return 9-10 photos");
Magic Number,FlickrNetTest,PhotoOwnerNameTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotoOwnerNameTest.cs,PhotosSearchOwnerNameTest,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesHasFavourites,The following statement contains a magic number: PhotoFavoriteCollection favs = Instance.PhotosGetFavorites(TestData.FavouritedPhotoId' 500' 1);
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesHasFavourites,The following statement contains a magic number: Assert.AreEqual(50' favs.Count' "Should be 50 favourites listed (maximum returned)");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPaging,The following statement contains a magic number: PhotoFavoriteCollection favs = Instance.PhotosGetFavorites(TestData.FavouritedPhotoId' 10' 1);
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPaging,The following statement contains a magic number: Assert.AreEqual(10' favs.Count' "PhotoFavourites.Count should be 10.");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPaging,The following statement contains a magic number: Assert.AreEqual(10' favs.PerPage' "PhotoFavourites.PerPage should be 10");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPaging,The following statement contains a magic number: Assert.IsTrue(favs.Total > 100' "PhotoFavourites.Total should be greater than 100.");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPaging,The following statement contains a magic number: Assert.IsTrue(favs.Pages > 10' "PhotoFavourites.Pages should be greater than 10.");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPagingTwo,The following statement contains a magic number: PhotoFavoriteCollection favs = Instance.PhotosGetFavorites(TestData.FavouritedPhotoId' 10' 2);
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPagingTwo,The following statement contains a magic number: PhotoFavoriteCollection favs = Instance.PhotosGetFavorites(TestData.FavouritedPhotoId' 10' 2);
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPagingTwo,The following statement contains a magic number: Assert.AreEqual(10' favs.Count' "PhotoFavourites.Count should be 10.");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPagingTwo,The following statement contains a magic number: Assert.AreEqual(10' favs.PerPage' "PhotoFavourites.PerPage should be 10");
Magic Number,FlickrNetTest,PhotosGetFavouritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetFavouritesTests.cs,PhotosGetFavoritesPagingTwo,The following statement contains a magic number: Assert.AreEqual(2' favs.Page' "PhotoFavourites.Page should be 2.");
Magic Number,FlickrNetTest,PhotosSerializationTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSerializationTests.cs,PhotosSerializationSkipBlankPhotoRowTest,The following statement contains a magic number: Assert.AreEqual(500' photos.Total' "Total photos should be 500");
Magic Number,FlickrNetTest,PhotosSerializationTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSerializationTests.cs,PhotosSerializationSkipBlankPhotoRowTest,The following statement contains a magic number: Assert.AreEqual(2' photos.Count' "Should only contain 2 photo");
Magic Number,FlickrNetTest,PhotosSuggestionsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSuggestionsTests.cs,GetListTest,The following statement contains a magic number: Assert.AreEqual(54.977' suggestion.Latitude' "Latitude should be the same.");
Magic Number,FlickrNetTest,PhotosSuggestionsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSuggestionsTests.cs,AddSuggestion,The following statement contains a magic number: var lat = 54.977;
Magic Number,FlickrNetTest,PhotosSuggestionsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosSuggestionsTests.cs,AddSuggestion,The following statement contains a magic number: var lon = -1.612;
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesFindByLatLongNewcastleTest,The following statement contains a magic number: double lat = 54.977;
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesFindByLatLongNewcastleTest,The following statement contains a magic number: double lon = -1.612;
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesPlacesForTagsFullParamTest,The following statement contains a magic number: var places = f.PlacesPlacesForTags(PlaceType.Country' null' null' 0' new string[] {"newcastle"}'                                                 TagMode.AllTags' new string[] {"dc:author=*"}' MachineTagMode.AllTags'                                                 DateTime.Today.AddYears(-10)' DateTime.Today'                                                 DateTime.Today.AddYears(-10)' DateTime.Today);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesPlacesForTagsFullParamTest,The following statement contains a magic number: var places = f.PlacesPlacesForTags(PlaceType.Country' null' null' 0' new string[] {"newcastle"}'                                                 TagMode.AllTags' new string[] {"dc:author=*"}' MachineTagMode.AllTags'                                                 DateTime.Today.AddYears(-10)' DateTime.Today'                                                 DateTime.Today.AddYears(-10)' DateTime.Today);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(0.00015' p.ShapeData.Alpha);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(89' p.ShapeData.PolyLines[0].Count);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(55.030498504639' p.ShapeData.PolyLines[0][88].X);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(55.030498504639' p.ShapeData.PolyLines[0][88].X);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(-1.6404060125351' p.ShapeData.PolyLines[0][88].Y);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(-1.6404060125351' p.ShapeData.PolyLines[0][88].Y);
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetShapeHistoryTest,The following statement contains a magic number: Assert.AreEqual(7' col.Count' "Count should be six.");
Magic Number,FlickrNetTest,PlacesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PlacesTests.cs,PlacesGetTagsForPlace,The following statement contains a magic number: Assert.AreEqual(100' col.Count' "Count should be one hundred.");
Magic Number,FlickrNetTest,TagsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\TagsTests.cs,TagsGetClustersNewcastleTest,The following statement contains a magic number: Assert.AreEqual(4' col.Count' "Count should be four.");
Magic Number,FlickrNetTest,TagsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\TagsTests.cs,TagsGetClustersNewcastleTest,The following statement contains a magic number: Assert.IsTrue(c.Tags.Count >= 3);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,DateToMySqlTests,The following statement contains a magic number: var tests = new Dictionary<DateTime' string>                              {                  { new DateTime(2009' 1' 12)' "2009-01-12 00:00:00" }'                  { new DateTime(2009' 7' 12)' "2009-07-12 00:00:00" }'                  { new DateTime(2009' 12' 12)' "2009-12-12 00:00:00" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MachineTagModeToStringTests,The following statement contains a magic number: var test = new Dictionary<MachineTagMode' string>                             {                   { MachineTagMode.AllTags' "all" } '                  { MachineTagMode.AnyTag' "any" }'                  { MachineTagMode.None' "" }'                  { (MachineTagMode)99' "" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,MyTestMethod,The following statement contains a magic number: var tests = new Dictionary<string' DateTime>                              {                  { "2009-07-12"' new DateTime(2009' 7' 12) }'                  { "2009-12-12"' new DateTime(2009' 12' 12) }'                  { "2009-01-12 00:00:00"' new DateTime(2009' 1' 12) }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityOK,The following statement contains a magic number: Assert.AreEqual(2010' d2.Year);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityOK,The following statement contains a magic number: Assert.AreEqual(17' d2.Day);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityOK,The following statement contains a magic number: Assert.AreEqual(12' d2.Hour);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityOK,The following statement contains a magic number: Assert.AreEqual(43' d2.Minute);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityOK,The following statement contains a magic number: Assert.AreEqual(23' d2.Second);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,ParseDateWithGranularityZeroMonth,The following statement contains a magic number: Assert.AreEqual(2010' d2.Year);
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,SortOrderToStringPhotoSearchSortOrderTest,The following statement contains a magic number: var tests = new Dictionary<PhotoSearchSortOrder' string>                              {                  { PhotoSearchSortOrder.DatePostedAscending' "date-posted-asc"}'                  { PhotoSearchSortOrder.DatePostedDescending' "date-posted-desc"}'                  { PhotoSearchSortOrder.DateTakenAscending' "date-taken-asc"}'                  { PhotoSearchSortOrder.DateTakenDescending' "date-taken-desc"}'                  { PhotoSearchSortOrder.InterestingnessAscending' "interestingness-asc"}'                  { PhotoSearchSortOrder.InterestingnessDescending' "interestingness-desc"}'                  { PhotoSearchSortOrder.Relevance' "relevance"}'                  { PhotoSearchSortOrder.None' ""}'                  { (PhotoSearchSortOrder)99' ""}              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,SortOrderToStringPopularitySortTest,The following statement contains a magic number: var tests = new Dictionary<PopularitySort' string>                              {                  { PopularitySort.Comments' "comments"}'                  { PopularitySort.Favorites' "favorites"}'                  { PopularitySort.Views' "views"}'                  { PopularitySort.None' ""}'                  { (PopularitySort)99' ""}              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,TagModeToStringTests,The following statement contains a magic number: var test = new Dictionary<TagMode' string>                             {                   { TagMode.AllTags' "all" } '                  { TagMode.AnyTag' "any" }'                  { TagMode.Boolean' "bool" }'                  { TagMode.None' "" }'                  { (TagMode)99' "" }              };
Magic Number,FlickrNetTest,UtilityMethodsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\UtilityMethodsTests.cs,UtilityAuthToStringTest,The following statement contains a magic number: a = (AuthLevel)99;
Magic Number,FlickrNetTest,ActivityTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ActivityTests.cs,ActivityUserPhotosBasicTest,The following statement contains a magic number: ActivityItemCollection activity = AuthInstance.ActivityUserPhotos(20' "d");
Magic Number,FlickrNetTest,ActivityTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ActivityTests.cs,ActivityUserPhotosBasicTests,The following statement contains a magic number: int days = 50;
Magic Number,FlickrNetTest,CollectionTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\CollectionTests.cs,CollectionGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(12' info.IconPhotos.Count' "IconPhotos.Length should be 12.");
Magic Number,FlickrNetTest,CommonsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\CommonsTests.cs,CommonsGetInstitutions,The following statement contains a magic number: Assert.IsTrue(insts.Count > 5);
Magic Number,FlickrNetTest,ContactsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ContactsTests.cs,ContactsGetListPagedTest,The following statement contains a magic number: var contacts = f.ContactsGetList(2' 20);
Magic Number,FlickrNetTest,ContactsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ContactsTests.cs,ContactsGetListPagedTest,The following statement contains a magic number: var contacts = f.ContactsGetList(2' 20);
Magic Number,FlickrNetTest,ContactsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ContactsTests.cs,ContactsGetListPagedTest,The following statement contains a magic number: Assert.AreEqual(2' contacts.Page);
Magic Number,FlickrNetTest,ContactsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ContactsTests.cs,ContactsGetListPagedTest,The following statement contains a magic number: Assert.AreEqual(20' contacts.PerPage);
Magic Number,FlickrNetTest,ContactsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ContactsTests.cs,ContactsGetListPagedTest,The following statement contains a magic number: Assert.AreEqual(20' contacts.Count);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavouritesGetPublicListWithDates,The following statement contains a magic number: var firstFiveFavourites = allFavourites.OrderBy(p => p.DateFavorited).Take(5).ToList();
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavouritesGetPublicListWithDates,The following statement contains a magic number: Assert.AreEqual(5' subsetOfFavourites.Count' "Should be 5 favourites in subset");
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListFullParamTest,The following statement contains a magic number: var photos = AuthInstance.FavoritesGetList(TestData.TestUserId' DateTime.Now.AddYears(-4)' DateTime.Now' PhotoSearchExtras.All' 1' 10);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListFullParamTest,The following statement contains a magic number: var photos = AuthInstance.FavoritesGetList(TestData.TestUserId' DateTime.Now.AddYears(-4)' DateTime.Now' PhotoSearchExtras.All' 1' 10);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListPartialParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.FavoritesGetList(TestData.TestUserId' 2' 20);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListPartialParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.FavoritesGetList(TestData.TestUserId' 2' 20);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListPartialParamTest,The following statement contains a magic number: Assert.AreEqual(2' photos.Page);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListPartialParamTest,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetListPartialParamTest,The following statement contains a magic number: Assert.AreEqual(20' photos.Count);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetContextMorePrevious,The following statement contains a magic number: var context = Instance.FavoritesGetContext(photoId' userId' 3' 4' PhotoSearchExtras.Description);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetContextMorePrevious,The following statement contains a magic number: var context = Instance.FavoritesGetContext(photoId' userId' 3' 4' PhotoSearchExtras.Description);
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetContextMorePrevious,The following statement contains a magic number: Assert.AreEqual(3' context.PreviousPhotos.Count' "Should be 3 previous photo.");
Magic Number,FlickrNetTest,FavoritesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\FavoritesTests.cs,FavoritesGetContextMorePrevious,The following statement contains a magic number: Assert.AreEqual(4' context.NextPhotos.Count' "Should be 4 next photo.");
Magic Number,FlickrNetTest,GalleriesTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GalleriesTests.cs,GalleriesGetPhotos,The following statement contains a magic number: Assert.AreEqual(15' photos.Count' "Count should be fifteen.");
Magic Number,FlickrNetTest,GroupsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsTests.cs,GroupsGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(2' info.ThrottleInfo.Count);
Magic Number,FlickrNetTest,GroupsPoolsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsPoolsTests.cs,GroupsPoolGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = f.GroupsPoolsGetPhotos(TestData.GroupId' null' TestData.TestUserId' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,GroupsPoolsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsPoolsTests.cs,GroupsPoolGetPhotosFullParamTest,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,GroupsPoolsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\GroupsPoolsTests.cs,GroupsPoolsGetGroupsBasicTest,The following statement contains a magic number: Assert.AreEqual(400' groups.PerPage' "PerPage should be 400.");
Magic Number,FlickrNetTest,InterestingnessTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\InterestingnessTests.cs,InterestingnessGetListTestsBasicTest,The following statement contains a magic number: DateTime date = DateTime.Today.AddDays(-2);
Magic Number,FlickrNetTest,InterestingnessTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\InterestingnessTests.cs,InterestingnessGetListTestsBasicTest,The following statement contains a magic number: PhotoCollection photos = Instance.InterestingnessGetList(date' PhotoSearchExtras.All' 1' 100);
Magic Number,FlickrNetTest,InterestingnessTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\InterestingnessTests.cs,InterestingnessGetListTestsBasicTest,The following statement contains a magic number: Assert.IsTrue(photos.Count > 50 && photos.Count <= 100' "Count should be at least 50' but not more than 100.");
Magic Number,FlickrNetTest,InterestingnessTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\InterestingnessTests.cs,InterestingnessGetListTestsBasicTest,The following statement contains a magic number: Assert.IsTrue(photos.Count > 50 && photos.Count <= 100' "Count should be at least 50' but not more than 100.");
Magic Number,FlickrNetTest,MachinetagsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\MachinetagsTests.cs,MachinetagsGetNamespacesBasicTest,The following statement contains a magic number: Assert.IsTrue(col.Count > 10' "Should be greater than 10 namespaces.");
Magic Number,FlickrNetTest,MachinetagsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\MachinetagsTests.cs,MachinetagsGetPredicatesBasicTest,The following statement contains a magic number: Assert.IsTrue(col.Count > 10' "Should be greater than 10 namespaces.");
Magic Number,FlickrNetTest,MachinetagsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\MachinetagsTests.cs,MachinetagsGetRecentValuesTest,The following statement contains a magic number: var items = Instance.MachineTagsGetRecentValues(DateTime.Now.AddHours(-5));
Magic Number,FlickrNetTest,PandaTest,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PandaTest.cs,PandaGetListBasicTest,The following statement contains a magic number: Assert.AreEqual("wang wang"' pandas[2]);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosBasicTest,The following statement contains a magic number: Assert.IsTrue(photos.Total > 1000' "Total should be greater than 1000.");
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PeopleGetPhotos(TestData.TestUserId' SafetyLevel.Safe' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' ContentTypeSearch.All'                                                         PrivacyFilter.PublicPhotos' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PeopleGetPhotos(TestData.TestUserId' SafetyLevel.Safe' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' ContentTypeSearch.All'                                                         PrivacyFilter.PublicPhotos' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PeopleGetPhotos(TestData.TestUserId' SafetyLevel.Safe' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' ContentTypeSearch.All'                                                         PrivacyFilter.PublicPhotos' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PeopleGetPhotos(TestData.TestUserId' SafetyLevel.Safe' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' ContentTypeSearch.All'                                                         PrivacyFilter.PublicPhotos' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: PhotoCollection photos = AuthInstance.PeopleGetPhotos(TestData.TestUserId' SafetyLevel.Safe' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' new DateTime(2010' 1' 1)'                                                         new DateTime(2012' 1' 1)' ContentTypeSearch.All'                                                         PrivacyFilter.PublicPhotos' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPhotosFullParamTest,The following statement contains a magic number: Assert.AreEqual(20' photos.Count' "Count should be twenty.");
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetLimitsTest,The following statement contains a magic number: Assert.AreEqual(209715200' limits.MaximumPhotoUpload);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetLimitsTest,The following statement contains a magic number: Assert.AreEqual(1073741824' limits.MaximumVideoUpload);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetLimitsTest,The following statement contains a magic number: Assert.AreEqual(180' limits.MaximumVideoDuration);
Magic Number,FlickrNetTest,PeopleTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PeopleTests.cs,PeopleGetPublicPhotosBasicTest,The following statement contains a magic number: var photos = f.PeopleGetPublicPhotos(TestData.TestUserId' 1' 100' SafetyLevel.None' PhotoSearchExtras.OriginalDimensions);
Magic Number,FlickrNetTest,PhotosCommentsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosCommentsTests.cs,PhotosCommentsGetRecentForContactsFullParamTest,The following statement contains a magic number: var photos = f.PhotosCommentsGetRecentForContacts(DateTime.Now.AddHours(-1)' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PhotosCommentsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosCommentsTests.cs,PhotosCommentsGetRecentForContactsFullParamTest,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,PhotosetCommentsGetListTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetCommentsGetListTests.cs,PhotosetsCommentsGetListBasicTest,The following statement contains a magic number: Assert.AreEqual(2' comments.Count);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosBasicTest,The following statement contains a magic number: PhotosetPhotoCollection set = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.All' PrivacyFilter.None' 1' 10);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosBasicTest,The following statement contains a magic number: Assert.AreEqual(8' set.Total' "NumberOfPhotos should be 8.");
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosBasicTest,The following statement contains a magic number: Assert.AreEqual(8' set.Count' "Should be 8 photos returned.");
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosMachineTagsTest,The following statement contains a magic number: var set = Instance.PhotosetsGetPhotos("72157594218885767"' PhotoSearchExtras.MachineTags' PrivacyFilter.None' 1' 10);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosFilterMediaTest,The following statement contains a magic number: var theset = Instance.PhotosetsGetPhotos("72157600283870192"' PhotoSearchExtras.Media' PrivacyFilter.None' 1' 100' MediaType.Videos);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosFilterMediaTest,The following statement contains a magic number: var theset2 = Instance.PhotosetsGetPhotos("72157600283870192"' PhotoSearchExtras.Media' PrivacyFilter.None' 1' 100' MediaType.Photos);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,PhotosetsGetPhotosPrimaryPhotoTest,The following statement contains a magic number: var theset = Instance.PhotosetsGetPhotos("72157618515066456"' 1' 100);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,ShouldReturnDateTakenWhenAsked,The following statement contains a magic number: var theset = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.DateTaken | PhotoSearchExtras.DateUploaded' 1' 10);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,ShouldReturnDateTakenWhenAsked,The following statement contains a magic number: theset = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.All' 1' 10);
Magic Number,FlickrNetTest,PhotosetsGetPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosetsGetPhotosTests.cs,ShouldReturnDateTakenWhenAsked,The following statement contains a magic number: theset = Instance.PhotosetsGetPhotos("72157618515066456"' PhotoSearchExtras.None' 1' 10);
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotoInfoParseFull,The following statement contains a magic number: Assert.AreEqual((GeoAccuracy)16' info.Location.Accuracy);
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotoInfoLocationParseShortTest,The following statement contains a magic number: Assert.AreEqual((GeoAccuracy)10' info.Location.Accuracy);
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosForLocationReturnsPhotos,The following statement contains a magic number: var photos = Instance.PhotosSearch(new PhotoSearchOptions { HasGeo = true' UserId = TestData.TestUserId' Extras = PhotoSearchExtras.Geo' PerPage = 10 });
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosForLocationReturnsPhotos,The following statement contains a magic number: var geoPhotos = AuthInstance.PhotosGeoPhotosForLocation(geoPhoto.Latitude' geoPhoto.Longitude'                                                                      GeoAccuracy.Street' PhotoSearchExtras.None' 100' 1);
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoSetLocationTest,The following statement contains a magic number: var newGeo = new {Latitude = -23.32' Longitude = -34.2' Accuracy = GeoAccuracy.Level10' Context = GeoContext.Indoors};
Magic Number,FlickrNetTest,PhotosGeoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGeoTests.cs,PhotosGeoSetLocationTest,The following statement contains a magic number: var newGeo = new {Latitude = -23.32' Longitude = -34.2' Accuracy = GeoAccuracy.Level10' Context = GeoContext.Indoors};
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date1 = new DateTime(2009' 1' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date1 = new DateTime(2009' 1' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountTakenTest,The following statement contains a magic number: Assert.AreEqual(2' counts.Count' "PhotoCounts.Count should be two.");
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date1 = new DateTime(2009' 7' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date1 = new DateTime(2009' 7' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date1 = new DateTime(2009' 7' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date2 = new DateTime(2009' 9' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: var date3 = new DateTime(2009' 12' 12);
Magic Number,FlickrNetTest,PhotosGetCountTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetCountTests.cs,PhotosGetCountUloadTest,The following statement contains a magic number: Assert.AreEqual(2' counts.Count' "PhotoCounts.Count should be two.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.IsTrue(info.ViewCount > 87' "ViewCount should be greater than 87.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 01' 12' 11' 01' 20)' info.DateTaken' "DateTaken is not set correctly.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 01' 12' 11' 01' 20)' info.DateTaken' "DateTaken is not set correctly.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 01' 12' 11' 01' 20)' info.DateTaken' "DateTaken is not set correctly.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 01' 12' 11' 01' 20)' info.DateTaken' "DateTaken is not set correctly.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(267' info.Notes[0].XPosition);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(238' info.Notes[0].YPosition);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoBasicTest,The following statement contains a magic number: Assert.AreEqual(5' info.Tags.Count);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoUnauthenticatedTest,The following statement contains a magic number: Assert.IsTrue(info.ViewCount > 87' "ViewCount should be greater than 87.");
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoUnauthenticatedTest,The following statement contains a magic number: Assert.AreEqual(267' info.Notes[0].XPosition);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoUnauthenticatedTest,The following statement contains a magic number: Assert.AreEqual(238' info.Notes[0].YPosition);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoUnauthenticatedTest,The following statement contains a magic number: Assert.AreEqual(5' info.Tags.Count);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoCanBlogTest,The following statement contains a magic number: o.PerPage = 5;
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,PhotosGetInfoDataTakenGranularityTest,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 1' 1)' info.DateTaken);
Magic Number,FlickrNetTest,PhotosGetInfoTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosGetInfoTests.cs,ShouldReturnPhotoInfoWithGeoData,The following statement contains a magic number: Assert.AreEqual(-180' info.Location.Longitude' "Longitude should be -180");
Magic Number,FlickrNetTest,PhotosSearchAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosSearchAsyncTests.cs,PhotosSearchAsyncShowerTest,The following statement contains a magic number: o.PerPage = 1000;
Magic Number,FlickrNetTest,PhotosSearchAsyncTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\Async\PhotosSearchAsyncTests.cs,PhotosGetContactsPhotosAsyncTest,The following statement contains a magic number: AuthInstance.PhotosGetContactsPhotosAsync(50' true' true' true' PhotoSearchExtras.All' r => { w.OnNext(r); w.OnCompleted(); });
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetExifTest,The following statement contains a magic number: Assert.IsTrue(tags.Count > 20' "More than twenty parts of EXIF data should be returned.");
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetAllParamsTest,The following statement contains a magic number: var photos = f.PhotosGetNotInSet(1' 10' PhotoSearchExtras.All);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetAllParamsTest,The following statement contains a magic number: Assert.AreEqual(10' photos.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetPagesTest,The following statement contains a magic number: var photos = f.PhotosGetNotInSet(1' 11);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetPagesTest,The following statement contains a magic number: Assert.AreEqual(11' photos.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetNotInSetPagesTest,The following statement contains a magic number: f.PhotosGetNotInSet(new PartialSearchOptions() { Page = 1' PerPage = 10' PrivacyFilter = PrivacyFilter.CompletelyPrivate });
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentAllParamsTest,The following statement contains a magic number: var photos = Instance.PhotosGetRecent(1' 20' PhotoSearchExtras.All);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentAllParamsTest,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentAllParamsTest,The following statement contains a magic number: Assert.AreEqual(20' photos.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentPagesTest,The following statement contains a magic number: var photos = Instance.PhotosGetRecent(1' 20);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentPagesTest,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetRecentPagesTest,The following statement contains a magic number: Assert.AreEqual(20' photos.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetSizes10Test,The following statement contains a magic number: var o = new PhotoSearchOptions { Tags = "microsoft"' PerPage = 10 };
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetUntaggedAllParamsTest,The following statement contains a magic number: var photos = f.PhotosGetUntagged(1' 10' PhotoSearchExtras.All);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetUntaggedPagesTest,The following statement contains a magic number: var photos = f.PhotosGetUntagged(1' 10);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosGetUntaggedPagesTest,The following statement contains a magic number: Assert.AreEqual(10' photos.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosRecentlyUpdatedTests,The following statement contains a magic number: var sixMonthsAgo = DateTime.Today.AddMonths(-6);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosRecentlyUpdatedTests,The following statement contains a magic number: var photos = f.PhotosRecentlyUpdated(sixMonthsAgo' PhotoSearchExtras.All' 1' 20);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosRecentlyUpdatedTests,The following statement contains a magic number: Assert.AreEqual(20' photos.PerPage);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosRecentlyUpdatedTests,The following statement contains a magic number: photos = f.PhotosRecentlyUpdated(sixMonthsAgo' 1' 10);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosSearchDoesLargeExist,The following statement contains a magic number: o.PerPage = 50;
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosSetMetaLargeDescription,The following statement contains a magic number: description = description.Substring(0' 6551);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosUploadCheckTicketsTest,The following statement contains a magic number: string[] tickets = new string[3];
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosUploadCheckTicketsTest,The following statement contains a magic number: tickets[2] = "invalid3";
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosUploadCheckTicketsTest,The following statement contains a magic number: Assert.AreEqual(3' t.Count);
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,WebUrlContainsUserIdIfPathAliasIsEmpty,The following statement contains a magic number: string userPart = webUrl.Split('/')[4];
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotostreamUrlContainsUserIdIfPathAliasIsEmpty,The following statement contains a magic number: string userPart = photoPerson.PhotostreamUrl.Split('/')[4];
Magic Number,FlickrNetTest,PhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosTests.cs,PhotosTestLargeSquareSmall320,The following statement contains a magic number: o.PerPage = 10;
Magic Number,FlickrNetTest,PhotosUploadTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\PhotosUploadTests.cs,UploadPictureBasicTest,The following statement contains a magic number: Assert.AreEqual(2' info.Tags.Count);
Magic Number,FlickrNetTest,ReflectionMethodTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ReflectionMethodTests.cs,ReflectionGetMethodInfoTest,The following statement contains a magic number: Assert.AreEqual(2' method.Arguments.Count' "There should be two arguments");
Magic Number,FlickrNetTest,ReflectionMethodTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ReflectionMethodTests.cs,ReflectionGetMethodInfoTest,The following statement contains a magic number: Assert.AreEqual(9' method.Errors.Count' "There should be 8 errors.");
Magic Number,FlickrNetTest,ReflectionMethodTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\ReflectionMethodTests.cs,ReflectionGetMethodInfoFavContextArguments,The following statement contains a magic number: Assert.AreEqual(3' method.Arguments.Count);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: var domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2));
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2)' collectionId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2)' collectionId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionDomainsBasicTest,The following statement contains a magic number: domains = f.StatsGetCollectionDomains(DateTime.Today.AddDays(-2)' collectionId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetCollectionStatsTest,The following statement contains a magic number: Stats stats = f.StatsGetCollectionStats(DateTime.Today.AddDays(-2)' collectionId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: var domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2));
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2)' photoId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2)' photoId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2)' photoId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoDomainsTests,The following statement contains a magic number: domains = f.StatsGetPhotoDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotoStatsTest,The following statement contains a magic number: var stats = f.StatsGetPhotoStats(DateTime.Today.AddDays(-5)' photoId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: var domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2));
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2)' photosetId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2)' photosetId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotosetDomains(DateTime.Today.AddDays(-2)' photosetId' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotosetStatsTest,The following statement contains a magic number: var stats = f.StatsGetPhotosetStats(DateTime.Today.AddDays(-5)' photosetId);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotostreamDomainsBasic,The following statement contains a magic number: var domains = f.StatsGetPhotostreamDomains(DateTime.Today.AddDays(-2));
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotostreamDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotostreamDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotostreamDomainsBasic,The following statement contains a magic number: domains = f.StatsGetPhotostreamDomains(DateTime.Today.AddDays(-2)' 1' 10);
Magic Number,FlickrNetTest,StatsGetDomainsTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetDomainsTests.cs,StatsGetPhotostreamStatsTest,The following statement contains a magic number: var stats = f.StatsGetPhotostreamStats(DateTime.Today.AddDays(-5));
Magic Number,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosOtherTest,The following statement contains a magic number: var lastWeek = DateTime.Today.AddDays(-7);
Magic Number,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosOtherTest,The following statement contains a magic number: photos = AuthInstance.StatsGetPopularPhotos(lastWeek' 1' 10);
Magic Number,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosOtherTest,The following statement contains a magic number: Assert.AreEqual(10' photos.Count' "Date search popular photos should return 10 photos.");
Magic Number,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosOtherTest,The following statement contains a magic number: photos = AuthInstance.StatsGetPopularPhotos(PopularitySort.Favorites' 1' 10);
Magic Number,FlickrNetTest,StatsGetPopularPhotosTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetPopularPhotosTests.cs,StatsGetPopularPhotosOtherTest,The following statement contains a magic number: Assert.AreEqual(10' photos.Count' "Favorite search popular photos should return 10 photos.");
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotoReferrersBasicTest,The following statement contains a magic number: StatReferrerCollection referrers = f.StatsGetPhotoReferrers(lastWeek' domain' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotoReferrersBasicTest,The following statement contains a magic number: referrers = f.StatsGetPhotoReferrers(lastWeek' domain' photoId' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotosetsReferrersBasicTest,The following statement contains a magic number: StatReferrerCollection referrers = f.StatsGetPhotosetReferrers(lastWeek' domain' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotosetsReferrersBasicTest,The following statement contains a magic number: referrers = f.StatsGetPhotosetReferrers(lastWeek' domain' photosetId' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetPhotostreamReferrersBasicTest,The following statement contains a magic number: StatReferrerCollection referrers = f.StatsGetPhotostreamReferrers(lastWeek' domain' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetCollectionReferrersBasicTest,The following statement contains a magic number: var referrers = f.StatsGetCollectionReferrers(lastWeek' domain' 1' 10);
Magic Number,FlickrNetTest,StatsGetReferrerTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\StatsGetReferrerTests.cs,StatsGetCollectionReferrersBasicTest,The following statement contains a magic number: referrers = f.StatsGetCollectionReferrers(lastWeek' domain' collectionId' 1' 10);
Magic Number,FlickrNetTest,TestTests,D:\research\architectureSmells\repos1\samjudson_flickr-net\FlickrNetTest\TestTests.cs,TestEcho,The following statement contains a magic number: Assert.AreEqual(11' returns.Count);
