Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pdelvo.Minecraft.Network,AsnKeyParser,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,ParseRSAPrivateKey,The method has 107 lines of code.
Complex Method,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOid,Cyclomatic complexity of the method is 10
Complex Method,Pdelvo.Minecraft.Network,AsnKeyParser,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,ParseRSAPrivateKey,Cyclomatic complexity of the method is 9
Long Parameter List,Pdelvo.Minecraft.Network,AesStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\AesStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Long Parameter List,Pdelvo.Minecraft.Network,AesStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\AesStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' callback' state
Magic Number,Pdelvo.Minecraft.Network,AesStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\AesStream.cs,GenerateAES,The following statement contains a magic number: cipher.KeySize = 128;
Magic Number,Pdelvo.Minecraft.Network,AesStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\AesStream.cs,GenerateAES,The following statement contains a magic number: cipher.FeedbackSize = 8;
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt16,The following statement contains a magic number: return unchecked((short) ((ReadByte () << 8) | ReadByte ()));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt16Async,The following statement contains a magic number: return unchecked((short) (((await ReadByteAsync ()) << 8) | (await ReadByteAsync ())));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32,The following statement contains a magic number: return unchecked((ReadByte () << 24) | (ReadByte () << 16) | (ReadByte () << 8) | ReadByte ());
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32,The following statement contains a magic number: return unchecked((ReadByte () << 24) | (ReadByte () << 16) | (ReadByte () << 8) | ReadByte ());
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32,The following statement contains a magic number: return unchecked((ReadByte () << 24) | (ReadByte () << 16) | (ReadByte () << 8) | ReadByte ());
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32Async,The following statement contains a magic number: return unchecked(((await ReadByteAsync ()) << 24) | ((await ReadByteAsync ()) << 16)                               | ((await ReadByteAsync ()) << 8) | (await ReadByteAsync ()));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32Async,The following statement contains a magic number: return unchecked(((await ReadByteAsync ()) << 24) | ((await ReadByteAsync ()) << 16)                               | ((await ReadByteAsync ()) << 8) | (await ReadByteAsync ()));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt32Async,The following statement contains a magic number: return unchecked(((await ReadByteAsync ()) << 24) | ((await ReadByteAsync ()) << 16)                               | ((await ReadByteAsync ()) << 8) | (await ReadByteAsync ()));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (Read(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadInt64Async,The following statement contains a magic number: unchecked              {                  var l = new byte[8];                  if (await ReadAsync(l' 0' l.Length) != 8)                      throw new EndOfStreamException ();                    long p = 0;                  p |= (long) l[0] << 56;                  p |= (long) l[1] << 48;                  p |= (long) l[2] << 40;                  p |= (long) l[3] << 32;                  p |= (long) l[4] << 24;                  p |= (long) l[5] << 16;                  p |= (long) l[6] << 8;                  p |= l[7];                  return p;              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDouble,The following statement contains a magic number: var r = new byte[8];
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDouble,The following statement contains a magic number: for (int i = 7; i >= 0; i--)              {                  r[i] = ReadByte ();              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDoubleAsync,The following statement contains a magic number: var r = new byte[8];
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDoubleAsync,The following statement contains a magic number: for (int i = 7; i >= 0; i--)              {                  r[i] = await ReadByteAsync ();              }
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadString16,The following statement contains a magic number: byte[] b = ReadBytes(len*2);
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadString16Async,The following statement contains a magic number: byte[] b = await ReadBytesAsync(len*2);
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 24)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 16)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 24)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 16)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 56)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 48)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 40)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 32)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 24)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 16)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,Write,The following statement contains a magic number: Write(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 56)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 48)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 40)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 32)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 24)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 16)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteAsync,The following statement contains a magic number: await WriteAsync(unchecked((byte) (data >> 8)));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDoublePacked,The following statement contains a magic number: return ReadInt32 ()/32.0;
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,ReadDoublePackedAsync,The following statement contains a magic number: return await ReadInt32Async ()/32.0;
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteDoublePacked,The following statement contains a magic number: Write((int) (value*32.0));
Magic Number,Pdelvo.Minecraft.Network,BigEndianStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\BigEndianStream.cs,WriteDoublePackedAsync,The following statement contains a magic number: return WriteAsync((int) (value*32.0));
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: if (!(unusedBits < 8))              {                  throw new ArgumentException("Unused bits must be less than 8.");              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: int unusedBits = 8 - (lstrlen%8);
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: int unusedBits = 8 - (lstrlen%8);
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: if (8 == unusedBits)              {                  unusedBits = 0;              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: int loctlen = (lstrlen + 7)/8;
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: int loctlen = (lstrlen + 7)/8;
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: for (int i = 0; i < loctlen; i++)              {                  String s = value.Substring(i*8' 8);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 2);                  }                    catch (FormatException /*e*/)                  {                      unusedBits = 0;                      break;                  }                  catch (OverflowException /*e*/)                  {                      unusedBits = 0;                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: for (int i = 0; i < loctlen; i++)              {                  String s = value.Substring(i*8' 8);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 2);                  }                    catch (FormatException /*e*/)                  {                      unusedBits = 0;                      break;                  }                  catch (OverflowException /*e*/)                  {                      unusedBits = 0;                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateBitString,The following statement contains a magic number: for (int i = 0; i < loctlen; i++)              {                  String s = value.Substring(i*8' 8);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 2);                  }                    catch (FormatException /*e*/)                  {                      unusedBits = 0;                      break;                  }                  catch (OverflowException /*e*/)                  {                      unusedBits = 0;                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOctetString,The following statement contains a magic number: int len = (value.Length + 255)/256;
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOctetString,The following statement contains a magic number: int len = (value.Length + 255)/256;
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOctetString,The following statement contains a magic number: for (int i = 0; i < len; i++)              {                  String s = value.Substring(i*2' 2);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 16);                  }                  catch (FormatException /*e*/)                  {                      break;                  }                  catch (OverflowException /*e*/)                  {                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOctetString,The following statement contains a magic number: for (int i = 0; i < len; i++)              {                  String s = value.Substring(i*2' 2);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 16);                  }                  catch (FormatException /*e*/)                  {                      break;                  }                  catch (OverflowException /*e*/)                  {                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOctetString,The following statement contains a magic number: for (int i = 0; i < len; i++)              {                  String s = value.Substring(i*2' 2);                  byte b = 0x00;                    try                  {                      b = Convert.ToByte(s' 16);                  }                  catch (FormatException /*e*/)                  {                      break;                  }                  catch (OverflowException /*e*/)                  {                      break;                  }                    octets.Add(b);              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOid,The following statement contains a magic number: if (arcs.Count >= 1)              {                  a = arcs[0]*40;              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOid,The following statement contains a magic number: if (arcs.Count >= 2)              {                  a += arcs[1];              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOid,The following statement contains a magic number: for (int i = 2; i < arcs.Count; i++)              {                  // Scratch list builder for this arc                  var temp = new List<byte> ();                    // The current arc (subidentifier)                  UInt64 arc = arcs[i];                    // Build the arc (subidentifier) byte array                  // The array is built in reverse (LSB to MSB).                  do                  {                      // Each entry is formed from the low 7 bits (0x7F).                      // Set high bit of all entries (0x80) per X.680. We                      // will unset the high bit of the final byte later.                      temp.Add((byte) (0x80 | (arc & 0x7F)));                      arc >>= 7;                  } while (0 != arc);                    // Grab resulting array. Because of the do/while'                  // there is at least one value in the array.                  byte[] t = temp.ToArray ();                    // Unset high bit of byte t[0]                  // t[0] will be LSB after the array is reversed.                  t[0] = (byte) (0x7F & t[0]);                    // MSB first...                  Array.Reverse(t);                    // Add to the resulting array                  foreach (byte b in t)                  {                      octets.Add(b);                  }              }
Magic Number,Pdelvo.Minecraft.Network,AsnKeyBuilder,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,CreateOid,The following statement contains a magic number: for (int i = 2; i < arcs.Count; i++)              {                  // Scratch list builder for this arc                  var temp = new List<byte> ();                    // The current arc (subidentifier)                  UInt64 arc = arcs[i];                    // Build the arc (subidentifier) byte array                  // The array is built in reverse (LSB to MSB).                  do                  {                      // Each entry is formed from the low 7 bits (0x7F).                      // Set high bit of all entries (0x80) per X.680. We                      // will unset the high bit of the final byte later.                      temp.Add((byte) (0x80 | (arc & 0x7F)));                      arc >>= 7;                  } while (0 != arc);                    // Grab resulting array. Because of the do/while'                  // there is at least one value in the array.                  byte[] t = temp.ToArray ();                    // Unset high bit of byte t[0]                  // t[0] will be LSB after the array is reversed.                  t[0] = (byte) (0x7F & t[0]);                    // MSB first...                  Array.Reverse(t);                    // Add to the resulting array                  foreach (byte b in t)                  {                      octets.Add(b);                  }              }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnType,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,SetLength,The following statement contains a magic number: if (m_octets.Length < 0x80)                  {                      length = new byte[1];                      length[0] = (byte) m_octets.Length;                  }                      // 0x80 < length <= 0xFF                  else if (m_octets.Length <= 0xFF)                  {                      length = new byte[2];                      length[0] = 0x81;                      length[1] = (byte) ((m_octets.Length & 0xFF));                  }                        //                      // We should almost never see these...                      //                        // 0xFF < length <= 0xFFFF                  else if (m_octets.Length <= 0xFFFF)                  {                      length = new byte[3];                      length[0] = 0x82;                      length[1] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[2] = (byte) ((m_octets.Length & 0xFF));                  }                        // 0xFFFF < length <= 0xFFFFFF                  else if (m_octets.Length <= 0xFFFFFF)                  {                      length = new byte[4];                      length[0] = 0x83;                      length[1] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[2] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[3] = (byte) ((m_octets.Length & 0xFF));                  }                      // 0xFFFFFF < length <= 0xFFFFFFFF                  else                  {                      length = new byte[5];                      length[0] = 0x84;                      length[1] = (byte) ((m_octets.Length & 0xFF000000) >> 24);                      length[2] = (byte) ((m_octets.Length & 0xFF0000) >> 16);                      length[3] = (byte) ((m_octets.Length & 0xFF00) >> 8);                      length[4] = (byte) ((m_octets.Length & 0xFF));                  }
Magic Number,Pdelvo.Minecraft.Network,AsnParser,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,GetLength,The following statement contains a magic number: try              {                  byte b = GetNextOctet ();                    if (b == (b & 0x7f))                  {                      return b;                  }                  int i = b & 0x7f;                    if (i > 4)                  {                      var sb = new StringBuilder("Invalid Length Encoding. ");                      sb.AppendFormat("Length uses {0} octets"'                                      i.ToString(CultureInfo.InvariantCulture));                      throw new BerDecodeException(sb.ToString ()' position);                  }                    while (0 != i--)                  {                      // shift left                      length <<= 8;                        length |= GetNextOctet ();                  }              }              catch (ArgumentOutOfRangeException ex)              {                  throw new BerDecodeException("Error Parsing Key"' position' ex);              }
Magic Number,Pdelvo.Minecraft.Network,AsnParser,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\ProtocolCryptography.cs,GetLength,The following statement contains a magic number: try              {                  byte b = GetNextOctet ();                    if (b == (b & 0x7f))                  {                      return b;                  }                  int i = b & 0x7f;                    if (i > 4)                  {                      var sb = new StringBuilder("Invalid Length Encoding. ");                      sb.AppendFormat("Length uses {0} octets"'                                      i.ToString(CultureInfo.InvariantCulture));                      throw new BerDecodeException(sb.ToString ()' position);                  }                    while (0 != i--)                  {                      // shift left                      length <<= 8;                        length |= GetNextOctet ();                  }              }              catch (ArgumentOutOfRangeException ex)              {                  throw new BerDecodeException("Error Parsing Key"' position' ex);              }
Magic Number,Pdelvo.Minecraft.Network,Extensions,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\Extensions.cs,TryParseEndPoint,The following statement contains a magic number: if (ep.Length != 2) return false;
Magic Number,Pdelvo.Minecraft.Network,FullyReadStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\FullyReadStream.cs,FullyReadStream,The following statement contains a magic number: _readAheadBuffer = new byte[1024*1024];
Magic Number,Pdelvo.Minecraft.Network,FullyReadStream,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\FullyReadStream.cs,FullyReadStream,The following statement contains a magic number: _readAheadBuffer = new byte[1024*1024];
Magic Number,Pdelvo.Minecraft.Network,ProtocolSecurity,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\Security.cs,GenerateRsaKeyPair,The following statement contains a magic number: provider = new RSACryptoServiceProvider(1024);
Magic Number,Pdelvo.Minecraft.Network,ProtocolSecurity,C:\repos\pdelvo_Pdelvo.Minecraft\Pdelvo.Minecraft.Network\Security.cs,GenerateAes128Key,The following statement contains a magic number: var bytes = new byte[16];
