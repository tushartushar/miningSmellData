Implementation smell,Namespace,Class,File,Method,Description
Long Method,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The method has 220 lines of code.
Long Method,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,wimbox_Click,The method has 113 lines of code.
Long Method,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The method has 904 lines of code.
Long Method,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The method has 111 lines of code.
Complex Method,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,NonUEFITypical,Cyclomatic complexity of the method is 8
Complex Method,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,Cyclomatic complexity of the method is 10
Long Parameter List,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The method has 6 parameters. Parameters: framework' san_policy' diswinre' disUasp' imageletter' wimlocation
Long Parameter List,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageApply,The method has 7 parameters. Parameters: iswimboot' isesd' imagex' imageFile' wimIndex' targetDisk' wimbootApplyDir
Long Parameter List,wintogo,IniFile,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\IniOperation.cs,GetPrivateProfileString,The method has 6 parameters. Parameters: section' key' defVal' retVal' size' filePath
Long Parameter List,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,WimCreateFile,The method has 6 parameters. Parameters: WimPath' DesiredAccess' CreationDisposition' FlagsAndAttributes' CompressionType' CreationResult
Long Identifier,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,,The length of the parameter diskpart重新分区ToolStripMenuItem1 is 30.
Long Identifier,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,,The length of the parameter chineseSimpleToolStripMenuItem is 30.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            Process diskInfo = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' " /diskinfo /find: /usbonly /file=" + tempFileName); " is 134.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            Match match = Regex.Match(tempUdiskInfo' @"SET DRIVE([0-9])DESC=(.+)\r\nSET DRIVE([0-9])SIZE=(.+)\r\nSET DRIVE([0-9])LETTER=" + WTGModel.ud.Substring(0' 2).ToUpper()' RegexOptions.ECMAScript); " is 192.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            if (DialogResult.No == MessageBox.Show(match.Groups[2].Value + "\n" + MsgManager.GetResString("Msg_TwiceConfirm"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; } " is 246.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            Process p1 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=\"" + WTGModel.applicationFilesPath + "\\DPTs\\" + dptFile + "-1.dpt\""); " is 211.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\EFI\\\" /e /h /y"); " is 152.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            Process p2 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=" + WTGModel.applicationFilesPath + "\\DPTs\\" + dptFile + "-2.dpt"); " is 207.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\\" /e /h /y"); " is 152.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The length of the statement  "            Process p3 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=" + WTGModel.applicationFilesPath + "\\DPTs\\" + dptFile + "-1.dpt"); " is 207.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process diskInfo = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' " /diskinfo /find: /usbonly /file=" + tempFileName); " is 134.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Match match = Regex.Match(tempUdiskInfo' @"SET DRIVE([0-9])DESC=(.+)\r\nSET DRIVE([0-9])SIZE=(.+)\r\nSET DRIVE([0-9])LETTER=" + WTGModel.ud.Substring(0' 2).ToUpper()' RegexOptions.ECMAScript); " is 192.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            if (DialogResult.No == MessageBox.Show(match.Groups[2].Value + "\n" + MsgManager.GetResString("Msg_TwiceConfirm"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; } " is 246.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            //Process p = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /repartition /usb-fdd /fstype=ntfs /quiet"); " is 150.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process p1 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=\"" + WTGModel.applicationFilesPath + "\\DPTs\\UEFIMBR\\" + dptFile + "-1.dpt\""); " is 220.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\EFI\\\" /e /h /y"); " is 152.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\Boot\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\Boot\\\" /e /h /y"); " is 154.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process p2 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /backup_dpt=\"" + WTGModel.diskpartScriptPath + "\\" + dptFile + "-3.dpt\""); " is 202.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process p3 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=" + WTGModel.applicationFilesPath + "\\DPTs\\UEFIMBR\\" + dptFile + "-2.dpt"); " is 216.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process pRE = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=" + WTGModel.applicationFilesPath + "\\DPTs\\UEFIMBR\\" + dptFile + "-2.dpt"); " is 217.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\\" /e /h /y"); " is 152.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\Boot\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\Boot\\\" /e /h /y"); " is 154.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The length of the statement  "            Process p4 = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' "/DEVICE=" + UdiskNumber + " /partitions  /quiet /restore_dpt=" + WTGModel.diskpartScriptPath + "\\" + dptFile + "-3.dpt"); " is 199.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,UefiGptTypical,The length of the statement  "            ImageOperation.ImageExtra(WTGModel.installDonet35' WTGModel.isBlockLocalDisk' WTGModel.disableWinRe' WTGModel.disableUasp' WTGModel.ud' WTGModel.imageFilePath); " is 160.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,UefiGptVhdVhdx,The length of the statement  "                //MessageBox.Show("Win8 VHD文件不存在！，可到论坛发帖求助！\n建议将程序目录下logs文件夹打包上传，谢谢！"'"出错啦！"'MessageBoxButtons .OK 'MessageBoxIcon.Error ); " is 123.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,NonUEFITypical,The length of the statement  "            ImageOperation.ImageApply(WTGModel.isWimBoot' WTGModel.isEsd' WTGModel.imagexFileName' WTGModel.imageFilePath' WTGModel.wimPart' WTGModel.ud' WTGModel.ud); " is 155.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,NonUEFITypical,The length of the statement  "                ImageOperation.ImageExtra(WTGModel.installDonet35' WTGModel.isBlockLocalDisk' WTGModel.disableWinRe' WTGModel.disableUasp' WTGModel.ud' WTGModel.imageFilePath); " is 160.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,NonUEFITypical,The length of the statement  "                //ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\" + WTGModel.bcdbootFileName' WTGModel.ud.Substring(0' 3) + "windows  /s  " + WTGModel.ud.Substring(0' 2) + " /f ALL"); " is 176.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,UEFIMBRTypical,The length of the statement  "            ImageOperation.ImageApply(WTGModel.isWimBoot' WTGModel.isEsd' WTGModel.imagexFileName' WTGModel.imageFilePath' WTGModel.wimPart' WTGModel.ud' WTGModel.ud); " is 155.
Long Statement,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,UEFIMBRTypical,The length of the statement  "            ImageOperation.ImageExtra(WTGModel.installDonet35' WTGModel.isBlockLocalDisk' WTGModel.disableWinRe' WTGModel.disableUasp' WTGModel.ud' WTGModel.imageFilePath); " is 160.
Long Statement,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AboutBox)); " is 128.
Long Statement,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticeMbr,The length of the statement  "            Process booice = Process.Start(WTGModel.applicationFilesPath + "\\BOOTICE.exe"' (" /DEVICE=" + targetDisk.Substring(0' 2) + " /mbr /install /type=nt60 /quiet"));//写入引导 " is 167.
Long Statement,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticePbr,The length of the statement  "            Process pbr = Process.Start(WTGModel.applicationFilesPath + "\\BOOTICE.exe"' (" /DEVICE=" + targetDisk.Substring(0' 2) + " /pbr /install /type=bootmgr /quiet"));//写入引导 " is 167.
Long Statement,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticeAct,The length of the statement  "            Process act = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' " /DEVICE=" + targetDisk.Substring(0' 2) + " /partitions /activate /quiet"); " is 153.
Long Statement,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdbootWriteBootFile,The length of the statement  "            //if (WTGModel.CurrentOS == OS.Win8_1_with_update || WTGModel.CurrentOS == OS.Win10 || WTGModel.CurrentOS == OS.Win8_without_update) " is 132.
Long Statement,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartGPTAndUEFI,The length of the statement  "            //using (FileStream fs0 = new FileStream(WTGModel.diskpartScriptPath + @"\uefi.txt"' FileMode.Create' FileAccess.Write)) " is 120.
Long Statement,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,GenerateMBRAndUEFIScript,The length of the statement  "            //using (FileStream fs0 = new FileStream(WTGModel.diskpartScriptPath + @"\uefimbr.txt"' FileMode.Create' FileAccess.Write)) " is 123.
Long Statement,wintogo,ErrorMsg,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\ErrorMsg.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ErrorMsg)); " is 128.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The length of the statement  "                ProcessManager.ECMD("dism.exe"' " /image:" + imageletter.Substring(0' 2) + " /Apply-Unattend:\"" + WTGModel.applicationFilesPath + "\\san_policy.xml\""); " is 153.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,WimbootApply,The length of the statement  "            ProcessManager.ECMD("Dism.exe"' " /Export-Image /WIMBoot /SourceImageFile:\"" + sourceImageFile + "\" /SourceIndex:" + wimindex.ToString() + " /DestinationImageFile:" + destinationImageDisk + "wimboot.wim"); " is 207.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,WimbootApply,The length of the statement  "            ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + destinationImageDisk + "wimboot.wim" + "\" /ApplyDir:" + applyDir.Substring(0' 2) + " /Index:" + wimindex.ToString() + " /WIMBoot"); " is 196.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismApplyImage,The length of the statement  "                ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString() + " /compact"); " is 171.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismApplyImage,The length of the statement  "                ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString()); " is 157.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismApplyImage,The length of the statement  "            //ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString()); " is 159.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageXApply,The length of the statement  "            ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\" + imagex' " /apply " + "\"" + imageFile + "\"" + " " + wimIndex.ToString() + " " + targetDisk); " is 152.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,Iswin7,The length of the statement  "            ProcessManager.SyncCMD("\"" + WTGModel.applicationFilesPath + "\\" + imagex + "\"" + " /info \"" + wimfile + "\" /xml > " + "\"" + WTGModel.logPath + "\\wiminfo.xml\""); " is 169.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,Win7REG,The length of the statement  "                ProcessManager.SyncCMD("reg.exe load HKU\\sys " + installdrive + "Windows\\System32\\Config\\SYSTEM  > \"" + WTGModel.logPath + "\\Win7REGLoad.log\""); " is 151.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,Win7REG,The length of the statement  "                int errorlevel = ProcessManager.SyncCMD("reg.exe import \"" + WTGModel.applicationFilesPath + "\\usb.reg\" >nul &if %errorlevel% ==0 (echo 注册表导入成功) else (echo 注册表导入失败)" + " > \"" + WTGModel.logPath + "\\Win7REGImport.log\""); " is 225.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,Fixletter,The length of the statement  "                    ProcessManager.SyncCMD("reg.exe load HKU\\TEMP " + currentos + "\\Windows\\System32\\Config\\SYSTEM  > \"" + WTGModel.logPath + "\\loadreg.log\""); " is 147.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,AddDrivers,The length of the statement  "            if (Directory.Exists(Application.StartupPath + "\\Drivers") && Directory.GetFiles(Application.StartupPath + "\\Drivers").Length == 0) " is 133.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,AddDrivers,The length of the statement  "            ProcessManager.ECMD("dism.exe"' "/image:" + target + " /add-driver /driver:\"" + Application.StartupPath + "\\Drivers\"" + " /recurse"); " is 136.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DisableUASP,The length of the statement  "            int errorlevel = ProcessManager.SyncCMD(WTGModel.applicationFilesPath + "\\UASP\\UASP.EXE " + WTGModel.ud.Substring(0' 2) + " " + installdrive.Substring(0' 2)); " is 160.
Long Statement,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DisableUASP,The length of the statement  "            //ProcessManager.SyncCMD("reg.exe load HKU\\def " + installdrive + "Windows\\System32\\Config\\DEFAULT  > \"" + WTGModel.logPath + "\\UASPREGLoad.log\""); " is 154.
Long Statement,wintogo,ZipHelper,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\ZipHelper.cs,ZipFile,The length of the statement  "                    using (System.IO.FileStream StreamToZip = new System.IO.FileStream(fileToZip' System.IO.FileMode.Open' System.IO.FileAccess.Read)) " is 130.
Long Statement,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The length of the statement  "                    if (txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n")) " is 129.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,DetachVHDExtra,The length of the statement  "            MatchCollection mc = Regex.Matches(dpoutput' @"([a-z]:\\.*" + WTGModel.vhdNameWithoutExt + ".vhd[x]?)"' RegexOptions.IgnoreCase); " is 129.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,VHDDynamicSizeIns,The length of the statement  "            using (FileStream fs1 = new FileStream(WTGModel.ud + MsgManager.GetResString("FileName_VHD_Dynamic"' MsgManager.ci)' FileMode.Create' FileAccess.Write)) " is 152.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CreateVHD,The length of the statement  "            if (WTGModel.choosedImageType != "vhd" && WTGModel.choosedImageType != "vhdx" && !WTGModel.isWimBoot && !File.Exists(@"v:\windows\regedit.exe")) " is 144.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,VHDExtra,The length of the statement  "            ImageOperation.ImageExtra(WTGModel.installDonet35' WTGModel.isBlockLocalDisk' WTGModel.disableWinRe' WTGModel.disableUasp' @"v:\"' WTGModel.imageFilePath); " is 155.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CopyVHD,The length of the statement  "                        ProcessManager.ECMD(Environment.GetEnvironmentVariable("windir") + "\\system32\\robocopy.exe"' "\"" + VhdPath.Substring(0' VhdPath.LastIndexOf("\\") + 1) + "\\\" " + WTGModel.ud + " " + Path.GetFileNameWithoutExtension(VhdPath) + "." + WTGModel.vhdExtension + " " + "/ETA "' MsgManager.GetResString("Msg_Copy"' MsgManager.ci)); " is 327.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CopyVHD,The length of the statement  "                        ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\fastcopy.exe"' " /auto_close \"" + this.VhdPath + "\" /to=\"" + WTGModel.ud + "\""' MsgManager.GetResString("Msg_Copy"' MsgManager.ci)); " is 191.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CopyVHD,The length of the statement  "                if ((WTGModel.choosedImageType == "vhd" && !this.VhdPath.EndsWith("win8.vhd")) || (WTGModel.choosedImageType == "vhdx" && !this.VhdPath.EndsWith("win8.vhdx"))) " is 159.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CopyVHD,The length of the statement  "                        File.Move(WTGModel.ud + this.VhdPath.Substring(this.VhdPath.LastIndexOf("\\") + 1)' WTGModel.ud + WTGModel.vhdNameWithoutExt + "." + WTGModel.choosedImageType); " is 160.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,WriteBootFilesIntoUD,The length of the statement  "                    BootFileOperation.BcdeditFixBootFileVHD(WTGModel.ud' WTGModel.efiPartition' WTGModel.win8VHDFileName' FirmwareType.BIOS); " is 121.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,WriteBootFilesIntoUD,The length of the statement  "                    BootFileOperation.BcdeditFixBootFileVHD(WTGModel.ud' WTGModel.efiPartition' WTGModel.win8VHDFileName' FirmwareType.UEFI); " is 121.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The length of the statement  "                    if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7) " is 339.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,ApplyToVdisk,The length of the statement  "            ImageOperation.ImageApply(WTGModel.isWimBoot' WTGModel.isEsd' WTGModel.imagexFileName' WTGModel.imageFilePath' WTGModel.wimPart' @"v:\"' WTGModel.ud); " is 150.
Long Statement,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,UEFIAndWin7ToGo,The length of the statement  "            //ProcessManager.SyncCMD("\""+Application.StartupPath + "\\files\\osletter7.bat\" /targetletter:c /currentos:v  > \"" + Application.StartupPath + "\\logs\\osletter7.log\""); " is 173.
Long Statement,wintogo,Finish,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Finish.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Finish)); " is 126.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,SystemDetection,The length of the statement  "                string dismversion = FileOperation.GetFileVersion(System.Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe"); " is 128.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                //    if (lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "wim" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "esd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "vhd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 4' 4) != "vhdx")//不是WIM文件 " is 301.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                //        MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 187.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                //            MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 191.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                    MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 175.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                    if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_DiskSpaceWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) " is 207.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                    MessageBox.Show(MsgManager.GetResString("Msg_VHDNameIllegal"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 175.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                        //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; } " is 222.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                        //MessageBox.Show(MsgManager.GetResString("Msg_UefiError"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 172.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                    //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; } " is 222.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The length of the statement  "                        if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_Legacywarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) " is 204.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,WriteProgramRunInfoToLog,The length of the statement  "            infoDict.Add("Dism Version"' FileOperation.GetFileVersion(Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe")); " is 130.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,WriteProgramRunInfoToLog,The length of the statement  "            //    "\r\nDism Version:" + FileOperation.GetFileVersion(System.Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe") + " is 136.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,WriteProgramRunInfoToLog,The length of the statement  "            //    File.Copy(Environment.GetEnvironmentVariable("windir") + "\\Logs\\DISM\\dism.log"' WTGModel.logPath + "\\dism.log"); " is 122.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,wimbox_Click,The length of the statement  "                //    ProcessManager.SyncCMD("\"" + WTGModel.applicationFilesPath + "\\isocmd.exe\" -MOUNT 0: \"" + openFileDialog1.FileName + "\""); " is 133.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,wimbox_Click,The length of the statement  "                if (Regex.IsMatch(WTGModel.choosedImageType' @"wim|esd") && WTGModel.CurrentOS != OS.XP && WTGModel.CurrentOS != OS.Vista) " is 122.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,diskpart重新分区ToolStripMenuItem1_Click,The length of the statement  "            if (System.Environment.OSVersion.ToString().Contains("5.1") || System.Environment.OSVersion.ToString().Contains("5.2")) { MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci)); return; } " is 204.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,diskpart重新分区ToolStripMenuItem1_Click,The length of the statement  "            if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_ClearPartition"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; } " is 217.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,diskpart重新分区ToolStripMenuItem1_Click,The length of the statement  "            //if (DialogResult.No == MessageBox.Show("您确定要继续吗？"' "警告！"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }  " is 121.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBoxdiskpart_CheckedChanged,The length of the statement  "                //MessageBox.Show(MsgManager.GetResString("Msg_Repartition"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 178.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBoxuefimbr_CheckedChanged,The length of the statement  "            if (checkBoxUefigpt.Checked && checkBoxUefimbr.Checked) { checkBoxUefigpt.Checked = false; checkBoxUefimbr.Checked = true; } " is 124.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,englishToolStripMenuItem_Click,The length of the statement  "            if (DialogResult.No == MessageBox.Show("This program will restart'continue?"' "Question"' MessageBoxButtons.YesNo' MessageBoxIcon.Asterisk)) { return; } " is 152.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,chineseSimpleToolStripMenuItem_Click,The length of the statement  "            if (DialogResult.No == MessageBox.Show("程序将会重启，确认继续？"' "提示"' MessageBoxButtons.YesNo' MessageBoxIcon.Asterisk)) { return; } " is 123.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,繁体中文ToolStripMenuItem_Click,The length of the statement  "            if (DialogResult.No == MessageBox.Show("程序將會重啟，確認繼續？"' "提示"' MessageBoxButtons.YesNo' MessageBoxIcon.Asterisk)) { return; } " is 123.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The length of the statement  "                    if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_WritingAbort"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo)) " is 179.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,Form1_FormClosing,The length of the statement  "                    if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_WritingAbort"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo)) { e.Cancel = true; return; } " is 208.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,txtPartitionSize2_TextChanged,The length of the statement  "                txtPartitionSize3.Text = (udSizeInMB - int.Parse(txtPartitionSize2.Text) - int.Parse(txtPartitionSize1.Text)).ToString(); " is 121.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBox1_CheckedChanged,The length of the statement  "            //    MessageBox.Show("克隆本机系统须知：\n1.本机系统必须为Win10。\n2.使用的USB驱动器必须识别为本地磁盘。\n3.USB驱动器将会被重新分区，所有数据将丢失。\n4.克隆后WTG系统为UEFI+MBR启动模式。\n5.本功能为实验性功能。"); " is 141.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The length of the statement  "                MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 175.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The length of the statement  "            //if (DialogResult.No == MessageBox.Show("克隆本机系统须知：\n1.本机系统必须为Win10。\n2.使用的USB驱动器必须识别为本地磁盘。\n3.USB驱动器将会被重新分区，所有数据将丢失。\n4.克隆后WTG系统为UEFI+MBR启动模式。\n5.本功能为实验性功能。\n是否继续？"' "警告"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) " is 222.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The length of the statement  "            ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\MakeWinPEMedia.cmd"' "/UFD /f \"" + Application.StartupPath + "\\wtg_clone\" " + WTGModel.ud.Substring(0' 2)); " is 165.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The length of the statement  "            ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\bootsect.exe"' "/nt60 " + WTGModel.ud.Substring(0' 2) + " /force /mbr"); " is 127.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,btnwim_Click,The length of the statement  "                if (Regex.IsMatch(WTGModel.choosedImageType' @"wim|esd") && WTGModel.CurrentOS != OS.XP && WTGModel.CurrentOS != OS.Vista) " is 122.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1)); " is 125.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.lblWim.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166))))); " is 125.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linklblVisit.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked); " is 120.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linkLabel2.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166))))); " is 129.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linkLabel1.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked_1); " is 120.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linkLabel5.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel5_LinkClicked_1); " is 120.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linklblRestoreMultiPartition.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166))))); " is 147.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linklblRestoreMultiPartition.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linklblRestoreMultiPartition_LinkClicked); " is 154.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linklblTabPage4Resotre.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166))))); " is 141.
Long Statement,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The length of the statement  "            this.linklblTabPage4Resotre.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linklblTabPage4Resotre_LinkClicked); " is 142.
Long Statement,wintogo,Update,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Update.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Update)); " is 126.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The length of the statement  "                if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); } " is 120.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The length of the statement  "                if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); } " is 124.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The length of the statement  "                if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); } " is 124.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 141.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The length of the statement  "            this.label2.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 141.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The length of the statement  "            this.label3.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 141.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The length of the statement  "            this.label4.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 141.
Long Statement,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The length of the statement  "            this.label5.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134))); " is 141.
Long Statement,wintogo,WriteProgress,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\WriteProgress.cs,writeprogress_FormClosing,The length of the statement  "                DialogResult dResult = MessageBox.Show(MsgManager.GetResString("Msg_WritingAbort")' MsgManager.GetResString("Msg_Tip")' MessageBoxButtons.YesNo' MessageBoxIcon.Asterisk); " is 170.
Long Statement,wintogo,WriteProgress,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\WriteProgress.cs,writeprogress_FormClosing,The length of the statement  "                //FileStream fs = new FileStream(WTGModel.logPath + "\\" + DateTime.Now.ToFileTime() + ".log"' FileMode.Create' FileAccess.Write); " is 130.
Long Statement,wintogo,WriteProgress,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\WriteProgress.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WriteProgress)); " is 133.
Long Statement,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Microsoft YaHei"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 141.
Long Statement,wintogo.Forms,FormatAlert,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\FormatAlert.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormatAlert)); " is 131.
Long Statement,wintogo.Forms,TakeOwnTools,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\TakeOwn.cs,TakeOwn,The length of the statement  "            fileSecurity.AddAccessRule(new FileSystemAccessRule("Everyone"' FileSystemRights.FullControl' AccessControlType.Allow)); " is 120.
Long Statement,wintogo.Utility,HttpPost,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\HttpPost.cs,HttpUploadFile,The length of the statement  "            StringBuilder sbHeader = new StringBuilder(string.Format("Content-Disposition:form-data;name=\"file\";filename=\"{0}\"\r\nContent-Type:application/octet-stream\r\n\r\n"' fileName)); " is 181.
Long Statement,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,SetTemporaryPath,The length of the statement  "                    throw new System.InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Unable to set temporary path. Error = {0}"' rc)); " is 135.
Long Statement,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,LoadImage,The length of the statement  "                    throw new System.InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Unable to load image. Error = {0}"' rc)); " is 127.
Long Statement,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,GetImageCount,The length of the statement  "                    throw new System.InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Unable to get image count. Error = {0}"' rc)); " is 132.
Long Statement,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,RegisterCallback,The length of the statement  "                    throw new System.InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Unable to register message callback.")); " is 126.
Long Statement,Microsoft.WimgApi,NativeMethods,C:\repos\nkc3g4_wtg-assistant\wintogo\Wimapi.cs,UnregisterMessageCallback,The length of the statement  "                    throw new System.InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Unable to unregister message callback.")); " is 128.
Complex Conditional,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The conditional expression  "txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n")"  is complex.
Complex Conditional,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CreateVHD,The conditional expression  "WTGModel.choosedImageType != "vhd" && WTGModel.choosedImageType != "vhdx" && !WTGModel.isWimBoot && !File.Exists(@"v:\windows\regedit.exe")"  is complex.
Complex Conditional,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,CopyVHD,The conditional expression  "(WTGModel.choosedImageType == "vhd" && !this.VhdPath.EndsWith("win8.vhd")) || (WTGModel.choosedImageType == "vhdx" && !this.VhdPath.EndsWith("win8.vhdx"))"  is complex.
Complex Conditional,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The conditional expression  "DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7"  is complex.
Complex Conditional,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBoxuefi_CheckedChanged,The conditional expression  "(checkBoxUefigpt.Checked || checkBoxUefimbr.Checked) && !radiobtnVhdx.Checked && !radiobtnVhd.Checked"  is complex.
Complex Conditional,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBoxuefimbr_CheckedChanged,The conditional expression  "(checkBoxUefigpt.Checked || checkBoxUefimbr.Checked) && !radiobtnVhdx.Checked && !radiobtnVhd.Checked"  is complex.
Complex Conditional,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,radiochuantong_CheckedChanged,The conditional expression  "(checkBoxUefigpt.Checked || checkBoxUefimbr.Checked) && !radiobtnVhdx.Checked && !radiobtnVhd.Checked"  is complex.
Complex Conditional,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,checkBoxBitlocker_CheckedChanged,The conditional expression  "(checkBoxUefigpt.Checked || checkBoxUefimbr.Checked) && !radiobtnVhdx.Checked && !radiobtnVhd.Checked"  is complex.
Complex Conditional,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,AutoSetNumbericVhdSize,The conditional expression  "comboBoxUd.SelectedIndex != 0 && comboBoxUd.SelectedIndex != -1 && WTGModel.UdObj != null && udSizeInMB != 0"  is complex.
Empty Catch Block,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The method has an empty catch block.
Empty Catch Block,wintogo,Log,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\WriteLog.cs,AppendLog,The method has an empty catch block.
Empty Catch Block,wintogo,Log,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\WriteLog.cs,WriteLog,The method has an empty catch block.
Empty Catch Block,wintogo.Forms,FormatAlert,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\FormatAlert.cs,FormatAlert_FormClosing,The method has an empty catch block.
Magic Number,wintogo,GetUdiskList,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\GetUdiskList.cs,LoadUDList,The following statement contains a magic number: timer1.Interval = 2000;
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: Match match = Regex.Match(tempUdiskInfo' @"SET DRIVE([0-9])DESC=(.+)\r\nSET DRIVE([0-9])SIZE=(.+)\r\nSET DRIVE([0-9])LETTER=" + WTGModel.ud.Substring(0' 2).ToUpper()' RegexOptions.ECMAScript);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: if (DialogResult.No == MessageBox.Show(match.Groups[2].Value + "\n" + MsgManager.GetResString("Msg_TwiceConfirm"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: long udiskSize = long.Parse(match.Groups[4].Value);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: if (udiskSize > 59055800320)              {                  dptFile = "55G";              }              else if (udiskSize > 28991029248)              {                  dptFile = "27G";              }              else if (udiskSize > 13958643712)              {                  dptFile = "13G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: if (udiskSize > 59055800320)              {                  dptFile = "55G";              }              else if (udiskSize > 28991029248)              {                  dptFile = "27G";              }              else if (udiskSize > 13958643712)              {                  dptFile = "13G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: if (udiskSize > 59055800320)              {                  dptFile = "55G";              }              else if (udiskSize > 28991029248)              {                  dptFile = "27G";              }              else if (udiskSize > 13958643712)              {                  dptFile = "13G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\EFI\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:fat /q /V: /Y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiGpt,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: Match match = Regex.Match(tempUdiskInfo' @"SET DRIVE([0-9])DESC=(.+)\r\nSET DRIVE([0-9])SIZE=(.+)\r\nSET DRIVE([0-9])LETTER=" + WTGModel.ud.Substring(0' 2).ToUpper()' RegexOptions.ECMAScript);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: if (DialogResult.No == MessageBox.Show(match.Groups[2].Value + "\n" + MsgManager.GetResString("Msg_TwiceConfirm"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: long udiskSize = long.Parse(match.Groups[4].Value);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: if (udiskSize > 123480309760)              {                  dptFile = "115G";              }              else if (udiskSize > 62277025792)              {                  dptFile = "58G";              }              else if (udiskSize > 31138512896)              {                  dptFile = "29G";              }              else if (udiskSize > 15032385536)              {                  dptFile = "14G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: if (udiskSize > 123480309760)              {                  dptFile = "115G";              }              else if (udiskSize > 62277025792)              {                  dptFile = "58G";              }              else if (udiskSize > 31138512896)              {                  dptFile = "29G";              }              else if (udiskSize > 15032385536)              {                  dptFile = "14G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: if (udiskSize > 123480309760)              {                  dptFile = "115G";              }              else if (udiskSize > 62277025792)              {                  dptFile = "58G";              }              else if (udiskSize > 31138512896)              {                  dptFile = "29G";              }              else if (udiskSize > 15032385536)              {                  dptFile = "14G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: if (udiskSize > 123480309760)              {                  dptFile = "115G";              }              else if (udiskSize > 62277025792)              {                  dptFile = "58G";              }              else if (udiskSize > 31138512896)              {                  dptFile = "29G";              }              else if (udiskSize > 15032385536)              {                  dptFile = "14G";              }              else              {                  throw new NotSupportedException("Your Usb Key is not suppotred");              }
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\EFI\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.ud.Substring(0' 2) + "\\Boot\\*.*" + "\"" + " \"" + WTGModel.diskpartScriptPath + "\\Boot\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: File.Copy(WTGModel.ud.Substring(0' 2) + "\\bootmgr"' WTGModel.diskpartScriptPath + "\\EFI\\bootmgr"' true);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: File.Copy(WTGModel.ud.Substring(0' 2) + "\\BOOTNXT"' WTGModel.diskpartScriptPath + "\\EFI\\BOOTNXT"' true);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:fat /q /V: /Y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\EFI\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\EFI\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: ProcessManager.ECMD("xcopy.exe"' "\"" + WTGModel.diskpartScriptPath + "\\Boot\\*.*" + "\"" + " \"" + WTGModel.ud.Substring(0' 2) + "\\Boot\\\" /e /h /y");
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: File.Copy(WTGModel.diskpartScriptPath + "\\EFI\\bootmgr"' WTGModel.ud.Substring(0' 2) + "\\bootmgr"' true);
Magic Number,wintogo,Write,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\GoWrite.cs,RemoveableDiskUefiMbr,The following statement contains a magic number: File.Copy(WTGModel.diskpartScriptPath + "\\EFI\\BOOTNXT"' WTGModel.ud.Substring(0' 2) + "\\BOOTNXT"' true);
Magic Number,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.labelCopyright' 1' 2);
Magic Number,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.labelCompanyName' 1' 3);
Magic Number,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.textBoxDescription' 1' 4);
Magic Number,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.okButton' 1' 5);
Magic Number,wintogo,AboutBox,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\AboutBox.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.logoPictureBox' 6);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticeMbr,The following statement contains a magic number: Process booice = Process.Start(WTGModel.applicationFilesPath + "\\BOOTICE.exe"' (" /DEVICE=" + targetDisk.Substring(0' 2) + " /mbr /install /type=nt60 /quiet"));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticePbr,The following statement contains a magic number: Process pbr = Process.Start(WTGModel.applicationFilesPath + "\\BOOTICE.exe"' (" /DEVICE=" + targetDisk.Substring(0' 2) + " /pbr /install /type=bootmgr /quiet"));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BooticeAct,The following statement contains a magic number: Process act = Process.Start(WTGModel.applicationFilesPath + "\\bootice.exe"' " /DEVICE=" + targetDisk.Substring(0' 2) + " /partitions /activate /quiet");
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: while (Process.GetProcessesByName("bcdboot.exe").Length != 0)              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: while (Process.GetProcessesByName("bcdboot.exe").Length != 0)              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(osdevice.Substring(0' 2));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileTypical,The following statement contains a magic number: args.Append(osdevice.Substring(0' 2));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: while (Process.GetProcessesByName("bcdboot.exe").Length != 0)              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: while (Process.GetProcessesByName("bcdboot.exe").Length != 0)              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(" /set {bootmgr} device  partition=" + BCDDisk.Substring(0' 2));
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(" /set {default} device  vhd=[" + osdevice.Substring(0' 2) + "]\\" + VHDFileNameWithExt);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(BCDDisk.Substring(0' 2) + BCDPath);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdeditFixBootFileVHD,The following statement contains a magic number: args.Append(" /set {default} osdevice  vhd=[" + osdevice.Substring(0' 2) + "]\\" + VHDFileNameWithExt);
Magic Number,wintogo,BootFileOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\BootFileOperation.cs,BcdbootWriteBootFile,The following statement contains a magic number: args.Append(targetDisk.Substring(0' 2));
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,CheckDiskExists,The following statement contains a magic number: while (!Directory.Exists(disk))              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,CheckDiskExists,The following statement contains a magic number: while (!Directory.Exists(disk))              {                  Thread.Sleep(50);                  if (++c > 100)                  {                      break;                  }              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartGPTAndUEFI,The following statement contains a magic number: for (int i = 0; i < partitionsCount - 1; i++)              {                  sb.AppendLine("select partition " + (i + 4).ToString());                  sb.AppendLine("format fs=ntfs quick");                  sb.AppendLine("assign");              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartGPTAndUEFI,The following statement contains a magic number: while (!Directory.Exists(WTGModel.ud))              {                  c++;                  Thread.Sleep(50);                  if (c > 100)                  {                      break;                  }              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartGPTAndUEFI,The following statement contains a magic number: while (!Directory.Exists(WTGModel.ud))              {                  c++;                  Thread.Sleep(50);                  if (c > 100)                  {                      break;                  }              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,GenerateMBRAndUEFIScript,The following statement contains a magic number: for (int i = 0; i < partitionsCount - 1; i++)              {                  sb.AppendLine("select partition " + (i + 3).ToString());                  sb.AppendLine("format fs=ntfs quick");                  sb.AppendLine("assign");              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartRePartitionUD,The following statement contains a magic number: for (int i = 0; i < partitionsCount - 1; i++)              {                  sb.AppendLine("select partition " + (i + 2).ToString());                  sb.AppendLine("format fs=ntfs quick");                  sb.AppendLine("assign");              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartRePartitionUD,The following statement contains a magic number: while (!Directory.Exists(WTGModel.ud))              {                  c++;                  Thread.Sleep(50);                  if (c > 100)                  {                      break;                  }              }
Magic Number,wintogo,DiskOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\DiskOperation.cs,DiskPartRePartitionUD,The following statement contains a magic number: while (!Directory.Exists(WTGModel.ud))              {                  c++;                  Thread.Sleep(50);                  if (c > 100)                  {                      break;                  }              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismGetImagePartsInfo,The following statement contains a magic number: foreach (Match item in matches)              {                  list.Add(item.Groups[1].Value + " : " + item.Groups[2].Value);              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The following statement contains a magic number: if (framework)              {                  StringBuilder args = new StringBuilder();                  args.Append(" /image:");                  args.Append(imageletter.Substring(0' 2));                  args.Append(" /enable-feature /featurename:NetFX3 /source:");                  args.Append(wimlocation.Substring(0' wimlocation.Length - 11));                  args.Append("sxs");                  //ProcessManager.RunDism(args.ToString());                  try                  {                      ProcessManager.ECMD("dism.exe"' args.ToString());                  }                  catch (Exception)                  {                      //ProcessManager.KillProcessByName("dism.exe");                  }                  }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The following statement contains a magic number: if (framework)              {                  StringBuilder args = new StringBuilder();                  args.Append(" /image:");                  args.Append(imageletter.Substring(0' 2));                  args.Append(" /enable-feature /featurename:NetFX3 /source:");                  args.Append(wimlocation.Substring(0' wimlocation.Length - 11));                  args.Append("sxs");                  //ProcessManager.RunDism(args.ToString());                  try                  {                      ProcessManager.ECMD("dism.exe"' args.ToString());                  }                  catch (Exception)                  {                      //ProcessManager.KillProcessByName("dism.exe");                  }                  }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,ImageExtra,The following statement contains a magic number: if (san_policy)              {                  ProcessManager.ECMD("dism.exe"' " /image:" + imageletter.Substring(0' 2) + " /Apply-Unattend:\"" + WTGModel.applicationFilesPath + "\\san_policy.xml\"");                }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,AutoChooseWimIndex,The following statement contains a magic number: if (wimpart == "0")              {//自动判断模式                  if (WTGModel.isEsd)                  { wimpart = AutoChooseESDImageIndex(WTGModel.imageFilePath); }                  else                  {                      if (win7togo == 1)                      {//WIN7 32 bit                            wimpart = "5";                      }                      else if (win7togo == 2)                      { //WIN7 64 BIT                            wimpart = "4";                      }                      else { wimpart = "1"; }                  }              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,WimbootApply,The following statement contains a magic number: ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + destinationImageDisk + "wimboot.wim" + "\" /ApplyDir:" + applyDir.Substring(0' 2) + " /Index:" + wimindex.ToString() + " /WIMBoot");
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismApplyImage,The following statement contains a magic number: if (isCompactOS)              {                  ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString() + " /compact");              }              else              {                  ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString());              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DismApplyImage,The following statement contains a magic number: if (isCompactOS)              {                  ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString() + " /compact");              }              else              {                  ProcessManager.ECMD("Dism.exe"' " /Apply-Image /ImageFile:\"" + imageFile + "\" /ApplyDir:" + targetDisk.Substring(0' 2) + " /Index:" + wimIndex.ToString());              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,Iswin7,The following statement contains a magic number: try              {                  doc.Load(strFilename);                  reader = new System.Xml.XmlNodeReader(doc);                  while (reader.Read())                  {                      if (reader.IsStartElement("NAME"))                      {                            //从找到的这个依次往下读取节点                          System.Xml.XmlNode aa = doc.ReadNode(reader);                          if (aa.InnerText == "Windows 7 STARTER")                          {                              return 1;                          }                          else if (aa.InnerText == "Windows 7 HOMEBASIC")                          {                              return 2;                          }                          else { return 0; }                      }                  }              }                catch (Exception ex)              {                  Log.WriteLog("Err_Iswin7"' strFilename + "\n" + ex.ToString());                  //MessageBox.Show(strFilename + MsgManager.getResString("Msg_wiminfoerror"' MsgManager.ci) + ex.ToString());                  return 0;              }
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DisableUASP,The following statement contains a magic number: int errorlevel = ProcessManager.SyncCMD(WTGModel.applicationFilesPath + "\\UASP\\UASP.EXE " + WTGModel.ud.Substring(0' 2) + " " + installdrive.Substring(0' 2));
Magic Number,wintogo,ImageOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\ImageOperation.cs,DisableUASP,The following statement contains a magic number: int errorlevel = ProcessManager.SyncCMD(WTGModel.applicationFilesPath + "\\UASP\\UASP.EXE " + WTGModel.ud.Substring(0' 2) + " " + installdrive.Substring(0' 2));
Magic Number,wintogo,ZipHelper,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\ZipHelper.cs,UnZip,The following statement contains a magic number: using (ZipInputStream s = new ZipInputStream(File.OpenRead(zipFilePath)))              {                    ZipEntry theEntry;                  while ((theEntry = s.GetNextEntry()) != null)                  {                      string directoryName = Path.GetDirectoryName(theEntry.Name);                      string fileName = Path.GetFileName(theEntry.Name);                      if (directoryName.Length > 0)                      {                          Directory.CreateDirectory(unZipDir + directoryName);                      }                      if (!directoryName.EndsWith("/"))                          directoryName += "/";                      if (fileName != string.Empty)                      {                          try                          {                              using (FileStream streamWriter = File.Create(unZipDir + theEntry.Name))                              {                                    int size = 2048;                                  byte[] data = new byte[2048];                                  while (true)                                  {                                      size = s.Read(data' 0' data.Length);                                      if (size > 0)                                      {                                          streamWriter.Write(data' 0' size);                                      }                                      else                                      {                                          break;                                      }                                  }                              }                          }                          catch (Exception ex)                          {                              Log.WriteLog("Err_UnZip_" + DateTime.Now.ToFileTime() + ".log"' ex.ToString());                                ErrorMsg err = new ErrorMsg(ex.Message.Substring(0' 20) + "...");                              err.ShowDialog();                          }                      }                  }              }
Magic Number,wintogo,ZipHelper,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\ZipHelper.cs,UnZip,The following statement contains a magic number: using (ZipInputStream s = new ZipInputStream(File.OpenRead(zipFilePath)))              {                    ZipEntry theEntry;                  while ((theEntry = s.GetNextEntry()) != null)                  {                      string directoryName = Path.GetDirectoryName(theEntry.Name);                      string fileName = Path.GetFileName(theEntry.Name);                      if (directoryName.Length > 0)                      {                          Directory.CreateDirectory(unZipDir + directoryName);                      }                      if (!directoryName.EndsWith("/"))                          directoryName += "/";                      if (fileName != string.Empty)                      {                          try                          {                              using (FileStream streamWriter = File.Create(unZipDir + theEntry.Name))                              {                                    int size = 2048;                                  byte[] data = new byte[2048];                                  while (true)                                  {                                      size = s.Read(data' 0' data.Length);                                      if (size > 0)                                      {                                          streamWriter.Write(data' 0' size);                                      }                                      else                                      {                                          break;                                      }                                  }                              }                          }                          catch (Exception ex)                          {                              Log.WriteLog("Err_UnZip_" + DateTime.Now.ToFileTime() + ".log"' ex.ToString());                                ErrorMsg err = new ErrorMsg(ex.Message.Substring(0' 20) + "...");                              err.ShowDialog();                          }                      }                  }              }
Magic Number,wintogo,ZipHelper,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\ZipHelper.cs,UnZip,The following statement contains a magic number: using (ZipInputStream s = new ZipInputStream(File.OpenRead(zipFilePath)))              {                    ZipEntry theEntry;                  while ((theEntry = s.GetNextEntry()) != null)                  {                      string directoryName = Path.GetDirectoryName(theEntry.Name);                      string fileName = Path.GetFileName(theEntry.Name);                      if (directoryName.Length > 0)                      {                          Directory.CreateDirectory(unZipDir + directoryName);                      }                      if (!directoryName.EndsWith("/"))                          directoryName += "/";                      if (fileName != string.Empty)                      {                          try                          {                              using (FileStream streamWriter = File.Create(unZipDir + theEntry.Name))                              {                                    int size = 2048;                                  byte[] data = new byte[2048];                                  while (true)                                  {                                      size = s.Read(data' 0' data.Length);                                      if (size > 0)                                      {                                          streamWriter.Write(data' 0' size);                                      }                                      else                                      {                                          break;                                      }                                  }                              }                          }                          catch (Exception ex)                          {                              Log.WriteLog("Err_UnZip_" + DateTime.Now.ToFileTime() + ".log"' ex.ToString());                                ErrorMsg err = new ErrorMsg(ex.Message.Substring(0' 20) + "...");                              err.ShowDialog();                          }                      }                  }              }
Magic Number,wintogo,ZipHelper,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\ZipHelper.cs,ZipFile,The following statement contains a magic number: using (FileStream fs = File.OpenRead(fileToZip))              {                  byte[] buffer = new byte[fs.Length];                  fs.Read(buffer' 0' buffer.Length);                  fs.Close();                    using (FileStream ZipFile = File.Create(zipedFile))                  {                      using (ZipOutputStream ZipStream = new ZipOutputStream(ZipFile))                      {                          string fileName = fileToZip.Substring(fileToZip.LastIndexOf("\\") + 1);                          ZipEntry ZipEntry = new ZipEntry(fileName);                          ZipStream.PutNextEntry(ZipEntry);                          ZipStream.SetLevel(5);                            ZipStream.Write(buffer' 0' buffer.Length);                          ZipStream.Finish();                          ZipStream.Close();                      }                  }              }
Magic Number,wintogo,IniFile,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\IniOperation.cs,ReadVal,The following statement contains a magic number: StringBuilder retVal = new StringBuilder(260);
Magic Number,wintogo,IniFile,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\IniOperation.cs,ReadVal,The following statement contains a magic number: int size = 102400;
Magic Number,wintogo,IniFile,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\IniOperation.cs,ReadVal,The following statement contains a magic number: int size = 10240;
Magic Number,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                      int c = 0;                      while (!wp.IsHandleCreated)                      {                          if (++c > 100)                          {                              return;                          }                          Thread.Sleep(50);                      }                      //IntPtr IsHandleCreated = wp.Handle;                      string[] txtLines = wp.textBox1.Lines;                      if (txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n"))                      {                          wp.textBox1.BeginInvoke(new Action(() => { wp.textBox1.AppendText(text); }));                      }                  }                  catch (Exception ex)                  {                      Log.WriteLog("Err_AppendText"' ex.ToString());                      Console.WriteLine(ex);                      //MessageBox.Show(ex.ToString());                  }              });
Magic Number,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                      int c = 0;                      while (!wp.IsHandleCreated)                      {                          if (++c > 100)                          {                              return;                          }                          Thread.Sleep(50);                      }                      //IntPtr IsHandleCreated = wp.Handle;                      string[] txtLines = wp.textBox1.Lines;                      if (txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n"))                      {                          wp.textBox1.BeginInvoke(new Action(() => { wp.textBox1.AppendText(text); }));                      }                  }                  catch (Exception ex)                  {                      Log.WriteLog("Err_AppendText"' ex.ToString());                      Console.WriteLine(ex);                      //MessageBox.Show(ex.ToString());                  }              });
Magic Number,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                      int c = 0;                      while (!wp.IsHandleCreated)                      {                          if (++c > 100)                          {                              return;                          }                          Thread.Sleep(50);                      }                      //IntPtr IsHandleCreated = wp.Handle;                      string[] txtLines = wp.textBox1.Lines;                      if (txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n"))                      {                          wp.textBox1.BeginInvoke(new Action(() => { wp.textBox1.AppendText(text); }));                      }                  }                  catch (Exception ex)                  {                      Log.WriteLog("Err_AppendText"' ex.ToString());                      Console.WriteLine(ex);                      //MessageBox.Show(ex.ToString());                  }              });
Magic Number,wintogo,ProcessManager,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\ProcessManager.cs,AppendText,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                      int c = 0;                      while (!wp.IsHandleCreated)                      {                          if (++c > 100)                          {                              return;                          }                          Thread.Sleep(50);                      }                      //IntPtr IsHandleCreated = wp.Handle;                      string[] txtLines = wp.textBox1.Lines;                      if (txtLines.Length == 0 || txtLines.Length == 1 || (txtLines.Length - 2 >= 0 && text != txtLines[txtLines.Length - 2] + "\r\n"))                      {                          wp.textBox1.BeginInvoke(new Action(() => { wp.textBox1.AppendText(text); }));                      }                  }                  catch (Exception ex)                  {                      Log.WriteLog("Err_AppendText"' ex.ToString());                      Console.WriteLine(ex);                      //MessageBox.Show(ex.ToString());                  }              });
Magic Number,wintogo,StringUtility,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\StringOperation.cs,IsChina,The following statement contains a magic number: for (int i = 0; i < CString.Length; i++)              {                  if (Convert.ToInt32(Convert.ToChar(CString.Substring(i' 1))) > Convert.ToInt32(Convert.ToChar(128)))                  {                      BoolValue = true;                  }                }
Magic Number,wintogo,StringUtility,C:\repos\nkc3g4_wtg-assistant\wintogo\Utility\StringOperation.cs,IsChinaOrContainSpace,The following statement contains a magic number: for (int i = 0; i < CString.Length; i++)              {                  if (Convert.ToInt32(Convert.ToChar(CString.Substring(i' 1))) > Convert.ToInt32(Convert.ToChar(128)))                  {                      BoolValue = true;                  }                }
Magic Number,wintogo,SWOnline,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\SWOnline.cs,Update,The following statement contains a magic number: try              {                  WebClient MyWebClient = new WebClient();                  //MyWebClient.Headers.Add("user-agent"' "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)");                  MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                  byte[] pageData = MyWebClient.DownloadData(releaseUrl); //从指定网站下载数据"http://bbs.luobotou.org/app/wintogo.txt"                    pageHtml = Encoding.UTF8.GetString(pageData);                  int index = pageHtml.IndexOf("~");                  Version newVer = new Version(pageHtml.Substring(index + 1' 7));                  Version currentVer = new Version(Application.ProductVersion);                                    if (newVer > currentVer)                  {                      Update frmf = new Update(newVer.ToString());                      frmf.ShowDialog();                  }                }              catch (WebException webEx)              {                  //Console.WriteLine(webEx.Message.ToString());                  Log.WriteLog("Err_UpdateErr"' webEx.ToString());              }
Magic Number,wintogo,SWOnline,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\SWOnline.cs,Showad,The following statement contains a magic number: try              {                  WebClient MyWebClient = new WebClient();                    MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                                    byte[] pageData = MyWebClient.DownloadData("http://bbs.luobotou.org/app/wintogo.txt"); //从指定网站下载数据                  //MyWebClient.DownloadString()                  pageHtml = Encoding.UTF8.GetString(pageData);                  int index = pageHtml.IndexOf("announcement=");                  int indexbbs = pageHtml.IndexOf("bbs=");                  if (pageHtml.Substring(index + 13' 1) != "0" && MsgManager.ci.EnglishName != "English")                  {                      if (pageHtml.Substring(indexbbs + 4' 1) == "1")                      {                          //string pageHtml;                          //WebClient MyWebClient2 = new WebClient();                          MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                          byte[] pageData1 = MyWebClient.DownloadData("http://bbs.luobotou.org/portal.php"); //从指定网站下载数据                          pageHtml = Encoding.UTF8.GetString(pageData1);                            #region 正则表达式实现                                                 Match matchArticles = Regex.Match(pageHtml' @"<ul><li><a href=[\W\w]+?</li></ul>");                          MatchCollection matches = Regex.Matches(matchArticles.Groups[0].Value' @"<li><a href=""(.+?)"".+?>(.+?)</a></li>");                                           for (int i = 0; i < matches.Count; i++)                          {                              TopicLink[i] = matches[i].Groups[1].Value;                              TopicName[i] = matches[i].Groups[2].Value;                          }                          #endregion                                //int index1 = pageHtml.IndexOf("<ul><li><a href=");                          //for (int i = 0; i < 10; i++)                          //{                            //    int LinkStartIndex = pageHtml.IndexOf("<li><a href="' index1) + 13;                          //    int LinkEndIndex = pageHtml.IndexOf("\""' LinkStartIndex);                          //    int TitleStartIndex = pageHtml.IndexOf("title="' LinkEndIndex) + 7;                          //    int TitleEndIndex = pageHtml.IndexOf("\""' TitleStartIndex);                          //    topicLink[i] = pageHtml.Substring(LinkStartIndex' LinkEndIndex - LinkStartIndex);                          //    topicName[i] = pageHtml.Substring(TitleStartIndex' TitleEndIndex - TitleStartIndex);                          //    index1 = LinkEndIndex;                          //    //topicstring                           //    //int adprogram = index1 + Application.ProductName.Length + 1;                          //}                      }                      //string pageHtml1;                      //WebClient MyWebClient1 = new WebClient();                      //MyWebClient1.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                      //MyWebClient1.Encoding = Encoding.UTF8;                      pageHtml = MyWebClient.DownloadString("http://bbs.luobotou.org/app/announcement.txt");                      Match match = Regex.Match(pageHtml' Application.ProductName + "=(.+)~(.+)结束");                      string adlink = match.Groups[2].Value;                      string adtitle = match.Groups[1].Value;                      linkLabel.Invoke(new Action(() =>                       {                          linkLabel.Text = adtitle;                          linkLabel.Visible = true;                      }));                      linkLabel.Tag = adlink;                  }              }              catch (Exception ex)              {                    Log.WriteLog("Err_ShowAdError"' ex.ToString());              }
Magic Number,wintogo,SWOnline,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\SWOnline.cs,Showad,The following statement contains a magic number: try              {                  WebClient MyWebClient = new WebClient();                    MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                                    byte[] pageData = MyWebClient.DownloadData("http://bbs.luobotou.org/app/wintogo.txt"); //从指定网站下载数据                  //MyWebClient.DownloadString()                  pageHtml = Encoding.UTF8.GetString(pageData);                  int index = pageHtml.IndexOf("announcement=");                  int indexbbs = pageHtml.IndexOf("bbs=");                  if (pageHtml.Substring(index + 13' 1) != "0" && MsgManager.ci.EnglishName != "English")                  {                      if (pageHtml.Substring(indexbbs + 4' 1) == "1")                      {                          //string pageHtml;                          //WebClient MyWebClient2 = new WebClient();                          MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                          byte[] pageData1 = MyWebClient.DownloadData("http://bbs.luobotou.org/portal.php"); //从指定网站下载数据                          pageHtml = Encoding.UTF8.GetString(pageData1);                            #region 正则表达式实现                                                 Match matchArticles = Regex.Match(pageHtml' @"<ul><li><a href=[\W\w]+?</li></ul>");                          MatchCollection matches = Regex.Matches(matchArticles.Groups[0].Value' @"<li><a href=""(.+?)"".+?>(.+?)</a></li>");                                           for (int i = 0; i < matches.Count; i++)                          {                              TopicLink[i] = matches[i].Groups[1].Value;                              TopicName[i] = matches[i].Groups[2].Value;                          }                          #endregion                                //int index1 = pageHtml.IndexOf("<ul><li><a href=");                          //for (int i = 0; i < 10; i++)                          //{                            //    int LinkStartIndex = pageHtml.IndexOf("<li><a href="' index1) + 13;                          //    int LinkEndIndex = pageHtml.IndexOf("\""' LinkStartIndex);                          //    int TitleStartIndex = pageHtml.IndexOf("title="' LinkEndIndex) + 7;                          //    int TitleEndIndex = pageHtml.IndexOf("\""' TitleStartIndex);                          //    topicLink[i] = pageHtml.Substring(LinkStartIndex' LinkEndIndex - LinkStartIndex);                          //    topicName[i] = pageHtml.Substring(TitleStartIndex' TitleEndIndex - TitleStartIndex);                          //    index1 = LinkEndIndex;                          //    //topicstring                           //    //int adprogram = index1 + Application.ProductName.Length + 1;                          //}                      }                      //string pageHtml1;                      //WebClient MyWebClient1 = new WebClient();                      //MyWebClient1.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                      //MyWebClient1.Encoding = Encoding.UTF8;                      pageHtml = MyWebClient.DownloadString("http://bbs.luobotou.org/app/announcement.txt");                      Match match = Regex.Match(pageHtml' Application.ProductName + "=(.+)~(.+)结束");                      string adlink = match.Groups[2].Value;                      string adtitle = match.Groups[1].Value;                      linkLabel.Invoke(new Action(() =>                       {                          linkLabel.Text = adtitle;                          linkLabel.Visible = true;                      }));                      linkLabel.Tag = adlink;                  }              }              catch (Exception ex)              {                    Log.WriteLog("Err_ShowAdError"' ex.ToString());              }
Magic Number,wintogo,SWOnline,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\SWOnline.cs,Showad,The following statement contains a magic number: try              {                  WebClient MyWebClient = new WebClient();                    MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                                    byte[] pageData = MyWebClient.DownloadData("http://bbs.luobotou.org/app/wintogo.txt"); //从指定网站下载数据                  //MyWebClient.DownloadString()                  pageHtml = Encoding.UTF8.GetString(pageData);                  int index = pageHtml.IndexOf("announcement=");                  int indexbbs = pageHtml.IndexOf("bbs=");                  if (pageHtml.Substring(index + 13' 1) != "0" && MsgManager.ci.EnglishName != "English")                  {                      if (pageHtml.Substring(indexbbs + 4' 1) == "1")                      {                          //string pageHtml;                          //WebClient MyWebClient2 = new WebClient();                          MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                          byte[] pageData1 = MyWebClient.DownloadData("http://bbs.luobotou.org/portal.php"); //从指定网站下载数据                          pageHtml = Encoding.UTF8.GetString(pageData1);                            #region 正则表达式实现                                                 Match matchArticles = Regex.Match(pageHtml' @"<ul><li><a href=[\W\w]+?</li></ul>");                          MatchCollection matches = Regex.Matches(matchArticles.Groups[0].Value' @"<li><a href=""(.+?)"".+?>(.+?)</a></li>");                                           for (int i = 0; i < matches.Count; i++)                          {                              TopicLink[i] = matches[i].Groups[1].Value;                              TopicName[i] = matches[i].Groups[2].Value;                          }                          #endregion                                //int index1 = pageHtml.IndexOf("<ul><li><a href=");                          //for (int i = 0; i < 10; i++)                          //{                            //    int LinkStartIndex = pageHtml.IndexOf("<li><a href="' index1) + 13;                          //    int LinkEndIndex = pageHtml.IndexOf("\""' LinkStartIndex);                          //    int TitleStartIndex = pageHtml.IndexOf("title="' LinkEndIndex) + 7;                          //    int TitleEndIndex = pageHtml.IndexOf("\""' TitleStartIndex);                          //    topicLink[i] = pageHtml.Substring(LinkStartIndex' LinkEndIndex - LinkStartIndex);                          //    topicName[i] = pageHtml.Substring(TitleStartIndex' TitleEndIndex - TitleStartIndex);                          //    index1 = LinkEndIndex;                          //    //topicstring                           //    //int adprogram = index1 + Application.ProductName.Length + 1;                          //}                      }                      //string pageHtml1;                      //WebClient MyWebClient1 = new WebClient();                      //MyWebClient1.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                      //MyWebClient1.Encoding = Encoding.UTF8;                      pageHtml = MyWebClient.DownloadString("http://bbs.luobotou.org/app/announcement.txt");                      Match match = Regex.Match(pageHtml' Application.ProductName + "=(.+)~(.+)结束");                      string adlink = match.Groups[2].Value;                      string adtitle = match.Groups[1].Value;                      linkLabel.Invoke(new Action(() =>                       {                          linkLabel.Text = adtitle;                          linkLabel.Visible = true;                      }));                      linkLabel.Tag = adlink;                  }              }              catch (Exception ex)              {                    Log.WriteLog("Err_ShowAdError"' ex.ToString());              }
Magic Number,wintogo,SWOnline,C:\repos\nkc3g4_wtg-assistant\wintogo\Classes\SWOnline.cs,Showad,The following statement contains a magic number: try              {                  WebClient MyWebClient = new WebClient();                    MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                                    byte[] pageData = MyWebClient.DownloadData("http://bbs.luobotou.org/app/wintogo.txt"); //从指定网站下载数据                  //MyWebClient.DownloadString()                  pageHtml = Encoding.UTF8.GetString(pageData);                  int index = pageHtml.IndexOf("announcement=");                  int indexbbs = pageHtml.IndexOf("bbs=");                  if (pageHtml.Substring(index + 13' 1) != "0" && MsgManager.ci.EnglishName != "English")                  {                      if (pageHtml.Substring(indexbbs + 4' 1) == "1")                      {                          //string pageHtml;                          //WebClient MyWebClient2 = new WebClient();                          MyWebClient.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                          byte[] pageData1 = MyWebClient.DownloadData("http://bbs.luobotou.org/portal.php"); //从指定网站下载数据                          pageHtml = Encoding.UTF8.GetString(pageData1);                            #region 正则表达式实现                                                 Match matchArticles = Regex.Match(pageHtml' @"<ul><li><a href=[\W\w]+?</li></ul>");                          MatchCollection matches = Regex.Matches(matchArticles.Groups[0].Value' @"<li><a href=""(.+?)"".+?>(.+?)</a></li>");                                           for (int i = 0; i < matches.Count; i++)                          {                              TopicLink[i] = matches[i].Groups[1].Value;                              TopicName[i] = matches[i].Groups[2].Value;                          }                          #endregion                                //int index1 = pageHtml.IndexOf("<ul><li><a href=");                          //for (int i = 0; i < 10; i++)                          //{                            //    int LinkStartIndex = pageHtml.IndexOf("<li><a href="' index1) + 13;                          //    int LinkEndIndex = pageHtml.IndexOf("\""' LinkStartIndex);                          //    int TitleStartIndex = pageHtml.IndexOf("title="' LinkEndIndex) + 7;                          //    int TitleEndIndex = pageHtml.IndexOf("\""' TitleStartIndex);                          //    topicLink[i] = pageHtml.Substring(LinkStartIndex' LinkEndIndex - LinkStartIndex);                          //    topicName[i] = pageHtml.Substring(TitleStartIndex' TitleEndIndex - TitleStartIndex);                          //    index1 = LinkEndIndex;                          //    //topicstring                           //    //int adprogram = index1 + Application.ProductName.Length + 1;                          //}                      }                      //string pageHtml1;                      //WebClient MyWebClient1 = new WebClient();                      //MyWebClient1.Credentials = CredentialCache.DefaultCredentials;//获取或设置用于对向Internet资源的请求进行身份验证的网络凭据。                      //MyWebClient1.Encoding = Encoding.UTF8;                      pageHtml = MyWebClient.DownloadString("http://bbs.luobotou.org/app/announcement.txt");                      Match match = Regex.Match(pageHtml' Application.ProductName + "=(.+)~(.+)结束");                      string adlink = match.Groups[2].Value;                      string adtitle = match.Groups[1].Value;                      linkLabel.Invoke(new Action(() =>                       {                          linkLabel.Text = adtitle;                          linkLabel.Visible = true;                      }));                      linkLabel.Tag = adlink;                  }              }              catch (Exception ex)              {                    Log.WriteLog("Err_ShowAdError"' ex.ToString());              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,Execute,The following statement contains a magic number: try              {                  if (WTGModel.choosedImageType == "vhd" || WTGModel.choosedImageType == "vhdx")                  {                      CopyVHD();                        TwiceAttachVHDAndWriteBootFile();                    }                  else                  {                      CreateVHD();                      VHDExtra();                      WriteBootFiles();                      DetachVHD();                      CopyVHD();                      Thread.Sleep(1500);                      TwiceAttachVHDAndWriteBootFile();                      if (VhdType != "fixed") VHDDynamicSizeIns();                      FixBootFile();                  }              }              catch (UserCancelException)              {                  throw;              }              catch (VHDException ex)              {                  Log.WriteLog("Err_VHDException"' ex.ToString());                    ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              catch (Exception ex)              {                  MessageBox.Show("程序出现严重错误！\n" + ex.ToString());                  Log.WriteLog("Err_VHDFatalError"' ex.ToString());              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,SetVhdProp,The following statement contains a magic number: try              {                  if (Path.GetExtension(WTGModel.imageFilePath) == ".vhd" || Path.GetExtension(WTGModel.imageFilePath) == ".vhdx")                  {                      VhdType = string.Empty;                      VhdSize = string.Empty;                      VhdFileName = string.Empty;                      ExtensionType = string.Empty;                      VhdPath = WTGModel.imageFilePath;                      NeedCopy = true;                  }                  else                  {                      //    ////////////////vhd设定///////////////////////                      if (WTGModel.isFixedVHD)                      {                          VhdType = "fixed";                      }                      else                      {                          VhdType = "expandable";                      }                        long hardDiskSpace = DiskOperation.GetHardDiskSpace(WTGModel.ud) / 1048576;                        if (WTGModel.userSetSize != 0)                      {                          //MessageBox.Show(hardDiskSpace.ToString());                          //DiskOperation.GetHardDiskSpace(WTGModel.ud);                          if (WTGModel.userSetSize > hardDiskSpace - 500)                          {                              VhdSize = (hardDiskSpace - 500).ToString();                          }                          else                          {                              VhdSize = WTGModel.userSetSize.ToString();                          }                      }                      else                      {                            if (!WTGModel.isWimBoot)                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 1024))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 500).ToString();                              }                          }                          else                          {                              if (hardDiskSpace >= (int.Parse(vhdDefaultSize) + 4096))                              {                                  VhdSize = vhdDefaultSize;                              }                              else                              {                                  VhdSize = hardDiskSpace == 0 ? vhdDefaultSize : (hardDiskSpace - 4096).ToString();                              }                          }                      }                        ////////////////判断临时文件夹'VHD needcopy?///////////////////                      int vhdmaxsize;                      if (WTGModel.isFixedVHD)                      {                          vhdmaxsize = int.Parse(VhdSize) * 1024 + 1024;                      }                      else                      {                          vhdmaxsize = 10485670;//10GB                      }                        if (DiskOperation.GetHardDiskFreeSpace(WTGModel.vhdTempPath.Substring(0' 2) + "\\") <= vhdmaxsize * 1024L || StringUtility.IsChina(WTGModel.vhdTempPath) || (WTGModel.isUefiGpt && !WTGModel.isLegacyUdiskUefi) || (WTGModel.isUefiMbr && !WTGModel.isLegacyUdiskUefi) || WTGModel.isWimBoot || WTGModel.isNoTemp || WTGModel.CurrentOS == OS.Win7)                      {                          NeedCopy = false;                          VhdPath = StringUtility.Combine(WTGModel.ud' WTGModel.win8VHDFileName);                      }                      else                      {                          NeedCopy = true;                          VhdPath = StringUtility.Combine(WTGModel.vhdTempPath' WTGModel.win8VHDFileName);                      }                    }                  StringBuilder sb = new StringBuilder();                  sb.AppendLine(this.ExtensionType);                  sb.AppendLine(this.NeedCopy.ToString());                  sb.AppendLine(this.VhdFileName);                  sb.AppendLine(this.VhdPath);                  sb.AppendLine(this.VhdSize);                  sb.AppendLine(this.VhdType);                  Log.WriteLog("Info_VHDInfo"' sb.ToString());              }              catch (Exception ex)              {                  Log.WriteLog("Err_SetVhdProp"' ex.ToString());                  ErrorMsg er = new ErrorMsg(MsgManager.GetResString("Msg_VHDCreationError"' MsgManager.ci));                  er.ShowDialog();              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,BigFileCopy,The following statement contains a magic number: using (FileStream fsRead = File.OpenRead(source))              {                  using (FileStream fsWrite = File.OpenWrite(target))                  {                        byte[] byts = new byte[buffersize * 1024 * 1024];                      int r = 0;                      while ((r = fsRead.Read(byts' 0' byts.Length)) > 0)                      {                          fsWrite.Write(byts' 0' r);                          //Console.WriteLine(fsWrite.Position / (double)fsRead.Length * 100);                          //r = fsRead.Read(byts' 0' byts.Length);                      }                    }              }
Magic Number,wintogo,VHDOperation,C:\repos\nkc3g4_wtg-assistant\wintogo\Core\VHDOperation.cs,BigFileCopy,The following statement contains a magic number: using (FileStream fsRead = File.OpenRead(source))              {                  using (FileStream fsWrite = File.OpenWrite(target))                  {                        byte[] byts = new byte[buffersize * 1024 * 1024];                      int r = 0;                      while ((r = fsRead.Read(byts' 0' byts.Length)) > 0)                      {                          fsWrite.Write(byts' 0' r);                          //Console.WriteLine(fsWrite.Position / (double)fsRead.Length * 100);                          //r = fsRead.Read(byts' 0' byts.Length);                      }                    }              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,SystemDetection,The following statement contains a magic number: if (osVersionStr.Contains("5.1") || osVersionStr.Contains("6.0")) //XP 禁用功能              {                  radiobtnLegacy.Enabled = true;                  //radiobtnVhd.Enabled = false;                  //radiobtnVhdx.Enabled = false;                  //if (isInitialization)                  //{                  //}                  //groupBoxAdv.Enabled = false;                  checkBoxDiskpart.Checked = false;                  checkBoxDiskpart.Enabled = false;                  labelDisFunc.Visible = true;                  WTGModel.CurrentOS = OS.XP;              }              else if (osVersionStr.Contains("6.1"))//WIN7              {                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  radiobtnLegacy.Enabled = true;                  labelDisFunc.Visible = true;                  radiobtnVhdx.Enabled = false;                  WTGModel.CurrentOS = OS.Win7;              }              else if (osVersionStr.Contains("6.2") || osVersionStr.Contains("6.3"))//WIN8及以上              {                  radiobtnLegacy.Enabled = true;                  radiobtnVhd.Enabled = true;                  radiobtnVhdx.Enabled = true;                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  //if (isInitialization)                  //{                  //    radiobtnVhd.Checked = true;                  //}                  //WIN8.1 UPDATE1 WIMBOOT  已修复WIN10版本号问题                  string dismversion = FileOperation.GetFileVersion(System.Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe");                  if (dismversion.Substring(0' 14) == "6.3.9600.17031" || dismversion.Substring(0' 3) == "6.4")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      WTGModel.allowEsd = true;                      labelDisFunc.Visible = true;                      //labelDisFuncEM.Visible = true;                      WTGModel.CurrentOS = OS.Win8_1_with_update;                    }                  else if (dismversion.Substring(0' 3) == "10.")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      checkBoxCompactOS.Enabled = true;                      WTGModel.allowEsd = true;                      WTGModel.CurrentOS = OS.Win10;                    }                  else                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                        WTGModel.CurrentOS = OS.Win8_without_update;                  }                    //radiobtnLegacy.Checked = true;                  }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,SystemDetection,The following statement contains a magic number: if (osVersionStr.Contains("5.1") || osVersionStr.Contains("6.0")) //XP 禁用功能              {                  radiobtnLegacy.Enabled = true;                  //radiobtnVhd.Enabled = false;                  //radiobtnVhdx.Enabled = false;                  //if (isInitialization)                  //{                  //}                  //groupBoxAdv.Enabled = false;                  checkBoxDiskpart.Checked = false;                  checkBoxDiskpart.Enabled = false;                  labelDisFunc.Visible = true;                  WTGModel.CurrentOS = OS.XP;              }              else if (osVersionStr.Contains("6.1"))//WIN7              {                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  radiobtnLegacy.Enabled = true;                  labelDisFunc.Visible = true;                  radiobtnVhdx.Enabled = false;                  WTGModel.CurrentOS = OS.Win7;              }              else if (osVersionStr.Contains("6.2") || osVersionStr.Contains("6.3"))//WIN8及以上              {                  radiobtnLegacy.Enabled = true;                  radiobtnVhd.Enabled = true;                  radiobtnVhdx.Enabled = true;                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  //if (isInitialization)                  //{                  //    radiobtnVhd.Checked = true;                  //}                  //WIN8.1 UPDATE1 WIMBOOT  已修复WIN10版本号问题                  string dismversion = FileOperation.GetFileVersion(System.Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe");                  if (dismversion.Substring(0' 14) == "6.3.9600.17031" || dismversion.Substring(0' 3) == "6.4")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      WTGModel.allowEsd = true;                      labelDisFunc.Visible = true;                      //labelDisFuncEM.Visible = true;                      WTGModel.CurrentOS = OS.Win8_1_with_update;                    }                  else if (dismversion.Substring(0' 3) == "10.")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      checkBoxCompactOS.Enabled = true;                      WTGModel.allowEsd = true;                      WTGModel.CurrentOS = OS.Win10;                    }                  else                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                        WTGModel.CurrentOS = OS.Win8_without_update;                  }                    //radiobtnLegacy.Checked = true;                  }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,SystemDetection,The following statement contains a magic number: if (osVersionStr.Contains("5.1") || osVersionStr.Contains("6.0")) //XP 禁用功能              {                  radiobtnLegacy.Enabled = true;                  //radiobtnVhd.Enabled = false;                  //radiobtnVhdx.Enabled = false;                  //if (isInitialization)                  //{                  //}                  //groupBoxAdv.Enabled = false;                  checkBoxDiskpart.Checked = false;                  checkBoxDiskpart.Enabled = false;                  labelDisFunc.Visible = true;                  WTGModel.CurrentOS = OS.XP;              }              else if (osVersionStr.Contains("6.1"))//WIN7              {                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  radiobtnLegacy.Enabled = true;                  labelDisFunc.Visible = true;                  radiobtnVhdx.Enabled = false;                  WTGModel.CurrentOS = OS.Win7;              }              else if (osVersionStr.Contains("6.2") || osVersionStr.Contains("6.3"))//WIN8及以上              {                  radiobtnLegacy.Enabled = true;                  radiobtnVhd.Enabled = true;                  radiobtnVhdx.Enabled = true;                  checkBoxUefigpt.Enabled = true;                  checkBoxUefimbr.Enabled = true;                  //if (isInitialization)                  //{                  //    radiobtnVhd.Checked = true;                  //}                  //WIN8.1 UPDATE1 WIMBOOT  已修复WIN10版本号问题                  string dismversion = FileOperation.GetFileVersion(System.Environment.GetEnvironmentVariable("windir") + "\\System32\\dism.exe");                  if (dismversion.Substring(0' 14) == "6.3.9600.17031" || dismversion.Substring(0' 3) == "6.4")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      WTGModel.allowEsd = true;                      labelDisFunc.Visible = true;                      //labelDisFuncEM.Visible = true;                      WTGModel.CurrentOS = OS.Win8_1_with_update;                    }                  else if (dismversion.Substring(0' 3) == "10.")                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                      checkBoxWimboot.Enabled = true;                      checkBoxCompactOS.Enabled = true;                      WTGModel.allowEsd = true;                      WTGModel.CurrentOS = OS.Win10;                    }                  else                  {                      radiobtnLegacy.Enabled = true;                      radiobtnVhd.Enabled = true;                      radiobtnVhdx.Enabled = true;                      checkBoxUefigpt.Enabled = true;                      checkBoxUefimbr.Enabled = true;                        WTGModel.CurrentOS = OS.Win8_without_update;                  }                    //radiobtnLegacy.Checked = true;                  }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The following statement contains a magic number: try              {                    //wimpart = ChoosePart.part;//读取选择分卷，默认选择第一分卷                  #region 各种提示                  //各种提示                  //if (!checkBoxClone.Checked)                  //{                  //    if (lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "wim" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "esd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "vhd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 4' 4) != "vhdx")//不是WIM文件                  //    {                  //        //镜像文件选择错误！请选择install.wim！                  //        MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //        return;                  //    }                  //    else                  //    {                  //        //请选择install.wim文件                  //        if (!File.Exists(lblWim.Text))                  //        {                  //            MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //            return;                  //        }//文件不存在.                  //        WTGModel.imageFilePath = lblWim.Text;                  //    }                  //}                    if (!Directory.Exists(WTGModel.ud))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                  }//是否选择优盘                  if (DiskOperation.GetHardDiskSpace(WTGModel.ud) <= (12L * 1024 * 1024 * 1024)) //优盘容量<12 GB提示                  {                      //MsgManager.getResString("Msg_DiskSpaceWarning")                       //可移动磁盘容量不足16G，继续写入可能会导致程序出错！您确定要继续吗？                      if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_DiskSpaceWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                      {                          return;                      }                  }                    if (StringUtility.IsChinaOrContainSpace(WTGModel.vhdNameWithoutExt))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_VHDNameIllegal"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                    }                      //GB 是将要写入的优盘或移动硬盘\n误格式化，后果自负！                  StringBuilder formatTip = new StringBuilder();                  formatTip.AppendLine(MsgManager.GetResString("Msg_ConfirmChoose"' MsgManager.ci));                  formatTip.AppendFormat(WTGModel.udString);                  formatTip.AppendLine(MsgManager.GetResString("Msg_FormatTip"' MsgManager.ci));                  if (checkBoxDiskpart.Checked)//勾选重新分区提示                  {                      formatTip.AppendLine(MsgManager.GetResString("Msg_Repartition"' MsgManager.ci));                      FormatAlert fa = new FormatAlert(formatTip.ToString());                      //MsgManager.getResString("Msg_Repartition")                      //您勾选了重新分区，优盘或移动硬盘上的所有文件将被删除！\n注意是整个磁盘，不是一个分区！                      if (DialogResult.Yes != fa.ShowDialog())                      {                          return;                      }                    }                  else//普通格式化提示                  {                        if (!WTGModel.doNotFormat)                      {                          formatTip.AppendLine(MsgManager.GetResString("Msg_FormatWarning"' MsgManager.ci));                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                      else                      {                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                  }                  #endregion                    SystemSleepManagement.PreventSleep();                    //删除旧LOG文件                  VHDOperation.CleanTemp();                  Log.DeleteAllLogs();                  ProcessManager.KillProcessByName("bootice.exe");                  WriteProgramRunInfoToLog();                    writeSw.Restart();                      if (checkBoxUefigpt.Checked)                  {                      //UEFI+GPT                      if (Environment.OSVersion.ToString().Contains("5.1") || System.Environment.OSVersion.ToString().Contains("5.2"))                      {                          //MsgManager.getResString("Msg_XPUefiError")                          //XP系统不支持UEFI模式写入                          MessageBox.Show(MsgManager.GetResString("Msg_XPUefiError"' MsgManager.ci)); return;                      }                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          //普通优盘UEFI                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiGpt();                          FinishSuccessful();                          }                      else                      {                          //MsgManager.getResString("Msg_UefiFormatWarning")                          //您所选择的是UEFI模式，此模式将会格式化您的整个移动磁盘！\n注意是整个磁盘！！！\n程序将会删除所有优盘分区！                          //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                                DiskOperation.DiskPartGPTAndUEFI(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefi.txt\"");                          if (radiobtnLegacy.Checked)                          {                              //UEFI+GPT 传统                              if (Write.UefiGptTypical())                              { FinishSuccessful(); }                              }                          else // UEFI+GPT VHD、VHDX模式                          {                                if (Write.UefiGptVhdVhdx())                              { FinishSuccessful(); }                          }                      }                  }                  else if (checkBoxUefimbr.Checked)                  {                      //UEFI+MBR                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiMbr();                          FinishSuccessful();                            //MessageBox.Show(MsgManager.GetResString("Msg_UefiError"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                          //VisitWeb("http://bbs.luobotou.org/thread-6506-1-1.html");                          //return;                      }                      //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                      else                      {                          DiskpartScriptManager dsm = new DiskpartScriptManager();                          DiskOperation.GenerateMBRAndUEFIScript(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefimbr.txt\"");                            if (radiobtnLegacy.Checked)                          {                              if (Write.UEFIMBRTypical())                              {                                  FinishSuccessful();                              }                            }                          else //uefi MBR VHD、VHDX模式                          {                              if (Write.UefiMbrVHDVHDX())                              {                                  FinishSuccessful();                              }                          }                      }                      //MessageBox.Show("UEFI模式写入完成！\n请重启电脑用优盘启动\n如有问题，可去论坛反馈！"' "完成啦！"' MessageBoxButtons.OK' MessageBoxIcon.Information);                    }                  else //非UEFI模式                  {                      //传统                      #region 格式化                      if (WTGModel.udString.Contains("Removable Disk") && radiobtnLegacy.Checked)                      {                          if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_Legacywarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                          {                              return;                          }                      }                        if (!checkBoxDiskpart.Checked && !WTGModel.doNotFormat)//普通格式化                      {                          ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");                          //                      }                      else if (checkBoxDiskpart.Checked)                      {                          DiskOperation.DiskPartRePartitionUD(WTGModel.partitionSize);                        }                        #endregion                      ///////////////////////////////////正式开始////////////////////////////////////////////////                      if (radiobtnLegacy.Checked)                      {                          if (Write.NonUEFITypical(false))                          {                              FinishSuccessful();                          }                        }                      else //非UEFI VHD VHDX                      {                          if (Write.NonUEFIVHDVHDX(false))                          {                              FinishSuccessful();                          }                      }                  }                }              catch (UserCancelException ex)              {                  Log.WriteLog("Err_UserCancelException"' ex.ToString());                  ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              catch (Exception ex)              {                  Log.WriteLog("Err_Exception"' ex.ToString());                    ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              finally              {                  writeSw.Stop();                  SystemSleepManagement.ResotreSleep();              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The following statement contains a magic number: try              {                    //wimpart = ChoosePart.part;//读取选择分卷，默认选择第一分卷                  #region 各种提示                  //各种提示                  //if (!checkBoxClone.Checked)                  //{                  //    if (lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "wim" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "esd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "vhd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 4' 4) != "vhdx")//不是WIM文件                  //    {                  //        //镜像文件选择错误！请选择install.wim！                  //        MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //        return;                  //    }                  //    else                  //    {                  //        //请选择install.wim文件                  //        if (!File.Exists(lblWim.Text))                  //        {                  //            MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //            return;                  //        }//文件不存在.                  //        WTGModel.imageFilePath = lblWim.Text;                  //    }                  //}                    if (!Directory.Exists(WTGModel.ud))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                  }//是否选择优盘                  if (DiskOperation.GetHardDiskSpace(WTGModel.ud) <= (12L * 1024 * 1024 * 1024)) //优盘容量<12 GB提示                  {                      //MsgManager.getResString("Msg_DiskSpaceWarning")                       //可移动磁盘容量不足16G，继续写入可能会导致程序出错！您确定要继续吗？                      if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_DiskSpaceWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                      {                          return;                      }                  }                    if (StringUtility.IsChinaOrContainSpace(WTGModel.vhdNameWithoutExt))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_VHDNameIllegal"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                    }                      //GB 是将要写入的优盘或移动硬盘\n误格式化，后果自负！                  StringBuilder formatTip = new StringBuilder();                  formatTip.AppendLine(MsgManager.GetResString("Msg_ConfirmChoose"' MsgManager.ci));                  formatTip.AppendFormat(WTGModel.udString);                  formatTip.AppendLine(MsgManager.GetResString("Msg_FormatTip"' MsgManager.ci));                  if (checkBoxDiskpart.Checked)//勾选重新分区提示                  {                      formatTip.AppendLine(MsgManager.GetResString("Msg_Repartition"' MsgManager.ci));                      FormatAlert fa = new FormatAlert(formatTip.ToString());                      //MsgManager.getResString("Msg_Repartition")                      //您勾选了重新分区，优盘或移动硬盘上的所有文件将被删除！\n注意是整个磁盘，不是一个分区！                      if (DialogResult.Yes != fa.ShowDialog())                      {                          return;                      }                    }                  else//普通格式化提示                  {                        if (!WTGModel.doNotFormat)                      {                          formatTip.AppendLine(MsgManager.GetResString("Msg_FormatWarning"' MsgManager.ci));                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                      else                      {                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                  }                  #endregion                    SystemSleepManagement.PreventSleep();                    //删除旧LOG文件                  VHDOperation.CleanTemp();                  Log.DeleteAllLogs();                  ProcessManager.KillProcessByName("bootice.exe");                  WriteProgramRunInfoToLog();                    writeSw.Restart();                      if (checkBoxUefigpt.Checked)                  {                      //UEFI+GPT                      if (Environment.OSVersion.ToString().Contains("5.1") || System.Environment.OSVersion.ToString().Contains("5.2"))                      {                          //MsgManager.getResString("Msg_XPUefiError")                          //XP系统不支持UEFI模式写入                          MessageBox.Show(MsgManager.GetResString("Msg_XPUefiError"' MsgManager.ci)); return;                      }                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          //普通优盘UEFI                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiGpt();                          FinishSuccessful();                          }                      else                      {                          //MsgManager.getResString("Msg_UefiFormatWarning")                          //您所选择的是UEFI模式，此模式将会格式化您的整个移动磁盘！\n注意是整个磁盘！！！\n程序将会删除所有优盘分区！                          //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                                DiskOperation.DiskPartGPTAndUEFI(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefi.txt\"");                          if (radiobtnLegacy.Checked)                          {                              //UEFI+GPT 传统                              if (Write.UefiGptTypical())                              { FinishSuccessful(); }                              }                          else // UEFI+GPT VHD、VHDX模式                          {                                if (Write.UefiGptVhdVhdx())                              { FinishSuccessful(); }                          }                      }                  }                  else if (checkBoxUefimbr.Checked)                  {                      //UEFI+MBR                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiMbr();                          FinishSuccessful();                            //MessageBox.Show(MsgManager.GetResString("Msg_UefiError"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                          //VisitWeb("http://bbs.luobotou.org/thread-6506-1-1.html");                          //return;                      }                      //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                      else                      {                          DiskpartScriptManager dsm = new DiskpartScriptManager();                          DiskOperation.GenerateMBRAndUEFIScript(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefimbr.txt\"");                            if (radiobtnLegacy.Checked)                          {                              if (Write.UEFIMBRTypical())                              {                                  FinishSuccessful();                              }                            }                          else //uefi MBR VHD、VHDX模式                          {                              if (Write.UefiMbrVHDVHDX())                              {                                  FinishSuccessful();                              }                          }                      }                      //MessageBox.Show("UEFI模式写入完成！\n请重启电脑用优盘启动\n如有问题，可去论坛反馈！"' "完成啦！"' MessageBoxButtons.OK' MessageBoxIcon.Information);                    }                  else //非UEFI模式                  {                      //传统                      #region 格式化                      if (WTGModel.udString.Contains("Removable Disk") && radiobtnLegacy.Checked)                      {                          if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_Legacywarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                          {                              return;                          }                      }                        if (!checkBoxDiskpart.Checked && !WTGModel.doNotFormat)//普通格式化                      {                          ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");                          //                      }                      else if (checkBoxDiskpart.Checked)                      {                          DiskOperation.DiskPartRePartitionUD(WTGModel.partitionSize);                        }                        #endregion                      ///////////////////////////////////正式开始////////////////////////////////////////////////                      if (radiobtnLegacy.Checked)                      {                          if (Write.NonUEFITypical(false))                          {                              FinishSuccessful();                          }                        }                      else //非UEFI VHD VHDX                      {                          if (Write.NonUEFIVHDVHDX(false))                          {                              FinishSuccessful();                          }                      }                  }                }              catch (UserCancelException ex)              {                  Log.WriteLog("Err_UserCancelException"' ex.ToString());                  ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              catch (Exception ex)              {                  Log.WriteLog("Err_Exception"' ex.ToString());                    ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              finally              {                  writeSw.Stop();                  SystemSleepManagement.ResotreSleep();              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The following statement contains a magic number: try              {                    //wimpart = ChoosePart.part;//读取选择分卷，默认选择第一分卷                  #region 各种提示                  //各种提示                  //if (!checkBoxClone.Checked)                  //{                  //    if (lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "wim" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "esd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "vhd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 4' 4) != "vhdx")//不是WIM文件                  //    {                  //        //镜像文件选择错误！请选择install.wim！                  //        MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //        return;                  //    }                  //    else                  //    {                  //        //请选择install.wim文件                  //        if (!File.Exists(lblWim.Text))                  //        {                  //            MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //            return;                  //        }//文件不存在.                  //        WTGModel.imageFilePath = lblWim.Text;                  //    }                  //}                    if (!Directory.Exists(WTGModel.ud))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                  }//是否选择优盘                  if (DiskOperation.GetHardDiskSpace(WTGModel.ud) <= (12L * 1024 * 1024 * 1024)) //优盘容量<12 GB提示                  {                      //MsgManager.getResString("Msg_DiskSpaceWarning")                       //可移动磁盘容量不足16G，继续写入可能会导致程序出错！您确定要继续吗？                      if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_DiskSpaceWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                      {                          return;                      }                  }                    if (StringUtility.IsChinaOrContainSpace(WTGModel.vhdNameWithoutExt))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_VHDNameIllegal"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                    }                      //GB 是将要写入的优盘或移动硬盘\n误格式化，后果自负！                  StringBuilder formatTip = new StringBuilder();                  formatTip.AppendLine(MsgManager.GetResString("Msg_ConfirmChoose"' MsgManager.ci));                  formatTip.AppendFormat(WTGModel.udString);                  formatTip.AppendLine(MsgManager.GetResString("Msg_FormatTip"' MsgManager.ci));                  if (checkBoxDiskpart.Checked)//勾选重新分区提示                  {                      formatTip.AppendLine(MsgManager.GetResString("Msg_Repartition"' MsgManager.ci));                      FormatAlert fa = new FormatAlert(formatTip.ToString());                      //MsgManager.getResString("Msg_Repartition")                      //您勾选了重新分区，优盘或移动硬盘上的所有文件将被删除！\n注意是整个磁盘，不是一个分区！                      if (DialogResult.Yes != fa.ShowDialog())                      {                          return;                      }                    }                  else//普通格式化提示                  {                        if (!WTGModel.doNotFormat)                      {                          formatTip.AppendLine(MsgManager.GetResString("Msg_FormatWarning"' MsgManager.ci));                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                      else                      {                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                  }                  #endregion                    SystemSleepManagement.PreventSleep();                    //删除旧LOG文件                  VHDOperation.CleanTemp();                  Log.DeleteAllLogs();                  ProcessManager.KillProcessByName("bootice.exe");                  WriteProgramRunInfoToLog();                    writeSw.Restart();                      if (checkBoxUefigpt.Checked)                  {                      //UEFI+GPT                      if (Environment.OSVersion.ToString().Contains("5.1") || System.Environment.OSVersion.ToString().Contains("5.2"))                      {                          //MsgManager.getResString("Msg_XPUefiError")                          //XP系统不支持UEFI模式写入                          MessageBox.Show(MsgManager.GetResString("Msg_XPUefiError"' MsgManager.ci)); return;                      }                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          //普通优盘UEFI                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiGpt();                          FinishSuccessful();                          }                      else                      {                          //MsgManager.getResString("Msg_UefiFormatWarning")                          //您所选择的是UEFI模式，此模式将会格式化您的整个移动磁盘！\n注意是整个磁盘！！！\n程序将会删除所有优盘分区！                          //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                                DiskOperation.DiskPartGPTAndUEFI(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefi.txt\"");                          if (radiobtnLegacy.Checked)                          {                              //UEFI+GPT 传统                              if (Write.UefiGptTypical())                              { FinishSuccessful(); }                              }                          else // UEFI+GPT VHD、VHDX模式                          {                                if (Write.UefiGptVhdVhdx())                              { FinishSuccessful(); }                          }                      }                  }                  else if (checkBoxUefimbr.Checked)                  {                      //UEFI+MBR                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiMbr();                          FinishSuccessful();                            //MessageBox.Show(MsgManager.GetResString("Msg_UefiError"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                          //VisitWeb("http://bbs.luobotou.org/thread-6506-1-1.html");                          //return;                      }                      //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                      else                      {                          DiskpartScriptManager dsm = new DiskpartScriptManager();                          DiskOperation.GenerateMBRAndUEFIScript(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefimbr.txt\"");                            if (radiobtnLegacy.Checked)                          {                              if (Write.UEFIMBRTypical())                              {                                  FinishSuccessful();                              }                            }                          else //uefi MBR VHD、VHDX模式                          {                              if (Write.UefiMbrVHDVHDX())                              {                                  FinishSuccessful();                              }                          }                      }                      //MessageBox.Show("UEFI模式写入完成！\n请重启电脑用优盘启动\n如有问题，可去论坛反馈！"' "完成啦！"' MessageBoxButtons.OK' MessageBoxIcon.Information);                    }                  else //非UEFI模式                  {                      //传统                      #region 格式化                      if (WTGModel.udString.Contains("Removable Disk") && radiobtnLegacy.Checked)                      {                          if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_Legacywarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                          {                              return;                          }                      }                        if (!checkBoxDiskpart.Checked && !WTGModel.doNotFormat)//普通格式化                      {                          ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");                          //                      }                      else if (checkBoxDiskpart.Checked)                      {                          DiskOperation.DiskPartRePartitionUD(WTGModel.partitionSize);                        }                        #endregion                      ///////////////////////////////////正式开始////////////////////////////////////////////////                      if (radiobtnLegacy.Checked)                      {                          if (Write.NonUEFITypical(false))                          {                              FinishSuccessful();                          }                        }                      else //非UEFI VHD VHDX                      {                          if (Write.NonUEFIVHDVHDX(false))                          {                              FinishSuccessful();                          }                      }                  }                }              catch (UserCancelException ex)              {                  Log.WriteLog("Err_UserCancelException"' ex.ToString());                  ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              catch (Exception ex)              {                  Log.WriteLog("Err_Exception"' ex.ToString());                    ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              finally              {                  writeSw.Stop();                  SystemSleepManagement.ResotreSleep();              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,GoWrite,The following statement contains a magic number: try              {                    //wimpart = ChoosePart.part;//读取选择分卷，默认选择第一分卷                  #region 各种提示                  //各种提示                  //if (!checkBoxClone.Checked)                  //{                  //    if (lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "wim" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "esd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 3' 3) != "vhd" && lblWim.Text.ToLower().Substring(lblWim.Text.Length - 4' 4) != "vhdx")//不是WIM文件                  //    {                  //        //镜像文件选择错误！请选择install.wim！                  //        MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //        return;                  //    }                  //    else                  //    {                  //        //请选择install.wim文件                  //        if (!File.Exists(lblWim.Text))                  //        {                  //            MessageBox.Show(MsgManager.GetResString("Msg_chooseinstallwim"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                  //            return;                  //        }//文件不存在.                  //        WTGModel.imageFilePath = lblWim.Text;                  //    }                  //}                    if (!Directory.Exists(WTGModel.ud))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_chooseud"' MsgManager.ci) + "!"' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                  }//是否选择优盘                  if (DiskOperation.GetHardDiskSpace(WTGModel.ud) <= (12L * 1024 * 1024 * 1024)) //优盘容量<12 GB提示                  {                      //MsgManager.getResString("Msg_DiskSpaceWarning")                       //可移动磁盘容量不足16G，继续写入可能会导致程序出错！您确定要继续吗？                      if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_DiskSpaceWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                      {                          return;                      }                  }                    if (StringUtility.IsChinaOrContainSpace(WTGModel.vhdNameWithoutExt))                  {                      MessageBox.Show(MsgManager.GetResString("Msg_VHDNameIllegal"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                      return;                    }                      //GB 是将要写入的优盘或移动硬盘\n误格式化，后果自负！                  StringBuilder formatTip = new StringBuilder();                  formatTip.AppendLine(MsgManager.GetResString("Msg_ConfirmChoose"' MsgManager.ci));                  formatTip.AppendFormat(WTGModel.udString);                  formatTip.AppendLine(MsgManager.GetResString("Msg_FormatTip"' MsgManager.ci));                  if (checkBoxDiskpart.Checked)//勾选重新分区提示                  {                      formatTip.AppendLine(MsgManager.GetResString("Msg_Repartition"' MsgManager.ci));                      FormatAlert fa = new FormatAlert(formatTip.ToString());                      //MsgManager.getResString("Msg_Repartition")                      //您勾选了重新分区，优盘或移动硬盘上的所有文件将被删除！\n注意是整个磁盘，不是一个分区！                      if (DialogResult.Yes != fa.ShowDialog())                      {                          return;                      }                    }                  else//普通格式化提示                  {                        if (!WTGModel.doNotFormat)                      {                          formatTip.AppendLine(MsgManager.GetResString("Msg_FormatWarning"' MsgManager.ci));                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                      else                      {                          FormatAlert fa = new FormatAlert(formatTip.ToString());                          if (DialogResult.Yes != fa.ShowDialog())                          {                              return;                          }                      }                  }                  #endregion                    SystemSleepManagement.PreventSleep();                    //删除旧LOG文件                  VHDOperation.CleanTemp();                  Log.DeleteAllLogs();                  ProcessManager.KillProcessByName("bootice.exe");                  WriteProgramRunInfoToLog();                    writeSw.Restart();                      if (checkBoxUefigpt.Checked)                  {                      //UEFI+GPT                      if (Environment.OSVersion.ToString().Contains("5.1") || System.Environment.OSVersion.ToString().Contains("5.2"))                      {                          //MsgManager.getResString("Msg_XPUefiError")                          //XP系统不支持UEFI模式写入                          MessageBox.Show(MsgManager.GetResString("Msg_XPUefiError"' MsgManager.ci)); return;                      }                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          //普通优盘UEFI                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiGpt();                          FinishSuccessful();                          }                      else                      {                          //MsgManager.getResString("Msg_UefiFormatWarning")                          //您所选择的是UEFI模式，此模式将会格式化您的整个移动磁盘！\n注意是整个磁盘！！！\n程序将会删除所有优盘分区！                          //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                                DiskOperation.DiskPartGPTAndUEFI(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefi.txt\"");                          if (radiobtnLegacy.Checked)                          {                              //UEFI+GPT 传统                              if (Write.UefiGptTypical())                              { FinishSuccessful(); }                              }                          else // UEFI+GPT VHD、VHDX模式                          {                                if (Write.UefiGptVhdVhdx())                              { FinishSuccessful(); }                          }                      }                  }                  else if (checkBoxUefimbr.Checked)                  {                      //UEFI+MBR                      if (WTGModel.udString.Contains("Removable Disk"))                      {                          WTGModel.isLegacyUdiskUefi = true;                          Write.RemoveableDiskUefiMbr();                          FinishSuccessful();                            //MessageBox.Show(MsgManager.GetResString("Msg_UefiError"' MsgManager.ci)' MsgManager.GetResString("Msg_error"' MsgManager.ci)' MessageBoxButtons.OK' MessageBoxIcon.Error);                          //VisitWeb("http://bbs.luobotou.org/thread-6506-1-1.html");                          //return;                      }                      //if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_UefiFormatWarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning)) { return; }                      else                      {                          DiskpartScriptManager dsm = new DiskpartScriptManager();                          DiskOperation.GenerateMBRAndUEFIScript(WTGModel.efiPartitionSize.ToString()' WTGModel.ud' WTGModel.partitionSize);                            //ProcessManager.ECMD("diskpart.exe"' " /s \"" + WTGOperation.diskpartScriptPath + "\\uefimbr.txt\"");                            if (radiobtnLegacy.Checked)                          {                              if (Write.UEFIMBRTypical())                              {                                  FinishSuccessful();                              }                            }                          else //uefi MBR VHD、VHDX模式                          {                              if (Write.UefiMbrVHDVHDX())                              {                                  FinishSuccessful();                              }                          }                      }                      //MessageBox.Show("UEFI模式写入完成！\n请重启电脑用优盘启动\n如有问题，可去论坛反馈！"' "完成啦！"' MessageBoxButtons.OK' MessageBoxIcon.Information);                    }                  else //非UEFI模式                  {                      //传统                      #region 格式化                      if (WTGModel.udString.Contains("Removable Disk") && radiobtnLegacy.Checked)                      {                          if (DialogResult.No == MessageBox.Show(MsgManager.GetResString("Msg_Legacywarning"' MsgManager.ci)' MsgManager.GetResString("Msg_warning"' MsgManager.ci)' MessageBoxButtons.YesNo' MessageBoxIcon.Warning))                          {                              return;                          }                      }                        if (!checkBoxDiskpart.Checked && !WTGModel.doNotFormat)//普通格式化                      {                          ProcessManager.ECMD("cmd.exe"' "/c format " + WTGModel.ud.Substring(0' 2) + "/FS:ntfs /q /V: /Y");                          //                      }                      else if (checkBoxDiskpart.Checked)                      {                          DiskOperation.DiskPartRePartitionUD(WTGModel.partitionSize);                        }                        #endregion                      ///////////////////////////////////正式开始////////////////////////////////////////////////                      if (radiobtnLegacy.Checked)                      {                          if (Write.NonUEFITypical(false))                          {                              FinishSuccessful();                          }                        }                      else //非UEFI VHD VHDX                      {                          if (Write.NonUEFIVHDVHDX(false))                          {                              FinishSuccessful();                          }                      }                  }                }              catch (UserCancelException ex)              {                  Log.WriteLog("Err_UserCancelException"' ex.ToString());                  ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              catch (Exception ex)              {                  Log.WriteLog("Err_Exception"' ex.ToString());                    ErrorMsg em = new ErrorMsg(ex.Message);                  em.ShowDialog();              }              finally              {                  writeSw.Stop();                  SystemSleepManagement.ResotreSleep();              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,diskpart重新分区ToolStripMenuItem1_Click,The following statement contains a magic number: WTGModel.ud = comboBoxUd.SelectedItem.ToString().Substring(0' 2) + "\\";
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,vHDUEFIBCDToolStripMenuItem_Click,The following statement contains a magic number: WTGModel.ud = comboBoxUd.SelectedItem.ToString().Substring(0' 2) + "\\";
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,修复盘符ToolStripMenuItem_Click,The following statement contains a magic number: WTGModel.ud = comboBoxUd.SelectedItem.ToString().Substring(0' 2) + "\\";
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,修复盘符ToolStripMenuItem_Click,The following statement contains a magic number: if (File.Exists(vhdPath = WTGModel.ud + "win8.vhd") || File.Exists(vhdPath = WTGModel.ud + "win8.vhdx"))              {                  VHDOperation vo = new VHDOperation();                  vo.AttachVHD(vhdPath);                  ImageOperation.Fixletter("C:"' "V:");                  vo.DetachVHD();              }              else              {                  ImageOperation.Fixletter("C:"' WTGModel.ud.Substring(0' 2));              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,Form1_Load,The following statement contains a magic number: Width = (int)(650 * (dpiX / 96.0));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,Form1_Load,The following statement contains a magic number: Width = (int)(650 * (dpiX / 96.0));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,Form1_Load,The following statement contains a magic number: if (currentRevision == 9)              {                  Text += "Preview Bulit:" + File.GetLastWriteTime(GetType().Assembly.Location);              }              else              {                  Text += Application.ProductVersion;                  if (currentRevision == 0)                  {                      if (autoCheckUpdate)                      {                          Thread threadUpdate = new Thread(swo.Update);                          threadUpdate.Start();                      }                      Thread threadShowad = new Thread(swo.Showad);                      threadShowad.Start();                  }              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: WTGModel.ud = comboBoxUd.SelectedItem.ToString().Substring(0' 2) + "\\";
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: if (comboBoxGb.SelectedIndex == 1)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024;              }              else if (comboBoxGb.SelectedIndex == 2)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024 * 1024;              }              else              {                  WTGModel.userSetSize = (int)numericUpDown1.Value;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: if (comboBoxGb.SelectedIndex == 1)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024;              }              else if (comboBoxGb.SelectedIndex == 2)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024 * 1024;              }              else              {                  WTGModel.userSetSize = (int)numericUpDown1.Value;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: if (comboBoxGb.SelectedIndex == 1)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024;              }              else if (comboBoxGb.SelectedIndex == 2)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024 * 1024;              }              else              {                  WTGModel.userSetSize = (int)numericUpDown1.Value;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: if (comboBoxGb.SelectedIndex == 1)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024;              }              else if (comboBoxGb.SelectedIndex == 2)              {                  WTGModel.userSetSize = (int)numericUpDown1.Value * 1024 * 1024;              }              else              {                  WTGModel.userSetSize = (int)numericUpDown1.Value;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: WTGModel.partitionSize = new string[3];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click,The following statement contains a magic number: WTGModel.partitionSize[2] = txtPartitionSize3.Text;
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,ManualSelectUdisk,The following statement contains a magic number: if (folderBrowserDialog1.SelectedPath.Length != 3)              {                  if (folderBrowserDialog1.SelectedPath.Length != 0)                  {                      //MsgManager.getResString("Msg_UDRoot")                      //请选择优盘根目录                      MessageBox.Show(MsgManager.GetResString("Msg_UDRoot"' MsgManager.ci));                  }                  return;                }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string convertTempString = Convert.ToString(Convert.ToInt32(u)' 16);
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: for (int i = convertTempString.Length; i < 8; i++)              {                  convertTempString = "0" + convertTempString;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex1 = convertTempString[6].ToString() + convertTempString[7];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex1 = convertTempString[6].ToString() + convertTempString[7];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex2 = convertTempString[4].ToString() + convertTempString[5];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex2 = convertTempString[4].ToString() + convertTempString[5];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex3 = convertTempString[2].ToString() + convertTempString[3];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: string hex3 = convertTempString[2].ToString() + convertTempString[3];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byte[] byts = new byte[4];
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[0] = Convert.ToByte(Convert.ToInt32(hex1' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[1] = Convert.ToByte(Convert.ToInt32(hex2' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[2] = Convert.ToByte(Convert.ToInt32(hex3' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[2] = Convert.ToByte(Convert.ToInt32(hex3' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[3] = Convert.ToByte(Convert.ToInt32(hex4' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,UlongToMBRBytes,The following statement contains a magic number: byts[3] = Convert.ToByte(Convert.ToInt32(hex4' 16));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,txtPartitionSize1_KeyPress,The following statement contains a magic number: if ((e.KeyChar < '0' || e.KeyChar > '9') && e.KeyChar != 8)              {                  e.Handled = true;              }              else              {                  checkBoxDiskpart.Checked = true;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,txtEfiSize_KeyPress,The following statement contains a magic number: if ((e.KeyChar < '0' || e.KeyChar > '9') && e.KeyChar != 8)              {                  e.Handled = true;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,txtPartitionSize2_KeyPress,The following statement contains a magic number: if ((e.KeyChar < '0' || e.KeyChar > '9') && e.KeyChar != 8)              {                  e.Handled = true;              }              else              {                  checkBoxDiskpart.Checked = true;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,txtPartitionSize3_KeyPress,The following statement contains a magic number: if ((e.KeyChar < '0' || e.KeyChar > '9') && e.KeyChar != 8)              {                  e.Handled = true;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,comboBoxUd_SelectedIndexChanged,The following statement contains a magic number: if (comboBoxUd.SelectedIndex != 0 && comboBoxUd.SelectedIndex != -1)              {                  btnGo.Enabled = true;                  groupBoxadv.Enabled = true;                    SystemDetection(false);                  WTGModel.UdObj = (UsbDisk)comboBoxUd.SelectedItem;                  udSizeInMB = (int)(WTGModel.UdObj.DiskSize / 1048576);                  txtPartitionSize3.Text = udSizeInMB.ToString();                  if (radiobtnVhd.Checked || radiobtnVhdx.Checked)                  {                      trackBar1.Enabled = true;                  }                    if (!WTGModel.UdObj.DriveType.Contains("Removable Disk"))                  {                      txtPartitionSize1.Enabled = true;                      txtPartitionSize2.Enabled = true;                      txtPartitionSize3.Enabled = true;                      if (checkBoxUefimbr.Enabled)                      {                          checkBoxUefimbr.Checked = true;                      }                    }                  else                  {                      txtPartitionSize1.Enabled = false;                      txtPartitionSize2.Enabled = false;                      txtPartitionSize3.Enabled = false;                  }                    if (WTGModel.UdObj.DiskSize == 0)                  {                      checkBoxUefimbr.Checked = false;                      checkBoxUefigpt.Checked = false;                      checkBoxUefimbr.Enabled = false;                      checkBoxUefigpt.Enabled = false;                  }                  //else                  //{                  //    checkBoxUefimbr.Enabled = true;                  //    checkBoxUefigpt.Enabled = true;                  //}                  }              else              {                  txtPartitionSize1.Enabled = false;                  txtPartitionSize2.Enabled = false;                  txtPartitionSize3.Enabled = false;              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,AutoSetNumbericVhdSize,The following statement contains a magic number: if (comboBoxUd.SelectedIndex != 0 && comboBoxUd.SelectedIndex != -1 && WTGModel.UdObj != null && udSizeInMB != 0)              {                  if (comboBoxGb.SelectedIndex == 0)                  {                      numericUpDown1.Value = (udSizeInMB / 10) * trackBar1.Value;                  }                  else if (comboBoxGb.SelectedIndex == 1)                  {                      numericUpDown1.Value = (int)(udSizeInMB / 10.0 * trackBar1.Value / 1024);                  }              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,AutoSetNumbericVhdSize,The following statement contains a magic number: if (comboBoxUd.SelectedIndex != 0 && comboBoxUd.SelectedIndex != -1 && WTGModel.UdObj != null && udSizeInMB != 0)              {                  if (comboBoxGb.SelectedIndex == 0)                  {                      numericUpDown1.Value = (udSizeInMB / 10) * trackBar1.Value;                  }                  else if (comboBoxGb.SelectedIndex == 1)                  {                      numericUpDown1.Value = (int)(udSizeInMB / 10.0 * trackBar1.Value / 1024);                  }              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,AutoSetNumbericVhdSize,The following statement contains a magic number: if (comboBoxUd.SelectedIndex != 0 && comboBoxUd.SelectedIndex != -1 && WTGModel.UdObj != null && udSizeInMB != 0)              {                  if (comboBoxGb.SelectedIndex == 0)                  {                      numericUpDown1.Value = (udSizeInMB / 10) * trackBar1.Value;                  }                  else if (comboBoxGb.SelectedIndex == 1)                  {                      numericUpDown1.Value = (int)(udSizeInMB / 10.0 * trackBar1.Value / 1024);                  }              }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The following statement contains a magic number: WTGModel.ud = comboBoxUd.SelectedItem.ToString().Substring(0' 2) + "\\";
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The following statement contains a magic number: ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\MakeWinPEMedia.cmd"' "/UFD /f \"" + Application.StartupPath + "\\wtg_clone\" " + WTGModel.ud.Substring(0' 2));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,克隆本机系统ToolStripMenuItem_Click,The following statement contains a magic number: ProcessManager.ECMD(WTGModel.applicationFilesPath + "\\bootsect.exe"' "/nt60 " + WTGModel.ud.Substring(0' 2) + " /force /mbr");
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,button1_Click_1,The following statement contains a magic number: if (folderBrowserDialog1.SelectedPath.Length != 3)              {                  if (folderBrowserDialog1.SelectedPath.Length != 0)                  {                      //MsgManager.getResString("Msg_UDRoot")                      //请选择优盘根目录                      MessageBox.Show(MsgManager.GetResString("Msg_UDRoot"' MsgManager.ci));                  }                  return;                }
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.lblWim.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.lblWim.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.lblWim.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Maximum = new decimal(new int[] {              99999999'              0'              0'              0});
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblRestoreMultiPartition.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblRestoreMultiPartition.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblRestoreMultiPartition.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblTabPage4Resotre.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblTabPage4Resotre.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Form1,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Form1.cs,InitializeComponent,The following statement contains a magic number: this.linklblTabPage4Resotre.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(21))))' ((int)(((byte)(112))))' ((int)(((byte)(166)))));
Magic Number,wintogo,Program,C:\repos\nkc3g4_wtg-assistant\wintogo\Program.cs,Main,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6) SetProcessDPIAware();
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: k = dpiX / 96;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: v1 = (int)(10 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: v2 = (int)(10 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: v3 = (int)(10 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: v4 = (int)(10 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB,The following statement contains a magic number: v5 = (int)(10 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: timer1.Interval = 50;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: timer2.Interval = 50;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: timer3.Interval = 50;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: timer4.Interval = 50;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: timer5.Interval = 50;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: label1.Left = (int)(500 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: label2.Left = (int)(500 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: label3.Left = (int)(500 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: label4.Left = (int)(500 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,Win8PB_Load,The following statement contains a magic number: label5.Left = (int)(500 * k);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer1_Tick,The following statement contains a magic number: if (p1 == 1)              {                  label1.Left += v1;                  v1 = (int)(v1 - 1);                  if (v1 == 2 * k) { p1 = 2; }              }              else if (p1 == 2)              {                    label1.Left += v1;                  if (label1.Left >= 150 * k)                  {                      p1 = 3;                  }              }              else if (p1 == 3)              {                  label1.Left += v1;                  v1 = (int)(v1 + 1);                  if (label1.Left > 300 * k && label5.Left > 300 * k) { label1.Left = 0; p1 = 1; v1 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer2_Tick,The following statement contains a magic number: if (p2 == 1 && label1.Left > 48 * k)              {                  label2.Left += v2;                  v2 = (int)(v2 - 1);                  if (v2 == 2 * k) { p2 = 2; }              }              else if (p2 == 2)              {                  label2.Left += v2;                  if (label2.Left >= 150 * k)                  {                      p2 = 3;                  }              }              else if (p2 == 3)              {                  label2.Left += v2;                  v2 = (int)(v2 + 1);                  if (label2.Left > 300 * k && label1.Left > 48 && label1.Left < 300 * k) { label2.Left = 0; p2 = 1; v2 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer3_Tick,The following statement contains a magic number: if (p3 == 1 && label2.Left > 48 * k)              {                    label3.Left += v3;                      v3 = (int)(v3 - 1);                  if (v3 == 2 * k) { p3 = 2; }              }              else if (p3 == 2)              {                  label3.Left += v3;                  if (label3.Left >= 150 * k)                  {                      p3 = 3;                  }              }              else if (p3 == 3)              {                  label3.Left += v3;                  v3 = (int)(v3 + 1);                  if (label3.Left > 300 * k && label2.Left > 48 * k && label2.Left < 300 * k) { label3.Left = 0; p3 = 1; v3 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer4_Tick,The following statement contains a magic number: if (p4 == 1 && label3.Left > 48 * k)              {                    label4.Left += v4;                      v4 = (int)(v4 - 1);                  if (v4 == 2 * k) { p4 = 2; }              }              else if (p4 == 2)              {                  label4.Left += v4;                  if (label4.Left >= 150 * k)                  {                      p4 = 3;                  }              }              else if (p4 == 3)              {                  label4.Left += v4;                  v4 = (int)(v4 + 1);                  if (label4.Left > 300 * k && label3.Left > 48 * k && label3.Left < 300 * k) { label4.Left = 0; p4 = 1; v4 = (int)(10 * k); }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,timer5_Tick,The following statement contains a magic number: if (p5 == 1 && label4.Left > 48 * k)              {                    label5.Left += v5;                      v5 = (int)(v5 - 1);                  if (v5 == 2 * k) { p5 = 2; }              }              else if (p5 == 2)              {                  label5.Left += v5;                  if (label5.Left >= 150 * k)                  {                      p5 = 3;                  }              }              else if (p5 == 3)              {                  label5.Left += v5;                  v5 = (int)(v5 + 1);                  if (label5.Left > 300 * k && label4.Left > 48 * k && label4.Left < 300 * k)                  {                      label5.Left = 0; p5 = 1; v5 = (int)(10 * k);                  }              }
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label1.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label1.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label2.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label2.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 3;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.Font = new System.Drawing.Font("SimSun"' 6.75F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(134)));
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.Margin = new System.Windows.Forms.Padding(8' 0' 8' 0);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(38' 22);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 4;
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(8' 8' 8' 8);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(8' 8' 8' 8);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(8' 8' 8' 8);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(8' 8' 8' 8);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(750' 25);
Magic Number,wintogo,Win8PB,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Win8PB.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(750' 25);
Magic Number,wintogo,WriteProgress,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\WriteProgress.cs,writeprogress_Load,The following statement contains a magic number: num = ra.Next(0' 9);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(76' 342);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(76' 342);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(199' 89);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(199' 89);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(30' 52);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(30' 52);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(640' 234);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(640' 234);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(376' 92);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(376' 92);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(137' 39);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(137' 39);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.TabIndex = 2;
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(417' 342);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Location = new System.Drawing.Point(417' 342);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(199' 89);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.Size = new System.Drawing.Size(199' 89);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.button2.TabIndex = 3;
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(734' 481);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(734' 481);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,Clone,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\Clone.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(3' 4' 3' 4);
Magic Number,wintogo.Forms,FormatAlert,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\FormatAlert.cs,FormatAlert_Load,The following statement contains a magic number: t = new Thread(() =>              {                  string oriText = btnOk.Text;                  for (int i = 4; i >= 1; i--)                  {                      btnOk.Invoke(new Action(() => { btnOk.Text = oriText+"(" + i.ToString() + ")"; }));                      Thread.Sleep(1000);                  }                  btnOk.Invoke(new Action(() =>                  {                      btnOk.Text = oriText;                      btnOk.Enabled = true;                  }));                });
Magic Number,wintogo.Forms,FormatAlert,C:\repos\nkc3g4_wtg-assistant\wintogo\Forms\FormatAlert.cs,FormatAlert_Load,The following statement contains a magic number: t = new Thread(() =>              {                  string oriText = btnOk.Text;                  for (int i = 4; i >= 1; i--)                  {                      btnOk.Invoke(new Action(() => { btnOk.Text = oriText+"(" + i.ToString() + ")"; }));                      Thread.Sleep(1000);                  }                  btnOk.Invoke(new Action(() =>                  {                      btnOk.Text = oriText;                      btnOk.Enabled = true;                  }));                });
