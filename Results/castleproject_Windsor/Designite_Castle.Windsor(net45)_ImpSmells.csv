Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Castle.Core.Internal,ComponentServicesUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\ComponentServicesUtil.cs,AddService,Cyclomatic complexity of the method is 8
Complex Method,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,Cyclomatic complexity of the method is 8
Complex Method,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,CreateLifestyleManager,Cyclomatic complexity of the method is 9
Complex Method,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,SelectEligibleConstructor,Cyclomatic complexity of the method is 8
Complex Method,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ReadLifestyleFromConfiguration,Cyclomatic complexity of the method is 13
Complex Method,Castle.MicroKernel.ModelBuilder.Inspectors,MethodMetaInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\MethodMetaInspector.cs,ProcessModel,Cyclomatic complexity of the method is 10
Complex Method,Castle.MicroKernel.ModelBuilder.Inspectors,PropertiesDependenciesModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\PropertiesDependenciesModelInspector.cs,InspectProperties,Cyclomatic complexity of the method is 9
Complex Method,Castle.MicroKernel.Registration,ComponentRegistration<TService>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ComponentRegistration.cs,DependsOn,Cyclomatic complexity of the method is 9
Complex Method,Castle.MicroKernel.SubSystems.Conversion,DictionaryConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\DictionaryConverter.cs,PerformConversion,Cyclomatic complexity of the method is 8
Complex Method,Castle.MicroKernel.SubSystems.Conversion,DictionaryHelper<TKey;TValue>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\GenericDictionaryConverter.cs,ConvertConfigurationToCollection,Cyclomatic complexity of the method is 8
Complex Method,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,GetType,Cyclomatic complexity of the method is 9
Complex Method,Castle.MicroKernel.SubSystems.Naming,DefaultNamingSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Naming\DefaultNamingSubSystem.cs,GetHandler,Cyclomatic complexity of the method is 9
Complex Method,Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors,DefaultTextNodeProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\ElementProcessors\DefaultTextNodeProcessor.cs,ProcessString,Cyclomatic complexity of the method is 10
Complex Method,Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors,IfProcessingInstructionProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\ElementProcessors\IfProcessingInstructionProcessor.cs,Process,Cyclomatic complexity of the method is 11
Long Parameter List,Castle.Core.Internal,TopologicalSortAlgo,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TopologicalSortAlgo.cs,Visit,The method has 6 parameters. Parameters: node' colors' discovery' finish' list' time
Long Parameter List,Castle.Core,DependencyModel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\DependencyModel.cs,DependencyModel,The method has 5 parameters. Parameters: dependencyKey' targetType' isOptional' hasDefaultValue' defaultValue
Long Parameter List,Castle.Facilities.TypedFactory,TypedFactoryComponentResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryComponentResolver.cs,TypedFactoryComponentResolver,The method has 5 parameters. Parameters: componentName' componentType' additionalArguments' fallbackToResolveByTypeIfNameNotFound' actualSelectorType
Long Parameter List,Castle.Facilities.TypedFactory.Internal,DelegateProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\Internal\DelegateProxyFactory.cs,Generate,The method has 5 parameters. Parameters: builder' options' interceptors' model' context
Long Parameter List,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,CreateCreationContext,The method has 5 parameters. Parameters: handler' requestedType' additionalArguments' parent' policy
Long Parameter List,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,ResolveComponent,The method has 5 parameters. Parameters: handler' service' additionalArguments' policy' ignoreParentContext
Long Parameter List,Castle.MicroKernel,IProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\IProxyFactory.cs,Create,The method has 5 parameters. Parameters: kernel' instance' model' context' constructorArguments
Long Parameter List,Castle.MicroKernel,IProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\IProxyFactory.cs,Create,The method has 5 parameters. Parameters: customFactory' kernel' model' context' constructorArguments
Long Parameter List,Castle.MicroKernel,IProxyFactoryExtension,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\IProxyFactoryExtension.cs,Generate,The method has 5 parameters. Parameters: builder' options' interceptors' model' context
Long Parameter List,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreationContext,The method has 6 parameters. Parameters: handler' releasePolicy' requestedType' additionalArguments' converter' parent
Long Parameter List,Castle.MicroKernel.Proxy,NotSupportedProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Proxy\NotSupportedProxyFactory.cs,Create,The method has 5 parameters. Parameters: kernel' instance' mode' context' constructorArguments
Long Parameter List,Castle.MicroKernel.Proxy,NotSupportedProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Proxy\NotSupportedProxyFactory.cs,Create,The method has 5 parameters. Parameters: customFactory' kernel' model' context' constructorArguments
Long Parameter List,Castle.Windsor.Proxy,AbstractProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\AbstractProxyFactory.cs,Create,The method has 5 parameters. Parameters: kernel' instance' model' context' constructorArguments
Long Parameter List,Castle.Windsor.Proxy,AbstractProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\AbstractProxyFactory.cs,Create,The method has 5 parameters. Parameters: customFactory' kernel' model' context' constructorArguments
Long Parameter List,Castle.Windsor.Proxy,DefaultProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\DefaultProxyFactory.cs,Create,The method has 5 parameters. Parameters: customFactory' kernel' model' context' constructorArguments
Long Parameter List,Castle.Windsor.Proxy,DefaultProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\DefaultProxyFactory.cs,Create,The method has 5 parameters. Parameters: kernel' target' model' context' constructorArguments
Long Identifier,Castle.Core.Internal,Constants,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\Constants.cs,,The length of the parameter defaultComponentForServiceFilter is 32.
Long Identifier,Castle.Core.Internal,Constants,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\Constants.cs,,The length of the parameter fallbackComponentForServiceFilter is 33.
Long Identifier,Castle.Core.Internal,Constants,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\Constants.cs,,The length of the parameter genericImplementationMatchingStrategy is 37.
Long Identifier,Castle.Facilities.TypedFactory,DefaultTypedFactoryComponentSelector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\DefaultTypedFactoryComponentSelector.cs,DefaultTypedFactoryComponentSelector,The length of the parameter fallbackToResolveByTypeIfNameNotFound is 37.
Long Identifier,Castle.Facilities.TypedFactory,TypedFactoryComponentResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryComponentResolver.cs,TypedFactoryComponentResolver,The length of the parameter fallbackToResolveByTypeIfNameNotFound is 37.
Long Identifier,Castle.Facilities.TypedFactory,TypedFactoryComponentResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryComponentResolver.cs,,The length of the parameter fallbackToResolveByTypeIfNameNotFound is 37.
Long Identifier,Castle.MicroKernel.Handlers,AbstractHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs,AllRequiredDependenciesResolvable,The length of the parameter ctorsWithMissingDependenciesCount is 33.
Long Identifier,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,DefaultGenericHandler,The length of the parameter implementationMatchingStrategy is 30.
Long Identifier,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,,The length of the parameter implementationMatchingStrategy is 30.
Long Identifier,Castle.MicroKernel.Registration,ComponentRegistration<TService>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ComponentRegistration.cs,ImplementedBy,The length of the parameter genericImplementationMatchingStrategy is 37.
Long Identifier,Castle.MicroKernel.Registration,ComponentRegistration<TService>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ComponentRegistration.cs,ImplementedBy,The length of the parameter genericImplementationMatchingStrategy is 37.
Long Identifier,Castle.MicroKernel.Registration,ServiceDescriptor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ServiceDescriptor.cs,WorkaroundCLRBug,The length of the parameter shouldUseGenericTypeDefinition is 30.
Long Identifier,Castle.MicroKernel.Releasers,LifecycledComponentsReleasePolicy,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Releasers\LifecycledComponentsReleasePolicy.cs,LifecycledComponentsReleasePolicy,The length of the parameter trackedComponentsPerformanceCounter is 35.
Long Identifier,Castle.MicroKernel.SubSystems.Conversion,TypeNameParser,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameParser.cs,Parse,The length of the parameter isPotentiallyFullyQualifiedName is 31.
Long Identifier,Castle.MicroKernel.SubSystems.Naming,DefaultNamingSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Naming\DefaultNamingSubSystem.cs,,The length of the parameter assignableHandlerListsByTypeCache is 33.
Long Identifier,Castle.Windsor.Diagnostics,PerformanceMetricsFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\PerformanceMetricsFactory.cs,,The length of the parameter InstanesTrackedByTheReleasePolicyCounterName is 44.
Long Identifier,Castle.Windsor.Diagnostics,UsingContainerAsServiceLocatorDiagnostic,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\UsingContainerAsServiceLocatorDiagnostic.cs,Inspect,The length of the parameter handlersWithContainerDependency is 31.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					                   " seems to be buggy (or not configured properly)' trying to track the same instances multiple times. Please report this to the author of the lifestyle."); " is 154.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The factory method providing instances of the component is reusing instances' but the lifestyle of the component is " + burden.Model.LifestyleType + " is 168.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The factory method providing instances of the component is reusing instances' in a way that the custom lifestyle of the component (" + burden.Model.LifestyleType + " is 183.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The factory method providing instances of the component is reusing instances' in a way that the lifestyle of the component (" + burden.Model.LifestyleType + " is 176.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "				message.AppendLine("In most cases it is advised for the factory method not to be handling reuse of the instances' but to chose a lifestyle that does that appropriately."); " is 171.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					"Alternatively' if you do not wish for Windsor to track the objects coming from the factory change your registration to '.UsingFactoryMethod(yourFactory' managedExternally: true)'"); " is 182.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The custom activator"+burden.Model.CustomComponentActivator+" is reusing instances' but the lifestyle of the component is " + burden.Model.LifestyleType + " is 174.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The custom activator" + burden.Model.CustomComponentActivator + " is reusing instances' in a way that the custom lifestyle of the component (" + burden.Model.LifestyleType + " is 193.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "					message.AppendLine("The custom activator" + burden.Model.CustomComponentActivator + " is reusing instances' in a way that the lifestyle of the component (" + burden.Model.LifestyleType + " is 186.
Long Statement,Castle.Core.Internal,HelpfulExceptionsUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\HelpfulExceptionsUtil.cs,TrackInstanceCalledMultipleTimes,The length of the statement  "				message.Append("In most cases it is advised for the activator not to be handling reuse of the instances' but to chose a lifestyle that does that appropriately."); " is 162.
Long Statement,Castle.Core.Internal,ReflectionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\ReflectionUtil.cs,GetApplicationAssemblies,The length of the statement  "					string.Format("Could not determine application name for assembly \"{0}\". Please use a different method for obtaining assemblies."' " is 131.
Long Statement,Castle.Core.Internal,ReflectionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\ReflectionUtil.cs,BuildFactory,The length of the statement  "					parameterInfos[i].ParameterType.IsByRef ? parameterInfos[i].ParameterType.GetElementType() : parameterInfos[i].ParameterType); " is 126.
Long Statement,Castle.Core.Internal,TypeByInheritanceDepthMostSpecificFirstComparer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeByInheritanceDepthMostSpecificFirstComparer.cs,Compare,The length of the statement  "				String.Format("Types {0} and {1} are unrelated. That is not allowed. Are you sure you want to make them both services on the same component?"' " is 142.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "				// Any element of typeArguments does not satisfy the constraints specified for the corresponding type parameter of the current generic type. " is 140.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "				message.AppendLine("This was unexpected! Looks like you hit a really weird bug in .NET (yes' it's really not Windsor's fault)."); " is 129.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "				message.AppendLine("We were just about to make a generic version of " + openGeneric.AssemblyQualifiedName + " with the following generic arguments:"); " is 150.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "					message.AppendLine("It look like your debugger is attached. Try running the code without the debugger. It's likely it will work correctly."); " is 141.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "				message.AppendLine("If you're running the code inside your IDE try rebuilding your code (Clean' then Build) and make sure you don't have conflicting versions of referenced assemblies."); " is 186.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,TryMakeGenericType,The length of the statement  "				message.AppendLine("If you tried all of the above and the issue still persists try asking on StackOverflow or castle users group."); " is 132.
Long Statement,Castle.Core.Internal,TypeUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\TypeUtil.cs,ToCSharpString,The length of the statement  "				//NOTE: this has to go before type.IsNested because nested generic type is also a generic parameter and otherwise we'd have stack overflow " is 138.
Long Statement,Castle.Core,InterceptorReference,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\InterceptorReference.cs,GetExceptionMessageOnHandlerNotFound,The length of the statement  "			var message = new StringBuilder(string.Format("The interceptor '{0}' could not be resolved. "' referencedComponentName)); " is 121.
Long Statement,Castle.Core,InterceptorReference,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\InterceptorReference.cs,GetExceptionMessageOnHandlerNotFound,The length of the statement  "			// ok so the component is missing. Now - is it missing because it's not been registered or because the reference is by type and interceptor was registered with custom name? " is 172.
Long Statement,Castle.Core,InterceptorReference,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\InterceptorReference.cs,GetExceptionMessageOnHandlerNotFound,The length of the statement  "						"Component '{0}' matching the type specified was found in the container. Did you mean to use it? If so' please specify the reference via name' or register the interceptor without specifying its name."' " is 201.
Long Statement,Castle.Facilities.Startable,StartableContributor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\Startable\StartableContributor.cs,AddStart,The length of the statement  "							"Could not find public parameterless method '{0}' on type {1} designated as start method. Make sure you didn't mistype the method name and that its signature matches."' " is 168.
Long Statement,Castle.Facilities.Startable,StartableContributor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\Startable\StartableContributor.cs,AddStop,The length of the statement  "							"Could not find public parameterless method '{0}' on type {1} designated as stop method. Make sure you didn't mistype the method name and that its signature matches."' " is 167.
Long Statement,Castle.Facilities.TypedFactory,DefaultDelegateComponentSelector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\DefaultDelegateComponentSelector.cs,GetArguments,The length of the statement  "							              "Using generic purpose delegates with duplicated argument types is unsupported' because then it is not possible to match arguments properly. " + " is 144.
Long Statement,Castle.Facilities.TypedFactory,DefaultDelegateComponentSelector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\DefaultDelegateComponentSelector.cs,GetArguments,The length of the statement  "					// else we just ignore it. It will likely be matched by name so we don't want to throw prematurely. We could log this though. " is 125.
Long Statement,Castle.Facilities.TypedFactory,TypedFactoryComponentResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryComponentResolver.cs,Resolve,The length of the statement  "						e.Data["breakingChange"] = "This exception may have been caused by a breaking change between Windsor 2.5 and 3.0 See breakingchanges.txt for more details."; " is 156.
Long Statement,Castle.Facilities.TypedFactory,TypedFactoryComponentResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryComponentResolver.cs,LoadByName,The length of the statement  "			return fallbackToResolveByTypeIfNameNotFound == false || kernel.LoadHandlerByName(componentName' componentType' additionalArguments) != null; " is 141.
Long Statement,Castle.Facilities.TypedFactory,TypedFactoryRegistrationExtensions,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryRegistrationExtensions.cs,AsFactory,The length of the statement  "					"This component can not be used as typed factory because it exposes more than one class service. Only component exposing single depegate' or interfaces can be used as typed factories."); " is 186.
Long Statement,Castle.Facilities.TypedFactory,TypedFactoryRegistrationExtensions,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\TypedFactoryRegistrationExtensions.cs,AsFactory,The length of the statement  "						"Type {0} is a delegate' however the component has also {1} inteface(s) specified as its service. Delegate-based typed factories can't expose any additional services."' " is 168.
Long Statement,Castle.Facilities.TypedFactory.Internal,TypedFactoryInterceptor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\Internal\TypedFactoryInterceptor.cs,SetInterceptedComponentModel,The length of the statement  "					string.Format("Component {0} is not a typed factory. {1} only works with typed factories."' target.Name' GetType().Name)); " is 122.
Long Statement,Castle.MicroKernel,ComponentNotFoundException,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentNotFoundException.cs,BuildMessage,The length of the statement  "				       	"There are no components supporting requested service '{0}'. You need to register components in order to be able to use them."' " is 127.
Long Statement,Castle.MicroKernel,ComponentReference<T>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentReference.cs,Resolve,The length of the statement  "						"The referenced component {0} could not be resolved. Make sure you didn't misspell the name' and that component is registered."' " is 128.
Long Statement,Castle.MicroKernel,ComponentReference<T>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentReference.cs,Resolve,The length of the statement  "						"Cycle detected - referenced component {0} wants to use itself as its dependency. This usually signifies a bug in your code."' " is 126.
Long Statement,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,AddFacility,The length of the statement  "						"Facility of type '{0}' has already been registered with the container. Only one facility of a given type can exist in the container."' " is 135.
Long Statement,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,ResolveComponent,The length of the statement  "			var context = CreateCreationContext(handler' service' additionalArguments' ignoreParentContext ? null : parent' policy); " is 120.
Long Statement,Castle.MicroKernel.ComponentActivator,AbstractComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\AbstractComponentActivator.cs,ApplyCommissionConcerns,The length of the statement  "				throw new NotSupportedException(string.Format("Can not apply commission concerns to component {0} because it appears to be a target-less proxy. Currently those are not supported."' Model.Name)); " is 194.
Long Statement,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,CreateInstance,The length of the statement  "						"Type {0} is abstract.{2} As such' it is not possible to instansiate it as implementation of service '{1}'. Did you forget to proxy it?"' " is 137.
Long Statement,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,CreateInstance,The length of the statement  "					throw new ComponentActivatorException("ComponentActivator: could not proxy " + Model.Implementation.FullName' ex' Model); " is 121.
Long Statement,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,SetUpProperties,The length of the statement  "							"If you don't want Windsor to set this property you can do it by either decorating it with {3} or via registration API.{4}" + " is 125.
Long Statement,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,ObtainPropertyValue,The length of the statement  "					Kernel.Logger.Warn(string.Format("Exception when resolving optional dependency {0} on component {1}."' property.Dependency' Model.Name)' e); " is 140.
Long Statement,Castle.MicroKernel.ComponentActivator,FactoryMethodActivator<T>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\FactoryMethodActivator.cs,Instantiate,The length of the statement  "					string.Format("Factory method creating instances of component '{0}' returned null. This is not allowed and most likely a bug in the factory method."' Model.Name)' Model); " is 170.
Long Statement,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,AttachExistingBurden,The length of the statement  "					"Not in a resolution context. 'AttachExistingBurden' method can only be called withing a resoltion scope. (after 'EnterResolutionContext' was called within a handler)"' " is 168.
Long Statement,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreateBurden,The length of the statement  "					"Not in a resolution context. 'CreateBurden' method can only be called withing a resoltion scope. (after 'EnterResolutionContext' was called within a handler)"' " is 160.
Long Statement,Castle.MicroKernel.Handlers,AbstractHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs,TryResolve,The length of the statement  "				Kernel.Logger.Warn(string.Format("Tried to resolve component {0} but failed due to exception. Ignoring."' ComponentModel.Name)' e); " is 131.
Long Statement,Castle.MicroKernel.Handlers,AbstractHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs,TryResolve,The length of the statement  "				Kernel.Logger.Warn(string.Format("Tried to resolve component {0} but failed due to exception. Ignoring."' ComponentModel.Name)' e); " is 131.
Long Statement,Castle.MicroKernel.Handlers,AbstractHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\AbstractHandler.cs,Resolve,The length of the statement  "			Debug.Assert(CanResolve(context' contextHandlerResolver' model' dependency)' "CanResolve(context' contextHandlerResolver' model' dependency)"); " is 143.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptServices,The length of the statement  "			if (openServices.Length == 1 && requestedType.GetTypeInfo().IsGenericType && openServices[0] == requestedType.GetGenericTypeDefinition()) " is 137.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptServices,The length of the statement  "				// we obviously have either a bug or an uncovered case. I suppose the best we can do at this point is to fallback to the old behaviour " is 134.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,Resolve,The length of the statement  "							"Generic component {0} has some generic dependencies which were not successfully closed. This often happens when generic implementation has some additional generic constraints. See inner exception for more details."' " is 216.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,SupportsAssignable,The length of the statement  "			if (modelService.GetTypeInfo().IsGenericTypeDefinition == false || modelService.GetGenericArguments().Length != serviceArguments.Length) " is 136.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,GetClosedImplementationType,The length of the statement  "						"Custom {0} ({1}) didn't select any generic parameters for implementation type of component '{2}'. This usually signifies bug in the {0}."' " is 139.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,GetClosedImplementationType,The length of the statement  "						typeof(IGenericImplementationMatchingStrategy).Name' implementationMatchingStrategy' ComponentModel.Name)' ComponentModel.ComponentName); " is 137.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,GetClosedImplementationType,The length of the statement  "						message += string.Format("{0}You can instruct Windsor which types it should use to close this generic component by supplying an implementation of {1}.{0}" + " is 156.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,GetClosedImplementationType,The length of the statement  "				var invalidArguments = genericArguments.Where(a => a.IsPointer || a.IsByRef || a == typeof(void)).Select(t => t.FullName).ToArray(); " is 132.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,GetClosedImplementationType,The length of the statement  "					message = string.Format("The following types provided as generic parameters are not legal: {0}. This is most likely a bug in your code."' " is 137.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptClassServices,The length of the statement  "						// NOTE: it's an interface not exposed by the implementation type. Possibly aimed at a proxy... I guess we can ignore it for now. Don't have any better idea. " is 157.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptClassServices,The length of the statement  "						Debug.Fail(string.Format("Could not find mapping for interface {0} on implementation type {1}"' service' closedImplementationType)); " is 132.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptInterfaceServices,The length of the statement  "						// NOTE: it's an interface not exposed by the implementation type. Possibly aimed at a proxy... I guess we can ignore it for now. Don't have any better idea. " is 157.
Long Statement,Castle.MicroKernel.Handlers,DefaultGenericHandler,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultGenericHandler.cs,AdaptInterfaceServices,The length of the statement  "						Debug.Fail(string.Format("Could not find mapping for interface {0} on implementation type {1}"' service' closedImplementationType)); " is 132.
Long Statement,Castle.MicroKernel.Handlers,DefaultHandlerFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DefaultHandlerFactory.cs,GenericImplementationMatchingStrategy,The length of the statement  "			return (IGenericImplementationMatchingStrategy) model.ExtendedProperties[Constants.GenericImplementationMatchingStrategy]; " is 122.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,Inspect,The length of the statement  "					// NOTE: that's a workaround for us having dependency twice potentially' once from configuration and once from actual type scan " is 127.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,InspectServiceDependency,The length of the statement  "					message.AppendLine("make this a service override and point explicitly to a different component exposing this service?"); " is 120.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,InspectServiceDependency,The length of the statement  "					foreach (var maybeDecoratedHandler in alternatives.Where(maybeDecoratedHandler => maybeDecoratedHandler != inspectingHandler)) " is 126.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,InspectServiceDependency,The length of the statement  "				message.AppendFormat("- Service '{0}' which was registered but is also waiting for dependencies."' handler.ComponentModel.Name); " is 128.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,InspectServiceOverrideDependency,The length of the statement  "					"- Component '{0}' (via override) which was not found. Did you forget to register it or misspelled the name? If the component is registered and override is via type make sure it doesn't have non-default name assigned explicitly or override the dependency via name."' " is 266.
Long Statement,Castle.MicroKernel.Handlers,DependencyInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\DependencyInspector.cs,InspectServiceOverrideDependency,The length of the statement  "				message.AppendFormat("- Component '{0}' (via override) which was registered but is also waiting for dependencies."' referenceName); " is 131.
Long Statement,Castle.MicroKernel.Handlers,GenericHandlerTypeMismatchException,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Handlers\GenericHandlerTypeMismatchException.cs,BuildMessage,The length of the statement  "			return message + string.Format("this is likely a bug in the {0} used ({1})"' typeof(IGenericImplementationMatchingStrategy).Name' " is 129.
Long Statement,Castle.MicroKernel.Lifestyle,ScopedLifestyleManager,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Lifestyle\ScopedLifestyleManager.cs,GetScope,The length of the statement  "						"Could not obtain scope for component {0}. This is most likely either a bug in custom {1} or you're trying to access scoped component outside of the scope (like a per-web-request component outside of web request etc)"' " is 218.
Long Statement,Castle.MicroKernel.Lifestyle.Pool,DefaultPool,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Lifestyle\Pool\DefaultPool.cs,Request,The length of the statement  "					throw new PoolException("burden returned by creationCallback does not have root instance associated with it (its Instance property is null)."); " is 143.
Long Statement,Castle.MicroKernel.Lifestyle.Scoped,CreationContextScopeAccessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Lifestyle\Scoped\CreationContextScopeAccessor.cs,GetScope,The length of the statement  "						"Scope was not available for '{0}'. No component higher up in the resolution stack met the criteria specified for scoping the component. This usually indicates a bug in custom scope root selector or means that the component is being resolved in a unforseen context (a.k.a - it's probably a bug in how the dependencies in the application are wired)."' " is 350.
Long Statement,Castle.MicroKernel.Lifestyle.Scoped,CreationContextScopeAccessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Lifestyle\Scoped\CreationContextScopeAccessor.cs,DefaultScopeRootSelector,The length of the statement  "			return resolutionStack.FirstOrDefault(h => typeof(TBaseForRoot).GetTypeInfo().IsAssignableFrom(h.ComponentModel.Implementation)); " is 129.
Long Statement,Castle.MicroKernel.ModelBuilder.Descriptors,ServiceOverrideDescriptor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Descriptors\ServiceOverrideDescriptor.cs,Apply,The length of the statement  "				ApplyReferenceList(model' dependencyKey' ((IEnumerable<Type>)dependencyValue).Select(ComponentName.DefaultNameFor)' @override); " is 127.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,GenericInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\GenericInspector.cs,ProcessModel,The length of the statement  "			model.RequiresGenericArguments = model.Implementation != null && model.Implementation.GetTypeInfo().IsGenericTypeDefinition || " is 126.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ReadLifestyleFromConfiguration,The length of the statement  "						throw new InvalidOperationException(string.Format("Component {0} has {1} lifestyle. This is not a valid value."' model.Name' lifestyleType)); " is 141.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ReadLifestyleFromConfiguration,The length of the statement  "				// type was not present' but we might figure out the lifestyle based on presence of some attributes related to some lifestyles " is 126.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ValidateTypeFromAttribute,The length of the statement  "			throw new InvalidOperationException(String.Format("The Type '{0}' specified in the '{2}' attribute must implement {1}"' typeFromAttribute.FullName' expectedInterface.FullName' attribute)); " is 188.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ExtractBinder,The length of the statement  "				scopeRootBinderType.GetTypeInfo().FindMembers(MemberTypes.Method' BindingFlags.Instance | BindingFlags.Public' IsBindMethod' null) " is 130.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,ExtractBinder,The length of the statement  "						"Type {0} which was designated as 'scopeRootBinderType' for component {1} does not have any public instance method matching signature of 'IHandler Method(IHandler[] pickOne)' and can not be used as scope root binder."' " is 218.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,LifestyleModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\LifestyleModelInspector.cs,GetMandatoryTypeFromAttribute,The length of the statement  "				throw new InvalidOperationException(string.Format("Component {0} has {1} lifestyle' but its configuration doesn't have mandatory '{2}' attribute."' model.Name' lifestyleType' attribute)); " is 187.
Long Statement,Castle.MicroKernel.ModelBuilder.Inspectors,PropertiesDependenciesModelInspector,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\Inspectors\PropertiesDependenciesModelInspector.cs,GetInspectionBehaviorFromTheConfiguration,The length of the statement  "						"Error on properties inspection. Could not convert the inspectionBehavior attribute value into an expected enum value. " + " is 122.
Long Statement,Castle.MicroKernel.Registration,ComponentRegistration<TService>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ComponentRegistration.cs,ImplementedBy,The length of the statement  "				ExtendedProperties(Property.ForKey(Constants.GenericImplementationMatchingStrategy).Eq(genericImplementationMatchingStrategy)); " is 127.
Long Statement,Castle.MicroKernel.Registration,ComponentRegistration<TService>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\ComponentRegistration.cs,UsingFactoryMethod,The length of the statement  "			    (potentialServices.First().GetTypeInfo().IsClass == false || potentialServices.First().GetTypeInfo().IsSealed == false)) " is 120.
Long Statement,Castle.MicroKernel.Registration,Dependency,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\Dependency.cs,OnResource,The length of the statement  "			var resourceManagerProperty = typeof(TResources).GetProperty("ResourceManager"' BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic' null' typeof(ResourceManager)' Type.EmptyTypes' " is 195.
Long Statement,Castle.MicroKernel.Registration,Dependency,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\Dependency.cs,OnResource,The length of the statement  "				throw new ArgumentException(string.Format("Type {0} does not appear to be a correct 'resources' type. It doesn't have 'ResourceManager' property."' typeof(TResources))); " is 169.
Long Statement,Castle.MicroKernel.Registration,Dependency,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\Dependency.cs,OnResource,The length of the statement  "				throw new ArgumentException(string.Format("Could not read property {1} on type {0}"' typeof(TResources)' resourceManagerProperty)' e); " is 134.
Long Statement,Castle.MicroKernel.Releasers,LifecycledComponentsReleasePolicy,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Releasers\LifecycledComponentsReleasePolicy.cs,Dispose,The length of the statement  "			// NOTE: This is relying on a undocumented behavior that order of items when enumerating Dictionary<> will be oldest --> latest " is 127.
Long Statement,Castle.MicroKernel.Releasers,LifecycledComponentsReleasePolicy,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Releasers\LifecycledComponentsReleasePolicy.cs,Track,The length of the statement  "						"Release policy was asked to track object '{0}'' but its burden has 'RequiresPolicyRelease' set to false. If object is to be tracked the flag must be true. This is likely a bug in the lifetime manager '{1}'."' " is 209.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernel,The length of the statement  "				// we can shortcircuit it here' since we know we won't find any components for value type service as those are not legal. " is 121.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,CanResolveFromContextHandlerResolver,The length of the statement  "			return contextHandlerResolver != null && contextHandlerResolver.CanResolve(context' contextHandlerResolver' model' dependency); " is 127.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,CanResolveFromHandler,The length of the statement  "			var b = handler != null && handler != contextHandlerResolver && handler.CanResolve(context' contextHandlerResolver' model' dependency); " is 135.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,CanResolveFromSubResolvers,The length of the statement  "			return subResolvers.Count > 0 && subResolvers.Any(s => s.CanResolve(context' contextHandlerResolver' model' dependency)); " is 121.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,RebuildOpenGenericHandlersWithClosedGenericSubHandlers,The length of the statement  "				var closedGenericSubHandlers = genericHandlers.Select(x => x.ConvertToClosedGenericHandler(service' openGenericContext)).ToList(); " is 130.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernelByName,The length of the statement  "			var handler = kernel.LoadHandlerByName(dependency.ReferencedComponentName' dependency.TargetItemType' context.AdditionalArguments); " is 131.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernelByName,The length of the statement  "			// never (famous last words) this should really happen as we're the good guys and we call CanResolve before trying to resolve but let's be safe. " is 144.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernelByName,The length of the statement  "						"Missing dependency.{2}Component {0} has a dependency on component {1}' which was not registered.{2}Make sure the dependency is correctly registered in the container as a service."' " is 181.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernelByType,The length of the statement  "						"Missing dependency.{2}Component {0} has a dependency on {1}' which could not be resolved.{2}Make sure the dependency is correctly registered in the container as a service' or provided as inline argument."' " is 206.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromKernelByType,The length of the statement  "						"Cycle detected in configuration.{2}Component {0} has a dependency on {1}' but it doesn't provide an override.{2}You must provide an override if a component has a dependency on a service that it - itself - provides."' " is 217.
Long Statement,Castle.MicroKernel.Resolvers,DefaultDependencyResolver,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Resolvers\DefaultDependencyResolver.cs,ResolveFromParameter,The length of the statement  "					string.Format("Could not convert parameter '{0}' to type '{1}'."' dependency.Parameter.Name' dependency.TargetItemType.Name)' e); " is 129.
Long Statement,Castle.MicroKernel.SubSystems.Conversion,ComponentConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\ComponentConverter.cs,PerformConversion,The length of the statement  "				throw new ConverterException(string.Format("Could not convert expression '{0}' to type '{1}'. Expecting a reference override like ${{some key}}"' " is 145.
Long Statement,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,GetType,The length of the statement  "				throw new ConverterException(String.Format("Could not convert string '{0}' to a type. It doesn't appear to be a valid type name."' name)); " is 138.
Long Statement,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,GetType,The length of the statement  "						"Could not convert string '{0}' to a type. Assembly {1} was matched' but it doesn't contain the type. Make sure that the type name was not mistyped."' " is 150.
Long Statement,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,GetType,The length of the statement  "					"Could not convert string '{0}' to a type. Assembly was not found. Make sure it was deployed and the name was not mistyped."' " is 125.
Long Statement,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,GetType,The length of the statement  "				"Could not convert string '{0}' to a type. Make sure assembly containing the type has been loaded into the process' or consider specifying assembly qualified name of the type."' " is 177.
Long Statement,Castle.MicroKernel.SubSystems.Naming,DefaultNamingSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Naming\DefaultNamingSubSystem.cs,Register,The length of the statement  "							"Component {0} could not be registered. There is already a component with that name. Did you want to modify the existing component instead? If not' make sure you specify a unique name."' " is 186.
Long Statement,Castle.Windsor.Configuration.Interpreters,XmlInterpreter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlInterpreter.cs,ThrowIfFacilityConfigurationHasIdAttribute,The length of the statement  "				throw new ConfigurationProcessingException("The 'id' attribute has been removed from facility configurations' please remove it from your configuration."); " is 154.
Long Statement,Castle.Windsor.Configuration.Interpreters.XmlProcessor,DefaultXmlProcessorEngine,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\DefaultXmlProcessorEngine.cs,AddNodeProcessor,The length of the statement  "				throw new XmlProcessorException("{0} does not implement {1} interface"' type.FullName' typeof(IXmlNodeProcessor).FullName); " is 123.
Long Statement,Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors,ChooseElementProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\ElementProcessors\ChooseElementProcessor.cs,Process,The length of the statement  "					throw new XmlProcessorException("'{0} can not contain only 'when' and 'otherwise' elements found '{1}'"' element.Name' elem.Name); " is 130.
Long Statement,Castle.Windsor.Diagnostics.Extensions,DuplicatedDependenciesDebuggerExtension,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\DuplicatedDependenciesDebuggerExtension.cs,MismatchView,The length of the statement  "			return new DebuggerViewItemWithDetails(Description(input.Dependency1)' Description(input.Dependency2)' diagnostic.GetDetails(input)); " is 133.
Long Statement,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetKey,The length of the statement  "			return string.Format("\"{0}\" »{1}«"' GetNameDescription(root.ComponentModel)' root.ComponentModel.GetLifestyleDescription()); " is 126.
Long Statement,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetMismatchMessage,The length of the statement  "			message.AppendFormat("Component '{0}' with lifestyle {1} "' GetNameDescription(root.ComponentModel)' root.ComponentModel.GetLifestyleDescription()); " is 148.
Long Statement,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetMismatchMessage,The length of the statement  "			message.AppendFormat("depends on '{0}' with lifestyle {1}"' GetNameDescription(last.ComponentModel)' last.ComponentModel.GetLifestyleDescription()); " is 148.
Long Statement,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetMismatchMessage,The length of the statement  "				message.AppendFormat("\tvia '{0}' with lifestyle {1}"' GetNameDescription(via.ComponentModel)' via.ComponentModel.GetLifestyleDescription()); " is 141.
Long Statement,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetName,The length of the statement  "			return string.Format("\"{0}\" »{1}« {2}depends on"' GetNameDescription(root.ComponentModel)' root.ComponentModel.GetLifestyleDescription()' " is 139.
Long Statement,Castle.Windsor.Diagnostics.Helpers,DefaultComponentViewBuilder,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Helpers\DefaultComponentViewBuilder.cs,GetStatus,The length of the statement  "			return new DebuggerViewItemWithDetails("Status"' "This component may not resolve properly."' GetStatusDetails(handler as IExposeDependencyInfo)); " is 145.
Long Statement,Castle.Windsor.Diagnostics.Helpers,DescriptionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Helpers\DescriptionUtil.cs,GetLifestyleDescriptionLong,The length of the statement  "				return string.Format("{0} (default lifestyle {1} will be used)"' componentModel.LifestyleType' LifestyleType.Singleton); " is 120.
Long Statement,Castle.Windsor.Proxy,DefaultProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\DefaultProxyFactory.cs,Create,The length of the statement  "					proxy = generator.CreateInterfaceProxyWithTargetInterface(firstService' additionalInterfaces' target' proxyGenOptions' interceptors); " is 133.
Long Statement,Castle.Windsor.Proxy,DefaultProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\DefaultProxyFactory.cs,Create,The length of the statement  "					proxy = generator.CreateInterfaceProxyWithTarget(firstService' additionalInterfaces' target' proxyGenOptions' interceptors); " is 124.
Long Statement,Castle.Windsor.Proxy,DefaultProxyFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Proxy\DefaultProxyFactory.cs,Create,The length of the statement  "				proxy = generator.CreateClassProxy(classToProxy' additionalInterfaces' proxyGenOptions' constructorArguments' interceptors); " is 124.
Virtual Method Call from Constructor,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,DefaultKernel,The constructor "DefaultKernel" calls a virtual method "RegisterSubSystems".
Virtual Method Call from Constructor,Castle.MicroKernel.ModelBuilder,DefaultComponentModelBuilder,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ModelBuilder\DefaultComponentModelBuilder.cs,DefaultComponentModelBuilder,The constructor "DefaultComponentModelBuilder" calls a virtual method "InitializeContributors".
Virtual Method Call from Constructor,Castle.MicroKernel.SubSystems.Conversion,DefaultConversionManager,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\DefaultConversionManager.cs,DefaultConversionManager,The constructor "DefaultConversionManager" calls a virtual method "InitDefaultConverters".
Virtual Method Call from Constructor,Castle.MicroKernel.SubSystems.Resource,DefaultResourceSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Resource\DefaultResourceSubSystem.cs,DefaultResourceSubSystem,The constructor "DefaultResourceSubSystem" calls a virtual method "InitDefaultResourceFactories".
Virtual Method Call from Constructor,Castle.Windsor.Configuration.Interpreters.XmlProcessor,XmlProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\XmlProcessor.cs,XmlProcessor,The constructor "XmlProcessor" calls a virtual method "RegisterProcessors".
Virtual Method Call from Constructor,Castle.Windsor.Configuration.Interpreters.XmlProcessor,XmlProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\XmlProcessor.cs,XmlProcessor,The constructor "XmlProcessor" calls a virtual method "RegisterProcessors".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Virtual Method Call from Constructor,Castle.Windsor,WindsorContainer,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\WindsorContainer.cs,WindsorContainer,The constructor "WindsorContainer" calls a virtual method "RunInstaller".
Empty Catch Block,Castle.MicroKernel,DefaultKernel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\DefaultKernel.cs,ResolveAll,The method has an empty catch block.
Empty Catch Block,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,LoadAssemblyIgnoringErrors,The method has an empty catch block.
Empty Catch Block,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,LoadAssemblyIgnoringErrors,The method has an empty catch block.
Empty Catch Block,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,LoadAssemblyIgnoringErrors,The method has an empty catch block.
Empty Catch Block,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,LoadAssemblyIgnoringErrors,The method has an empty catch block.
Empty Catch Block,Castle.MicroKernel.SubSystems.Conversion,TypeNameConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameConverter.cs,Scan,The method has an empty catch block.
Empty Catch Block,Castle.Windsor.Diagnostics,PerformanceMetricsFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\PerformanceMetricsFactory.cs,BuildInstancesTrackedByReleasePolicyCounter,The method has an empty catch block.
Empty Catch Block,Castle.Windsor.Diagnostics,PerformanceMetricsFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\PerformanceMetricsFactory.cs,BuildInstancesTrackedByReleasePolicyCounter,The method has an empty catch block.
Empty Catch Block,Castle.Windsor.Diagnostics,PerformanceMetricsFactory,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\PerformanceMetricsFactory.cs,BuildInstancesTrackedByReleasePolicyCounter,The method has an empty catch block.
Magic Number,Castle.Core.Internal,SegmentedList<T>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\Internal\SegmentedList.cs,GetSegment,The following statement contains a magic number: group = segments[segmentIndex] = new List<T>(4);
Magic Number,Castle.Core,DependencyModel,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\DependencyModel.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (DependencyKey != null ? DependencyKey.GetHashCode() : 0);
Magic Number,Castle.Core,StandardPropertyFilters,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Core\StandardPropertyFilters.cs,GetPropertyFilters,The following statement contains a magic number: filters = new List<PropertyDependencyFilter>(4);
Magic Number,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,BestPossibleScore,The following statement contains a magic number: return candidatePoints == candidate.Dependencies.Length*100;
Magic Number,Castle.MicroKernel.ComponentActivator,DefaultComponentActivator,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\ComponentActivator\DefaultComponentActivator.cs,CheckCtorCandidate,The following statement contains a magic number: candidatePoints += 100;
Magic Number,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreationContext,The following statement contains a magic number: handlerStack = new Stack<IHandler>(4);
Magic Number,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreationContext,The following statement contains a magic number: resolutionStack = new Stack<ResolutionContext>(4);
Magic Number,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreationContext,The following statement contains a magic number: handlerStack = new Stack<IHandler>(4);
Magic Number,Castle.MicroKernel.Context,CreationContext,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Context\CreationContext.cs,CreationContext,The following statement contains a magic number: resolutionStack = new Stack<ResolutionContext>(4);
Magic Number,Castle.MicroKernel.LifecycleConcerns,LateBoundConcerns<TConcern>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\LifecycleConcerns\LateBoundConcerns.cs,AddConcern,The following statement contains a magic number: concerns = new Dictionary<Type' TConcern>(2);
Magic Number,Castle.MicroKernel.LifecycleConcerns,LateBoundConcerns<TConcern>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\LifecycleConcerns\LateBoundConcerns.cs,AddConcern,The following statement contains a magic number: concernsCache = new ConcurrentDictionary<Type' List<TConcern>>(2' 2);
Magic Number,Castle.MicroKernel.LifecycleConcerns,LateBoundConcerns<TConcern>,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\LifecycleConcerns\LateBoundConcerns.cs,AddConcern,The following statement contains a magic number: concernsCache = new ConcurrentDictionary<Type' List<TConcern>>(2' 2);
Magic Number,Castle.MicroKernel.Proxy,ProxyOptions,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Proxy\ProxyOptions.cs,GetHashCode,The following statement contains a magic number: return 29*base.GetHashCode()  			       + GetCollectionHashCode(interfaceList)  			       + GetCollectionHashCode(mixInList);
Magic Number,Castle.MicroKernel.Proxy,ProxyOptions,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Proxy\ProxyOptions.cs,GetCollectionHashCode,The following statement contains a magic number: result = 29*result + item.GetHashCode();
Magic Number,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,ExtractKeyToken,The following statement contains a magic number: keyToken.Length != 16
Magic Number,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,ExtractKeyToken,The following statement contains a magic number: var tokenBytes = new byte[8];
Magic Number,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,ExtractKeyToken,The following statement contains a magic number: tokenBytes[i] = byte.Parse(keyToken.Substring(2*i' 2)' NumberStyles.HexNumber);
Magic Number,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,ExtractKeyToken,The following statement contains a magic number: tokenBytes[i] = byte.Parse(keyToken.Substring(2*i' 2)' NumberStyles.HexNumber);
Magic Number,Castle.MicroKernel.Registration,AssemblyFilter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\AssemblyFilter.cs,ExtractKeyToken,The following statement contains a magic number: i < 8
Magic Number,Castle.MicroKernel.Registration,BasedOnDescriptor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Registration\BasedOnDescriptor.cs,IsBasedOnGenericInterface,The following statement contains a magic number: var types = new List<Type>(4);
Magic Number,Castle.MicroKernel.SubSystems.Conversion,GenericDictionaryConverter,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\GenericDictionaryConverter.cs,PerformConversion,The following statement contains a magic number: argTypes.Length != 2
Magic Number,Castle.MicroKernel.SubSystems.Conversion,TypeNameParser,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameParser.cs,Parse,The following statement contains a magic number: genericTypes = ParseNames(name.Substring(start + 2' name.LastIndexOf("]]") - 2 - start)' count);
Magic Number,Castle.MicroKernel.SubSystems.Conversion,TypeNameParser,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Conversion\TypeNameParser.cs,Parse,The following statement contains a magic number: genericTypes = ParseNames(name.Substring(start + 2' name.LastIndexOf("]]") - 2 - start)' count);
Magic Number,Castle.MicroKernel.SubSystems.Naming,DefaultNamingSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Naming\DefaultNamingSubSystem.cs,GetHandlersNoLock,The following statement contains a magic number: const int fallbacks = 2;
Magic Number,Castle.MicroKernel.SubSystems.Naming,DefaultNamingSubSystem,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\SubSystems\Naming\DefaultNamingSubSystem.cs,GetHandlersNoLock,The following statement contains a magic number: var handlers = new SegmentedList<IHandler>(3);
Magic Number,Castle.MicroKernel.Util,ReferenceExpressionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Util\ReferenceExpressionUtil.cs,ExtractComponentName,The following statement contains a magic number: return value.Substring(2' value.Length - 3);
Magic Number,Castle.MicroKernel.Util,ReferenceExpressionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Util\ReferenceExpressionUtil.cs,ExtractComponentName,The following statement contains a magic number: return value.Substring(2' value.Length - 3);
Magic Number,Castle.MicroKernel.Util,ReferenceExpressionUtil,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\MicroKernel\Util\ReferenceExpressionUtil.cs,IsReference,The following statement contains a magic number: return value != null && value.Length > 3 && value.StartsWith("${") && value.EndsWith("}");
Magic Number,Castle.Windsor.Configuration.Interpreters.XmlProcessor.ElementProcessors,DefaultTextNodeProcessor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Configuration\Interpreters\XmlProcessor\ElementProcessors\DefaultTextNodeProcessor.cs,ProcessString,The following statement contains a magic number: var propKey = match.Groups[2].Value;
Magic Number,Castle.Windsor.Diagnostics,DependencyDuplicate,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\DependencyDuplicate.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Dependency2 != null ? Dependency2.GetHashCode() : 0);
Magic Number,Castle.Windsor.Diagnostics,DependencyDuplicate,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\DependencyDuplicate.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Reason.GetHashCode();
Magic Number,Castle.Windsor.Diagnostics.Extensions,PotentialLifestyleMismatches,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\Extensions\PotentialLifestyleMismatches.cs,GetName,The following statement contains a magic number: var indirect = (handlers.Length > 2) ? "indirectly " : string.Empty;
Missing Default,Castle.Facilities.TypedFactory.Internal,TypedFactoryInterceptor,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Facilities\TypedFactory\Internal\TypedFactoryInterceptor.cs,Intercept,The following switch statement is missing a default case: switch (method)  			{  				case FactoryMethod.Resolve:  					Resolve(invocation);  					break;  				case FactoryMethod.Release:  					Release(invocation);  					break;  				case FactoryMethod.Dispose:  					Dispose();  					break;  			}
Missing Default,Castle.Windsor.Diagnostics,DuplicatedDependenciesDiagnostic,D:\research\architectureSmells\repos\castleproject_Windsor\src\Castle.Windsor\Windsor\Diagnostics\DuplicatedDependenciesDiagnostic.cs,GetDetails,The following switch statement is missing a default case: switch (duplicates.Reason)  			{  				case DependencyDuplicationReason.Name:  					details.Append("' they both have the same name.");  					break;  				case DependencyDuplicationReason.Type:  					details.Append("' they both have the same type.");  					break;  				case DependencyDuplicationReason.NameAndType:  					details.Append("' they both have the same name and type.");  					break;  				case DependencyDuplicationReason.Reference:  					details.Append("' they both reference the same component " + duplicates.Dependency1.ReferencedComponentName);  					break;  			}
