Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DocumentFormat.OpenXml.Packaging.Tests,TypeNameConverter,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,ReadJson,The method has 5 parameters. Parameters: reader' objectType' existingValue' hasExistingValue' serializer
Long Parameter List,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartUriTest,The method has 5 parameters. Parameters: contentType' parentUri' targetUri' expectedOnce' expectedTwice
Long Parameter List,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartUri5Arg,The method has 5 parameters. Parameters: contentType' parentUri' targetUri' expectedOnce' expectedTwice
Long Parameter List,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,ReserveUriTest,The method has 5 parameters. Parameters: contentType' parentUri' targetUri' expected' expected2
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,ExpectedKind,The length of the statement  "                .Where(t => !t.GetTypeInfo().IsAbstract && typeof(OpenXmlCompositeElement).IsAssignableFrom(t) && t.GetConstructor(Cached.Array<Type>()) != null) " is 145.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,GetData,The length of the statement  "            using (var stream = typeof(ParticleTests).GetTypeInfo().Assembly.GetManifestResourceStream($"DocumentFormat.OpenXml.Packaging.Tests.data.{name}.json")) " is 151.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,AssertEqual,The length of the statement  "            using (var expectedStream = typeof(ParticleTests).GetTypeInfo().Assembly.GetManifestResourceStream("DocumentFormat.OpenXml.Packaging.Tests.data.Particles.json")) " is 161.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,OccursDefaultResolver,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CreateContract,The length of the statement  "                // CompositeParticle implements IEnumerable to enable collection initializers' but we want it to serialize as if it were just the object " is 136.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,OccursDefaultResolver,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CreateProperties,The length of the statement  "                    if (prop.PropertyName == nameof(ParticleConstraint.MinOccurs) || prop.PropertyName == nameof(ParticleConstraint.MaxOccurs)) " is 123.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,OccursDefaultResolver,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CreateProperties,The length of the statement  "                    else if (prop.PropertyName == nameof(ParticleConstraint.Version) || prop.PropertyName == nameof(CompositeParticle.RequireFilter)) " is 129.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartUriTest,The length of the statement  "            var unique = helper.GetUniquePartUri(contentType' new Uri(parentUri' UriKind.Relative)' new Uri(targetUri' UriKind.Relative)); " is 126.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartUriTest,The length of the statement  "            var unique2 = helper.GetUniquePartUri(contentType' new Uri(parentUri' UriKind.Relative)' new Uri(targetUri' UriKind.Relative)); " is 127.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,ReserveUriTest,The length of the statement  "            var unique = helper.GetUniquePartUri(contentType' partUri' "."' Path.GetFileNameWithoutExtension(targetUri)' Path.GetExtension(targetUri)); " is 139.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartData,The length of the statement  "            yield return new object[] { "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml"' "/target"' "target"' "/target1"' "/target2" }; " is 151.
Long Statement,DocumentFormat.OpenXml.Packaging.Tests,PartUriHelperTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartUriHelperTests.cs,GetUniquePartData,The length of the statement  "            yield return new object[] { "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml"' "/target"' "target.ext"' "/target1.ext"' "/target2.ext" }; " is 163.
Long Statement,DocumentFormat.OpenXml.Tests,PartConstraintRuleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartConstraintRuleTests.cs,ValidateValid,The length of the statement  "            var availability = part.GetType().GetTypeInfo().GetCustomAttribute<OfficeAvailabilityAttribute>()?.OfficeVersion ?? FileFormatVersions.Office2007; " is 146.
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,PartConstraintCollectionTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartConstraintCollectionTypes.cs,CountTests,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,PartConstraintCollectionTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartConstraintCollectionTypes.cs,CountTests,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,PartExtensionProviderTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartExtensionProviderTests.cs,SetsAppropriateComparer,The following statement contains a magic number: var provider3 = new PartExtensionProvider(5);
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,RequireFilter,The following statement contains a magic number: var particle = new CompositeParticle(ParticleType.Sequence' 1' 1' requireFilter: true)              {                  new CompositeParticle(ParticleType.Group'  1' 1)'                  new CompositeParticle(ParticleType.Group'  1' 2' version: FileFormatVersions.Office2010)'              };
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,RequireFilter,The following statement contains a magic number: Assert.Equal(2' result2010.MaxOccurs);
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CompositeSequenceVersion,The following statement contains a magic number: Assert.Collection(                  built2007.ChildrenParticles'                  p => Assert.Same(p' particle.ChildrenParticles[0])'                  p => Assert.Same(p' particle.ChildrenParticles[2]));
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CompositeSequenceVersion,The following statement contains a magic number: Assert.Collection(                  built2010.ChildrenParticles'                  p => Assert.Same(p' particle.ChildrenParticles[0])'                  p => Assert.Same(p' particle.ChildrenParticles[1])'                  p => Assert.Same(p' particle.ChildrenParticles[2]));
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CompositeSequenceMultipleVersion,The following statement contains a magic number: Assert.Collection(                  built2007.ChildrenParticles'                  p => Assert.Same(p' particle.ChildrenParticles[0])'                  p => Assert.Same(p' particle.ChildrenParticles[2]));
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CompositeSequenceMultipleVersion,The following statement contains a magic number: Assert.Collection(                  built2010.ChildrenParticles'                  p => Assert.Same(p' particle.ChildrenParticles[1])'                  p => Assert.Same(p' particle.ChildrenParticles[2]));
Magic Number,DocumentFormat.OpenXml.Packaging.Tests,ParticleTests,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\ParticleTests.cs,CompositeSequenceNoVersion,The following statement contains a magic number: Assert.Collection(                  built.ChildrenParticles'                  p => Assert.Same(p' particle.ChildrenParticles[0])'                  p => Assert.Same(p' particle.ChildrenParticles[1])'                  p => Assert.Same(p' particle.ChildrenParticles[2]));
Magic Number,DocumentFormat.OpenXml.Tests,PartConstraintRule2,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartConstraintRuleTests.cs,GetHashCode,The following statement contains a magic number: const int HashMultiplier = 31;
Magic Number,DocumentFormat.OpenXml.Tests,PartConstraintRule2,C:\research\architectureSmells\repos\OfficeDev_Open-XML-SDK\test\DocumentFormat.OpenXml.Packaging.Tests\PartConstraintRuleTests.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
