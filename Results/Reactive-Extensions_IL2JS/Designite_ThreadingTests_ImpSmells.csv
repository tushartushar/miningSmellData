Implementation smell,Namespace,Class,File,Method,Description
Long Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest4_Dispose,The method has 286 lines of code.
Long Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has 113 lines of code.
Long Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The method has 126 lines of code.
Long Method,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The method has 179 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The method has 146 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has 208 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has 497 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The method has 121 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForPaths,The method has 158 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelScheduler,The method has 129 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The method has 226 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The method has 132 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has 298 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The method has 115 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The method has 470 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has 351 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The method has 123 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The method has 101 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The method has 278 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The method has 108 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunExceptionWrappingTest,The method has 127 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The method has 182 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The method has 162 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has 296 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has 402 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The method has 201 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has 368 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The method has 128 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has 473 lines of code.
Long Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The method has 130 lines of code.
Long Method,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,The method has 183 lines of code.
Complex Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest12_IsCompleted_AddingIsCompleted,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,Cyclomatic complexity of the method is 24
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest1_PushAndPop,Cyclomatic complexity of the method is 11
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest5_CtorAndCopyToAndToArray,Cyclomatic complexity of the method is 11
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1_EnqAndDeq,Cyclomatic complexity of the method is 11
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1b_TryPeek,Cyclomatic complexity of the method is 10
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest5_CtorAndCopyToAndToArray,Cyclomatic complexity of the method is 11
Complex Method,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTest0_StateTrans,Cyclomatic complexity of the method is 10
Complex Method,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove2,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest4_AddAndTake,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_SimpleRef,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexRef,Cyclomatic complexity of the method is 12
Complex Method,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexVal,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,PartitionAlgorithmTest,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,RunPartA3_IEnumerable_DrainAllEvenly,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,Cyclomatic complexity of the method is 10
Complex Method,plinq_devtests,PerfHelpers,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,DrivePerfComparison,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookupOnInput,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,Cyclomatic complexity of the method is 10
Complex Method,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTest1,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,CallSemaphoreAction,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTest3_TryEnter,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,NQueensTest,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,NQueens,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,Cyclomatic complexity of the method is 39
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,Cyclomatic complexity of the method is 19
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,Cyclomatic complexity of the method is 21
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,Cyclomatic complexity of the method is 38
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,Cyclomatic complexity of the method is 31
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskRecursiveWaitTimeoutTest,Cyclomatic complexity of the method is 9
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,Cyclomatic complexity of the method is 15
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTestWithCancellationToken,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,Cyclomatic complexity of the method is 15
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,Cyclomatic complexity of the method is 22
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,Cyclomatic complexity of the method is 14
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,Cyclomatic complexity of the method is 21
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,Cyclomatic complexity of the method is 11
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,Cyclomatic complexity of the method is 13
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,Cyclomatic complexity of the method is 13
Complex Method,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestForEachBreak,Cyclomatic complexity of the method is 15
Complex Method,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,RunTests,Cyclomatic complexity of the method is 8
Complex Method,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,Cyclomatic complexity of the method is 34
Complex Method,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest8_PostPhaseException,Cyclomatic complexity of the method is 8
Long Parameter List,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest14_AddAnyTakeAny,The method has 5 parameters. Parameters: numOfAdds' numOfTakes' numOfBlockingCollections' indexOfBlockingCollectionUnderTest' boundedCapacity
Long Parameter List,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The method has 6 parameters. Parameters: numOfAdds' numOfTakes' boundedCapacity' blockingCollection' blockingCollections' indexOfBlockingCollectionUnderTest
Long Parameter List,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest,The method has 5 parameters. Parameters: cLevel' initSize' threads' addsPerThread' testMethod
Long Parameter List,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,ProducerConsumer_InParallel,The method has 5 parameters. Parameters: factory' dataSize' streamCount' bufferCapacity' chunkSize
Long Parameter List,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The method has 5 parameters. Parameters: result' q' orderPreserved' leftOpName' leftOrderDefined
Long Parameter List,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTest1_Wait,The method has 5 parameters. Parameters: initial' maximum' timeout' returnValue' exceptionType
Long Parameter List,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTest8_ConcWaitAndRelease,The method has 8 parameters. Parameters: initial' maximum' waitThreads' releaseThreads' succeededWait' failedWait' finalCount' timeout
Long Parameter List,plinq_devtests,SortSample,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,Merge,The method has 8 parameters. Parameters: in1' lo1' n1' in2' lo2' n2' output' lo
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTest,The method has 9 parameters. Parameters: aptState' numTasksType1' taskAction1' bWaitOnAct1' bCancelAct1' numTasksType2' taskAction2' timeoutForWaitThread' refWaitAllException
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTestWithCancellationToken,The method has 10 parameters. Parameters: aptState' numTasksType1' taskAction1' bWaitOnAct1' bCancelAct1' numTasksType2' taskAction2' timeoutForWaitThread' timeToSignalCancellationToken' refWaitAllException
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The method has 5 parameters. Parameters: options' initRan' continuationMaker' ranValue' taskIsFuture
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForPLRTest,The method has 6 parameters. Parameters: body' desc' excExpected' shouldComplete' shouldStop' shouldBreak
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForPLRTest,The method has 8 parameters. Parameters: body' parallelOptions' desc' excExpected' shouldComplete' shouldStop' shouldBreak' shouldCancel
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,For64PLRTest,The method has 6 parameters. Parameters: body' desc' excExpected' shouldComplete' shouldStop' shouldBreak
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,For64PLRTest,The method has 8 parameters. Parameters: body' parallelOptions' desc' excExpected' shouldComplete' shouldStop' shouldBreak' shouldCancel
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForEachPLRTest,The method has 6 parameters. Parameters: body' desc' excExpected' shouldComplete' shouldStop' shouldBreak
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForEachPLRTest,The method has 8 parameters. Parameters: body' parallelOptions' desc' excExpected' shouldComplete' shouldStop' shouldBreak' shouldCancel
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,PartitionerForEachPLRTest,The method has 6 parameters. Parameters: body' desc' excExpected' shouldComplete' shouldStop' shouldBreak
Long Parameter List,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,OrderablePartitionerForEachPLRTest,The method has 6 parameters. Parameters: body' desc' excExpected' shouldComplete' shouldStop' shouldBreak
Long Parameter List,plinq_devtests,FakeAsyncClass,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,StartWrite,The method has 5 parameters. Parameters: s' offset' length' cb' o
Long Parameter List,plinq_devtests,FakeAsyncClass,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,StartRead,The method has 5 parameters. Parameters: maxBytes' buf' offset' cb' o
Long Parameter List,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,TestPartitioningCore,The method has 5 parameters. Parameters: dataSize' partitionCount' data' staticPartitioning' partitions
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The length of the parameter arrayOfRemovedElementsFromAllThreads is 36.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest5_GetEnumerator,The length of the parameter resultOfEnumOfBlockingCollection is 32.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest5_GetEnumerator,The length of the parameter resultOfEnumOfConcurrentCollection is 34.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,The length of the parameter resultOfEnumOfBlockingCollection is 32.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,The length of the parameter resultOfEnumOfBlockingCollectionMirror is 38.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest14_AddAnyTakeAny,The length of the parameter indexOfBlockingCollectionUnderTest is 34.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The length of the parameter arrayOfRemovedElementsFromAllThreads is 36.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the parameter indexOfBlockingCollectionUnderTest is 34.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the parameter expectedNumOfSuccessfulTryAdds is 30.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the parameter indexOfCollectionThatAcceptedTheOperation is 41.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the parameter expectedNumOfSuccessfulTryTakes is 31.
Long Identifier,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the parameter indexOfCollectionThatAcceptedTheOperation is 41.
Long Identifier,plinq_devtests,TestHarnessAssert,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarnessAssert.cs,EnsureOperationCanceledExceptionThrown,The length of the parameter expectedCancellationTokenInException is 36.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix543683,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest_BugFix543683: THIS TEST IS AN INFINITE LOOP' comment it out before running DevUnitTest"); " is 138.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix543683,The length of the statement  "                TestHarness.TestLog("RunBlockingCollectionTest_BugFix543683: THIS TEST IS AN INFINITE LOOP' comment it out before running DevUnitTest"); " is 136.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest1_AddTake,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest1_AddTake(numOfAdds={0}' numOfTakes={1}' boundedCapacity={2})"' numOfAdds' numOfTakes' boundedCapacity); " is 152.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest2_ConcurrentAdd,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest2_ConcurrentAdd(numOfThreads={0}' numOfElementsPerThread={1})"' numOfThreads' numOfElementsPerThread); " is 150.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest3_ConcurrentAddTake(numOfThreads={0}' numOfElementsPerThread={1})"' numOfThreads' numOfElementsPerThread); " is 154.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The length of the statement  "            return VerifyElementsAreMembersOfSequence(sortedElementsInCollection' 0' (numOfThreads / 2 * numOfElementsPerThread) - 1); " is 122.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest5_GetEnumerator,The length of the statement  "                TestHarness.TestLog(" > test failed - number of elements returned from enumerators mismatch: ConcurrentCollection={0}' BlockingCollection={1}"' " is 143.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest5_GetEnumerator,The length of the statement  "                    TestHarness.TestLog(" > test failed - elements returned from enumerators mismatch: ConcurrentCollection={0}' BlockingCollection={1}"' " is 133.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,The length of the statement  "                TestHarness.TestLog(" > test failed - unexpcted count: actual={0}' expected={1}"' blockingCollection.Count' MAX_NUM_TO_ADD); " is 124.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,The length of the statement  "                TestHarness.TestLog(" > test failed - number of elements mismatch: BlockingCollectionMirror={0}' BlockingCollection={1}"' " is 121.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_CompleteAdding,The length of the statement  "                TestHarness.TestLog(" > test failed - the enumerable returned from GetConsumingEnumerable() should not have enumerated through the collection"); " is 144.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_ConcurrentAdd_CompleteAdding,The length of the statement  "                TestHarness.TestLog(" > test failed - The collection count doesn't match the read count succeededCount = " + succeededAdd + " read count = " + count1); " is 151.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest8_ToArray,The length of the statement  "                    TestHarness.TestLog(" > test failed - Array elements mismatch: arrBlockingCollection[{2}]={0}' arrConcurrentCollection[{2}]={1}"' " is 129.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest9_CopyTo,The length of the statement  "                    TestHarness.TestLog(" > test failed - Array elements mismatch: arrBlockingCollection[{2}]={0}' arrConcurrentCollection[{2}]={1}"' " is 129.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest11_BoundedCapacity,The length of the statement  "                TestHarness.TestLog(" > test failed - Unexpected boundedCapacity: Actual={0}' Expected=1"' blockingCollection.BoundedCapacity); " is 127.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest11_BoundedCapacity,The length of the statement  "                TestHarness.TestLog(" > test failed - Unexpected boundedCapacity: Actual={0}' Expected=-1"' blockingCollection.BoundedCapacity); " is 128.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest14_AddAnyTakeAny,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest14_AddAnyTakeAny(numOfAdds={0}' numOfTakes={1}' numOfBlockingCollections={2}'" + " is 128.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest14_AddAnyTakeAny,The length of the statement  "            return AddAnyTakeAny(numOfAdds' numOfTakes' boundedCapacity' blockingCollection' blockingCollections' indexOfBlockingCollectionUnderTest); " is 138.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The length of the statement  "            TestHarness.TestLog("* RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny(numOfThreads={0}' numOfElementsPerThread={1}'numOfCollections={2}'boundOfCollections={3})"' " is 166.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The length of the statement  "                    TestHarness.TestLog(" > test failed - expected count = {0}' actual = {1}' blockingCollectionIndex = {2}"' expectedCount' blockingCollection.Count' blockingCollectionIndex); " is 172.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The length of the statement  "            return VerifyElementsAreMembersOfSequence(sortedElementsInCollection' 0' (numOfThreads / 2 * numOfElementsPerThread) - 1); " is 122.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                        TestHarness.TestLog(" > test failed - TryAddToAny returned #{0} while it should return #{1}"' indexOfCollectionThatAcceptedTheOperation' indexOfBlockingCollectionUnderTest); " is 173.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                TestHarness.TestLog(" > test failed - expected #{0} calls to TryAdd will return true while actual is #{1}"' expectedNumOfSuccessfulTryAdds' numOfTrueTryAdds); " is 158.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                    int indexOfCollectionThatAcceptedTheOperation = BlockingCollection<int>.TryTakeFromAny(blockingCollections' out itemFromBlockingCollection); " is 140.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                        TestHarness.TestLog(" > test failed - TryTakeFromAny returned #{0} while it should return #{1}"' indexOfCollectionThatAcceptedTheOperation' indexOfBlockingCollectionUnderTest); " is 176.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                        TestHarness.TestLog(" > test failed - Taked elements differ : itemFromBlockingCollection = {0}' itemFromConcurrentCollection = {1}"' " is 132.
Long Statement,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,AddAnyTakeAny,The length of the statement  "                TestHarness.TestLog(" > test failed - expected #{0} calls to TryTake will return true while actual is #{1}"' expectedNumOfSuccessfulTryTakes' numOfTrueTryTakes); " is 161.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(new CancellationToken()' new CancellationToken()' "(4) Two empty tokens should compare as equal."); " is 136.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(inflated_empty_CT1' new CancellationToken()' "(5) Two empty tokens should compare as equal."); " is 131.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(new CancellationToken()' inflated_empty_CT1' "(7) Two empty tokens should compare as equal."); " is 131.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(inflated_empty_CT1' inflated_empty_CT2' "(9) Two empty tokens should compare as equal."); " is 126.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(inflated_defaultSet_CT1' new CancellationToken(true)' "(10) Two default-set tokens should compare as equal."); " is 147.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(inflated_defaultSet_CT1' inflated_defaultSet_CT2' "(11) Two default-set tokens should compare as equal."); " is 143.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreNotEqual(inflated_empty_CT1' inflated_defaultSet_CT2' "(12) empty and default-set tokens should compare as not-equal."); " is 151.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreNotEqual(inflated_empty_CT1' new CancellationToken(true)' "(13) empty and default-set tokens should compare as not-equal."); " is 155.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenEquality,The length of the statement  "            passed &= TestHarnessAssert.AreNotEqual(new CancellationToken(true)' inflated_empty_CT1' "(14) empty and default-set tokens should compare as not-equal."); " is 155.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CreateLinkedTokenSource_Simple_MultiToken,The length of the statement  "            CancellationTokenSource combined = CancellationTokenSource.CreateLinkedTokenSource(new[] { signal1.Token' signal2.Token' signal3.Token}); " is 137.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Cancel_DontThrowOnFirstException,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(2' caughtException.InnerExceptions.Count' "There should be one exception in the aggregate."); " is 130.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Cancel_DontThrowOnFirstException,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(caughtException.InnerExceptions[0] is InvalidOperationException' "Due to LIFO call order' the first inner exception should be an InvalidOperationException."); " is 193.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Cancel_DontThrowOnFirstException,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(caughtException.InnerExceptions[1] is ApplicationException' "Due to LIFO call order' the second inner exception should be an ApplicationException."); " is 184.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(testContext.DidSendOccur' "the delegate should have been called via Send to SyncContext."); " is 126.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate,The length of the statement  "            TestHarness.TestLog("* CancellationTokenTests.EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate()"); " is 124.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(testContext.DidSendOccur' "the delegate should have been called via Send to SyncContext."); " is 126.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(1' caughtException.InnerExceptions.Count'"There should be one exception in the aggregate."); " is 129.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(caughtException.InnerExceptions[0] is ApplicationException' "The inner exception should be an ApplicationException."); " is 153.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate_ThrowOnFirst,The length of the statement  "            TestHarness.TestLog("* CancellationTokenTests.EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate()"); " is 124.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,EnlistWithSyncContext_BeforeCancel_ThrowingExceptionInSyncContextDelegate_ThrowOnFirst,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(testContext.DidSendOccur' "the delegate should have been called via Send to SyncContext."); " is 126.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationRegistration_RepeatDispose,The length of the statement  "            passed &= TestHarnessAssert.IsNull(caughtException' "Repeat dispose of a CancellationTokenRegistration should be benign."); " is 123.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1.Equals(ctr2)' "[1]The two registrations should compare equal' as they are both dummies."); " is 130.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1 == ctr2' "[2]The two registrations should compare equal' as they are both dummies."); " is 125.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsFalse(ctr1 != ctr2' "[3]The two registrations should compare equal' as they are both dummies."); " is 126.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1.GetHashCode() == ctr2.GetHashCode()' "[4]The two registrations should have the same hashcode' as they are both dummies."); " is 162.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1.Equals(ctr2)' "[1]The two registrations should compare equal' as they are both dummies due to CTS being already canceled."); " is 164.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1 == ctr2' "[2]The two registrations should compare equal' as they are both dummies due to CTS being already canceled."); " is 159.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsFalse(ctr1 != ctr2' "[3]The two registrations should compare equal' as they are both dummies due to CTS being already canceled."); " is 160.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenRegistration_EqualityAndHashCode,The length of the statement  "                passed &= TestHarnessAssert.IsTrue(ctr1.GetHashCode() == ctr2.GetHashCode()' "[4]The two registrations should have the same hashcode' as they are both dummies due to CTS being already canceled."); " is 196.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenLinking_Dispose,The length of the statement  "            FieldInfo fieldInfo = cts3.GetType().GetField("m_linkingRegistrations"' BindingFlags.Instance | BindingFlags.NonPublic); " is 120.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenLinking_Dispose,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(fieldInfo.GetValue(cts3) == null' "cts3 should have a null linking registration list."); " is 123.
Long Statement,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,SyncContextWithExceptionThrowingCallback,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(1' caughtEx2.InnerExceptions.Count' "the exception should have been marshalled and thrown here."); " is 135.
Long Statement,plinq_devtests,ThreadCrossingSynchronizationContext,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Send,The length of the statement  "                    TestHarness.TestLog(" threadCrossingSyncContext..running callback delegate on threadID = " + Thread.CurrentThread.ManagedThreadId); " is 131.
Long Statement,plinq_devtests,ThreadCrossingSynchronizationContext,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Send,The length of the statement  "                throw new TargetInvocationException("DUMMY: ThreadCrossingSynchronizationContext.Send captured and propogated an exception"'  " is 124.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest2_ConcPushAndPop,The length of the statement  "            TestHarness.TestLog("* RunConcurrentStackTest2_ConcPushAndPop(threads={0}' pushes={1}' pops={2})"' threads' pushes' pops); " is 122.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunBugFix570046,The length of the statement  "            TestHarness.TestLog("* RunBugFix570046:  Enumerating a ConcurrentQueue while simultaneously enqueueing and dequeueing somteimes returns a null value"); " is 151.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest2_ConcEnqAndDeq,The length of the statement  "            TestHarness.TestLog("* RunConcurrentQueueTest2_ConcEnqAndDeq(threads={0}' pushes={1}' pops={2})"' threads' pushes' pops); " is 121.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest4_CombinedStateTests,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(expectedCount' mres.SpinCount' "Spin count did not write/read correctly' expected " + expectedCount + "' actual " + mres.SpinCount); " is 169.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTest0_StateTrans,The length of the statement  "            TestHarness.TestLog("* RunCountdownEventTest0_StateTrans(initCount={0}' increms={1}' takeAllAtOnce={2})"' initCount' increms' takeAllAtOnce); " is 141.
Long Statement,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTest0_StateTrans,The length of the statement  "                    TestHarness.TestLog("  > error: after incrementing' count is wrong' saw {0}' expect {1}"' ev.CurrentCount' initCount + i + 1); " is 126.
Long Statement,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Update1,The length of the statement  "            TestHarness.TestLog("* RunDictionaryTest_Update1(cLevel={0}' threads={1}' updatesPerThread={2})"' cLevel' threads' updatesPerThread); " is 133.
Long Statement,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Read1,The length of the statement  "            TestHarness.TestLog("* RunDictionaryTest_Read1(cLevel={0}' threads={1}' readsPerThread={2})"' cLevel' threads' readsPerThread); " is 127.
Long Statement,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove1,The length of the statement  "            TestHarness.TestLog("* RunDictionaryTest_Remove1(cLevel={0}' threads={1}' removesPerThread={2})"' cLevel' threads' removesPerThread); " is 133.
Long Statement,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest,The length of the statement  "                TestHarness.TestLog("  > Incorrect count of elements reported for the dictionary. Expected {0}' Dict.Count {1}' ToArray.Length {2}' ToList.Count {3}"' " is 150.
Long Statement,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The length of the statement  "                passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128); " is 123.
Long Statement,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The length of the statement  "                passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128); " is 121.
Long Statement,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The length of the statement  "                passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128); " is 124.
Long Statement,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The length of the statement  "                passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128); " is 125.
Long Statement,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,ProducerConsumer_InParallel,The length of the statement  "            TestHarness.TestLog("ProducerConsumer_InParallel<{0}>: {1}' {2}' {3}' {4}"' typeof(T).Name' dataSize' streamCount' bufferCapacity' chunkSize); " is 142.
Long Statement,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,SequentialPipeliningTest,The length of the statement  "            TestHarness.TestLog("SequentialPipeliningTest: inputSize={0}' buffered={1}' ordered={2}"' inputSize' buffered' ordered); " is 120.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest5_ToString,The length of the statement  "                TestHarness.TestLog(" > test failed - Unexpected return value from ToString(); Actual={0}' Expected={1}."' lazy.ToString()' 1.ToString()); " is 138.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest5_ToString,The length of the statement  "                TestHarness.TestLog(" > test failed - Unexpected return value from ToString(); Actual={0}' Expected={1}."' lazy.ToString()' 1.ToString()); " is 138.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest8_Value,The length of the statement  "                TestHarness.TestLog(" > test failed - unexpected lazy.Value;Actual={0}' Expected={1}"' lazilyAllocatedValueInt' valueInt); " is 122.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest9_Exceptions,The length of the statement  "            if (!TestHarnessAssert.EnsureExceptionThrown(() => s = l.Value' typeof(DivideByZeroException)' "Expected DivideByZeroException")) " is 129.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest9_Exceptions,The length of the statement  "            if (!TestHarnessAssert.EnsureExceptionThrown(() => s = l.Value' typeof(DivideByZeroException)' "Expected DivideByZeroException")) " is 129.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest9_Exceptions,The length of the statement  "            if (!TestHarnessAssert.AreEqual<int>(counter + 1' m_exceptionCounter' "value factory has been called twise and it should be called only once.")) " is 144.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_SimpleRef,The length of the statement  "                TestHarness.TestLog(" > EnsureInitialized(ref c' ...) != strTemplate -- already initialized' should have been unchanged"); " is 122.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexRef,The length of the statement  "                TestHarness.TestLog(" > EnsureInitialized(ref c' ...) != strTemplate -- already initialized' should have been unchanged"); " is 122.
Long Statement,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexRef,The length of the statement  "            else if (LazyInitializer.EnsureInitialized<string>(ref e' ref einit' ref elock' () => { runs++; return null; }) != null || runs > 1) " is 132.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest2_ToString,The length of the statement  "                TestHarness.TestLog(" > test failed - Unexpected return value from ToString(); Actual={0}' Expected={1}."' tlocal.ToString()' 1.ToString()); " is 140.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest4_Value,The length of the statement  "                TestHarness.TestLog(" > test failed - ThreadLocal test failed. Seen values are: " + values.Substring(0' values.Length - 1)); " is 124.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest5_Dispose,The length of the statement  "            if (!TestHarnessAssert.EnsureExceptionThrown(() => { string tmp = tl.Value; }' typeof(ObjectDisposedException)' "The Value property of the disposed ThreadLocal object should throw ODE")) " is 186.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest5_Dispose,The length of the statement  "            if (!TestHarnessAssert.EnsureExceptionThrown(() => { bool tmp = tl.IsValueCreated; }' typeof(ObjectDisposedException)' "The IsValueCreated property of the disposed ThreadLocal object should throw ODE")) " is 202.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest5_Dispose,The length of the statement  "            if (!TestHarnessAssert.EnsureExceptionThrown(() => { string tmp = tl.ToString(); }' typeof(ObjectDisposedException)' "The ToString method of the disposed ThreadLocal object should throw ODE")) " is 192.
Long Statement,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The length of the statement  "            // the maximum fast path instances for each type is 16 ^ 3 = 4096' when this number changes in the product code' it should be changed here as well " is 146.
Long Statement,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The length of the statement  "            // passed &= RunPartA3_IEnumerable_DrainAllEvenly<DateTime>(1024 * 8' 8' delegate(int i) { return new DateTime((long)i); }); " is 124.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,PreCanceledToken_ForAll,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(cs.Token' OCEHelper.ExtractCT(caughtException)' "The OCE should reference the cancellation token."); " is 137.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,PreCanceledToken_SimpleEnumerator,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(cs.Token' OCEHelper.ExtractCT(caughtException)' "The OCE should reference the cancellation token."); " is 137.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_AsynchronousMergerEnumeratorDispose,The length of the statement  "            passed &= TestHarnessAssert.IsNotNull(caughtException' "An ObjectDisposedException or OperationCanceledException should be thrown"); " is 132.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_ToArray_ExternalCancel,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(tokenSource.Token' OCEHelper.ExtractCT(caughtException)' "The OCE should reference the external cancellation token."); " is 155.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix543310_ChannelCancellation_ProducerBlocked,The length of the statement  "                var query1 = Enumerable.Range(0' 100000000)  //provide 100million elements to ensure all the cores get >64K ints. Good up to 1600cores " is 134.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The length of the statement  "            foreach (int x in Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).WithMergeOptions(ParallelMergeOptions.FullyBuffered)) " is 129.
Long Statement,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_2,The length of the statement  "                    .Union(Enumerable.Range(0' 10).AsParallel().Select<int' int>(x => { throw new OperationCanceledException(cs.Token); })); " is 120.
Long Statement,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The length of the statement  "                (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()' " is 154.
Long Statement,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The length of the statement  "                q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)' " is 120.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest3,The length of the statement  "                left' right' identityKeySelector' identityKeySelector' delegate(Wrapped<int> x' Wrapped<int> y) { return new Pair(x.val' y.val); }); " is 132.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest3,The length of the statement  "                right.AsParallel()' identityKeySelector' identityKeySelector' delegate(Wrapped<int> x' Wrapped<int> y) { return new Pair(x.val' y.val); }); " is 139.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest1,The length of the statement  "            IEnumerable<int> seqQuery = Enumerable.Where<int>(data' delegate(int x) { int xx = 1; for (int i = 0; i < predSimulation; i++) xx *= (i + 1); return (x % 2) == 0; }); " is 166.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest1,The length of the statement  "            IEnumerable<int> parQuery = data.AsParallel().Where<int>(delegate(int x) { int xx = 1; for (int i = 0; i < predSimulation; i++) xx *= (i + 1); return (x % 2) == 0; }); " is 167.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest2,The length of the statement  "            IEnumerable<int> seqQuery = Enumerable.Where<int>(data' delegate(int x) { object o = new object(); int xx = o.GetHashCode(); return (x % 2) == 0; }); " is 149.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest2,The length of the statement  "            IEnumerable<int> parQuery = data.AsParallel().Where<int>(delegate(int x) { object o = new object(); int xx = o.GetHashCode(); return (x % 2) == 0; }); " is 150.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverage1,The length of the statement  "                    double total = Enumerable.Sum(Enumerable.Select<long' long>(data' delegate(long x' int idx) { return x * weights[idx]; })); " is 123.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultVsHandCodedTest,The length of the statement  "            TestHarness.TestLog("RunMatrixMultVsHandCodedTest(m={0}' n={1}' o={2}' loops={3}) -- vs. hand coded parallel"' m' n' o' loops); " is 127.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTest1,The length of the statement  "                seqQuery = Enumerable.OrderByDescending<int' int>(data' delegate(int x) { return x; }' System.Linq.Parallel.Util.GetDefaultComparer<int>()); " is 140.
Long Statement,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTest1,The length of the statement  "                seqQuery = Enumerable.OrderBy<int' int>(data' delegate(int x) { return x; }' System.Linq.Parallel.Util.GetDefaultComparer<int>()); " is 130.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest,The length of the statement  "            TestHarness.TestLog("* RunSequenceEqualTest(leftSize={0}' rightSize={1}' notEqual={2})"' leftSize' rightSize' notEqual); " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunZipTest1,The length of the statement  "            ParallelQuery<Pair<int' int>> q = ints.AsParallel().Zip<int' int' Pair<int'int> >(ints2.AsParallel()' (i'j) => new Pair<int'int>(i'j)); " is 135.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest1,The length of the statement  "                right.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }); " is 123.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest2,The length of the statement  "                right.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }); " is 123.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest3,The length of the statement  "                right.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }); " is 123.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                            .Join<int' int' int' Pair<int' int>>(innerRight.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); })' " is 165.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                        identityKeySelector' delegate(Pair<int' int> p) { return p.First; }' delegate(int x' Pair<int' int> p) { return new Pair<int'Pair<int' int>>(x'p); }); " is 150.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                        TestHarness.TestLog("  > *ERROR: pair members not equal -- {0} // ( {1} // {2} )"' x.First' x.Second.First' x.Second.Second); " is 125.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                    .Join(innerRight.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }) " is 133.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                        data.AsParallel()' delegate(Pair<int' int> p) { return p.First; }' identityKeySelector' delegate(Pair<int' int> p' int x) { return new Pair<Pair<int' int>' int>(p' x); }); " is 171.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The length of the statement  "                        TestHarness.TestLog("  > *ERROR: pair members not equal -- ( {0} // {1} ) // {2}"' x.First.First' x.First.Second' x.Second); " is 124.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithTakeWhile,The length of the statement  "                    identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }).TakeWhile<Pair<int' int>>((x) => true); " is 142.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest1,The length of the statement  "            IEnumerable<Pair<int' IEnumerable<int>>> joinResults = left.AsParallel().GroupJoin<int' int' int' Pair<int' IEnumerable<int>>>( " is 127.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest2,The length of the statement  "            ParallelQuery<Pair<int' IEnumerable<int>>> joinResults = left.AsParallel().GroupJoin<int' int' int' Pair<int' IEnumerable<int>>>( " is 129.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTest1,The length of the statement  "            IEnumerable<int> results = left.AsParallel().AsOrdered().SelectMany<int' int' int>(x => right.AsParallel()' delegate(int x' int y) { return x + y; }); " is 150.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTest2,The length of the statement  "            ParallelQuery<int> results = left.AsParallel().AsOrdered().SelectMany<int' int' int>(x => right.AsParallel()' delegate(int x' int y) { return x + y; }); " is 152.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhere1,The length of the statement  "            TestHarness.TestLog("RunOrderByComposedWithWhere1(dataSize = {0}' descending = {1}' type = {2}) - sequential/no pipeline"' " is 122.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithJoinJoin,The length of the statement  "            TestHarness.TestLog("RunOrderByComposedWithJoinJoin(outerSize = {0}' innerSize = {1}' descending = {2})"' outerSize' innerSize' descending); " is 140.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithJoinJoin,The length of the statement  "            DataDistributionType type = descending ? DataDistributionType.AlreadyAscending : DataDistributionType.AlreadyDescending; " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithJoinJoin,The length of the statement  "                right.AsParallel()' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }); " is 123.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithJoinJoin,The length of the statement  "                middle.AsParallel()' delegate(Pair<int' int> p) { return p.First; }' identityKeySelector' delegate(Pair<int' int> x' int y) { return x.First; }); " is 145.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhereWhere1,The length of the statement  "            TestHarness.TestLog("RunOrderByComposedWithWhereWhere1(dataSize = {0}' descending = {1}' type = {2}) - sequential/no pipeline"' " is 127.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhereSelect1,The length of the statement  "            TestHarness.TestLog("RunOrderByComposedWithWhereSelect1(dataSize = {0}' descending = {1}' type = {2}) - sequential/no pipeline"' " is 128.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithOrderBy,The length of the statement  "            TestHarness.TestLog("RunOrderByComposedWithOrderBy(dataSize = {0}' descending = {1}' type = {2}) - sequential/no pipeline"' " is 123.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunStableSortTest1,The length of the statement  "            IEnumerable<SSC> clistSorted = clist.AsParallel().Select<SSC'SSD>((c'i)=> new SSD(c'i)).OrderBy<SSD'int>((c)=>c.c.SortKey).ThenBy<SSD'int>((c)=>c.idx).Select((c)=>c.c); " is 168.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,The length of the statement  "                    TestHarness.TestLog("  > Lookup enumerator returned duplicate (key'value) pairs with the same key = {0}"' grouping.Key); " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The length of the statement  "            //           This is timing-dependent.. a deterministic approach could poll until the query has accumulated a TPL-exception (tricky) " is 132.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The length of the statement  "                    passed &= TestHarnessAssert.IsNotNull(caughtException' "[Note: timing-sensitive test] An AggregateException should have been thrown out of Dispose"); " is 149.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The length of the statement  "                passed &= TestHarnessAssert.IsNotNull(caughtException' "An AggregateException should have been thrown out of MoveNext"); " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest1,The length of the statement  "            TestHarness.TestLog("RunThenByTest1(dataSize = {0}' descending = {1}) - synchronous/no pipeline"' dataSize' descending); " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest2,The length of the statement  "                q = pairs.AsParallel<Pair<int' int>>().OrderByDescending<Pair<int'int>' int>(delegate(Pair<int'int> x) { return x.First; }). " is 124.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The length of the statement  "            TestHarness.TestLog("RunThenByComposedWithJoinJoin(outerSize = {0}' innerSize = {1}' descending = {2})"' outerSize' innerSize' descending); " is 139.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The length of the statement  "            DataDistributionType type = descending ? DataDistributionType.AlreadyAscending : DataDistributionType.AlreadyDescending; " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The length of the statement  "                if (!(passed &= (last == null || ((last.Value.First <= p.First && !descending) || (last.Value.First >= p.First && descending))))) " is 129.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The length of the statement  "                if (!(passed &= (last == null || (last.Value.First != p.First) || ((last.Value.Second <= p.Second && !descending) || (last.Value.Second >= p.Second && descending))))) " is 166.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The length of the statement  "            TestHarness.TestLog("  ** {0}   ({1} elems' {2} req'd secondary sort)"' passed ? "Success" : "FAIL"' cnt' secondaryCnt); " is 120.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereSelect1,The length of the statement  "            ParallelQuery<string> q1 = q0.Select<Pair<int' int>' string>(delegate(Pair<int' int> x) { return x.First + "." + x.Second; }); " is 126.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The length of the statement  "            TestHarness.TestLog("RunThenByTestRecursive1(dataSize = {0}' descending = {1}) - synchronous/no pipeline"' dataSize' descending); " is 129.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The length of the statement  "            TestHarness.TestLog("RunThenByTestRecursive2(dataSize = {0}' descending = {1}) - asynchronous/pipelining"' dataSize' descending); " is 129.
Long Statement,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTest1,The length of the statement  "            TestHarness.TestLog("* RunIntersectTest1(leftSize={0}' rightSize={1}) - intersect of names"' leftDataSize' rightDataSize); " is 122.
Long Statement,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTest8_ConcWaitAndRelease,The length of the statement  "                    TestHarness.TestLog("ConcurrentWaitRelease failed. This might not be a bug' if the system was unstable during the test."); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            Action<TaskCreationOptions' TaskCreationOptions' string> TCOchecker = delegate(TaskCreationOptions val1' TaskCreationOptions val2' string failMsg) " is 146.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' tcoDefault' "      > FAILED StartNew(action).  Did not see expected TaskCreationOptions."); " is 121.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' myTCO' "      > FAILED StartNew(action' TCO).  Did not see expected TaskCreationOptions."); " is 121.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' myTCO' "      > FAILED StartNew(action' TCO' scheduler).  Did not see expected TaskCreationOptions."); " is 132.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            checker(tmObserved' tmDefault' "      > FAILED StartNew(action<object>' object).  Did not see expected TaskScheduler."); " is 120.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' tcoDefault' "      > FAILED StartNew(action<object>' object).  Did not see expected TaskCreationOptions."); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            checker(tmObserved' tmDefault' "      > FAILED StartNew(action<object>' object' TCO).  Did not see expected TaskScheduler."); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' myTCO' "      > FAILED StartNew(action<object>' object' TCO).  Did not see expected TaskCreationOptions."); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            checker(tmObserved' myTM' "      > FAILED StartNew(action<object>' object' TCO' scheduler).  Did not see expected TaskScheduler."); " is 131.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(t.CreationOptions' myTCO' "      > FAILED StartNew(action<object>' object' TCO' scheduler).  Did not see expected TaskCreationOptions."); " is 148.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func' options).  Did not see expected TaskCreationOptions."); " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func' options' scheduler).  Did not see expected TaskCreationOptions."); " is 134.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(f.CreationOptions' tcoDefault' "      > FAILED StartNew(func<object>' object).  Did not see expected TaskCreationOptions."); " is 135.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            checker(tmObserved' tmDefault' "      > FAILED StartNew(func<object>' object' options).  Did not see expected TaskScheduler."); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func<object>' object' options).  Did not see expected TaskCreationOptions."); " is 139.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            checker(tmObserved' myTM' "      > FAILED StartNew(func<object>' object' options' scheduler).  Did not see expected TaskScheduler."); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func<object>' object' options' scheduler).  Did not see expected TaskCreationOptions."); " is 150.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            Action<TaskCreationOptions' TaskCreationOptions' string> TCOchecker = delegate(TaskCreationOptions val1' TaskCreationOptions val2' string failMsg) " is 146.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func' options).  Did not see expected TaskCreationOptions."); " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func' options' scheduler).  Did not see expected TaskCreationOptions."); " is 134.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            TCOchecker(f.CreationOptions' tcoDefault' "      > FAILED StartNew(func<object>' object).  Did not see expected TaskCreationOptions."); " is 135.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            checker(tmObserved' tmDefault' "      > FAILED StartNew(func<object>' object' options).  Did not see expected TaskScheduler."); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func<object>' object' options).  Did not see expected TaskCreationOptions."); " is 139.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            checker(tmObserved' myTM' "      > FAILED StartNew(func<object>' object' options' scheduler).  Did not see expected TaskScheduler."); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The length of the statement  "            TCOchecker(f.CreationOptions' myTCO' "      > FAILED StartNew(func<object>' object' options' scheduler).  Did not see expected TaskCreationOptions."); " is 150.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory.FromAsync(begin'end'a1'a2'state) failed to throw on illegal defaults."); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory.FromAsync(begin'end'a1'a2'a3'state) failed to throw on illegal defaults."); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory<string>.FromAsync(begin'end'state) failed to throw on illegal defaults."); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory<string>.FromAsync(begin'end'a1'state) failed to throw on illegal defaults."); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory<string>.FromAsync(begin'end'a1'a2'state) failed to throw on illegal defaults."); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The length of the statement  "                TestHarness.TestLog("      > FAILED.  TaskFactory<string>.FromAsync(begin'end'a1'a2'a3'state) failed to throw on illegal defaults."); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "            // Do all of the read tests again' except with Task.Factory.FromAsync<string>()' instead of Task<string>.Factory.FromAsync(). " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "            //    TestHarness.TestLog("    > FAILED.  Unexpected result after cancellations: Expected \"89abcdef\"' got \"{0}\""' s); " is 121.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                TestHarness.TestLog("    > FAILED! Expected Canceled status on FAS(beginMethod'endMethod) OCE' got {0}"' asyncTask.Status); " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                TestHarness.TestLog("    > FAILED! Expected Canceled status on FAS<string>(iar'endMethod) OCE' got {0}"' asyncFuture.Status); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                TestHarness.TestLog("    > FAILED! Expected Canceled status on FAS<string>(beginMethod'endMethod) OCE' got {0}"' asyncFuture.Status); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task foo1 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' null' TaskCreationOptions.AttachedToParent); " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task foo2 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' null' TaskCreationOptions.AttachedToParent); " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task foo3 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' 4' null' TaskCreationOptions.AttachedToParent); " is 129.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task<string> foo4 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' null' TaskCreationOptions.AttachedToParent); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task<string> foo5 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' null' TaskCreationOptions.AttachedToParent); " is 141.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task<string> foo6 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' 200' null' TaskCreationOptions.AttachedToParent); " is 146.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "            TestHarness.TestLog("    --Waiting on task w/ faulted FromAsync() calls (buggy scheduler).  If we hang' there is a problem"); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task inner1 = Task.Factory.FromAsync(fac.StartWrite("something"' null' null)' fac.EndWrite' TaskCreationOptions.AttachedToParent' bs); " is 134.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The length of the statement  "                Task<string> inner2 = Task<string>.Factory.FromAsync(fac.StartRead(1' null' null)' fac.EndRead' TaskCreationOptions.AttachedToParent' bs); " is 138.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The length of the statement  "                TestHarness.TestLog("    > FAILED!  ForEach-loop w/ Partitioner exceeded desired DOP ({0} > {1})."' maxDOP' desiredDOP); " is 120.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The length of the statement  "                TestHarness.TestLog("    > FAILED!  ForEach-loop w/ OrderablePartitioner exceeded desired DOP ({0} > {1})."' maxDOP' desiredDOP); " is 129.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForPaths,The length of the statement  "            Parallel.ForEach<KeyValuePair<long' long>>(dict' delegate(KeyValuePair<long' long> kvp' ParallelLoopState state' long index) " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The length of the statement  "            //    TestHarness.TestLog("    > FAILED!  Run w/o DOP failed to exceed desiredDOP({0}) tasks simultaneously"' desiredDOP); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The length of the statement  "                TestHarness.TestLog("    > FAILED!  exception prevented actions from executing ({0}/{1} executed)."' counter' numActions); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SequentialForParityTest,The length of the statement  "                    TestHarness.TestLog("  > failed: Iteration #{0} hit different values in sequential and parallel loops ({1}'{2})"' i' seqForIndices[i]' parForIndices[i]); " is 153.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SequentialFor64ParityTest,The length of the statement  "                    TestHarness.TestLog("  > failed: Iteration #{0} hit different values in sequential and parallel loops ({1}'{2})"' i' seqForIndices[i]' parForIndices[i]); " is 153.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                    TestHarness.TestLog("    > Error! TrySetException() attempt did not result in Faulted status (got {0})"' tcs.Task.Status); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                        TestHarness.TestLog("    > Error! Expected TrySetException() to result in 2 inner exceptions' got {0}"' ae.InnerExceptions.Count); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                    TestHarness.TestLog("    > Error! TrySetException() with null array element should have thrown an ArgumentException' got {0}"' " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                    TestHarness.TestLog("    > Error! TrySetException() with null IEnumerable should have thrown an ArgumentNullException' got {0}"' " is 128.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                    TestHarness.TestLog("    > Error! TrySetException() with null Exception should have thrown an ArgumentNullException' got {0}"' " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The length of the statement  "                    TestHarness.TestLog("    > Error! SetException() with null Exception should have thrown an ArgumentNullException' got {0}"' " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            t = Task.Factory.StartNew(delegate { temp = 1; }' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            t = Task.Factory.StartNew(delegate(object i) { temp = (int)i; }' 1' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 141.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            f = Task<int>.Factory.StartNew(delegate() { return 1; }' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            f = Task<int>.Factory.StartNew(delegate(object i) { return (int)i; }' 1' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 146.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            f = Task.Factory.StartNew<int>(delegate() { return 1; }' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The length of the statement  "            f = Task.Factory.StartNew<int>((object i) => { return (int)i; }' 1' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Current); " is 141.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The length of the statement  "            // Test for TaskStatus.Canceled for unstarted task being created with an already signaled CTS (this became a case of interest with the TPL Cancellation DCR) " is 156.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The length of the statement  "            // Test for TaskStatus.Canceled for unstarted task being created with an already signaled CTS (this became a case of interest with the TPL Cancellation DCR) " is 156.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The length of the statement  "                    Task exceptionalChild = Task.Factory.StartNew(delegate { throw new Exception("some exception"); }' TaskCreationOptions.AttachedToParent); //this should push an exception in our list " is 181.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The length of the statement  "                    TestHarness.TestLog("  > error: Wait on task with exceptional child threw an expception other than AggExp(AggExp(childsException))."); " is 134.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The length of the statement  "                    TestHarness.TestLog("  > error: Wait on task with exceptional child threw AggExp(AggExp(childsException))' but conatined wrong child exception."); " is 146.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            //CancellationTokenSource ctsForSleepAndAckCancelAction = null; // this needs to be allocated every time sleepAndAckCancelAction is about to be used " is 148.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            // test case 2: WaitAll() on a a group of tasks half of which is already completed' half of which is blocked when we start the wait " is 131.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            if (!DoRunTaskWaitAllTest(aptState' nFirstHalfCount' emptyAction' true' false' nSecondHalfCount' sleepAction' 5000' ref e)) " is 123.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            // test case 3: WaitAll() on a a group of tasks half of which is Canceled' half of which is blocked when we start the wait " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            if (!DoRunTaskWaitAllTest(aptState' nFirstHalfCount' sleepAndAckCancelAction' false' true' nSecondHalfCount' emptyAction' 5000' ref e)) " is 135.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The length of the statement  "            if (!DoRunTaskWaitAllTest(aptState' nFirstHalfCount' exceptionThrowAction' false' false' nSecondHalfCount' sleepAction' 5000' ref e)) " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTest,The length of the statement  "                    //Both setting the cancellationtoken to the new task' and passing it in as the state object so that the delegate can acknowledge using it " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTestWithCancellationToken,The length of the statement  "                    //Both setting the cancellationtoken to the new task' and passing it in as the state object so that the delegate can acknowledge using it " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,CoreWaitAnyTest,The length of the statement  "            for (int i = 0; i < fillerTasks; i++) tasks[i] = new Task(delegate { }); // don't start it -- that might make things complicated " is 128.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Did not expect to see exception for completed-then-canceled task.Wait' saw {0}"' e); " is 120.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The length of the statement  "                // we reduce the max threads on TP so that this doesn't take too long' and we restore original values after the verification " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The length of the statement  "                    TestHarness.TestLog("  > error: expected exception from Wait() on a task that was marked for cancellation before executing"); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The length of the statement  "                        TestHarness.TestLog("    > error: should have received exception while waiting on a task that threw ThreadAbortException."); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The length of the statement  "                        TestHarness.TestLog("    > error: should have received exception while waiting on a task that threw ThreadAbortException."); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The length of the statement  "            // use of fut1Executed here is a crude test to make sure we've already gone into the delegate before we read the value below. " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The length of the statement  "                try{ int i = promise3.Task.Result; } catch( AggregateException){ cancellationExceptionReceived = true;} catch(Exception){someotherExceptionReceived =true;} " is 155.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The length of the statement  "                t = Task.Factory.StartNew(delegate(object o) { }' stateObj' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Default); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The length of the statement  "                TestHarness.TestLog("  > error: exception thrown accessing a Task property after Dispose which should still be available."); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The length of the statement  "            bPassed &= VerifyThrowsObjectDisposedException(delegate { Task.Factory.ContinueWhenAny(new Task[] { t }' (winner) => { }); }); " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The length of the statement  "            bPassed &= VerifyThrowsObjectDisposedException(delegate { Task.Factory.ContinueWhenAll(new Task[] { t }' (tasks) => { }); }); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Wrong inner exception thrown from Wait(): {0}"' ae.InnerExceptions[0].GetType().Name); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Wrong inner exception thrown from Wait(): {0}"' ae.InnerExceptions[0].GetType().Name); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The length of the statement  "            Task tc1 = completedTask.ContinueWith(delegate { }' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' bts); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Wrong inner exception thrown from Wait() (sync): {0}"' ae.InnerExceptions[0].GetType().Name); " is 129.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Wrong inner exception thrown from Wait() (async): {0}"' ae.InnerExceptions[0].GetType().Name); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The length of the statement  "                Task.Factory.ContinueWhenAny(new Task[] { dummy }' delegate(Task winner) { }' TaskContinuationOptions.LongRunning | TaskContinuationOptions.ExecuteSynchronously); " is 162.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The length of the statement  "                Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The length of the statement  "                Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 144.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The length of the statement  "                Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 140.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The length of the statement  "                Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { return 20; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 151.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(new Task[] { dummy }' delegate(Task[] finishedArray) { }' TaskContinuationOptions.LongRunning | TaskContinuationOptions.ExecuteSynchronously); " is 171.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 156.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 172.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted); " is 135.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 167.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted); " is 130.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 163.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { }' TaskContinuationOptions.NotOnFaulted); " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 179.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted); " is 142.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null); " is 174.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The length of the statement  "                Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The length of the statement  "            Task<int> t4 = t3.ContinueWith(delegate(Task<int> t) { return Task<int>.Factory.StartNew(delegate { return 10; }); }).Unwrap(); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The length of the statement  "            Task<string> t5 = t4.ContinueWith(delegate(Task<int> t) { return Task<string>.Factory.StartNew(delegate { Thread.Sleep(500); return "worked"; }); }).Unwrap(); " is 158.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The length of the statement  "                TestHarness.TestLog("      > Failed!  Returned Task<T> did not yield the correct value (saw {0}' should be 1.)"' f1.Result); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The length of the statement  "                    TestHarness.TestLog("      > Failed!  Returned Task<T> did not yield the correct value (saw {0}' should be 1.)"' f1.Result); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The length of the statement  "                TestHarness.TestLog("      > Failed!  Returned Task<T> did not yield the correct value (saw {0}' should be 1.)"' f1.Result); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The length of the statement  "                    TestHarness.TestLog("      > Failed!  Returned Task<T> did not yield the correct value (saw {0}' should be 1.)"' f1.Result); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The length of the statement  "                Task t2 = t1.ContinueWith((ooo) => { }' TaskContinuationOptions.LongRunning | TaskContinuationOptions.ExecuteSynchronously); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The length of the statement  "                c1b = child1.ContinueWith(delegate { }' TaskContinuationOptions.NotOnCanceled | TaskContinuationOptions.AttachedToParent); " is 122.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The length of the statement  "                c2b = child2.ContinueWith(delegate { }' TaskContinuationOptions.NotOnRanToCompletion | TaskContinuationOptions.AttachedToParent); " is 129.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The length of the statement  "                TestHarness.TestLog("    > FAILED.  Continuation task w/NotOnCanceled should have been canceled when antecedent was canceled."); " is 128.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The length of the statement  "                TestHarness.TestLog("    > FAILED.  Continuation task w/NotOnRanToCompletion should have been canceled when antecedent completed."); " is 132.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c1 = taskRoot.ContinueWith((antecedent) => { return Task<int>.Factory.StartNew(delegate { mres.Wait(); return 1; }); }).Unwrap(); " is 129.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c2 = futureRoot.ContinueWith((antecedent) => {return Task<int>.Factory.StartNew(delegate {mres.Wait(); return 2;});}).Unwrap(); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c1 = taskRoot.ContinueWith(delegate(Task t) { doExc(); return Task<int>.Factory.StartNew(delegate { return 1; }); }).Unwrap(); " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c2 = futureRoot.ContinueWith(delegate(Task<int> t) { doExc(); return Task<int>.Factory.StartNew(delegate { return 2; }); }).Unwrap(); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c3 = taskRoot.ContinueWith(delegate(Task t) { return Task<int>.Factory.StartNew(delegate { doExc(); return 3; }); }).Unwrap(); " is 126.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "            c4 = futureRoot.ContinueWith(delegate(Task<int> t) { return Task<int>.Factory.StartNew(delegate { doExc(); return 4; }); }).Unwrap(); " is 133.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "                TestHarness.TestLog("    > FAILED.  Exception thrown while waiting for task/futureRoots used for exception testing: {0}"' e); " is 125.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "                TestHarness.TestLog("    > FAILED.  Direct cancellation of returned Task<int>->Task<int> did not work -- status = {0}"' ts); " is 124.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "                    TestHarness.TestLog("    > FAILED.  Monadic continuation w/ faulted childred had {0} inner exceptions' expected 4"' ae.InnerExceptions.Count); " is 142.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The length of the statement  "                Task<Task<int>> f1 = Task.Factory.StartNew<Task<int>>(() => Task.Factory.StartNew<int>(() => 10)' TaskCreationOptions.AttachedToParent); " is 136.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue()' cancel); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue()' cancel); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue()' cancel); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue()' cancel); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                if (taskIsFuture) task = Task<string>.Factory.StartNew(() => { cancellationMRE.WaitOne(); cts.Token.ThrowIfCancellationRequested(); return null; }' cts.Token); " is 159.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                else task = Task.Factory.StartNew(delegate { cancellationMRE.WaitOne(); cts.Token.ThrowIfCancellationRequested(); }' cts.Token); " is 128.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue' cancel); " is 135.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    task = Task<string>.Factory.StartNew(() => { cancellationMRE.WaitOne(); ct.ThrowIfCancellationRequested(); return null; }' ct); " is 127.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The length of the statement  "                    TestHarness.TestLog("    >> Failed: continuation didn't run or get canceled when expected: ran = {0}' cancel = {1}"' ranValue()' cancel); " is 137.
Long Statement,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,FindMember,The length of the statement  "                TestHarness.TestLog("      ERROR: \"{0}\" isn't a member of \"{1}\"' or it's declared with a wrong type."' memberName' type.Name); " is 130.
Long Statement,plinq_devtests,MyPartitioner<TSource>,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,GetPartitions,The length of the statement  "                IEnumerable<KeyValuePair<long' TSource>> partitionEnumerable = Partitioner.Create(m_data' true).GetOrderableDynamicPartitions(); " is 128.
Long Statement,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,The length of the statement  "            Console.WriteLine("    Created {0}"' new System.IO.FileInfo(typeof(ParallelEnumerable).Assembly.Location).CreationTime); " is 120.
Long Statement,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest8_PostPhaseException,The length of the statement  "            // Run threads that will expect BarrierPostPhaseException when they call SignalAndWait' and increment the count in the catch block " is 130.
Long Statement,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The length of the statement  "            // ensure partitioners (plinq or manual) do not enumerate after disposing the source' else unexpected ODEs will be reported. " is 124.
Long Statement,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Exceptions,The length of the statement  "                    TestHarness.TestLog("Failure in GetOrderablePartitions of algorithm {0}' didn't catch ArgumentOutOfRangeException"' algorithm); " is 127.
Long Statement,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,TestPartitioningCore,The length of the statement  "                    DebugMessage(false' () => Console.WriteLine("partition {0} is assigned to thread {1}"' my_i' Thread.CurrentThread.ManagedThreadId)); " is 132.
Long Statement,plinq_devtests,FxCopValidator,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\MscorlibFxCopValidator.cs,RunFxCopValidator,The length of the statement  "            p.StartInfo.Arguments = @"/p:mscorlib.fxcop /d:" + ddSuitesPath + @"\src\FxCop\Excludes\Triaged /d:" + ddSuitesPath + @"\src\FxCop\Excludes\EverettBreaking " + " is 159.
Long Statement,plinq_devtests,FxCopValidator,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\MscorlibFxCopValidator.cs,RunFxCopValidator,The length of the statement  "                "/e:mscorlib.dll-breaking.xml /c:" + ddSuitesPath + @"\src\FxCop\Dictionaries\DevDivCustomDictionary.xml /ret:100 /verbose"; " is 124.
Long Statement,plinq_devtests,PFXStandAloneTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\Pfx3.5Tests.cs,BuildPFX,The length of the statement  "            p.StartInfo.WorkingDirectory = Environment.GetEnvironmentVariable("_NT_SOURCE_PATH") + "\\qa\\pfx\\ParallelExtensions_3_5"; " is 123.
Long Statement,plinq_devtests,PfxPerfBVT,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PfxPerfBvt.cs,RunPerfBVT,The length of the statement  "            TestHarness.TestLog(@"* Run PfxPerfBvts. This test always returns true even if perf runs are not successful or result file has invalid format " is 141.
Long Statement,plinq_devtests,PfxPerfBVT,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PfxPerfBvt.cs,RunPerfBVT,The length of the statement  "     * This test will generate a result file named PfxPerfBvt.csv' please check in this file with your changes to the product code " is 125.
Long Statement,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => barrier.SignalAndWait(ct)' ct' "An OCE should have been thrown."); " is 139.
Long Statement,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => barrier.SignalAndWait(millisec' ct)' ct' "An OCE should have been thrown."); " is 149.
Long Statement,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => barrier.SignalAndWait(timeSpan' ct)' ct' "An OCE should have been thrown."); " is 149.
Long Statement,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTake,The length of the statement  "            passed &= TestHarnessAssert.IsFalse(coll1.IsAddingCompleted' "(1) At this point CompleteAdding should not have occurred."); " is 123.
Long Statement,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpAdd,The length of the statement  "            passed &= TestHarnessAssert.IsFalse(coll1.IsAddingCompleted' "(1) At this point CompleteAdding should not have occurred."); " is 123.
Long Statement,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => countdownEvent.Wait(ct)' ct' "An OCE should have been thrown."); " is 137.
Long Statement,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => countdownEvent.Wait(millisec' ct)' ct' "An OCE should have been thrown."); " is 147.
Long Statement,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => countdownEvent.Wait(timeSpan' ct)' ct' "An OCE should have been thrown."); " is 147.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => mres.Wait(ct)' ct' "An OCE should have been thrown."); " is 127.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => mres.Wait(millisec' ct)' ct' "An OCE should have been thrown."); " is 137.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => mres.Wait(timeSpan' ct)' ct' "An OCE should have been thrown."); " is 137.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The length of the statement  "            Console.WriteLine("        (second wait duration [expecting   {0'4} +-50ms] ={1'4})"' waitTimeoutMilliseconds' wait2ElapsedMilliseconds); " is 137.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(cts1.Token' OCEHelper.ExtractCT(wait1OCE)' "The first wait should have thrown an OCE(cts1.token)."); " is 137.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(wait1ElapsedMilliseconds < 500' "[Warning: Timing Sensitive Test] The first wait should have canceled before 500ms elapsed."); " is 161.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsFalse(wait2WokeUpNormally'"The second wait should not have woken up normally. It should have woken due to timeout."); " is 147.
Long Statement,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds); " is 242.
Long Statement,plinq_devtests.Cancellation,OperationCanceledExceptionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\OperationCanceledExceptionTests.cs,OperationCanceledException_Basics,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(ct1' OCEHelper.ExtractCT(ex1)' "The exception should have the CancellationToken baked in."); " is 129.
Long Statement,plinq_devtests.Cancellation,OperationCanceledExceptionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\OperationCanceledExceptionTests.cs,OperationCanceledException_Basics,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(ct2' OCEHelper.ExtractCT(ex2)' "The exception should have the CancellationToken baked in."); " is 129.
Long Statement,plinq_devtests.Cancellation,OperationCanceledExceptionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\OperationCanceledExceptionTests.cs,OperationCanceledException_Basics,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(ct3' OCEHelper.ExtractCT(ex3)' "The exception should have the CancellationToken baked in."); " is 129.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => semaphoreSlim.Wait(ct)' ct' "An OCE should have been thrown."); " is 136.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => semaphoreSlim.Wait(millisec' ct)' ct' "An OCE should have been thrown."); " is 146.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The length of the statement  "            passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(() => semaphoreSlim.Wait(timeSpan' ct)' ct' "An OCE should have been thrown."); " is 146.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The length of the statement  "            Console.WriteLine("        (second wait duration [expecting   {0'4} +-50ms] ={1'4})"' waitTimeoutMilliseconds' wait2ElapsedMilliseconds); " is 137.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.AreEqual(cts1.Token' OCEHelper.ExtractCT(wait1OCE)' "The first wait should have thrown an OCE(cts1.token)."); " is 137.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(wait1ElapsedMilliseconds < 500' "[Warning: Timing Sensitive Test] The first wait should have canceled before 500ms elapsed."); " is 161.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsFalse(wait2WokeUpNormally' "The second wait should not have woken up normally. It should have woken due to timeout."); " is 148.
Long Statement,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The length of the statement  "            passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds); " is 242.
Complex Conditional,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithJoinJoin,The conditional expression  "!(passed &= (last == null || ((last.Value <= p && !descending) || (last.Value >= p && descending))))"  is complex.
Complex Conditional,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The conditional expression  "!(passed &= (last == null || ((last.Value.First <= p.First && !descending) || (last.Value.First >= p.First && descending))))"  is complex.
Complex Conditional,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The conditional expression  "!(passed &= (last == null || (last.Value.First != p.First) || ((last.Value.Second <= p.Second && !descending) || (last.Value.Second >= p.Second && descending))))"  is complex.
Complex Conditional,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTest5_CurrentCount,The conditional expression  "(action == SemaphoreSlimActions.Wait && semaphore.CurrentCount != initial - 1)                  || (action == SemaphoreSlimActions.Release && semaphore.CurrentCount != initial + 1)"  is complex.
Complex Conditional,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForPLRTest,The conditional expression  "(plr.IsCompleted != shouldComplete) ||                (shouldStop && (plr.LowestBreakIteration != null)) ||                (shouldBreak && (plr.LowestBreakIteration == null))"  is complex.
Complex Conditional,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,For64PLRTest,The conditional expression  "(plr.IsCompleted != shouldComplete) ||              (shouldStop && (plr.LowestBreakIteration != null)) ||              (shouldBreak && (plr.LowestBreakIteration == null))"  is complex.
Complex Conditional,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ForEachPLRTest,The conditional expression  "(plr.IsCompleted != shouldComplete) ||              (shouldStop && (plr.LowestBreakIteration != null)) ||              (shouldBreak && (plr.LowestBreakIteration == null))"  is complex.
Complex Conditional,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,PartitionerForEachPLRTest,The conditional expression  "(plr.IsCompleted != shouldComplete) ||                  (shouldStop && (plr.LowestBreakIteration != null)) ||                  (shouldBreak && (plr.LowestBreakIteration == null))"  is complex.
Complex Conditional,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,OrderablePartitionerForEachPLRTest,The conditional expression  "(plr.IsCompleted != shouldComplete) ||                  (shouldStop && (plr.LowestBreakIteration != null)) ||                  (shouldBreak && (plr.LowestBreakIteration == null))"  is complex.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_CompleteAdding,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_CompleteAdding,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest18_TakeExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest18_TakeExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest18_TakeExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest1_Ctor,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest8_Value,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest8_Value,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_SimpleRef,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_SimpleRef,The method has an empty catch block.
Empty Catch Block,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexRef,The method has an empty catch block.
Empty Catch Block,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest4_Value,The method has an empty catch block.
Empty Catch Block,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_1,The method has an empty catch block.
Empty Catch Block,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_2,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForPaths,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCreateTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,DoRunTaskWaitAllTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskExceptionTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBuggySchedulerTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithOnDisposedTaskTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithParamsTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithBase,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,CoreRunSynchronouslyTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,CoreRunSynchronouslyTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,CoreRunSynchronouslyTest,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,SimultaneousStopBreakTests,The method has an empty catch block.
Empty Catch Block,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,FindMember,The method has an empty catch block.
Empty Catch Block,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The method has an empty catch block.
Empty Catch Block,plinq_devtests,FxCopValidator,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\MscorlibFxCopValidator.cs,RunFxCopValidator,The method has an empty catch block.
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest0_Construction(10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 9' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 9' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest1_AddTake(10' 10' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest2_ConcurrentAdd(2' 10240);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest2_ConcurrentAdd(2' 10240);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest2_ConcurrentAdd(16' 1024);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest2_ConcurrentAdd(16' 1024);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest3_ConcurrentAddTake(16' 1024);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest3_ConcurrentAddTake(16' 1024);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest9_CopyTo(8);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(1' 1' 16' 0' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 9' 16' 15' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 9' 16' 15' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 9' 16' 15' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 9' 16' 15' -1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 14' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 14' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 14' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 14' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 14' 10);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 1' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 1' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 1' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest14_AddAnyTakeAny(10' 10' 16' 1' 9);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny(8' 10240' 2' 64);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny(8' 10240' 2' 64);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny(8' 10240' 2' 64);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTests,The following statement contains a magic number: passed &= RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny(8' 10240' 2' 64);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix543683,The following statement contains a magic number: Task[] consumers = new Task[4];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix543683,The following statement contains a magic number: taskNum < 4
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix543683,The following statement contains a magic number: j < 1000
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_BugFix544259,The following statement contains a magic number: int count = 8;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_Bug626345,The following statement contains a magic number: const int noOfConsumers = 50;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_Bug626345,The following statement contains a magic number: const int noOfItemsToProduce = 2;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_Bug626345,The following statement contains a magic number: producers[prodIndex] = new Thread(() =>                  {                      for (int dummyItem = 0;                           dummyItem < noOfItemsToProduce;                           dummyItem++)                      {                          for (int j = 0; j < 5; j++)                          {                              Math.Min(0' j);                          }                          m_BlockingQueueUnderTest.Add(dummyItem);                        }                  }                      );
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest_Bug626345,The following statement contains a magic number: consumers[consumerIndex] = new Thread(() =>                  {                      while (!m_BlockingQueueUnderTest.IsCompleted)                      {                          long item;                          if (m_BlockingQueueUnderTest.TryTake(out item' 1))                          {                              for (int j = 0; j < 5; j++)                              {                                  Math.Min(0' j);                              }                          }                          Thread.Sleep(1);                      }                  }                      );
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest0_Construction,The following statement contains a magic number: int count = boundedCapacity != -1 ? boundedCapacity : 10;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The following statement contains a magic number: (numOfThreads % 2) != 0
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The following statement contains a magic number: i < (threads.Length / 2)
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest3_ConcurrentAddTake,The following statement contains a magic number: return VerifyElementsAreMembersOfSequence(sortedElementsInCollection' 0' (numOfThreads / 2 * numOfElementsPerThread) - 1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest4_Dispose,The following statement contains a magic number: const int NUM_OF_COLLECTIONS = 10;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest5_GetEnumerator,The following statement contains a magic number: const int MAX_NUM_TO_ADD = 100;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest6_GetConsumingEnumerable,The following statement contains a magic number: const int MAX_NUM_TO_ADD = 100;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_ConcurrentAdd_CompleteAdding,The following statement contains a magic number: Thread[] threads = new Thread[4];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_ConcurrentAdd_CompleteAdding,The following statement contains a magic number: threads[i] = new Thread(() =>                  {                      for (int j = 0; j < 1000; j++)                      {                          try                          {                              blockingCollection.Add(j);                              Interlocked.Increment(ref succeededAdd);                          }                          catch (InvalidOperationException)                          {                              break;                          }                        }                  });
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest7_ConcurrentAdd_CompleteAdding,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest8_ToArray,The following statement contains a magic number: const int MAX_NUM_TO_ADD = 100;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest9_CopyTo,The following statement contains a magic number: const int MAX_NUM_TO_ADD = 100;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The following statement contains a magic number: (numOfThreads % 2) != 0
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The following statement contains a magic number: i < (threads.Length / 2)
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest15_ConcurrentAddAnyTakeAny,The following statement contains a magic number: return VerifyElementsAreMembersOfSequence(sortedElementsInCollection' 0' (numOfThreads / 2 * numOfElementsPerThread) - 1);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest16_Ctor,The following statement contains a magic number: concurrentStack.TryAdd(2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The following statement contains a magic number: blockingCollection.TryAdd(0' new TimeSpan(0' 0' 0' 1' 2147483647));
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest17_AddExceptions,The following statement contains a magic number: blockingCollection.TryAdd(0' -2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest18_TakeExceptions,The following statement contains a magic number: blockingCollection.TryTake(out item' new TimeSpan(0' 0' 0' 1' 2147483647));
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest18_TakeExceptions,The following statement contains a magic number: blockingCollection.TryTake(out item' -2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: const int NUM_OF_COLLECTIONS = 2;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: BlockingCollection<int>.TryAddToAny(blockingCollections' 0' new TimeSpan(0' 0' 0' 1' 2147483647));
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: BlockingCollection<int>.TryAddToAny(blockingCollections' 0' -2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: int len = 64;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: len = 63;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: Thread t = new Thread(() =>                  {                      try                      {                          BlockingCollection<int>.TryAddToAny(collections' -1' 100);                          failed = true;                      }                      catch (ArgumentOutOfRangeException)                      {                      }                  });
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest19_AddAnyExceptions,The following statement contains a magic number: i < 2
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The following statement contains a magic number: const int NUM_OF_COLLECTIONS = 2;
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The following statement contains a magic number: BlockingCollection<int>.TryTakeFromAny(blockingCollections' out item' new TimeSpan(0' 0' 0' 1' 2147483647));
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest20_TakeAnyExceptions,The following statement contains a magic number: BlockingCollection<int>.TryTakeFromAny(blockingCollections' out item' -2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: int[] arr = new int[2];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: blockingCollection.CopyTo(arr' 2);
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: int['] twoDArray = new int[2' 2];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: int['] twoDArray = new int[2' 2];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: float['] twoDArray = new float[2' 2];
Magic Number,plinq_devtests,BlockingCollectionTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BlockingCollectionTests.cs,RunBlockingCollectionTest21_CopyToExceptions,The following statement contains a magic number: float['] twoDArray = new float[2' 2];
Magic Number,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,CancellationTokenWaitHandle_SignalAfterWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (args) =>                  {                      Thread.Sleep(1000);                      tokenSource.Cancel(); //Signal                  }                  );
Magic Number,plinq_devtests,CancellationTokenTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CancellationTokenTests.cs,Cancel_DontThrowOnFirstException,The following statement contains a magic number: passed &= TestHarnessAssert.AreEqual(2' caughtException.InnerExceptions.Count' "There should be one exception in the aggregate.");
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest0_Empty(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(5' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(5' 2);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(5' 2);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(5' 5);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(5' 5);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(1024' 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(1024' 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(1024' 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest1_PushAndPop(1024' 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest2_ConcPushAndPop(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest3_Clear(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest3_Clear(1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest4_Enumerator(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest4_Enumerator(1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest5_CtorAndCopyToAndToArray(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest5_CtorAndCopyToAndToArray(1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(8' 10);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(8' 10);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(16' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(16' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(128' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest6_PushRange(128' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(8' 10);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(8' 10);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(16' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(16' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(128' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTests,The following statement contains a magic number: passed &= RunConcurrentStackTest7_PopRange(128' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest1_PushAndPop,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest1_PushAndPop,The following statement contains a magic number: i < r.Next(1' 10)
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest1_PushAndPop,The following statement contains a magic number: i < r.Next(1' 10)
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest2_ConcPushAndPop,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Push(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryPop(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest2_ConcPushAndPop,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Push(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryPop(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentStackTest2_ConcPushAndPop,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Push(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryPop(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest0_Empty(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(5' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(5' 2);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(5' 2);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(5' 5);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(5' 5);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(1024' 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(1024' 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(1024' 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1_EnqAndDeq(1024' 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest1b_TryPeek(512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 0);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest2_ConcEnqAndDeq(8' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest4_Enumerator(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest4_Enumerator(1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest5_CtorAndCopyToAndToArray(16);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTests,The following statement contains a magic number: passed &= RunConcurrentQueueTest5_CtorAndCopyToAndToArray(1024);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunBugFix570046,The following statement contains a magic number: var t1 = Task.Factory.StartNew(               () =>               {                   for (int i = 0; i < 1000000; i++)                   {                       q.Enqueue(i);                       int? o;                       if (!q.TryDequeue(out o))                       {                           TestHarness.TestLog("Failed! TryDequeue should never return false in this test");                           passed = false;                       }                   }               });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1_EnqAndDeq,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1_EnqAndDeq,The following statement contains a magic number: i < r.Next(1' 10)
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1_EnqAndDeq,The following statement contains a magic number: i < r.Next(1' 10)
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1b_TryPeek,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1b_TryPeek,The following statement contains a magic number: j < 5
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest1b_TryPeek,The following statement contains a magic number: j < 5
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest2_ConcEnqAndDeq,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Enqueue(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryDequeue(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest2_ConcEnqAndDeq,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Enqueue(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryDequeue(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunConcurrentQueueTest2_ConcEnqAndDeq,The following statement contains a magic number: tt[k] = new Thread(delegate()                  {                      Random r = new Random(33);                      mre.WaitOne();                        int donePushes = 0' donePops = 0;                      while (donePushes < pushes || donePops < pops)                      {                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePushes == pushes)                                  break;                                s.Enqueue(r.Next());                              donePushes++;                          }                          for (int i = 0; i < r.Next(1' 10); i++)                          {                              if (donePops == pops)                                  break;                              if ((donePushes - donePops) <= 0)                                  break;                                int e;                              if (s.TryDequeue(out e))                                  donePops++;                          }                      }                  });
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest0_StateTrans,The following statement contains a magic number: i < 50
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest1_SimpleWait,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest2_TimeoutWait,The following statement contains a magic number: ev.Wait(100)
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest2_TimeoutWait,The following statement contains a magic number: ev.Wait(TimeSpan.FromMilliseconds(100))
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest3_ConstructorTests,The following statement contains a magic number: passed &= TestHarnessAssert.EnsureExceptionThrown(                            () => new ManualResetEventSlim(false' 2048)' //max value is 2047.                            typeof(ArgumentOutOfRangeException)'                            "The max value for spin count is 2047. An ArgumentException should be thrown.");
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest4_CombinedStateTests,The following statement contains a magic number: ManualResetEventSlim mres = new ManualResetEventSlim(false' 100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunManualResetEventSlimTest4_CombinedStateTests,The following statement contains a magic number: int expectedCount = Environment.ProcessorCount == 1 ? 1 : 100;
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 0' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 0' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 0' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' false);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 0' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 0' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 0' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(128' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest0_StateTrans(1024 * 1024' 1024' true);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTests,The following statement contains a magic number: passed &= RunCountdownEventTest1_SimpleTimeout(100);
Magic Number,plinq_devtests,CdsTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsTests.cs,RunCountdownEventTest1_SimpleTimeout,The following statement contains a magic number: CountdownEvent ev = new CountdownEvent(999);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(1' 1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(1' 1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(1' 1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(1' 1' 5' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(1' 1' 5' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(4' 0' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(4' 0' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(4' 0' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(16' 31' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(16' 31' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(16' 31' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(16' 31' 4' 20000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(64' 5' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(64' 5' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(64' 5' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(64' 5' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Add1(5' 5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(5' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(5' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Update1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(5' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(5' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(1' 2' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Read1(5' 5' 250000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(1' 1' 100000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(5' 1' 10000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(5' 1' 10000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(1' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(4' 4' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(15' 5' 20001);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove1(64' 5' 50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove2(10);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest_Remove2(50000);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 1' 100000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 1' 1' 100000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 1' 1' 100000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 2' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 2' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 5' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 5' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.GetOrAdd);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 1' 100000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 1' 1' 100000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 1' 1' 100000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 2' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 2' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 5' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(1' 1' 5' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(4' 0' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(16' 31' 4' 20000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(64' 5' 5' 50000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunConcurrentDictionaryTests,The following statement contains a magic number: passed &= RunDictionaryTest(5' 5' 5' 250000' TestMethod.AddOrUpdate);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Update1,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                          (o) =>                          {                              for (int j = 1; j <= updatesPerThread; j++)                              {                                  dict[j] = (ii + 2) * j;                              }                              if (Interlocked.Decrement(ref running) == 0) mre.Set();                          });
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Update1,The following statement contains a magic number: (from pair in dict                   let div = pair.Value / pair.Key                   let rem = pair.Value % pair.Key                   select rem != 0 || div < 2 || div > threads + 1)                  .Any(res => res)
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Read1,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                          (o) =>                          {                              for (int j = 0; j < readsPerThread; j++)                              {                                  int val = 0;                                  if (dict.TryGetValue(j' out val))                                  {                                      if (j % 2 == 1 || j != val)                                      {                                          TestHarness.TestLog("  > Invalid element in the dictionary.");                                          passed = false;                                          break;                                      }                                  }                                  else                                  {                                      if (j % 2 == 0)                                      {                                          TestHarness.TestLog("  > Element missing from the dictionary");                                          passed = false;                                          break;                                      }                                  }                              }                              if (Interlocked.Decrement(ref count) == 0) mre.Set();                          });
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Read1,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                          (o) =>                          {                              for (int j = 0; j < readsPerThread; j++)                              {                                  int val = 0;                                  if (dict.TryGetValue(j' out val))                                  {                                      if (j % 2 == 1 || j != val)                                      {                                          TestHarness.TestLog("  > Invalid element in the dictionary.");                                          passed = false;                                          break;                                      }                                  }                                  else                                  {                                      if (j % 2 == 0)                                      {                                          TestHarness.TestLog("  > Element missing from the dictionary");                                          passed = false;                                          break;                                      }                                  }                              }                              if (Interlocked.Decrement(ref count) == 0) mre.Set();                          });
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove1,The following statement contains a magic number: int N = 2 * threads * removesPerThread;
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove1,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                          (o) =>                          {                              for (int j = 0; j < removesPerThread; j++)                              {                                  int value;                                  int key = 2 * (ii + j * threads);                                  if (!dict.TryRemove(key' out value))                                  {                                      TestHarness.TestLog("  > Failed to remove an element' which should be in the dictionary.");                                      passed = false;                                      break;                                  }                                    if (value != -key)                                  {                                      TestHarness.TestLog("  > Invalid value for some key in the dictionary.");                                      passed = false;                                      break;                                  }                              }                              if (Interlocked.Decrement(ref running) == 0) mre.Set();                          });
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove1,The following statement contains a magic number: IEnumerable<int> expectKeys = Enumerable.Range(0' threads * removesPerThread).Select(i => 2 * i + 1);
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove2,The following statement contains a magic number: int running = 2;
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove2,The following statement contains a magic number: bool[][] seen = new bool[2][];
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove2,The following statement contains a magic number: i < 2
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove2,The following statement contains a magic number: t < 2
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: dict[99] = -99;
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: dict[99] = -99;
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: col.Remove(new KeyValuePair<int' int>(i' -99)) || col.Remove(new KeyValuePair<int' int>(99' -i))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: col.Remove(new KeyValuePair<int' int>(i' -99)) || col.Remove(new KeyValuePair<int' int>(99' -i))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: i != 99
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: i < 1000
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: !col.Remove(new KeyValuePair<int' int>(99' -99))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: !col.Remove(new KeyValuePair<int' int>(99' -99))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: col.Remove(new KeyValuePair<int' int>(99' -99))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_Remove3,The following statement contains a magic number: col.Remove(new KeyValuePair<int' int>(99' -99))
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                          (o) =>                          {                              for (int j = 0; j < addsPerThread; j++)                              {                                  //call either of the two overloads of GetOrAdd                                  if (j + ii % 2 == 0)                                  {                                      dict.GetOrAdd(j' -j);                                  }                                  else                                  {                                      dict.GetOrAdd(j' x => -x);                                  }                              }                              if (Interlocked.Decrement(ref count) == 0) mre.Set();                          });
Magic Number,plinq_devtests,ConcurrentDictionaryTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentDictionaryTests.cs,RunDictionaryTest_BugFix669376,The following statement contains a magic number: cd["test"] = 10;
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest1_Ctor(new int[] { 1' 2' 3 }' null);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest1_Ctor(new int[] { 1' 2' 3 }' null);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest2_Add(1' 10);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest2_Add(64' 100);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest2_Add(64' 100);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest2_Add(128' 1000);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest2_Add(128' 1000);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: bag = CreateBag(100);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest3_TakeOrPeek(bag' 1' 100' true);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: bag = CreateBag(100);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest3_TakeOrPeek(bag' 64' 10' false);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest3_TakeOrPeek(bag' 64' 10' false);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: bag = CreateBag(1000);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest3_TakeOrPeek(bag' 128' 100' true);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest3_TakeOrPeek(bag' 128' 100' true);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest4_AddAndTake(64);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest4_AddAndTake(128);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest4_AddAndTake(256);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: bag = CreateBag(10);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' -1' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' 10' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' 10' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' 8' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' 8' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10' 5]' 8' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10' 5]' 8' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10' 5]' 8' typeof(ArgumentException));
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTests,The following statement contains a magic number: passed &= RunConcurrentBagTest5_CopyTo(bag' new int[10]' 0' null);
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest4_AddAndTake,The following statement contains a magic number: int end = 10;
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest4_AddAndTake,The following statement contains a magic number: int[] validation = new int[(end - start) * threads.Length / 2];
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest6_GetEnumerator,The following statement contains a magic number: i < 100
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest7_BugFix575975,The following statement contains a magic number: Thread[] threads = new Thread[4];
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest7_BugFix575975,The following statement contains a magic number: threads[t] = new Thread((obj) =>                  {                      int index = (int)obj;                      for (int i = 0; i < 100000; i++)                      {                          if (index < threads.Length / 2)                          {                              for (int j = 0; j < 1000; j++) Math.Min(j' j - 1);                              bc.Add(i);                          }                          else                          {                              try                              {                                  bc.Take();                              }                              catch // Take must not fail                              {                                  succeeded = false;                                  break;                              }                          }                      }                    });
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest7_BugFix575975,The following statement contains a magic number: threads[t] = new Thread((obj) =>                  {                      int index = (int)obj;                      for (int i = 0; i < 100000; i++)                      {                          if (index < threads.Length / 2)                          {                              for (int j = 0; j < 1000; j++) Math.Min(j' j - 1);                              bc.Add(i);                          }                          else                          {                              try                              {                                  bc.Take();                              }                              catch // Take must not fail                              {                                  succeeded = false;                                  break;                              }                          }                      }                    });
Magic Number,plinq_devtests,ConcurrentBagTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ConcurrentBagTests.cs,RunConcurrentBagTest7_BugFix575975,The following statement contains a magic number: threads[t] = new Thread((obj) =>                  {                      int index = (int)obj;                      for (int i = 0; i < 100000; i++)                      {                          if (index < threads.Length / 2)                          {                              for (int j = 0; j < 1000; j++) Math.Min(j' j - 1);                              bc.Add(i);                          }                          else                          {                              try                              {                                  bc.Take();                              }                              catch // Take must not fail                              {                                  succeeded = false;                                  break;                              }                          }                      }                    });
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: iters = 100;
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: dataMult = 4;
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 8 * dataMult' 4' 1024' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 8 * dataMult' 4' 2' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<int>(delegate(int i) { return i; }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ChannelTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ChannelTests.cs,RunBoundedSingleChannelTests_Parallel,The following statement contains a magic number: passed &= ProducerConsumer_InParallel<object>(delegate(int i) { return  new object(); }' 1024 * 16 * dataMult' 8' 2048' 128);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 8' i' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 8' i' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 8' i' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 8' i' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SimplePartitionMergeWhereScanTest1(1024 * 1024 * 2' i' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: i <= 128
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= CheckWhereSelectComposition(1024 * 8);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= CheckWhereSelectComposition(1024 * 8);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 2' 0' 900);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 2' 0' 900);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 2' 0' 900);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 2' 0' 900);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 1' 0' 10);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 1' 0' 10);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 1' 0' 500);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 1' 0' 520);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 4' 0' 500);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(true' 4' 0' 500);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 4' 0' 520);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= PartitioningTest(false' 4' 0' 520);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= OrderedPipeliningTest1(4' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= OrderedPipeliningTest1(4' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= OrderedPipeliningTest1(10007' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= OrderedPipeliningTest1(10007' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SequentialPipeliningTest(1007' false' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SequentialPipeliningTest(1007' false' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SequentialPipeliningTest(1007' true' false);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunPartitionMergeTests,The following statement contains a magic number: passed &= SequentialPipeliningTest(1007' true' true);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,SimplePartitionMergeWhereScanTest1,The following statement contains a magic number: WhereQueryOperator<int> whereOp = new WhereQueryOperator<int>(                  data' delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,SimplePartitionMergeWhereScanTest1,The following statement contains a magic number: bool passed = count == (dataSize / 2);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,SimplePartitionMergeWhereScanTest1,The following statement contains a magic number: TestHarness.TestLog("  > count == dataSize/2? i.e. {0} == {1}? {2}"' count' dataSize/2' passed);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,CheckWhereSelectComposition,The following statement contains a magic number: WhereQueryOperator<int> whereOp = new WhereQueryOperator<int>(                  data' delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,CheckWhereSelectComposition,The following statement contains a magic number: SelectQueryOperator<int' int> selectOp = new SelectQueryOperator<int' int>(                  whereOp' delegate(int x) { return x * 2; });
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,CheckWhereSelectComposition,The following statement contains a magic number: expectSum += (i * 2);
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,OrderedPipeliningTest2,The following statement contains a magic number: IEnumerable<int> src = Enumerable.Range(0' int.MaxValue)                  .Select(x => { if (x == 1000000) throw new Exception(); return x; });
Magic Number,plinq_devtests,ExchangeTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ExchangeTests.cs,RunAsEnumerableTest,The following statement contains a magic number: IEnumerable<int> src = Enumerable.Range(0' 100).AsParallel().AsEnumerable().Select(x => x);
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest2_Serialization,The following statement contains a magic number: Lazy<int> lazyInt = new Lazy<int>(() => 33' true);
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest2_Serialization,The following statement contains a magic number: !deserializedLazyInt.IsValueCreated                  || deserializedLazyInt.Value != 33
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest8_Value,The following statement contains a magic number: int valueInt = 99;
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyTest8_Value,The following statement contains a magic number: lazy = new Lazy<string>(delegate                  {                      if (x++ < 5)                          return lazy.Value;                      else                          return "Test";                  }' true);
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexVal,The following statement contains a magic number: LIX template = new LIX(33);
Magic Number,plinq_devtests,LazyTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\LazyInitTests.cs,RunLazyInitializer_ComplexVal,The following statement contains a magic number: LIX template2 = new LIX(template.f*2);
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest4_Value,The following statement contains a magic number: tlocal = new ThreadLocal<string>(delegate                  {                      if (x++ < 5)                          return tlocal.Value;                      else                          return "Test";                  });
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest4_Value,The following statement contains a magic number: int numOfThreads = 10;
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: int MaximumFastPathPerInstance = 4096;
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: ThreadLocal<int>[] locals_int = new ThreadLocal<int>[MaximumFastPathPerInstance + 10 ];
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: locals_int = new ThreadLocal<int>[4096];
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: ThreadLocal<long>[] locals_long = new ThreadLocal<long>[4096];
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: ThreadLocal<float>[] locals_float = new ThreadLocal<float>[4096];
Magic Number,plinq_devtests,ThreadLocalTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\ThreadLocalTests.cs,RunThreadLocalTest6_SlowPath,The following statement contains a magic number: ThreadLocal<double>[] locals_double = new ThreadLocal<double>[4096];
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1023 * 3' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1023 * 3' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1023 * 3' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 3);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 3);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1024 * 2' 3);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(0' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(1' 8);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA1_IEnumerable(2048' 1);
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<object>(1024' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<object>(1024' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<float>(1024' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<float>(1024' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA2_IEnumerable_DrainOneThenNext<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<object>(1024' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<object>(1024' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<float>(1024' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<float>(1024' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<long>(1024 * 8' 8' delegate(int i) { return (long)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<long>(1024 * 8' 8' delegate(int i) { return (long)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Sequential,The following statement contains a magic number: passed &= t.RunPartA3_IEnumerable_DrainAllEvenly<long>(1024 * 8' 8' delegate(int i) { return (long)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 8' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 8' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<object>(1024 * 8' 4' delegate { return new object(); });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionedEnumeratorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,DrivePartitionAlgorithm_Parallel,The following statement contains a magic number: passed &= t.RunPartC1_IEnumerable_InParallel<float>(1024 * 8' 4' delegate(int i) { return (float)i; });
Magic Number,plinq_devtests,PartitionAlgorithmTest,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionedEnumeratorTests.cs,RunPartA3_IEnumerable_DrainAllEvenly,The following statement contains a magic number: cnt % (dataSize / 10) == 0
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,PreCanceledToken_ForAll,The following statement contains a magic number: int[] srcEnumerable = Enumerable.Range(0' 1000).ToArray();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,PreCanceledToken_SimpleEnumerator,The following statement contains a magic number: int[] srcEnumerable = Enumerable.Range(0' 1000).ToArray();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,MultiplesWithCancellationIsIllegal,The following statement contains a magic number: var query = Enumerable.Range(1' 10).AsParallel().WithDegreeOfParallelism(2).WithDegreeOfParallelism(2);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,MultiplesWithCancellationIsIllegal,The following statement contains a magic number: var query = Enumerable.Range(1' 10).AsParallel().WithDegreeOfParallelism(2).WithDegreeOfParallelism(2);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,MultiplesWithCancellationIsIllegal,The following statement contains a magic number: var query = Enumerable.Range(1' 10).AsParallel().WithDegreeOfParallelism(2).WithDegreeOfParallelism(2);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_Sorting_ToArray,The following statement contains a magic number: int size = 10000;
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_Sorting_ToArray,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (arg) =>                  {                      Thread.Sleep(500);                      tokenSource.Cancel();                  });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_AsynchronousMergerEnumeratorDispose,The following statement contains a magic number: int size = 10000;
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_AsynchronousMergerEnumeratorDispose,The following statement contains a magic number: var query =                      Enumerable.Range(1' size).AsParallel()                          .WithCancellation(tokenSource.Token)                          .Select(                          i =>                          {                              Thread.Sleep(1000);                              return i;                          });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_AsynchronousMergerEnumeratorDispose,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (arg) =>                  {                      Thread.Sleep(500);                      enumerator.Dispose();                  });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_AsynchronousMergerEnumeratorDispose,The following statement contains a magic number: j < 1000
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_SynchronousMergerEnumeratorDispose,The following statement contains a magic number: int size = 10000;
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_SynchronousMergerEnumeratorDispose,The following statement contains a magic number: var query =                      Enumerable.Range(1' size).AsParallel()                          .WithCancellation(tokenSource.Token)                          .Select(                          i =>                          {                              Thread.Sleep(100);                              return i;                          }).WithMergeOptions(ParallelMergeOptions.FullyBuffered);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_SynchronousMergerEnumeratorDispose,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (arg) =>                  {                      Thread.Sleep(1000);                      enumerator.Dispose();                  });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_SynchronousMergerEnumeratorDispose,The following statement contains a magic number: j < 1000
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_ToArray_ExternalCancel,The following statement contains a magic number: int size = 10000;
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_ToArray_ExternalCancel,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (arg) =>                  {                      Thread.Sleep(1000);                      tokenSource.Cancel();                  });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationTokenTest_NonSorting_ToArray_ExternalCancel,The following statement contains a magic number: int[] output = Enumerable.Range(1' size).AsParallel()                     .WithCancellation(tokenSource.Token)                     .Select(                     i =>                     {                         Thread.Sleep(100);                         return i;                     }).ToArray();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix535510_CloningQuerySettingsForSelectMany,The following statement contains a magic number: var plinq_src = ParallelEnumerable.Range(0' 1999).AsParallel();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix535510_CloningQuerySettingsForSelectMany,The following statement contains a magic number: var inner = ParallelEnumerable.Range(0' 20).AsParallel().Select(_item => _item);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix543310_ChannelCancellation_ProducerBlocked,The following statement contains a magic number: var query1 = Enumerable.Range(0' 100000000)  //provide 100million elements to ensure all the cores get >64K ints. Good up to 1600cores                      .AsParallel()                      .Select(x => x);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix543310_ChannelCancellation_ProducerBlocked,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,BugFix545118_AggregatesShouldntWrapOCE,The following statement contains a magic number: Enumerable.Range(0' 1000).AsParallel().WithCancellation(cs.Token).Sum(x => x);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).ForAll((x) => { });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).Average();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).Aggregate((a' b) => a + b);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).ToArray();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).Select(xx => xx)
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).WithMergeOptions(ParallelMergeOptions.FullyBuffered)
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).Where(xx => true).Skip(4)
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix626345_PlinqShouldDisposeLinkedToken,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel().WithCancellation(ct).Where(xx => true).Skip(4)
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Cancellation_ODEIssue,The following statement contains a magic number: Enumerable.Range(0' 1999).ToArray()                  .AsParallel().AsUnordered()                  .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                  .Zip<int' int' int>(                      Enumerable.Range(1000' 20).Select<int' int>(_item => (int)_item).AsParallel().AsUnordered()'                      (first' second) => { throw new OperationCanceledException(); })                 .ForAll(x => { });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Cancellation_ODEIssue,The following statement contains a magic number: Enumerable.Range(0' 1999).ToArray()                  .AsParallel().AsUnordered()                  .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                  .Zip<int' int' int>(                      Enumerable.Range(1000' 20).Select<int' int>(_item => (int)_item).AsParallel().AsUnordered()'                      (first' second) => { throw new OperationCanceledException(); })                 .ForAll(x => { });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Cancellation_ODEIssue,The following statement contains a magic number: Enumerable.Range(0' 1999).ToArray()                  .AsParallel().AsUnordered()                  .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                  .Zip<int' int' int>(                      Enumerable.Range(1000' 20).Select<int' int>(_item => (int)_item).AsParallel().AsUnordered()'                      (first' second) => { throw new OperationCanceledException(); })                 .ForAll(x => { });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationSequentialWhere,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationSequentialElementAt,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,CancellationSequentialDistinct,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix638383_ImmediateDispose,The following statement contains a magic number: var queryEnumerator = Enumerable.Range(1' 10).AsParallel().Select(x => x).GetEnumerator();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_1,The following statement contains a magic number: var plinq_src =                  Enumerable.Range(0' 5000000).Select(x =>                  {                      if (x == 0) mre.Set();                      return x;                  });
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_1,The following statement contains a magic number: var plinq = plinq_src                      .AsParallel().WithCancellation(cs.Token)                      .WithDegreeOfParallelism(1)                      .Union(Enumerable.Range(0' 10).AsParallel());
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_2,The following statement contains a magic number: var plinq = Enumerable.Range(0' 50)                      .AsParallel().WithCancellation(cs.Token)                      .WithDegreeOfParallelism(1)  #if PFX_LEGACY_3_5                      .Union(Enumerable.Range(0' 10).AsParallel().Select<int'int>(x=>{throw new OperationCanceledException();}));
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bugfix640886_SetOperationsThrowAggregateOnCancelOrDispose_2,The following statement contains a magic number: var plinq = Enumerable.Range(0' 50)                      .AsParallel().WithCancellation(cs.Token)                      .WithDegreeOfParallelism(1)  #if PFX_LEGACY_3_5                      .Union(Enumerable.Range(0' 10).AsParallel().Select<int'int>(x=>{throw new OperationCanceledException();}));
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug667799_HashPartitioningCancellation,The following statement contains a magic number: var queryUnordered = Enumerable.Range(0' int.MaxValue)                  .Select(x => { if (x == 0) cs.Cancel(); return x; })                  .AsParallel()                  .WithCancellation(cs.Token)                  .Intersect(Enumerable.Range(0' 1000000).AsParallel());
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug667799_HashPartitioningCancellation,The following statement contains a magic number: var queryOrdered = Enumerable.Range(0' int.MaxValue)                 .Select(x => { if (x == 0) cs.Cancel(); return x; })                 .AsParallel().AsOrdered()                 .WithCancellation(cs.Token)                 .Intersect(Enumerable.Range(0' 1000000).AsParallel());
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug695173_CancelThenDispose,The following statement contains a magic number: var q = ParallelEnumerable.Range(0' 1000).WithCancellation(cancel.Token).Select(x => x);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug702254_CancellationCausingNoDataMustThrow,The following statement contains a magic number: var query = Enumerable.Range(0' 100000000)              .Select(x =>              {                  if (x == 0) cs.Cancel();                  return x;              })              .AsParallel()              .WithCancellation(cs.Token)              .Select(x=>x);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug702254Related_DontDoWorkIfTokenAlreadyCanceled,The following statement contains a magic number: var query = Enumerable.Range(0' 100000000)              .Select(x =>              {                  if(x > 0) // to avoid the "Error:unreachable code detected"                      throw new ApplicationException("User-delegate exception.");                  return x;              })              .AsParallel()              .WithCancellation(cs.Token)              .Select(x=>x);
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug720598_PreDisposedCTSPassedToPlinq,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel()                      .WithCancellation(ct)                      .OrderBy(x => x)                      .ToArray();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug720598_PreDisposedCTSPassedToPlinq,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel()                      .WithCancellation(ct)                      .Last();
Magic Number,plinq_devtests,PlinqCancellationCoreHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqCancellation\PlinqCancellationCoreHarness.cs,Bug720598_PreDisposedCTSPassedToPlinq,The following statement contains a magic number: Enumerable.Range(1' 10).AsParallel()                      .WithCancellation(ct)                      .OrderBy(x => x)                      .Last();
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapRemoveTest(5);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapRemoveTest(8);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapRemoveTest(128);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapRemoveTest(5111);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapRemoveTest2(10);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapReplaceTest(5);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapReplaceTest(8);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapTests,The following statement contains a magic number: passed &= RunFixedMaxHeapReplaceTest(127);
Magic Number,plinq_devtests,PlinqMiscTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqMiscTests.cs,RunFixedMaxHeapRemoveTest2,The following statement contains a magic number: heap.Insert(10);
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] hardQueries = {                  (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).TakeWhile(x => true).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x)).Take(100).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Where(x=>true).Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000)                      .OrderBy(x=>x).Select(x => verifier.Verify(x)).WithExecutionMode(mode).ElementAt(5)'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,PlinqModesTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqModesTests.cs,RunPlinqModesTests,The following statement contains a magic number: Action<ParallelExecutionMode' Verifier>[] easyQueries = {                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).ToArray()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .TakeWhile(x => true).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel()                      .Select(x => verifier.Verify(x)).Take(100).WithExecutionMode(mode).ToArray()'                    (mode'verifier) => Enumerable.Range(0' 1000).ToArray().AsParallel().WithExecutionMode(mode)                      .Take(100).Select(x => verifier.Verify(x)).Iterate()'                    (mode'verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).ElementAt(5)'                    (mode' verifier) => ParallelEnumerable.Range(0' 1000).WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).SelectMany((x'i) => Enumerable.Repeat(1' 2)).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered()                      .Select(x => verifier.Verify(x)).Select((x'i) => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode).AsUnordered().Where(x => true).Select(x => verifier.Verify(x)).First()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).ToArray()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().WithExecutionMode(mode)                      .Select(x => verifier.Verify(x)).OrderBy(x => x).Iterate()'                    (mode' verifier) => Enumerable.Range(0' 1000).AsParallel().AsOrdered().WithExecutionMode(mode)                      .Where(x => true).Select(x => verifier.Verify(x))                      .Concat(Enumerable.Range(0' 1000).AsParallel().AsOrdered().Where(x => true))                      .ToList()'              };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeCast,The following statement contains a magic number: object[] a = Enumerable.Range(0' 100).Cast<object>().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeConcat,The following statement contains a magic number: int[] a = Enumerable.Range(1' 35).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeConcat,The following statement contains a magic number: int[] b = Enumerable.Range(36' 65).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeConcat,The following statement contains a magic number: int[] b = Enumerable.Range(36' 65).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeDefaultIfEmpty,The following statement contains a magic number: int[] a = Enumerable.Range(1' 100).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeDistinct,The following statement contains a magic number: i <= 100
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] a = Enumerable.Range(-5' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] a = Enumerable.Range(-5' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeExcept,The following statement contains a magic number: int[] b = { -100' -50' -5' -4' -3' -2' -1' 101' 102' 103' 104' 105' 106' 180 };
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeGroupBy,The following statement contains a magic number: int[] a = Enumerable.Range(0' 1000).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeGroupBy,The following statement contains a magic number: return ipe.GroupBy(i => i % 100' i => i).Select(g => g.Key);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeGroupJoin,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeIntersect,The following statement contains a magic number: int[] a = Enumerable.Range(-99' 200).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeIntersect,The following statement contains a magic number: int[] a = Enumerable.Range(-99' 200).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeIntersect,The following statement contains a magic number: int[] b = Enumerable.Range(0' 200).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeJoin,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOfType,The following statement contains a magic number: object[] a = Enumerable.Range(0' 50)                  .Cast<object>()                  .Concat(Enumerable.Repeat<object>(null' 50))                  .Concat(Enumerable.Range(50' 50).Cast<object>()).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOfType,The following statement contains a magic number: object[] a = Enumerable.Range(0' 50)                  .Cast<object>()                  .Concat(Enumerable.Repeat<object>(null' 50))                  .Concat(Enumerable.Range(50' 50).Cast<object>()).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOfType,The following statement contains a magic number: object[] a = Enumerable.Range(0' 50)                  .Cast<object>()                  .Concat(Enumerable.Repeat<object>(null' 50))                  .Concat(Enumerable.Range(50' 50).Cast<object>()).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOfType,The following statement contains a magic number: object[] a = Enumerable.Range(0' 50)                  .Cast<object>()                  .Concat(Enumerable.Repeat<object>(null' 50))                  .Concat(Enumerable.Range(50' 50).Cast<object>()).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOrderBy,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).Reverse().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOrderByThenBy,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).Reverse().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeOrderByThenBy,The following statement contains a magic number: return ipe.OrderBy(i => i % 5).ThenBy(i => -i);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeReverse,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).Reverse().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSelect,The following statement contains a magic number: int[] a = Enumerable.Range(-99' 100).Reverse().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSelect,The following statement contains a magic number: int[] a = Enumerable.Range(-99' 100).Reverse().ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSelectMany,The following statement contains a magic number: int[] a = Enumerable.Range(0' 10).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSelectMany,The following statement contains a magic number: int[] b = Enumerable.Range(0' 10).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSelectMany,The following statement contains a magic number: return ipe.SelectMany(i => b' (i' j) => (10 * i + j));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkip,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkip,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkip,The following statement contains a magic number: return ipe.Skip(10);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkipWhile,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkipWhile,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkipWhileIndexed,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkipWhileIndexed,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeSkipWhileIndexed,The following statement contains a magic number: return ipe.SkipWhile((i'j) => j < 10);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTake,The following statement contains a magic number: int[] a = Enumerable.Range(0' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTake,The following statement contains a magic number: return ipe.Take(100);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTakeWhile,The following statement contains a magic number: int[] a = Enumerable.Range(0' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTakeWhile,The following statement contains a magic number: return ipe.TakeWhile(i => i < 100);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTakeWhileIndexed,The following statement contains a magic number: int[] a = Enumerable.Range(0' 110).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeTakeWhileIndexed,The following statement contains a magic number: return ipe.TakeWhile((i'j) => j < 100);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeUnion,The following statement contains a magic number: int[] a = Enumerable.Range(0' 80).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeUnion,The following statement contains a magic number: int[] b = Enumerable.Range(20' 80).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeUnion,The following statement contains a magic number: int[] b = Enumerable.Range(20' 80).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhere,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 120).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhere,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 120).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhere,The following statement contains a magic number: return ipe.Where(i => (i >= 0 && i < 100));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhereIndexed,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 120).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhereIndexed,The following statement contains a magic number: int[] a = Enumerable.Range(-10' 120).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhereIndexed,The following statement contains a magic number: return ipe.Where((i'j) => (j >= 10 && j < 110));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeWhereIndexed,The following statement contains a magic number: return ipe.Where((i'j) => (j >= 10 && j < 110));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeZip,The following statement contains a magic number: int[] a = Enumerable.Range(0' 100).ToArray();
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MakeZip,The following statement contains a magic number: return ipe.Zip(a.AsParallel()' (i'j) => (i+j)/2);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.All(i => i > 100)'                  q.ToArray().Any(i => i > 100));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.All(i => i > 100)'                  q.ToArray().Any(i => i > 100));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.All(i => i == 75)'                  q.ToArray().All(i => i == 75));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.All(i => i == 75)'                  q.ToArray().All(i => i == 75));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.Any(i => i > 100)'                  q.ToArray().Any(i => i > 100));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.Any(i => i > 100)'                  q.ToArray().Any(i => i > 100));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.Any(i => i == 75)'                  q.ToArray().Any(i => i == 75));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustEqual(                  q.Any(i => i == 75)'                  q.ToArray().Any(i => i == 75));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).Concat(new int[] { 1' 2' 3 }.AsParallel())'                  q.Reverse().Reverse().ToArray().Concat(q.Reverse().Reverse()).Concat(new int[] { 1' 2' 3 })'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).Concat(new int[] { 1' 2' 3 }.AsParallel())'                  q.Reverse().Reverse().ToArray().Concat(q.Reverse().Reverse()).Concat(new int[] { 1' 2' 3 })'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).Concat(new int[] { 1' 2' 3 }.AsParallel())'                  q.Reverse().Reverse().ToArray().Concat(q.Reverse().Reverse()).Concat(new int[] { 1' 2' 3 })'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).Concat(new int[] { 1' 2' 3 }.AsParallel())'                  q.Reverse().Reverse().ToArray().Concat(q.Reverse().Reverse()).Concat(new int[] { 1' 2' 3 })'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Except(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Except(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Except(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Except(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Except(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Except(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Except(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Except(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustGroupByEqual(                  q.GroupBy(i => i % 5' (i' e) => new Pair<int' IEnumerable<int>>(i' e))'                  q.ToArray().GroupBy(i => i % 5' (i' e) => new Pair<int' IEnumerable<int>>(i' e)));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustGroupByEqual(                  q.GroupBy(i => i % 5' (i' e) => new Pair<int' IEnumerable<int>>(i' e))'                  q.ToArray().GroupBy(i => i % 5' (i' e) => new Pair<int' IEnumerable<int>>(i' e)));
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Intersect(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Intersect(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Intersect(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Intersect(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Intersect(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Intersect(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Intersect(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Intersect(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 2' 3' 3 }).AsParallel()' i => i' i => i' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 2' 3' 3 }' i => i' i => i' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Join((new int[] { 1' 1' 100' 3' 3 }).AsParallel()' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  q.ToArray().Join(new int[] { 1' 1' 100' 3' 3 }' i => new String('a'' i)' i => new String('a'' i)' (i' j) => i + j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).OrderBy(i => i % 5).ThenBy(i => -i)'                  q.ToArray().Concat(q).OrderBy(i => i % 5).ThenBy(i => -i)'                  true);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).OrderBy(i => i % 5).ThenBy(i => -i)'                  q.ToArray().Concat(q).OrderBy(i => i % 5).ThenBy(i => -i)'                  true);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).OrderByDescending(i => i % 5).ThenByDescending(i => -i)'                  q.ToArray().Concat(q).OrderByDescending(i => i % 5).ThenByDescending(i => -i)'                  true);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Concat(q).OrderByDescending(i => i % 5).ThenByDescending(i => -i)'                  q.ToArray().Concat(q).OrderByDescending(i => i % 5).ThenByDescending(i => -i)'                  true);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Select(i => 5 * i - 17)'                  q.ToArray().Select(i => 5 * i - 17)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Select(i => 5 * i - 17)'                  q.ToArray().Select(i => 5 * i - 17)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Select(i => 5 * i - 17)'                  q.ToArray().Select(i => 5 * i - 17)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Select(i => 5 * i - 17)'                  q.ToArray().Select(i => 5 * i - 17)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  q.ToArray().SelectMany(i => new int[] { 1' 2' 3 }' (i' j) => i + 100 * j)'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.Skip(10)'                  q.ToArray().Skip(10)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.Skip(10)'                  q.ToArray().Skip(10)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.SkipWhile(i => i < 30)'                  q.ToArray().SkipWhile(i=>i<30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.SkipWhile(i => i < 30)'                  q.ToArray().SkipWhile(i=>i<30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.SkipWhile((i' j) => j < 30)'                  q.ToArray().SkipWhile((i'j) => j < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.SkipWhile((i' j) => j < 30)'                  q.ToArray().SkipWhile((i'j) => j < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.Take(10)'                  q.ToArray().Take(10)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.Take(10)'                  q.ToArray().Take(10)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.TakeWhile(i => i < 30)'                  q.ToArray().TakeWhile(i => i < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.TakeWhile(i => i < 30)'                  q.ToArray().TakeWhile(i => i < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.TakeWhile((i' j) => j < 30)'                  q.ToArray().TakeWhile((i' j) => j < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: CheckTakeSkip(                  result'                  q.TakeWhile((i' j) => j < 30)'                  q.ToArray().TakeWhile((i' j) => j < 30)'                  leftOrderDefined && orderPreserved);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Union(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Union(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Union(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Union(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Union(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Union(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Union(Enumerable.Range(90' 50).AsParallel())'                  q.ToArray().Union(Enumerable.Range(90' 50))'                  false);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Where(i => i < 20 || i > 80)'                  q.ToArray().Where(i => i < 20 || i > 80)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Where(i => i < 20 || i > 80)'                  q.ToArray().Where(i => i < 20 || i > 80)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Where(i => i < 20 || i > 80)'                  q.ToArray().Where(i => i < 20 || i > 80)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,QueryOperatorPairTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,RunAllTests,The following statement contains a magic number: result.MustSequenceEqual(                  q.Where(i => i < 20 || i > 80)'                  q.ToArray().Where(i => i < 20 || i > 80)'                  orderPreserved && leftOrderDefined);
Magic Number,plinq_devtests,LeftOperator,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,LeftOperator,The following statement contains a magic number: leftOperatorFactory.Method.Name.Substring(0' 4) != "Make"
Magic Number,plinq_devtests,TestTracker,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MustGroupByEqual,The following statement contains a magic number: var vals = new Dictionary<int' IEnumerable<int>>[2];
Magic Number,plinq_devtests,TestTracker,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MustGroupByEqual,The following statement contains a magic number: i < 2
Magic Number,plinq_devtests,TestTracker,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPairTests.cs,MustGroupByEqual,The following statement contains a magic number: i < 2
Magic Number,plinq_devtests,PerfHelpers,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,DrivePerfComparison,The following statement contains a magic number: float deviancePercent = 0.2F;
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024 * 8' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024 * 8' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024 * 8' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024 * 8' 0' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 100' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 100' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 100' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 100' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 1000' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 1000' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 1000' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 1000' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 10000' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 10000' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 10000' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunForAllTests,The following statement contains a magic number: RunForAllTest1(1024 * 1024' 10000' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest1_ForAll(1024 * 1024 * 16' 1024 * 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinPlusWhereTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinPlusWhereTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinPlusWhereTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinPlusWhereTest1(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest2(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest2(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest2(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest2(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest3(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest3(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest3(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTests,The following statement contains a magic number: RunJoinTest3(1024 * 1024' 1024' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinPlusWhereTest1,The following statement contains a magic number: IEnumerable<Pair> seqQuery = Enumerable.Join<int' int' int' Pair>(                  Enumerable.Where<int>(left' delegate(int x) { return (x % 2) == 0; })'                  right' identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair(x' y); });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinPlusWhereTest1,The following statement contains a magic number: IEnumerable<Pair> parQuery = left.AsParallel().Where<int>(delegate(int x) { return (x % 2) == 0; })                  .Join<int' int' int' Pair>(right.AsParallel()' identityKeySelector' identityKeySelector'                       delegate(int x' int y) { return new Pair(x' y); });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest2,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      foreach (Pair p in seqQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  delegate {                      foreach (Pair p in parQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest2,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      foreach (Pair p in seqQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  delegate {                      foreach (Pair p in parQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest3,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      foreach (Pair p in seqQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  delegate {                      foreach (Pair p in parQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunJoinTest3,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      foreach (Pair p in seqQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  delegate {                      foreach (Pair p in parQuery)                      {                          // Simulate work:                          int z = 0;                          for (int i = 0; i < 5; i++)                          {                              z *= p.x;                              z *= p.y;                          }                      }                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024 * 8' 100' 50' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 100' 50' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 100' 50' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 100' 50' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 100' 50' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 100' 50' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 125' 25' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 125' 25' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 125' 25' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 125' 25' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 125' 25' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 75' 75' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 75' 75' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 75' 75' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 75' 75' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest1(1024 * 1024' 75' 75' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest2(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest2(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTests,The following statement contains a magic number: RunWhereTest2(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest1,The following statement contains a magic number: IEnumerable<int> seqQuery = Enumerable.Where<int>(data' delegate(int x) { int xx = 1; for (int i = 0; i < predSimulation; i++) xx *= (i + 1); return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest1,The following statement contains a magic number: IEnumerable<int> parQuery = data.AsParallel().Where<int>(delegate(int x) { int xx = 1; for (int i = 0; i < predSimulation; i++) xx *= (i + 1); return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest2,The following statement contains a magic number: IEnumerable<int> seqQuery = Enumerable.Where<int>(data' delegate(int x) { object o = new object(); int xx = o.GetHashCode(); return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWhereTest2,The following statement contains a magic number: IEnumerable<int> parQuery = data.AsParallel().Where<int>(delegate(int x) { object o = new object(); int xx = o.GetHashCode(); return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunAggregateTests,The following statement contains a magic number: RunSumTest1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunSumTest1,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      double xx = Enumerable.Average(data);                      Debug.Assert(xx == (double)(size+1) / 2);                  }'                  delegate {                      double xx = data.AsParallel<int>().Average();                      Debug.Assert(xx == (double)(size+1) / 2);                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunSumTest1,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      double xx = Enumerable.Average(data);                      Debug.Assert(xx == (double)(size+1) / 2);                  }'                  delegate {                      double xx = data.AsParallel<int>().Average();                      Debug.Assert(xx == (double)(size+1) / 2);                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 8' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverageTests,The following statement contains a magic number: RunWeightedAverage1(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunWeightedAverage1,The following statement contains a magic number: weights[i] = 1 + (i % 20);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 8' 10);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(-1' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 4' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 4' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 4' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 4' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunGroupWordsTests,The following statement contains a magic number: RunGroupWords1Test(1024 * 1024 * 32' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTests,The following statement contains a magic number: RunMatrixMultVsHandCodedTest(i' i' i' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTests,The following statement contains a magic number: i <= 512
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTests,The following statement contains a magic number: RunMatrixMultTest(i' i' i' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTests,The following statement contains a magic number: i <= 512
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTest,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTest,The following statement contains a magic number: m1[i'j] = r.Next(100);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultTest,The following statement contains a magic number: m2[i'j] = r.Next(100);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultVsHandCodedTest,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultVsHandCodedTest,The following statement contains a magic number: m1[i'j] = r.Next(100);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunMatrixMultVsHandCodedTest,The following statement contains a magic number: m2[i'j] = r.Next(100);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTests,The following statement contains a magic number: RunBicubicInterpolationTest(i' i' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTests,The following statement contains a magic number: i <= 512
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: img[i'j] = r.Next(100);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: double[] bicubic_weights = new double[] {                  0.15' 0.25' 0.25' 0.15' 0.25' 0.5'  0.5'  0.25' 0.8'                  0.25' 0.5'  0.5'  0.25' 0.15' 0.25' 0.25' 0.15              };
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunBicubicInterpolationTest,The following statement contains a magic number: PerfHelpers.DrivePerfComparison(                  delegate {                      // HACK: current version of LINQ doesn't have the right SelectMany                      // overload yet.  So we just compare to PLINQ w/ a DOP of 1 instead.                      int oldDop = System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism;                      System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = 1;                      try {                          double[] img2 = (                              from x in ParallelEnumerable.Range(0' m)  		                    from y in ParallelEnumerable.Range(0' n)  		                    select  			                    (from x2 in Enumerable.Range(m - 3' 7)  			                    from y2 in Enumerable.Range(n - 3' 7)  			                    where x2 >= 0 && x2 < m &&  	     	                         y2 >= 0 && y2 < n &&  		                              (x2 == x || (x2-(m-3) % 2) == 0) &&  		                              (y2 == y || (y2-(n-3) % 2) == 0)                                  select img[x2'y2]                                  ).AsParallel().Zip(W'(i'j)=>new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                      } finally {                          System.Linq.Parallel.Scheduling.DefaultDegreeOfParallelism = oldDop;                      }                  }'                  delegate {                      double[] img2 = (                          from x in ParallelEnumerable.Range(0' m)  		                from y in ParallelEnumerable.Range(0' n)  		                select  			                (from x2 in Enumerable.Range(m - 3' 7)  			                from y2 in Enumerable.Range(n - 3' 7)  			                where x2 >= 0 && x2 < m &&  	     	                     y2 >= 0 && y2 < n &&  		                          (x2 == x || (x2-(m-3) % 2) == 0) &&  		                          (y2 == y || (y2-(n-3) % 2) == 0)                              select img[x2'y2]                              ).AsParallel().Zip(W' (i'j) => new Pair<int'double>(i'j)).Sum((p)=>p.First*p.Second) / W.Sum()).ToArray();                  }'                  loops);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: int intsPer500KB = (1024 * 512)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: int intsPer500KB = (1024 * 512)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' false' DataDistributionType.AlreadyAscending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' false' DataDistributionType.AlreadyDescending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' false' DataDistributionType.Random' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' true' DataDistributionType.AlreadyAscending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' true' DataDistributionType.AlreadyDescending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsSmall,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer500KB' true' DataDistributionType.Random' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: int intsPer1MB = (1024 * 1024)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: int intsPer1MB = (1024 * 1024)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' false' DataDistributionType.AlreadyAscending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' false' DataDistributionType.AlreadyDescending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' false' DataDistributionType.Random' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' true' DataDistributionType.AlreadyAscending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' true' DataDistributionType.AlreadyDescending' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer1MB' true' DataDistributionType.Random' 5);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: int intsPer10MB = (1024 * 1024 * 10)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: int intsPer10MB = (1024 * 1024 * 10)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: int intsPer10MB = (1024 * 1024 * 10)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' false' DataDistributionType.AlreadyAscending' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' false' DataDistributionType.AlreadyDescending' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' false' DataDistributionType.Random' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' true' DataDistributionType.AlreadyAscending' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' true' DataDistributionType.AlreadyDescending' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsMedium,The following statement contains a magic number: passed &= RunOrderByTest1(intsPer10MB' true' DataDistributionType.Random' 2);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsLarge,The following statement contains a magic number: int intsPer250MB = (1024 * 1024 * 250)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsLarge,The following statement contains a magic number: int intsPer250MB = (1024 * 1024 * 250)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTestsLarge,The following statement contains a magic number: int intsPer250MB = (1024 * 1024 * 250)/sizeof(int);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: TestHarness.TestLog("TEST {0} MB of ints: {1}"' ((float)i/1024)*4' i);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: TestHarness.TestLog("TEST {0} MB of ints: {1}"' ((float)i/1024)*4' i);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: RunOrderByTest1(i*1024' false' DataDistributionType.Random' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: RunOrderByTest1(i*1024' false' DataDistributionType.Random' 3);
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: i <= (1024*128)/4
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: i <= (1024*128)/4
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,RunOrderByTests_progression,The following statement contains a magic number: i <= (1024*128)/4
Magic Number,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,CreateOrderByInput,The following statement contains a magic number: switch (type)              {                  case DataDistributionType.AlreadyAscending:                      for (int i = 0; i < data.Length; i++) data[i] = i;                      break;                  case DataDistributionType.AlreadyDescending:                      for (int i = 0; i < data.Length; i++) data[i] = dataSize - i;                      break;                  case DataDistributionType.Random:                      Random rand = new Random(33);                      for (int i = 0; i < data.Length; i++) data[i] = rand.Next();                      break;              }
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAggregationTests,The following statement contains a magic number: passed &= RunAggregationTest1_Sum1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAggregationTests,The following statement contains a magic number: passed &= RunAggregationTest1_Sum2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAggregationTests,The following statement contains a magic number: passed &= RunAggregationTest1_Sum3(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAggregationTests,The following statement contains a magic number: passed &= RunAggregationTest1_Sum4(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAggregationTests,The following statement contains a magic number: passed &= RunAggregationTest2(16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTest1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTest1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTest1(1024*16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTest1(1024*16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestLongs1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestLongs1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestLongs1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestLongs1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestOrderBy1(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSumTests,The following statement contains a magic number: passed &= RunSumTestOrderBy1(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(13);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(1024*16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTests,The following statement contains a magic number: passed &= RunAvgTest1(1024*16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAvgTest1,The following statement contains a magic number: double expectAvg = ((double)count - 1) / 2;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(2' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(2' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTests,The following statement contains a magic number: passed &= RunMinTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMinTest1,The following statement contains a magic number: const int minNum = -100;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(2' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(2' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTests,The following statement contains a magic number: passed &= RunMaxTest1(1024 * 4' 1024 * 2 - 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunMaxTest1,The following statement contains a magic number: int maxNum = dataSize + 100;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_AllFalse(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_AllTrue(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAnyTest_OneTrue(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_AllFalse(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_AllTrue(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunAnyAllTests,The following statement contains a magic number: passed &= RunAllTest_OneFalse(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 1024+512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 1024+512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 1024+512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 1024' 1024+512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 1024+256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 1024+256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 1024+256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024' 512' 1024+256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' 1024 * 5);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest(1024 * 1027' 1024 * 1027' (1024 * 1027) + (1024 * 5));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 0' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 0' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 1000' 0' 1000);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 1000' 0' 1000);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 9);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 9);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 9);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTests,The following statement contains a magic number: passed &= RunSequenceEqualTest2(0' 10' 1' 9);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest,The following statement contains a magic number: left[i] = i*2;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest,The following statement contains a magic number: right[i] = i*2;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest2,The following statement contains a magic number: List<ParallelQuery<int>>[] enumerables = new List<ParallelQuery<int>>[2];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest2,The following statement contains a magic number: t < 2
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest3,The following statement contains a magic number: int collectionLength = 1999;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSequenceEqualTest3,The following statement contains a magic number: new DisposeExceptionEnumerable<int>(Enumerable.Range(0' collectionLength)).AsParallel()                      .WithDegreeOfParallelism(2)                      .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                      .SequenceEqual(new DisposeExceptionEnumerable<int>(Enumerable.Range(0' collectionLength)).AsParallel());
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_AllFalse(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_AllTrue(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunTakeWhile_SomeFalses(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_AllFalse(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_AllTrue(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15' 16' 17' 18);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipWhileTests,The following statement contains a magic number: passed &= RunSkipWhile_SomeTrues(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunTakeTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest1(1024 * 1024' 1024 * 64);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(16' 16' 16);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunTakeSkipTests,The following statement contains a magic number: passed &= RunSkipTest2_Range(0' 1024 * 1024' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_NoMatching(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_AllMatching(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024' 1023);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTests,The following statement contains a magic number: passed &= RunContainsTest_OneMatching(1024 * 1024' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_NoMatching,The following statement contains a magic number: int toFind = 103372;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_NoMatching,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_AllMatching,The following statement contains a magic number: int toFind = 103372;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_AllMatching,The following statement contains a magic number: data[i] = 103372;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_OneMatching,The following statement contains a magic number: int toFind = 103372;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunContainsTest_OneMatching,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunZipTests,The following statement contains a magic number: passed &= RunZipTest1(1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunZipTests,The following statement contains a magic number: passed &= RunZipTest1(1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(32' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(32' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(32' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(32' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTest3(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithWhere1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(4' 4' 4' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(4' 4' 4' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(4' 4' 4' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinWithInnerJoinTest1(1024*1024' 1024*4' 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTests,The following statement contains a magic number: passed &= RunJoinTestWithTakeWhile(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest1,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest1,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest1,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest2,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest2,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest2,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest3,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest3,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTest3,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithWhere1,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithWhere1,The following statement contains a magic number: IEnumerable<Pair<int' int>> joinResults = left.AsParallel().Join<int' int' int' Pair<int' int>>(                  right.AsParallel().Where<int>(delegate(int x) { return (x % 16) == 0; })'                  identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithWhere1,The following statement contains a magic number: int expect = (outerSize/16) > innerSize ? outerSize : Math.Min(outerSize/16' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithWhere1,The following statement contains a magic number: int expect = (outerSize/16) > innerSize ? outerSize : Math.Min(outerSize/16' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The following statement contains a magic number: innerLeft[i] = i*2;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinWithInnerJoinTest1,The following statement contains a magic number: innerRight[i] = i*4;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithTakeWhile,The following statement contains a magic number: right[i] = i * 8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithTakeWhile,The following statement contains a magic number: ParallelQuery<Pair<int' int>> results = left.AsParallel().Join<int' int' int' Pair<int' int>>(                      right.AsParallel().Where<int>(delegate(int x) { return (x % 16) == 0; })'                      identityKeySelector' identityKeySelector' delegate(int x' int y) { return new Pair<int' int>(x' y); }).TakeWhile<Pair<int' int>>((x) => true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithTakeWhile,The following statement contains a magic number: int expect = (outerSize / 16) > innerSize ? outerSize : Math.Min(outerSize / 16' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunJoinTestWithTakeWhile,The following statement contains a magic number: int expect = (outerSize / 16) > innerSize ? outerSize : Math.Min(outerSize / 16' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(32' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(32' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest1(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(32' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(0' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(32' 1);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 8' 1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 512' 1024 * 256);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 256' 1024 * 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTests,The following statement contains a magic number: passed &= RunGroupJoinTest2(1024 * 1024 * 2' 1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest1,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest1,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest1,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest2,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest2,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupJoinTest2,The following statement contains a magic number: int expect = Math.Min((outerSize+7)/8' innerSize);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest1(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest2(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunSelectTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectTests,The following statement contains a magic number: passed &= RunIndexedSelectTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest1(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest2(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunWhereTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest1(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTests,The following statement contains a magic number: passed &= RunIndexedWhereTest2(1024 * 1024 * 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest1,The following statement contains a magic number: IEnumerable<int> q = data.AsParallel().Where<int>(                  delegate(int x) { return (x%2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest1,The following statement contains a magic number: (p%2)!=0
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest1,The following statement contains a magic number: passed &= (cnt == ((dataSize+1)/2));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest1,The following statement contains a magic number: TestHarness.TestLog("  > Saw expected count? Saw = {0}' expect = {1}: {2}"' cnt' ((dataSize+1)/2)' passed);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest2,The following statement contains a magic number: ParallelQuery<int> q = data.AsParallel().Where<int>(                  delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest2,The following statement contains a magic number: (p % 2) != 0
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest2,The following statement contains a magic number: passed &= (cnt == ((dataSize+1) / 2));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunWhereTest2,The following statement contains a magic number: TestHarness.TestLog("  > Saw expected count? Saw = {0}' expect = {1}: {2}"' cnt' ((dataSize+1) / 2)' passed);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest1(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(32' 32);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest2(1024 * 2' 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest3(10' ParallelExecutionMode.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest3(123' ParallelExecutionMode.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest3(10' ParallelExecutionMode.ForceParallelism);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTests,The following statement contains a magic number: passed &= RunSelectManyTest3(123' ParallelExecutionMode.ForceParallelism);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTest1,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSelectManyTest2,The following statement contains a magic number: right[i] = i*8;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024 * 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024 * 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTests,The following statement contains a magic number: passed &= RunForAllTest1(1024 * 1024 * 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunForAllTest1,The following statement contains a magic number: expect = (long)(((float)dataSize / 2) * (dataSize + 1));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' false' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' false' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' true' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' true' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(50' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.AlreadyAscending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.AlreadyDescending);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByTest2(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere2(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere2(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere2(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhere2(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(32' 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(32' 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(32' 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(32' 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereWhere1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereWhere1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereWhere1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereWhere1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereSelect1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereSelect1(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereSelect1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithWhereSelect1(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' false' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunOrderByComposedWithOrderBy(1024 * 128' true' DataDistributionType.Random);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunStableSortTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunStableSortTest1(1024 * 128);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByTests,The following statement contains a magic number: passed &= RunStableSortTest1(1024 * 128);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhere1,The following statement contains a magic number: q = q.Where<int>(delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhere2,The following statement contains a magic number: q = q.Where<int>(delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhereWhere1,The following statement contains a magic number: q = q.Where<int>(delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhereWhere1,The following statement contains a magic number: q = q.Where<int>(delegate(int x) { return (x % 4) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithWhereSelect1,The following statement contains a magic number: q0 = q0.Where<int>(delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByComposedWithOrderBy,The following statement contains a magic number: q = q.Where<int>(delegate(int x) { return (x % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunStableSortTest1,The following statement contains a magic number: clist[i] = new SSC((dataSize-i) / (dataSize/5)' i);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToArrayTests,The following statement contains a magic number: passed &= RunToArray(8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToArrayTests,The following statement contains a magic number: passed &= RunToArray(1297);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary1,The following statement contains a magic number: int size = 10000;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary1,The following statement contains a magic number: Dictionary<int' int> a = xx.AsParallel().ToDictionary<int' int>(v => (2 * v));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary1,The following statement contains a magic number: TestHarness.TestLog("  > Value a[{0}] is {1} -- expected {2}"' 2 * i' a[2 * i]' i);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary1,The following statement contains a magic number: TestHarness.TestLog("  > Value a[{0}] is {1} -- expected {2}"' 2 * i' a[2 * i]' i);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary1,The following statement contains a magic number: a[2 * i] != i
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary2,The following statement contains a magic number: int size = 1009;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToDictionary2,The following statement contains a magic number: int p = 7;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,The following statement contains a magic number: int M = 1000;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,The following statement contains a magic number: int size = 2 * M;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,The following statement contains a magic number: TestHarness.TestLog("  > Resulting Lookup size is {0} -- expected {1}"' vals.Length' 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup1,The following statement contains a magic number: vals.Length != 2
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup2,The following statement contains a magic number: int M = 1000;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup2,The following statement contains a magic number: int size = 2 * M;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup2,The following statement contains a magic number: TestHarness.TestLog("  > Resulting Lookup size is {0} -- expected {1}"' vals.Length' 2);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunToLookup2,The following statement contains a magic number: vals.Length != 2
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestSync1,The following statement contains a magic number: int[] xx = new int[1024];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestSync1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!"); } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestSync1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!"); } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestAsync1,The following statement contains a magic number: int[] xx = new int[1024];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestAsync1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!");  } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestAsync1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!");  } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestForAll1,The following statement contains a magic number: int[] xx = new int[1024];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestForAll1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!"); } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionTestForAll1,The following statement contains a magic number: ParallelQuery<int> q = xx.AsParallel().Select<int' int>(                  delegate(int x) { if ((x % 250) == 249) { throw new Exception("Fail!"); } return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: int[] a = new int[8096];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: a[8095] = 99;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: a[8095] = 99;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: var q = a.AsParallel()                      .WithDegreeOfParallelism(2) // DOP=2 to reduce racing and striping affecting this test.                                                  // We can't use DOP=1 because PLINQ would not create a worker task in that case.                      .Select<int' int>(x => { if (x == 99) { Thread.Sleep(100); throw new Exception("foo"); } else return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: var q = a.AsParallel()                      .WithDegreeOfParallelism(2) // DOP=2 to reduce racing and striping affecting this test.                                                  // We can't use DOP=1 because PLINQ would not create a worker task in that case.                      .Select<int' int>(x => { if (x == 99) { Thread.Sleep(100); throw new Exception("foo"); } else return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: var q = a.AsParallel()                      .WithDegreeOfParallelism(2) // DOP=2 to reduce racing and striping affecting this test.                                                  // We can't use DOP=1 because PLINQ would not create a worker task in that case.                      .Select<int' int>(x => { if (x == 99) { Thread.Sleep(100); throw new Exception("foo"); } else return x; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: int[] a = new int[8];
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: a[7] = 99;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptionDispose,The following statement contains a magic number: a[7] = 99;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(0' 100);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(50' 75);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(50' 75);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(-10' 1033);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(-10' 1033);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(100' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(int.MaxValue-9' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTests,The following statement contains a magic number: passed &= RunRangeTest1(int.MaxValue-9' 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Take(count / 2).SequenceEqual(                  ParallelEnumerable.Range(from' count).Take(count / 2).AsSequential().OrderBy(i => i));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Take(count / 2).SequenceEqual(                  ParallelEnumerable.Range(from' count).Take(count / 2).AsSequential().OrderBy(i => i));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Skip(count / 2).SequenceEqual(                  ParallelEnumerable.Range(from' count).Skip(count / 2).AsSequential().OrderBy(i => i));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Skip(count / 2).SequenceEqual(                  ParallelEnumerable.Range(from' count).Skip(count / 2).AsSequential().OrderBy(i => i));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Skip(count / 2).FirstOrDefault() ==                  ParallelEnumerable.Range(from' count).Skip(count / 2).FirstOrDefault();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Skip(count / 2).FirstOrDefault() ==                  ParallelEnumerable.Range(from' count).Skip(count / 2).FirstOrDefault();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Take(count / 2).LastOrDefault() ==                  ParallelEnumerable.Range(from' count).Take(count / 2).LastOrDefault();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRangeTest1,The following statement contains a magic number: passed &= Enumerable.Range(from' count).Take(count / 2).LastOrDefault() ==                  ParallelEnumerable.Range(from' count).Take(count / 2).LastOrDefault();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(0' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(1024 * 8' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(73 * 7' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(73 * 7' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(73 * 7' 10779' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(73 * 7' 0' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<int>(73 * 7' 0' EqualityComparer<int>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<object>(1024 * 8' null' EqualityComparer<object>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<object>(1024 * 8' null' EqualityComparer<object>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<string>(1024 * 1024' "hello"' EqualityComparer<string>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<string>(1024 * 1024' "hello"' EqualityComparer<string>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: Random r = new Random(103);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<string>(r.Next(1024 * 8)' "hello"' EqualityComparer<string>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: passed &= RunRepeatTest1<string>(r.Next(1024 * 8)' "hello"' EqualityComparer<string>.Default);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunRepeatTests,The following statement contains a magic number: i < 10
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunCastTest1(1024 * 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunCastTest1(1024 * 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunCastTest1(1024 * 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunCastTest1(1024 * 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunOfTypeTest1(1024 * 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunOfTypeTest1(1024 * 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunOfTypeTest1(1024 * 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunCastAndOfTypeTests,The following statement contains a magic number: passed &= RunOfTypeTest1(1024 * 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest2(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest2(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest2(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTest2(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhere1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhere1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhere1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhere1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(32' 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(32' 32' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(32' 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(32' 32' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithJoinJoin(1024 * 512' 1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereWhere1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereWhere1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereWhere1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereWhere1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereSelect1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereSelect1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereSelect1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByComposedWithWhereSelect1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive1(8' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive1(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive1(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive2(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive2(1024 * 128' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive2(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTests,The following statement contains a magic number: passed &= RunThenByTestRecursive2(1024 * 128' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest1,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest2,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest2,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTest2,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere1,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere1,The following statement contains a magic number: q = q.Where<Pair<int' int>>(delegate(Pair<int' int> x) { return (x.First % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere2,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere2,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere2,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhere2,The following statement contains a magic number: q = q.Where<Pair<int' int>>(delegate(Pair<int' int> x) { return (x.First % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithJoinJoin,The following statement contains a magic number: left[i] = new Pair<int' int>(leftPartOne[i] / 1024' leftPartTwo[i]);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereWhere1,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereWhere1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereWhere1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereWhere1,The following statement contains a magic number: q = q.Where<Pair<int' int>>(delegate(Pair<int' int> x) { return (x.First % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereWhere1,The following statement contains a magic number: q = q.Where<Pair<int' int>>(delegate(Pair<int' int> x) { return (x.First % 4) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereSelect1,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereSelect1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereSelect1,The following statement contains a magic number: pairs[i].Second = 10 - (i % 10);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByComposedWithWhereSelect1,The following statement contains a magic number: q0 = q0.Where<Pair<int' int>>(delegate(Pair<int' int> x) { return (x.First % 2) == 0; });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive1,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The following statement contains a magic number: pairs[i].First = rand.Next(0' dataSize / 250);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunThenByTestRecursive2,The following statement contains a magic number: pairs[i].Second = new Pair<int' int>(10 - (i % 10)' 3 - (i % 3));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(0' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(7' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(7' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest1(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(0' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(7' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(7' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*8' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest2(1024*1024' 7);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest3(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest3(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest3(1024*8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunOrderByThenGroupByTest(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunOrderByThenGroupByTest(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunOrderByThenGroupByTest(1024 * 8);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTests,The following statement contains a magic number: passed &= RunGroupByTest4(1000);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTest3,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTest4,The following statement contains a magic number: IEnumerable<IGrouping<int' int>>[] queries = new[] {                  parallelSrc.GroupBy(x => x%2)'                  parallelSrc.GroupBy(x => x%2' x => x)              };
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTest4,The following statement contains a magic number: IEnumerable<IGrouping<int' int>>[] queries = new[] {                  parallelSrc.GroupBy(x => x%2)'                  parallelSrc.GroupBy(x => x%2' x => x)              };
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunGroupByTest4,The following statement contains a magic number: expectVal += 2;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderByThenGroupByTest,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTests,The following statement contains a magic number: passed &= RunUnionTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunUnionTest1,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedUnionTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedUnionTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedUnionTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedUnionTest1,The following statement contains a magic number: !Enumerable.Range(0' 4).SequenceEqual(output)
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedUnionTest1,The following statement contains a magic number: len <= 300
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTests,The following statement contains a magic number: passed &= RunIntersectTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunIntersectTest1,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedIntersectTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedIntersectTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedIntersectTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedIntersectTest1,The following statement contains a magic number: !Enumerable.Range(0' 4).SequenceEqual(output)
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedIntersectTest1,The following statement contains a magic number: len <= 300
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(4' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*4' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024' 1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTests,The following statement contains a magic number: passed &= RunExceptTest1(1024*1024' 1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunExceptTest1,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedExceptTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedExceptTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedExceptTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedExceptTest1,The following statement contains a magic number: !Enumerable.Range(0' 4).SequenceEqual(output)
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedExceptTest1,The following statement contains a magic number: len <= 300
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(1024*4);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTests,The following statement contains a magic number: passed &= RunDistinctTest1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDistinctTest1,The following statement contains a magic number: Random r = new Random(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedDistinctTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedDistinctTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedDistinctTest1,The following statement contains a magic number: var data =                      Enumerable.Repeat(0' len)                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 1 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 2 })                      .Concat(Enumerable.Repeat(0' len))                      .Concat(new int[] { 3 })                      .Concat(Enumerable.Repeat(0' len));
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedDistinctTest1,The following statement contains a magic number: !Enumerable.Range(0' 4).SequenceEqual(output)
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunOrderedDistinctTest1,The following statement contains a magic number: len <= 300
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest1(0' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest1(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(0' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1024' 0);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1023 * 1024' 1023 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1023 * 1024' 1023 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1023 * 1024' 1023 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunConcatTests,The following statement contains a magic number: passed &= RunConcatTest2(1023 * 1024' 1023 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest1(33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest1(1024*1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(0' 33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(33' 33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(33' 33);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(33' 66);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(33' 66);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(0' 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(0' 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(1024' 1024 * 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(1024' 1024 * 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(1024' 1024 * 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunReverseTests,The following statement contains a magic number: passed &= RunReverseTest2_Range(1024' 1024 * 1024 * 3);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: i <= 33
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: passed &= RunDefaultIfEmptyTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: passed &= RunDefaultIfEmptyTest1(1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: passed &= RunDefaultIfEmptyTest1(1024 * 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: passed &= RunDefaultIfEmptyOrderByTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDefaultIfEmptyTests,The following statement contains a magic number: passed &= RunDefaultIfEmptyOrderByTest2(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTests,The following statement contains a magic number: passed &= RunFirstOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstTest1,The following statement contains a magic number: int predSearch = 1033;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunFirstOrDefaultTest1,The following statement contains a magic number: int predSearch = 1033;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTests,The following statement contains a magic number: passed &= RunLastOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTest1,The following statement contains a magic number: int predLo = 1033;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastTest1,The following statement contains a magic number: int predHi = 1050;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastOrDefaultTest1,The following statement contains a magic number: int predLo = 1033;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunLastOrDefaultTest1,The following statement contains a magic number: int predHi = 1050;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024 * 1024' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTests,The following statement contains a magic number: passed &= RunSingleOrDefaultTest1(1024 * 1024' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleTest1,The following statement contains a magic number: int predNum = 1023;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunSingleOrDefaultTest1,The following statement contains a magic number: int predNum = 1023;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(0' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024*1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024*1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtTest1(1024*1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(0' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1' 512);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunElementAtTests,The following statement contains a magic number: passed &= RunElementAtOrDefaultTest1(1024 * 1024' 1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunPartitionerTest1(999);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunPartitionerTest1(1024);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunOrderablePartitionerTest1(999' true' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunOrderablePartitionerTest1(1024' true' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunOrderablePartitionerTest1(1024' false' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunOrderablePartitionerTest1(1024' true' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunPartitionerTests,The following statement contains a magic number: passed &= RunOrderablePartitionerTest1(1024' false' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTest(4' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTest(63' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTest(64' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTestSta(4' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTestSta(63' false);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTests,The following statement contains a magic number: passed &= RunDopTestSta(64' true);
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTest,The following statement contains a magic number: int[] arr = Enumerable.Repeat(5' 1000).ToArray();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTest,The following statement contains a magic number: int[] arr = Enumerable.Repeat(5' 1000).ToArray();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTest,The following statement contains a magic number: real = arr.AsParallel().WithDegreeOfParallelism(dop)                       .Select(x => 2 * x)                       .Sum();
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTest,The following statement contains a magic number: int expect = arr.Length * 10;
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,RunDopTestSta,The following statement contains a magic number: Thread t = new Thread(() =>              {                  try                  {                          var src = new int[] { 3' 6' 4' 2' 8' 7' 1' 5 };                          var q = Enumerable.Range(0' 10000).AsParallel().WithDegreeOfParallelism(dop).Select(i =>                          {                              mre.WaitOne(); // simulates heavywork to force the consumer to wait                              return i;                          });                          foreach (var x in q) { }                            passed = !expectException;                  }                  catch (ArgumentOutOfRangeException)                  {                      passed = expectException;                  }              });
Magic Number,plinq_devtests,ListDynamicPartitions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,GetEnumerator,The following statement contains a magic number: long key = m_keysNormalized ? elemIndex : (elemIndex * 2);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(0' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(5' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(5' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(10' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(10' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest0_Ctor(-1' 10' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' -1' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' -1' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(1' 10' -1' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' 0' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' 0' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(1' 10' 0' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(0' 10' 0' false' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' 10' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(1' 10' 10' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(1' 10' 10' true' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(0' 10' 10' false' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(0' 10' 10' false' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait(10' 10' -10' true' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait                  (10' 10' new TimeSpan(0' 0' Int32.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest1_Wait                  (10' 10' new TimeSpan(0' 0' Int32.MaxValue)' true' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 1' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 1' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(0' 10' 1' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 5' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' -1' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(10' 10' 1' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(10' 10' 1' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release(5' 10' 6' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest2_Release                  (int.MaxValue - 1' int.MaxValue' 10' typeof(SemaphoreFullException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose(5' 10' null' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose(5' 10' null' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose(5' 10' SemaphoreSlimActions.CurrentCount' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose(5' 10' SemaphoreSlimActions.CurrentCount' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                  (5' 10' SemaphoreSlimActions.Wait' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                  (5' 10' SemaphoreSlimActions.Wait' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.Release' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.Release' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.AvailableWaitHandle' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest4_Dispose                 (5' 10' SemaphoreSlimActions.AvailableWaitHandle' typeof(ObjectDisposedException));
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' null);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Wait);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Wait);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Release);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest5_CurrentCount(5' 10' SemaphoreSlimActions.Release);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' null' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' null' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(0' 10' null' false);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(1' 10' SemaphoreSlimActions.Wait' false);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(5' 10' SemaphoreSlimActions.Wait' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest7_AvailableWaitHandle(0' 10' SemaphoreSlimActions.Release' true);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (5' 1000' 50' 50' 50' 0' 5' 1000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                  (0' 1000' 50' 25' 25' 25' 0' 5000);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                 (0' 1000' 50' 0' 0' 50' 0' 100);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                 (0' 1000' 50' 0' 0' 50' 0' 100);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                 (0' 1000' 50' 0' 0' 50' 0' 100);
Magic Number,plinq_devtests,SemaphoreSlimTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SemaphoreSlimTests.cs,RunSemaphoreSlimTests,The following statement contains a magic number: passed &= RunSemaphoreSlimTest8_ConcWaitAndRelease                 (0' 1000' 50' 0' 0' 50' 0' 100);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest0_Enter(2' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest0_Enter(128' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest0_Enter(256' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest1_TryEnter(2' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest1_TryEnter(128' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest1_TryEnter(256' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest2_TryEnter(2' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest2_TryEnter(128' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: passed &= RunSpinLockTest2_TryEnter(256' b);
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTests,The following statement contains a magic number: i < 2
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTest2_TryEnter,The following statement contains a magic number: threads[i] = new Thread(delegate(object x)                  {                      // Generate random timespan                      Random rand = new Random(33);                      bool lockTaken = false;                      TimeSpan time = TimeSpan.FromMilliseconds(rand.Next(-1' 20));                      slock.TryEnter(time' ref lockTaken);                      if (lockTaken)                      {                          // add some delay in the critical section                          Thread.Sleep(15);                          Interlocked.Increment(ref succeeded);                          slock.Exit();                      }                      else                      {                          // Failed to get the lock within the timeout                          Interlocked.Increment(ref failed);                      }                  });
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTest2_TryEnter,The following statement contains a magic number: threads[i] = new Thread(delegate(object x)                  {                      // Generate random timespan                      Random rand = new Random(33);                      bool lockTaken = false;                      TimeSpan time = TimeSpan.FromMilliseconds(rand.Next(-1' 20));                      slock.TryEnter(time' ref lockTaken);                      if (lockTaken)                      {                          // add some delay in the critical section                          Thread.Sleep(15);                          Interlocked.Increment(ref succeeded);                          slock.Exit();                      }                      else                      {                          // Failed to get the lock within the timeout                          Interlocked.Increment(ref failed);                      }                  });
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTest2_TryEnter,The following statement contains a magic number: threads[i] = new Thread(delegate(object x)                  {                      // Generate random timespan                      Random rand = new Random(33);                      bool lockTaken = false;                      TimeSpan time = TimeSpan.FromMilliseconds(rand.Next(-1' 20));                      slock.TryEnter(time' ref lockTaken);                      if (lockTaken)                      {                          // add some delay in the critical section                          Thread.Sleep(15);                          Interlocked.Increment(ref succeeded);                          slock.Exit();                      }                      else                      {                          // Failed to get the lock within the timeout                          Interlocked.Increment(ref failed);                      }                  });
Magic Number,plinq_devtests,SpinLockTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\SpinLockTests.cs,RunSpinLockTest3_TryEnter,The following statement contains a magic number: slock.TryEnter(-2' ref lockTaken);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(2);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(8);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(32);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(64);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(128);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(256);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= MatrixMultiplySample.Test(400);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= SortSample.Test(1024);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= SortSample.Test(16 * 1024);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= SortSample.Test(16 * 1024);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= Fib.Test(8);
Magic Number,plinq_devtests,TaskRtScenarios,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,RunTaskScenarioTests,The following statement contains a magic number: passed &= Fib.Test(16);
Magic Number,plinq_devtests,MatrixMultiplySample,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,Multiply,The following statement contains a magic number: m.Size <= Math.Max(3' Threshold)
Magic Number,plinq_devtests,Fib,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,ParFib,The following statement contains a magic number: int f2 = ParFib(n - 2);
Magic Number,plinq_devtests,Fib,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtScenarios.cs,ParDoFib,The following statement contains a magic number: Parallel.Invoke(delegate { f1 = ParDoFib(n - 1); }                             ' delegate { f2 = ParDoFib(n - 2); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: Func<int> int_delegate = delegate              {                  tmObserved = TaskScheduler.Current;                  return 10;              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: Func<object' int> intState_delegate = delegate(object o)              {                  tmObserved = TaskScheduler.Current;                  return 10;              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: t = tf.StartNew(voidState_delegate' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: t = tf.StartNew(voidState_delegate' 100' myTCO);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: t = tf.StartNew(voidState_delegate' 100' CancellationToken.None' myTCO' myTM);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100' myTCO);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactory,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100' CancellationToken.None' myTCO' myTM);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The following statement contains a magic number: Func<int> int_delegate = delegate              {                  tmObserved = TaskScheduler.Current;                  return 10;              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The following statement contains a magic number: Func<object' int> intState_delegate = delegate(object o)              {                  tmObserved = TaskScheduler.Current;                  return 10;              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100' myTCO);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,ExerciseTaskFactoryInt,The following statement contains a magic number: f = tf.StartNew(intState_delegate' 100' CancellationToken.None' myTCO' myTM);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: Task t = tf.FromAsync(fac.StartWrite' fac.EndWrite' "abc"' 2' null /* state */);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: Task t = tf.FromAsync(fac.StartWrite' fac.EndWrite' "abc"' 0' 2' null /* state */);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: char[] charbuf = new char[128];
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: Task<string> t = tfs.FromAsync(fac.StartRead' fac.EndRead' 64' null /* state */);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: Task<string> t = tfs.FromAsync(fac.StartRead' fac.EndRead' 64' charbuf' null /* state */);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskFactoryTests,The following statement contains a magic number: Task<string> t = tfs.FromAsync(fac.StartRead' fac.EndRead' 64' charbuf' 0' null /* state */);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: t = Task.Factory.FromAsync(                  fac.StartWrite'                  fac.EndWrite'                  "aaaabcdef"'                  4' stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: t = Task.Factory.FromAsync(                  fac.StartWrite'                  fac.EndWrite'                  "abcdzzzz"'                  4'                  4'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: t = Task.Factory.FromAsync(                  fac.StartWrite'                  fac.EndWrite'                  "abcdzzzz"'                  4'                  4'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: char[] carray = new char[100];
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task<string>.Factory.FromAsync(                  fac.StartRead'                  fac.EndRead'                  4' // maxchars                  carray'                  0'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task<string>.Factory.FromAsync(                  fac.StartRead'                  fac.EndRead'                  4'                  carray'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task.Factory.FromAsync<int' char[]' int' string>(                  //f = Task.Factory.FromAsync(                  fac.StartRead'                  fac.EndRead'                  4' // maxchars                  carray'                  0'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task.Factory.FromAsync<int' char[]' string>(                  fac.StartRead'                  fac.EndRead'                  4'                  carray'                  stateObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task<string>.Factory.FromAsync(                  fac.StartRead(4' null' null)'                   fac.EndRead);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task.Factory.FromAsync<string>(                  fac.StartRead(4' null' null)'                  fac.EndRead);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task<string>.Factory.FromAsync(                  fac.StartRead'                  fac.EndRead'                  10'                  carray'                  200' // offset past end of array                  null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: f = Task<string>.Factory.FromAsync(                  fac.StartRead'                  fac.EndRead'                  10'                  carray'                  200' // offset past end of array                  null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: asyncFuture = Task<string>.Factory.FromAsync(                  fac.StartRead(3' null' null)'                  delegate(IAsyncResult iar) { throw new OperationCanceledException("FromAsync"); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: asyncFuture = Task<string>.Factory.FromAsync(                  fac.StartRead'                  delegate(IAsyncResult iar) { throw new OperationCanceledException("FromAsync"); }'                  3' null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: Task foo = Task.Factory.StartNew(delegate              {                  // Every one of these should throw an exception from StartWrite/StartRead.  Test to                  // see that foo is allowed to complete (i.e.' no dangling attached tasks from FromAsync()                  // calls.                  Task foo1 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' null' TaskCreationOptions.AttachedToParent);                  Task foo2 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' null' TaskCreationOptions.AttachedToParent);                  Task foo3 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' 4' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo4 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo5 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo6 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' 200' null' TaskCreationOptions.AttachedToParent);                });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: Task foo = Task.Factory.StartNew(delegate              {                  // Every one of these should throw an exception from StartWrite/StartRead.  Test to                  // see that foo is allowed to complete (i.e.' no dangling attached tasks from FromAsync()                  // calls.                  Task foo1 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' null' TaskCreationOptions.AttachedToParent);                  Task foo2 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' null' TaskCreationOptions.AttachedToParent);                  Task foo3 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' 4' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo4 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo5 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo6 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' 200' null' TaskCreationOptions.AttachedToParent);                });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: Task foo = Task.Factory.StartNew(delegate              {                  // Every one of these should throw an exception from StartWrite/StartRead.  Test to                  // see that foo is allowed to complete (i.e.' no dangling attached tasks from FromAsync()                  // calls.                  Task foo1 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' null' TaskCreationOptions.AttachedToParent);                  Task foo2 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' null' TaskCreationOptions.AttachedToParent);                  Task foo3 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' 4' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo4 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo5 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo6 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' 200' null' TaskCreationOptions.AttachedToParent);                });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunAPMFactoryTests,The following statement contains a magic number: Task foo = Task.Factory.StartNew(delegate              {                  // Every one of these should throw an exception from StartWrite/StartRead.  Test to                  // see that foo is allowed to complete (i.e.' no dangling attached tasks from FromAsync()                  // calls.                  Task foo1 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' null' TaskCreationOptions.AttachedToParent);                  Task foo2 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' null' TaskCreationOptions.AttachedToParent);                  Task foo3 = Task.Factory.FromAsync(fac.StartWrite' fac.EndWrite' (string)null' 4' 4' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo4 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo5 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' null' TaskCreationOptions.AttachedToParent);                  Task<string> foo6 = Task<string>.Factory.FromAsync(fac.StartRead' fac.EndRead' -1' (char[])null' 200' null' TaskCreationOptions.AttachedToParent);                });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelDoTest(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelDoTest(1024 * 256);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelDoTest(1024 * 256);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForIncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64IncrementTest(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAddTest(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAddTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAddTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AddTest(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AddTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AddTest(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(0' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(Int32.MaxValue - 100' Int32.MaxValue);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(Int32.MaxValue - 100' Int32.MaxValue);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialForParityTest(Int32.MaxValue - 100' Int32.MaxValue);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(0' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest(-100' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= SequentialFor64ParityTest((long)Int32.MaxValue - 100' (long)Int32.MaxValue + 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Enumerable(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Enumerable(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Enumerable(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_List(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForeachAddTest_Array(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelForAverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024 * 1024);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelForTests,The following statement contains a magic number: passed &= RunSimpleParallelFor64AverageAggregation(1024 * 1024 * 16);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The following statement contains a magic number: Parallel.For(0' 100000' parallelOptions' delegate(int i)              {                  int newval = Interlocked.Increment(ref counter);                  if (newval > desiredDOP)                  {                      exceededDOP = true;                      if (newval > maxDOP) maxDOP = newval;                  }                  Interlocked.Decrement(ref counter);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The following statement contains a magic number: Parallel.For(0L' 100000L' parallelOptions' delegate(long i)              {                  int newval = Interlocked.Increment(ref counter);                  if (newval > desiredDOP)                  {                      exceededDOP = true;                      if (newval > maxDOP) maxDOP = newval;                  }                  Interlocked.Decrement(ref counter);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The following statement contains a magic number: i < 100000
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForDOP,The following statement contains a magic number: i < 100000
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelForPaths,The following statement contains a magic number: int loopsize = 1000;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestParallelScheduler,The following statement contains a magic number: Task t1 = Task.Factory.StartNew(delegate()              {                  TaskScheduler usedScheduler = null;                    //                  // Parallel.For() testing.                  // Not' for now' testing all flavors (For(int)' For(long)' ForEach()' Partioner ForEach()).                  // Assuming that all use ParallelOptions in the same fashion.                  //                    // Make sure that TaskScheduler is used by default (no ParallelOptions)                  Parallel.For(0' 1' delegate(int i)                  {                      usedScheduler = TaskScheduler.Current;                  });                  if (usedScheduler != TaskScheduler.Default)                  {                      TestHarness.TestLog("    > FAILED.  PFor: TaskScheduler.Default not used when no ParallelOptions are specified.");                      passed = false;                  }                    // Make sure that TaskScheduler is used by default (with ParallelOptions)                  Parallel.For(0' 1' parallelOptions' delegate(int i)                  {                      usedScheduler = TaskScheduler.Current;                  });                  if (usedScheduler != TaskScheduler.Default)                  {                      TestHarness.TestLog("    > FAILED.  PFor: TaskScheduler.Default not used when none specified in ParallelOptions.");                      passed = false;                  }                    // Make sure that specified scheduler is actually used                  parallelOptions.TaskScheduler = myTaskScheduler;                  Parallel.For(0' 1' parallelOptions' delegate(int i)                  {                      usedScheduler = TaskScheduler.Current;                  });                  if (usedScheduler != myTaskScheduler)                  {                      TestHarness.TestLog("    > FAILED.  PFor: Failed to run with specified scheduler.");                      passed = false;                  }                    // Make sure that current scheduler is used when null is specified                  parallelOptions.TaskScheduler = null;                  Parallel.For(0' 1' parallelOptions' delegate(int i)                  {                      usedScheduler = TaskScheduler.Current;                  });                  if (usedScheduler != myTaskScheduler)                  {                      TestHarness.TestLog("    > FAILED.  PFor: Failed to run with TS.Current when null was specified.");                      passed = false;                  }                    //                  // Parallel.Invoke testing.                  //                  parallelOptions = new ParallelOptions();                    // Make sure that TaskScheduler is used by default (w/o ParallelOptions)                  Parallel.Invoke(                      delegate { usedScheduler = TaskScheduler.Current; }                  );                  if (usedScheduler != TaskScheduler.Default)                  {                      TestHarness.TestLog("    > FAILED.  PInvoke: TaskScheduler.Default not used when no ParallelOptions are specified.");                      passed = false;                  }                    // Make sure that TaskScheduler is used by default (with ParallelOptions)                  Parallel.Invoke(                      parallelOptions'                      delegate { usedScheduler = TaskScheduler.Current; }                  );                  if (usedScheduler != TaskScheduler.Default)                  {                      TestHarness.TestLog("    > FAILED.  PInvoke: TaskScheduler.Default not used when none specified in ParallelOptions.");                      passed = false;                  }                    // Make sure that specified scheduler is actually used                  parallelOptions.TaskScheduler = myTaskScheduler;                  Parallel.Invoke(                      parallelOptions'                      delegate { usedScheduler = TaskScheduler.Current; }                  );                  if (usedScheduler != myTaskScheduler)                  {                      TestHarness.TestLog("    > FAILED.  PInvoke: Failed to run with specified scheduler.");                      passed = false;                  }                    // Make sure that current scheduler is used when null is specified                  parallelOptions.TaskScheduler = null;                  Parallel.Invoke(                      parallelOptions'                      delegate { usedScheduler = TaskScheduler.Current; }                  );                  if (usedScheduler != myTaskScheduler)                  {                      TestHarness.TestLog("    > FAILED.  PInvoke: Failed to run with TS.Current when null was specified.");                      passed = false;                  }                    // Some tests for wonky behavior seen before fixes                  TaskCompletionSource<object> tcs = new TaskCompletionSource<object>();                  bool timeExpired = false;                  Task continuation = tcs.Task.ContinueWith(delegate                  {                      if (!timeExpired)                      {                          TestHarness.TestLog("    > FAILED.  WaitAll() started/inlined a continuation task!");                          passed = false;                      }                  });                    // Arrange for another task to complete the tcs.                  Task delayedOperation = Task.Factory.StartNew(delegate                  {                      Thread.Sleep(1000);                      timeExpired = true;                      tcs.SetResult(null);                  });                    Task.WaitAll(tcs.Task' continuation);                  if (!timeExpired)                  {                      TestHarness.TestLog("    > FAILED.  WaitAll() completed for unstarted continuation task or TCS.task!");                      TestHarness.TestLog("      -- continuation status: {0}"' continuation.Status);                      passed = false;                  }                }' CancellationToken.None' TaskCreationOptions.None' myTaskScheduler);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: Action a1 = delegate              {                  if (Interlocked.Increment(ref counter) > desiredDOP)                      exceededDOP = true;                  Thread.Sleep(10); // make sure we have some time in this state                  Interlocked.Decrement(ref counter);              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: int numActions = 100;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: parallelOptions.MaxDegreeOfParallelism = 2;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: Action a2 = delegate              {                  if (Interlocked.Increment(ref counter) == 1) cts.Cancel();                  Thread.Sleep(10);              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: Action a3 = delegate              {                  int newVal = Interlocked.Increment(ref counter);                  if (newVal == 1) throw new Exception("some non-cancellation-related exception");                  if (newVal == 2) cts.Cancel();                  Thread.Sleep(10);              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestInvokeDOPAndCancel,The following statement contains a magic number: Action a3 = delegate              {                  int newVal = Interlocked.Increment(ref counter);                  if (newVal == 1) throw new Exception("some non-cancellation-related exception");                  if (newVal == 2) cts.Cancel();                  Thread.Sleep(10);              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: int concurrencyLevel = 50;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: (repeats < 20) && passed
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: threads[i] = new Thread(() =>                      {                          bool sawFailure = false;                          bool sawError = false;                          mres.Wait();                          if (!tcs.TrySetResult(10)) sawFailure = true;                          if (tcs.Task.Result != 10) sawError = true;                            if (sawFailure) Interlocked.Increment(ref failureCount);                          if (sawError) Interlocked.Increment(ref errorCount);                      });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: threads[i] = new Thread(() =>                      {                          bool sawFailure = false;                          bool sawError = false;                          mres.Wait();                          if (!tcs.TrySetResult(10)) sawFailure = true;                          if (tcs.Task.Result != 10) sawError = true;                            if (sawFailure) Interlocked.Increment(ref failureCount);                          if (sawError) Interlocked.Increment(ref errorCount);                      });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: (repeats < 20) && passed
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The following statement contains a magic number: (repeats < 20) && passed
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The following statement contains a magic number: tcs.SetResult(5);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCompletionSourceTests,The following statement contains a magic number: tcs.SetResult(15);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: iterations = 100000000;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: runtest(delegate              {                  Parallel.For(0' iterations' parallelOptions' delegate(int i)                  {                      int myOrder = Interlocked.Increment(ref counter) - 1;                      if (myOrder == 10) cts.Cancel();                  });              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: runtest(delegate              {                  Parallel.For(0L' iterations' parallelOptions' delegate(long i)                  {                      int myOrder = Interlocked.Increment(ref counter) - 1;                      if (myOrder == 10) cts.Cancel();                  });              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: iterations = 10000;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: runtest(delegate              {                  Parallel.ForEach(dict' parallelOptions' delegate(KeyValuePair<int' int> kvp)                  {                      int myOrder = Interlocked.Increment(ref counter) - 1;                      if(myOrder == 10) cts.Cancel();                  });              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: runtest(delegate              {                  Parallel.ForEach(mp' parallelOptions' delegate(int i)                  {                      int myOrder = Interlocked.Increment(ref counter) - 1;                      if(myOrder == 10) cts.Cancel();                  });              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopCancellationTests,The following statement contains a magic number: runtest(delegate              {                  Parallel.ForEach(mop' parallelOptions' delegate(int i' ParallelLoopState state' long index)                  {                      int myOrder = Interlocked.Increment(ref counter) - 1;                      if (myOrder == 10) cts.Cancel();                  });              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The following statement contains a magic number: t = new Task(delegate {temp = 100;});
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The following statement contains a magic number: t = new Task(delegate { temp = 100; }' (TaskCreationOptions)10000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The following statement contains a magic number: t = new Task(delegate { temp = 100; }' (TaskCreationOptions)10000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The following statement contains a magic number: tr.SetResult(5);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunRefactoringTests,The following statement contains a magic number: tr.SetResult(5);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: t = Task.Factory.StartNew(delegate {                      taskStartMRE.Set();                      while (!cts.Token.IsCancellationRequested) Thread.Sleep(10);                      cts.Token.ThrowIfCancellationRequested();                  }' cts.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: t = Task.Factory.StartNew(delegate                  {                      while (!ctoken.IsCancellationRequested) Thread.Sleep(10);                      ctoken.ThrowIfCancellationRequested();                  }' ctoken);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskStatusTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The following statement contains a magic number: Timer tmr = new Timer((o) => t.Start()' null' 100' Timeout.Infinite);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The following statement contains a magic number: t = Task.Factory.StartNew(() =>               {                   while (!ct.IsCancellationRequested) Thread.Sleep(10);                  ct.ThrowIfCancellationRequested();   //acknowledge the request              }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The following statement contains a magic number: tmr = new Timer((o) => cts.Cancel()' null' 100' Timeout.Infinite);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTest,The following statement contains a magic number: int numChildren = 10;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitTimeoutTest,The following statement contains a magic number: t.Wait(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskRecursiveWaitTimeoutTest,The following statement contains a magic number: t.Wait(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskRecursiveWaitTimeoutTest,The following statement contains a magic number: t.Wait(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTests,The following statement contains a magic number: !RunTaskWaitAllTest(ApartmentState.STA' 10)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTests,The following statement contains a magic number: !RunTaskWaitAllTest(ApartmentState.STA' 65)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTests,The following statement contains a magic number: !RunTaskWaitAllTest(ApartmentState.MTA' 10)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTests,The following statement contains a magic number: !RunTaskWaitAllTest(ApartmentState.MTA' 65)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: int nFirstHalfCount = (int) Math.Ceiling(nTaskCount / 2.0);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: Action<object> sleepAction = delegate(Object o) { Thread.Sleep(100); };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: Action<object> longAction =  delegate(Object o) { Thread.Sleep(200); };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTest( aptState' nTaskCount' emptyAction' true' false' 0' null' 5000' ref e )
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTest(aptState' nFirstHalfCount' emptyAction' true' false' nSecondHalfCount' sleepAction' 5000' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTest(aptState' nFirstHalfCount' sleepAndAckCancelAction' false' true' nSecondHalfCount' emptyAction' 5000' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTest(aptState' nFirstHalfCount' exceptionThrowAction' false' false' nSecondHalfCount' sleepAction' 5000' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTestWithCancellationToken(aptState' nTaskCount' emptyAction' true' false'                                                               0' null' 5000' -1' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTestWithCancellationToken(aptState' nTaskCount' emptyAction' true' false'                                                               0' null' 5000' 0' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTestWithCancellationToken(aptState' nTaskCount' longAction' false' false'                                                               0' null' 5000' 100' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAllTest,The following statement contains a magic number: !DoRunTaskWaitAllTestWithCancellationToken(aptState' nTaskCount' longAction' false' false'                                                               0' null' 5000' 100' ref e)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { true }' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { true }' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { true' false' false' false }' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { true' false' false' false }' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { false' true' false' false }' 101);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(100' new bool[] { false' true' false' false }' 101);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(62' new bool[] { true' false' false' false }' 62);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: bPassed &= CoreWaitAnyTest(62' new bool[] { true' false' false' false }' 62);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: Task t2 = Task.Factory.StartNew(delegate { Thread.Sleep(200); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: Task t3 = Task.Factory.StartNew(delegate { Thread.Sleep(200); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskWaitAnyTests,The following statement contains a magic number: Task t4 = Task.Factory.StartNew(delegate { Thread.Sleep(200); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: Action<int' bool' bool> testWaitAnyWithCT = delegate(int nTasks' bool useSTA' bool preCancel)              {                  TestHarness.TestLog("    --Testing {0} pending tasks' STA={1}' preCancel={2}"' nTasks' useSTA' preCancel);                  Task[] tasks = new Task[nTasks];                    CancellationTokenSource ctsForTaskCancellation = new CancellationTokenSource();                  for (int i = 0; i < nTasks; i++) { tasks[i] = new Task(delegate { }' ctsForTaskCancellation.Token); }                                    CancellationTokenSource ctsForWaitAny = new CancellationTokenSource();                  if (preCancel) ctsForWaitAny.Cancel();                  CancellationToken ctForWaitAny = ctsForWaitAny.Token;                  Thread cancelThread = null;                  if (!preCancel)                  {                      cancelThread = new Thread((ThreadStart)delegate                          {                              Thread.Sleep(100);                              ctsForWaitAny.Cancel();                          });                      cancelThread.Start();                  }                  Thread thread = new Thread((ThreadStart)delegate                      {                          try                          {                              Task.WaitAny(tasks' ctForWaitAny);                              TestHarness.TestLog("    > error: WaitAny() w/ {0} tasks should have thrown OCE' threw no exception."' nTasks);                              passed = false;                          }                          catch (OperationCanceledException) { }                          catch                          {                              TestHarness.TestLog("    > error: WaitAny() w/ {0} tasks should have thrown OCE' threw different exception."' nTasks);                              passed = false;                          }                      });                  if (useSTA) thread.SetApartmentState(ApartmentState.STA);                  thread.Start();                  thread.Join();                    if (!preCancel) cancelThread.Join();                                      try                   {                      for (int i = 0; i < nTasks; i++) tasks[i].Start(); // get rid of all tasks we created                      Task.WaitAll(tasks);                   }                  catch { } // ignore any exceptions              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(2' false' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(2' false' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(2' true' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(2' true' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(63' false' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(63' false' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(63' true' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(63' true' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(100' false' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(100' false' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(100' true' true);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,WaitAnyWithCancellationTokenTests,The following statement contains a magic number: testWaitAnyWithCT(100' true' false);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunLongRunningTaskTests,The following statement contains a magic number: int ntasks = Environment.ProcessorCount * 2;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunLongRunningTaskTests,The following statement contains a magic number: !cde.Wait(5000)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: t = Task.Factory.StartNew(delegate                  {                      while (!ct.IsCancellationRequested) Thread.Sleep(10);                      ct.ThrowIfCancellationRequested();                  }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: t = Task.Factory.StartNew(delegate { mre.Set(); Thread.Sleep(100); }' cts.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: FillUpAllVprocs(500);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The following statement contains a magic number: t = Task.Factory.StartNew(delegate { Thread.Sleep(100); }' cts.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskExecutionContextFlow,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskExceptionTest,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: Task t = Task.Factory.StartNew(delegate                  {                      Task child1 = Task.Factory.StartNew(() => { Thread.Sleep(500); }' TaskCreationOptions.AttachedToParent);                      Thread.CurrentThread.Abort();                  });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: int numContinuations = 10;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: Task t = Task.Factory.StartNew(delegate                  {                      Thread.Sleep(500);                      Thread.CurrentThread.Abort();                  });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The following statement contains a magic number: t.Wait(1000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunExceptionWrappingTest,The following statement contains a magic number: Action<Task' string> mcwExceptionChecker = delegate(Task mcwTask' string scenario)              {                  try                  {                      mcwTask.Wait();                      TestHarness.TestLog("    > FAILED.  Wait-on-continuation did not throw for {0}"' scenario);                      passed = false;                  }                  catch (Exception e)                  {                      int levels = NestedLevels(e);                      if (levels != 2)                      {                          TestHarness.TestLog("    > FAILED.  Exception had {0} levels instead of 2 for {1}."' levels' scenario);                          passed = false;                      }                  }              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunExceptionWrappingTest,The following statement contains a magic number: Action<Task' string> AsyncExceptionChecker = delegate(Task _asyncTask' string msg)              {                  try                  {                      _asyncTask.Wait();                      TestHarness.TestLog("    > FAILED. {0} did not throw exception."' msg);                      passed = false;                  }                  catch (Exception e)                  {                      int levels = NestedLevels(e);                      if (levels != 2)                      {                          TestHarness.TestLog("    > FAILED.  {0} exception had {1} levels instead of 2"' msg' levels);                          passed = false;                      }                  }              };
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunExceptionWrappingTest,The following statement contains a magic number: Task<string> asyncFuture = Task<string>.Factory.FromAsync(fac.StartRead(10' null' null)' delegate(IAsyncResult iar)              {                  throwException();                  return fac.EndRead(iar);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunExceptionWrappingTest,The following statement contains a magic number: asyncFuture = Task<string>.Factory.FromAsync(fac.StartRead' delegate(IAsyncResult iar)              {                  throwException();                  return fac.EndRead(iar);              }' 10' null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Task<int> fut1 = Task<int>.Factory.StartNew( delegate{ fut1Executed = true; return 1234; } );
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: fut1.Wait(1000) == false
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: fut1Executed != true || fut1.Result != 1234 || fut1.IsCompleted != true
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Task<int> fut2 = Task<int>.Factory.StartNew(delegate { return 1234; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: t1.Join(1000) == false
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: TaskValueObserved != 1234
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Task<int> fut4 = Task<int>.Factory.StartNew(delegate(object o) { return 2; }' someObject);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: fut4.Result != 2
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Thread t2 = new Thread((ThreadStart)delegate {                                     Thread.Sleep( 500 ); // give time for things to go wrong if they have a tendency to do so                    unexpectedStateObserved |= (promise1.Task.IsCompleted == true);                    promise1.SetResult(1234);                                    unexpectedStateObserved |= (promise1.Task.IsCompleted == false);                    Thread.Sleep( 500 );                    promise2.SetResult(5678);                  promise3.SetCanceled();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Thread t2 = new Thread((ThreadStart)delegate {                                     Thread.Sleep( 500 ); // give time for things to go wrong if they have a tendency to do so                    unexpectedStateObserved |= (promise1.Task.IsCompleted == true);                    promise1.SetResult(1234);                                    unexpectedStateObserved |= (promise1.Task.IsCompleted == false);                    Thread.Sleep( 500 );                    promise2.SetResult(5678);                  promise3.SetCanceled();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Thread t2 = new Thread((ThreadStart)delegate {                                     Thread.Sleep( 500 ); // give time for things to go wrong if they have a tendency to do so                    unexpectedStateObserved |= (promise1.Task.IsCompleted == true);                    promise1.SetResult(1234);                                    unexpectedStateObserved |= (promise1.Task.IsCompleted == false);                    Thread.Sleep( 500 );                    promise2.SetResult(5678);                  promise3.SetCanceled();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: Thread t2 = new Thread((ThreadStart)delegate {                                     Thread.Sleep( 500 ); // give time for things to go wrong if they have a tendency to do so                    unexpectedStateObserved |= (promise1.Task.IsCompleted == true);                    promise1.SetResult(1234);                                    unexpectedStateObserved |= (promise1.Task.IsCompleted == false);                    Thread.Sleep( 500 );                    promise2.SetResult(5678);                  promise3.SetCanceled();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: promise1.Task.Wait(1000) == false
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: t3.Join(1000) == false
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: promise2.Task.Result != 5678
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBasicFutureTest,The following statement contains a magic number: tcs.SetResult(10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskDisposeTest,The following statement contains a magic number: bPassed &= VerifyThrowsObjectDisposedException( delegate { ((IAsyncResult) t).AsyncWaitHandle.WaitOne(100'true); } );
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The following statement contains a magic number: Task c2 = c1.ContinueWith(_ => { mres.Wait(); doneCount[2]++; TestHarness.TestLog("    c2 completed"); }' cts.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The following statement contains a magic number: Task c3 = c2.ContinueWith(_ => { mres.Wait(); doneCount[3]++; TestHarness.TestLog("    c3 completed"); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The following statement contains a magic number: Task c4 = c3.ContinueWith(_ => { mres.Wait(); doneCount[4]++; TestHarness.TestLog("    c4 completed"); }' cts.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The following statement contains a magic number: Task c5 = c4.ContinueWith(_ => { mres.Wait(); doneCount[5]++; TestHarness.TestLog("    c5 completed"); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithPreCancelTests,The following statement contains a magic number: i < 6
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task[] tasks = new Task[3];
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task<int>[] futures = new Task<int>[3];
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: tasks[2] = new Task(delegate() { mre2.WaitOne(); tcs.TrySetResult(2); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: tasks[2] = new Task(delegate() { mre2.WaitOne(); tcs.TrySetResult(2); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: tasks[2] = new Task(delegate() { mre2.WaitOne(); tcs.TrySetResult(2); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: tasks[2] = new Task(delegate() { mre2.WaitOne(); tcs.TrySetResult(2); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task<int> fContinuation = Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: fContinuation.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(null' delegate(Task t) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: cFuture = Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(tasks' delegate(Task t) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(new Task[]{}' delegate(Task t) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: futures[2] = new Task<int>(delegate() { mre2.WaitOne(); return 2; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: futures[2] = new Task<int>(delegate() { mre2.WaitOne(); return 2; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: futures[2] = new Task<int>(delegate() { mre2.WaitOne(); return 2; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: futures[2] = new Task<int>(delegate() { mre2.WaitOne(); return 2; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { return 20; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { return 20; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(null' delegate(Task<int> t) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: cFuture = Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(futures' delegate(Task<int> t) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAnyTests,The following statement contains a magic number: Task.Factory.ContinueWhenAny(new Task<int>[]{}' delegate(Task<int> t) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,makeCWAllFutureArrays,The following statement contains a magic number: aLarge[i] = new Task<int>(delegate { return 30; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: int smallSize = 2;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: int largeSize = 3;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int> fSmall = Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int> fLarge = Task<int>.Factory.ContinueWhenAll(largeTaskArray' delegate(Task[] finishedArray) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge.Result != 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(null' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(new Task[]{}' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: cFuture = Task<int>.Factory.ContinueWhenAll(largeTaskArray' delegate(Task[] finishedArray) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall = Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge = Task.Factory.ContinueWhenAll(largeTaskArray' delegate(Task[] finishedArray) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge.Result != 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(null' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallTaskArray' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(new Task[] { }' delegate(Task[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: cFuture = Task.Factory.ContinueWhenAll(largeTaskArray' delegate(Task[] finishedArray) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall = Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge = Task<int>.Factory.ContinueWhenAll(largeFutureArray' delegate(Task<int>[] finishedArray) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge.Result != 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(null' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task<int>.Factory.ContinueWhenAll(new Task<int>[]{}' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: cFuture = Task<int>.Factory.ContinueWhenAll(largeFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall = Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge = Task.Factory.ContinueWhenAll(largeFutureArray' delegate(Task<int>[] finishedArray) { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fSmall.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: fLarge.Result != 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' CancellationToken.None' TaskContinuationOptions.None' (TaskScheduler)null);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' TaskContinuationOptions.NotOnFaulted);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(null' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(smallFutureArray' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: Task.Factory.ContinueWhenAll(new Task<int>[] { }' delegate(Task<int>[] finishedArray) { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The following statement contains a magic number: cFuture = Task.Factory.ContinueWhenAll(largeFutureArray' delegate(Task<int>[] finishedArray) { return 10; }' ct);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The following statement contains a magic number: Task<int> t3 = t2.ContinueWith(delegate(Task t) { return 5; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The following statement contains a magic number: Task<int> t4 = t3.ContinueWith(delegate(Task<int> t) { return Task<int>.Factory.StartNew(delegate { return 10; }); }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The following statement contains a magic number: Task<string> t5 = t4.ContinueWith(delegate(Task<int> t) { return Task<string>.Factory.StartNew(delegate { Thread.Sleep(500); return "worked"; }); }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The following statement contains a magic number: t4.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationChainingTest,The following statement contains a magic number: t3.Result != 5
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = t1.ContinueWith(delegate(Task t)              {                  if (TaskScheduler.Current != TaskScheduler.Default)                  {                      TestHarness.TestLog("      > Failed!  Not using default TM.");                      passed = false;                  }                  return Task<int>.Factory.StartNew(delegate { Thread.Sleep(500); return 1; });              }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = t1.ContinueWith(delegate(Task t)                  {                      if (TaskScheduler.Current != tm1)                      {                          TestHarness.TestLog("      > Failed!  Not using default TM.");                          passed = false;                      }                      return Task<int>.Factory.StartNew(delegate { Thread.Sleep(500); return 1; });                  }' tm1).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f2 = f1.ContinueWith(delegate(Task<int> t)              {                  if (TaskScheduler.Current != TaskScheduler.Default)                  {                      TestHarness.TestLog("      > Failed!  Not using default TM.");                      passed = false;                  }                  return Task<int>.Factory.StartNew(delegate { Thread.Sleep(500); return 1; });              }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f1 = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTMTests,The following statement contains a magic number: f2 = f1.ContinueWith(delegate(Task<int> t)                  {                      if (TaskScheduler.Current != tm1)                      {                          TestHarness.TestLog("      > Failed!  Not using default TM.");                          passed = false;                      }                      return Task<int>.Factory.StartNew(delegate { Thread.Sleep(500); return 1; });                  }' tm1).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationCancelTest,The following statement contains a magic number: t1.Wait(5000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinuationCancelTest,The following statement contains a magic number: t3.Wait(5000);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: futureRoot = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c2 = futureRoot.ContinueWith((antecedent) => {return Task<int>.Factory.StartNew(delegate {mres.Wait(); return 2;});}).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: var v3 = new Task<Task<int>>(delegate { return Task<int>.Factory.StartNew(delegate { mres.Wait(); return 3; }); });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c2.Result != 2
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c3.Result != 3
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c4.Result != 10
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: futureRoot = new Task<int>(delegate { return 10; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c2 = futureRoot.ContinueWith(delegate(Task<int> t) { doExc(); return Task<int>.Factory.StartNew(delegate { return 2; }); }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c3 = taskRoot.ContinueWith(delegate(Task t) { return Task<int>.Factory.StartNew(delegate { doExc(); return 3; }); }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: c4 = futureRoot.ContinueWith(delegate(Task<int> t) { return Task<int>.Factory.StartNew(delegate { doExc(); return 4; }); }).Unwrap();
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: futureRoot = new Task<int>(delegate { return 20; });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: Task container = Task.Factory.StartNew(delegate              {                  c1 = taskRoot.ContinueWith(delegate(Task antecedent)                  {                      Task<int> rval = new Task<int>(delegate { c1val = 1; return 10; });                      return rval;                  }' ctsForC1.Token).Unwrap();                    c2 = futureRoot.ContinueWith(delegate(Task<int> antecedent)                  {                      Task<int> rval = new Task<int>(delegate { c2val = 1; return 10; });                      return rval;                  }' ctsForC2.Token).Unwrap();                    c5 = taskRoot.ContinueWith(delegate(Task antecedent)                  {                      Task rval = new Task(delegate { c5val = 1;});                      return rval;                  }' ctsForC5.Token).Unwrap();                    c6 = futureRoot.ContinueWith(delegate(Task<int> antecedent)                  {                      Task rval = new Task(delegate { c6val = 1;});                      return rval;                  }' ctsForC6.Token).Unwrap();                                    mres.Set();                                    ctsForContainer.Cancel();                }' ctsForContainer.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: Task container = Task.Factory.StartNew(delegate              {                  c1 = taskRoot.ContinueWith(delegate(Task antecedent)                  {                      Task<int> rval = new Task<int>(delegate { c1val = 1; return 10; });                      return rval;                  }' ctsForC1.Token).Unwrap();                    c2 = futureRoot.ContinueWith(delegate(Task<int> antecedent)                  {                      Task<int> rval = new Task<int>(delegate { c2val = 1; return 10; });                      return rval;                  }' ctsForC2.Token).Unwrap();                    c5 = taskRoot.ContinueWith(delegate(Task antecedent)                  {                      Task rval = new Task(delegate { c5val = 1;});                      return rval;                  }' ctsForC5.Token).Unwrap();                    c6 = futureRoot.ContinueWith(delegate(Task<int> antecedent)                  {                      Task rval = new Task(delegate { c6val = 1;});                      return rval;                  }' ctsForC6.Token).Unwrap();                                    mres.Set();                                    ctsForContainer.Cancel();                }' ctsForContainer.Token);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunUnwrapTests,The following statement contains a magic number: Task hanging2 = new TaskFactory(new NonInliningTaskScheduler()).StartNew(() =>              {                  Task<Task<int>> f1 = Task.Factory.StartNew<Task<int>>(() => Task.Factory.StartNew<int>(() => 10)' TaskCreationOptions.AttachedToParent);                  Task<int> f2 = f1.Unwrap();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithTaskFuture,The following statement contains a magic number: return RunContinueWithBase(options'                  delegate { ran = false; }'                  delegate(Task t) { return t.ContinueWith<int>(delegate(Task f) { ran = true; return 5; }' options); }'                  delegate { return ran; }'                  false              );
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWithFutureFuture,The following statement contains a magic number: return RunContinueWithBase(options'                  delegate { ran = false; }'                  delegate(Task t) { return t.ContinueWith<int>(delegate(Task f) { ran = true; return 5; }' options); }'                  delegate { return ran; }'                  true              );
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,CoreRunSynchronouslyTest,The following statement contains a magic number: !t.Wait(500)
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForBreak(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestFor64Break(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 20);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(100' 30);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 100);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 200);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunBreakTests,The following statement contains a magic number: allgood = allgood && TestForEachBreak(1000' 300);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestForBreak,The following statement contains a magic number: Parallel.For(0' loopsize' delegate(int i' ParallelLoopState ps)              {                  complete[i] = true;                  if (i >= breakpoint) ps.Break();                  Thread.Sleep(2);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestFor64Break,The following statement contains a magic number: long loopbase = (long)Int32.MaxValue - 10;
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestFor64Break,The following statement contains a magic number: Parallel.For(loopbase' loopbase+loopsize' delegate(long i' ParallelLoopState ps)              {                  complete[i-loopbase] = true;                  if ((i-loopbase) >= breakpoint) ps.Break();                  Thread.Sleep(2);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestForEachBreak,The following statement contains a magic number: Parallel.ForEach(iqueue' delegate(int i' ParallelLoopState ps)              {                  complete[i] = true;                  if (i >= breakpoint) ps.Break();                   Thread.Sleep(2);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestForEachBreak,The following statement contains a magic number: Parallel.ForEach(mop' delegate(int item' ParallelLoopState ps' long index)              {                  complete[index] = true;                  if (index >= breakpoint) ps.Break();                  Thread.Sleep(2);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,PartitionerForEachPLRTest,The following statement contains a magic number: i < 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,OrderablePartitionerForEachPLRTest,The following statement contains a magic number: i < 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: ParallelLoopResult plr =              Parallel.For(1' 0' delegate(int i' ParallelLoopState ps)              {                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: passed = passed && PLRcheck(plr' "For-Break"' false' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0' 100' delegate(int i' ParallelLoopState ps)              {                  Thread.Sleep(20);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(1L' 0L' delegate(long i' ParallelLoopState ps)              {                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);                  if (i == 10) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: passed = passed && PLRcheck(plr' "For64-Break"' false' 10);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.For(0L' 100L' delegate(long i' ParallelLoopState ps)              {                  Thread.Sleep(20);              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: passed = passed && PLRcheck(plr' "ForEach-Break"' false' 7);
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: i < 20
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.ForEach(mop' delegate(int item' ParallelLoopState ps' long index)              {                  if (index == 2) ps.Stop();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: plr =              Parallel.ForEach(mop' delegate(int item' ParallelLoopState ps' long index)              {                  if (index == 2) ps.Break();              });
Magic Number,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunParallelLoopResultTests,The following statement contains a magic number: passed = passed & PLRcheck(plr' "OrderablePartitioner-ForEach-Break"' false' 2);
Magic Number,plinq_devtests,FakeAsyncClass,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,StartWrite,The following statement contains a magic number: Task t = Task.Factory.StartNew(delegate                  {                      Thread.Sleep(100);                      try                      {                          lock (m_list)                          {                              for (int i = 0; i < length; i++) m_list.Add(s[i + offset]);                          }                          mar.Signal();                      }                      catch (Exception e) { mar.Signal(e); }                  });
Magic Number,plinq_devtests,FakeAsyncClass,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,StartRead,The following statement contains a magic number: return StartRead(128 /*=maxbytes*/' null' 0' cb' o);
Magic Number,plinq_devtests,FakeAsyncClass,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,StartRead,The following statement contains a magic number: Task t = Task.Factory.StartNew(delegate                  {                      Thread.Sleep(100);                      StringBuilder sb = new StringBuilder();                      int bytesRead = 0;                      try                      {                          lock (m_list)                          {                              while ((m_list.Count > 0) && (bytesRead < maxBytes))                              {                                  sb.Append(m_list[0]);                                  if (buf != null) { buf[offset] = m_list[0]; offset++; }                                  m_list.RemoveAt(0);                                  bytesRead++;                              }                          }                            mar.SignalState(sb.ToString());                      }                      catch (Exception e) { mar.Signal(e); }                  });
Magic Number,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,RunTests,The following statement contains a magic number: j < 80
Magic Number,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,The following statement contains a magic number: i < 80
Magic Number,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,The following statement contains a magic number: i < 80
Magic Number,plinq_devtests,TestHarness,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TestHarness.cs,Main,The following statement contains a magic number: i < 80
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest1_ctor(10' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest2_SignalAndWait(1' new TimeSpan(0' 0' 0' 0' -2)' false' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest2_SignalAndWait(5' new TimeSpan(0' 0' 0' 0' 100)' false' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest2_SignalAndWait(5' new TimeSpan(0' 0' 0' 0' 100)' false' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest2_SignalAndWait(5' new TimeSpan(0)' false' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest3_SignalAndWait(3);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest4_AddParticipants(5' 3' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest4_AddParticipants(5' 3' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest4_AddParticipants(2' -1' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest4_AddParticipants(100' int.MaxValue' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest5_RemoveParticipants(10' 7' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest5_RemoveParticipants(10' 7' null);
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest5_RemoveParticipants(10' 0' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest5_RemoveParticipants(5' 6' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTests,The following statement contains a magic number: passed &= RunBarrierTest5_RemoveParticipants(5' 6' typeof(ArgumentOutOfRangeException));
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest7_Bug603035,The following statement contains a magic number: Action[] actions = Enumerable.Repeat((Action)(() =>                  {                      for (int i = 0; i < 400; i++)                      {                          try                          {                              b.AddParticipant();                              b.RemoveParticipant();                          }                          catch                          {                              failed = true;                              break;                          }                      }                    })' 4).ToArray();
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest7_Bug603035,The following statement contains a magic number: Action[] actions = Enumerable.Repeat((Action)(() =>                  {                      for (int i = 0; i < 400; i++)                      {                          try                          {                              b.AddParticipant();                              b.RemoveParticipant();                          }                          catch                          {                              failed = true;                              break;                          }                      }                    })' 4).ToArray();
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest7_Bug603035,The following statement contains a magic number: j < 100 && !failed
Magic Number,plinq_devtests,BarrierTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\BarrierTests.cs,RunBarrierTest8_PostPhaseException,The following statement contains a magic number: int participants = 4;
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy(10);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy(100);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy(1000);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy_OnlyOneException(10);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy_OnlyOneException(100);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= OrderBy_OnlyOneException(1000);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= ZipAndOrdering(10);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= ZipAndOrdering(100);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,RunUserDelegateExceptionTests,The following statement contains a magic number: passed &= ZipAndOrdering(1000);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,DistintOrderBySelect,The following statement contains a magic number: var query2 = new int[] { 1' 2' 3 }.AsParallel()                      .Distinct()                      .OrderBy(i => i)                      .Select(i => UserDelegateException.Throw<int' int>(i));
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,DistintOrderBySelect,The following statement contains a magic number: var query2 = new int[] { 1' 2' 3 }.AsParallel()                      .Distinct()                      .OrderBy(i => i)                      .Select(i => UserDelegateException.Throw<int' int>(i));
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,SelectJoin,The following statement contains a magic number: var query = new int[] { 1' 2' 3 }.AsParallel()                      .Select( i => UserDelegateException.Throw<int' int>(i))                      .Join(new int[] { 1 }.AsParallel()' i => i' j => j' (i' j) => 0);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,SelectJoin,The following statement contains a magic number: var query = new int[] { 1' 2' 3 }.AsParallel()                      .Select( i => UserDelegateException.Throw<int' int>(i))                      .Join(new int[] { 1 }.AsParallel()' i => i' j => j' (i' j) => 0);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OrderBy,The following statement contains a magic number: dop % 10 == 0
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OrderBy,The following statement contains a magic number: dop <= 30
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OrderBy_OnlyOneException,The following statement contains a magic number: dop % 10 == 0
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OrderBy_OnlyOneException,The following statement contains a magic number: int indexForException = range/(2*dop);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OrderBy_OnlyOneException,The following statement contains a magic number: dop <= 30
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,ZipAndOrdering,The following statement contains a magic number: dop % 10 == 0
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,ZipAndOrdering,The following statement contains a magic number: var enum2 = Enumerable.Repeat(1' range*2);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,ZipAndOrdering,The following statement contains a magic number: dop <= 30
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,OperationCanceledExceptionsGetAggregated,The following statement contains a magic number: var enum1 = Enumerable.Range(1' 13);
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_PlinqChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Enumerable.Range(1' 10)                      .AsParallel()                      .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                      .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                      .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                   .AsParallel()                   .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                   .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_PlinqChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Enumerable.Range(1' 10)                      .AsParallel()                      .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                      .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                      .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                   .AsParallel()                   .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                   .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_PlinqChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Enumerable.Range(1' 10)                      .AsParallel()                      .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                      .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                      .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                   .AsParallel()                   .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                   .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_ManualChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Partitioner.Create(                      Enumerable.Range(1' 10)                          .AsParallel()                          .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                          .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                          .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                      )                      .AsParallel()                      .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_ManualChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Partitioner.Create(                      Enumerable.Range(1' 10)                          .AsParallel()                          .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                          .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                          .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                      )                      .AsParallel()                      .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_ManualChunkPartitioner_DontEnumerateAfterException,The following statement contains a magic number: Partitioner.Create(                      Enumerable.Range(1' 10)                          .AsParallel()                          .WithExecutionMode(ParallelExecutionMode.ForceParallelism)                          .Select(x => { if (x == 4) throw new ApplicationException("manual exception"); return x; })                          .Zip(Enumerable.Range(1' 10).AsParallel()' (a' b) => a + b)                      )                      .AsParallel()                      .ToArray();
Magic Number,plinq_devtests,PlinqDelegateExceptions,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PlinqDelegateExceptions\PlinqDelegateExceptions.cs,Bug599487_MoveNextAfterQueryOpeningFailsIsIllegal,The following statement contains a magic number: var query = Enumerable.Range(0' 10)                  .AsParallel()                  .Select<int' int>(x => { throw new ApplicationException(); })                  .OrderBy(x=>x);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10000' 1);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10000' 357);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningIList(10000' 357);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10000' 1);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10000' 357);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_StaticPartitioningArray(10000' 357);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(11' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(11' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(10000' 1);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(10000' 23);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceIList(10000' 23);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(11' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(11' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(10000' 1);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(10000' 23);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceArray(10000' 23);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(11' 8);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(8' 11);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10' 10);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10000' 1);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10000' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10000' 37);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTests,The following statement contains a magic number: passed &= RunPartitionerStaticTest_LoadBalanceEnumerator(10000' 37);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_DisposeException,The following statement contains a magic number: var data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Dispose,The following statement contains a magic number: IList<int> data = new List<int>() { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Exceptions,The following statement contains a magic number: algorithm < 5
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Exceptions,The following statement contains a magic number: int[] data = new int[10000];
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Exceptions,The following statement contains a magic number: i < 10000
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_Exceptions,The following statement contains a magic number: algorithm < 5
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_EmptyPartitions,The following statement contains a magic number: var partitions1 = partitioner.GetOrderablePartitions(4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_EmptyPartitions,The following statement contains a magic number: i < 4
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_EmptyPartitions,The following statement contains a magic number: algorithm < 5
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_LoadBalanceIList,The following statement contains a magic number: return RunTestWithAlgorithm(dataSize' partitionCount' 2);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_LoadBalanceArray,The following statement contains a magic number: return RunTestWithAlgorithm(dataSize' partitionCount' 3);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,RunPartitionerStaticTest_LoadBalanceEnumerator,The following statement contains a magic number: return RunTestWithAlgorithm(dataSize' partitionCount' 4);
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,IsStaticPartition,The following statement contains a magic number: return algorithm < 2;
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,PartitioningWithAlgorithm,The following statement contains a magic number: switch (algorithm)              {                  //static partitioning through IList                  case (0):                      return Partitioner.Create((IList<T>)data' false);                    //static partitioning through Array                  case (1):                      return Partitioner.Create(data' false);                    //dynamic partitioning through IList                  case (2):                      return Partitioner.Create((IList<T>)data' true);                    //dynamic partitioning through Arrray                  case (3):                      return Partitioner.Create(data' true);                    //dynamic partitioning through IEnumerator                  case (4):                      return Partitioner.Create((IEnumerable<T>)data);                  default: throw new InvalidOperationException("no such partitioning algorithm");              }
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,PartitioningWithAlgorithm,The following statement contains a magic number: switch (algorithm)              {                  //static partitioning through IList                  case (0):                      return Partitioner.Create((IList<T>)data' false);                    //static partitioning through Array                  case (1):                      return Partitioner.Create(data' false);                    //dynamic partitioning through IList                  case (2):                      return Partitioner.Create((IList<T>)data' true);                    //dynamic partitioning through Arrray                  case (3):                      return Partitioner.Create(data' true);                    //dynamic partitioning through IEnumerator                  case (4):                      return Partitioner.Create((IEnumerable<T>)data);                  default: throw new InvalidOperationException("no such partitioning algorithm");              }
Magic Number,plinq_devtests,PartitionerStaticTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\PartitionerStaticTests.cs,PartitioningWithAlgorithm,The following statement contains a magic number: switch (algorithm)              {                  //static partitioning through IList                  case (0):                      return Partitioner.Create((IList<T>)data' false);                    //static partitioning through Array                  case (1):                      return Partitioner.Create(data' false);                    //dynamic partitioning through IList                  case (2):                      return Partitioner.Create((IList<T>)data' true);                    //dynamic partitioning through Arrray                  case (3):                      return Partitioner.Create(data' true);                    //dynamic partitioning through IEnumerator                  case (4):                      return Partitioner.Create((IEnumerable<T>)data);                  default: throw new InvalidOperationException("no such partitioning algorithm");              }
Magic Number,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: Barrier barrier = new Barrier(3);
Magic Number,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: const int millisec = 100;
Magic Number,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: TimeSpan timeSpan = new TimeSpan(100);
Magic Number,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: const int numberParticipants = 3;
Magic Number,plinq_devtests.Cancellation,BarrierCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BarrierCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (args) =>                  {                      Thread.Sleep(1000);                      cancellationTokenSource.Cancel();                  }                  );
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTake,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                      {                          Thread.Sleep(500);                          coll1.CompleteAdding();                      });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTryTake,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(500);                      coll1.CompleteAdding();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTryTake,The following statement contains a magic number: bool tookItem = coll1.TryTake(out item' 1000000);
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpAdd,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(500);                      coll1.CompleteAdding();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTryAdd,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(500);                      coll1.CompleteAdding();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,InternalCancellation_WakingUpTryAdd,The following statement contains a magic number: passed &= TestHarnessAssert.EnsureExceptionThrown(                  () => coll1.TryAdd(1' 1000000)'  //an indefinite wait to add.. 1000 seconds.                  typeof(InvalidOperationException)'                  "an InvalidOpEx should be thrown if CompleteAdding occurs during blocking Add()");
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_Add,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                      {                          Thread.Sleep(100);                          cs.Cancel();                      });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryAdd,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryAdd,The following statement contains a magic number: passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(                  () => bc.TryAdd(1' 100000' cs.Token)' // a long timeout.                  cs.Token'                  "The operation should wake up via token cancellation.");
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_Take,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryTake,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryTake,The following statement contains a magic number: passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(                  () => bc.TryTake(out item' 100000' cs.Token)'                  cs.Token'                  "The operation should wake up via token cancellation.");
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_AddToAny,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryAddToAny,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_TryAddToAny,The following statement contains a magic number: passed &= TestHarnessAssert.EnsureOperationCanceledExceptionThrown(                  () => BlockingCollection<int>.TryAddToAny(new[] { bc1' bc2 }' 1' 10000' cs.Token)'                  cs.Token'                  "The operation should wake up via token cancellation.");
Magic Number,plinq_devtests.Cancellation,BlockingCollectionCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\BlockingCollectionCancellationTests.cs,ExternalCancel_GetConsumingEnumerable,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (obj) =>                  {                      Thread.Sleep(100);                      cs.Cancel();                  });
Magic Number,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: CountdownEvent countdownEvent = new CountdownEvent(2);
Magic Number,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: const int millisec = 100;
Magic Number,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: TimeSpan timeSpan = new TimeSpan(100);
Magic Number,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: CountdownEvent countdownEvent = new CountdownEvent(2);
Magic Number,plinq_devtests.Cancellation,CountdownEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\CountdownEventCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (args) =>                  {                      Thread.Sleep(1000);                      cancellationTokenSource.Cancel();                  }                  );
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: const int millisec = 100;
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: TimeSpan timeSpan = new TimeSpan(100);
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (args) =>                  {                      Thread.Sleep(1000);                      cancellationTokenSource.Cancel();                  }                  );
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: const int waitTimeoutMilliseconds = 1000;
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: const int waitBeforeCancelMilliseconds = 300;
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: CountdownEvent cde_allThreadsFinished = new CountdownEvent(2);
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: Console.WriteLine("        (first  wait duration [expecting <={0'4}]        ={1'4})"' 500' wait1ElapsedMilliseconds);
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(wait1ElapsedMilliseconds < 500' "[Warning: Timing Sensitive Test] The first wait should have canceled before 500ms elapsed.");
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds);
Magic Number,plinq_devtests.Cancellation,ManualResetEventCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\ManualResetEventSlimCancellationTests.cs,Bug544743_MRES_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: SemaphoreSlim semaphoreSlim = new SemaphoreSlim(2);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: const int millisec = 100;
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelBeforeWait,The following statement contains a magic number: TimeSpan timeSpan = new TimeSpan(100);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,CancelAfterWait,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(                  (args) =>                  {                      Thread.Sleep(1000);                      cancellationTokenSource.Cancel();                  }                  );
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: const int waitTimeoutMilliseconds = 1000;
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: const int waitBeforeCancelMilliseconds = 300;
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: CountdownEvent cde_allThreadsFinished = new CountdownEvent(2);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: Console.WriteLine("        (first  wait duration [expecting <={0'4}]        ={1'4})"' 500' wait1ElapsedMilliseconds);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(wait1ElapsedMilliseconds < 500' "[Warning: Timing Sensitive Test] The first wait should have canceled before 500ms elapsed.");
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds);
Magic Number,plinq_devtests.Cancellation,SemaphoreSlimCancellationTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\CdsCancellation\SemaphoreSlimCancellationTests.cs,SemaphoreSlim_MultipleWaitersWithSeparateTokens,The following statement contains a magic number: passed &= TestHarnessAssert.IsTrue(950 <= wait2ElapsedMilliseconds && wait2ElapsedMilliseconds <= 1050' "[Warning: Timing Sensitive Test] The second wait should have waited 1000ms +-50ms). Actual wait duration = " + wait2ElapsedMilliseconds);
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTCSCompletionStateTests,The method contains a code clone-set at the following line numbers (starting from the method definition): ((56' 76)' (103' 123))
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunTaskCancelTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 95)' (136' 157))
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunThreadAbortExceptionTests,The method contains a code clone-set at the following line numbers (starting from the method definition): ((7' 31)' (39' 63))
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method contains a code clone-set at the following line numbers (starting from the method definition): ((101' 121)' (175' 195))
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,RunContinueWhenAllTests,The method contains a code clone-set at the following line numbers (starting from the method definition): ((317' 337)' (391' 411))
Duplicate Code,plinq_devtests,TaskRtTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\TaskRtTests.cs,TestForEachBreak,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 46)' (67' 92))
Missing Default,plinq_devtests,QueryOperatorPerfTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorPerfTests.cs,CreateOrderByInput,The following switch statement is missing a default case: switch (type)              {                  case DataDistributionType.AlreadyAscending:                      for (int i = 0; i < data.Length; i++) data[i] = i;                      break;                  case DataDistributionType.AlreadyDescending:                      for (int i = 0; i < data.Length; i++) data[i] = dataSize - i;                      break;                  case DataDistributionType.Random:                      Random rand = new Random(33);                      for (int i = 0; i < data.Length; i++) data[i] = rand.Next();                      break;              }
Missing Default,plinq_devtests,QueryOperatorTests,C:\research\architectureSmells\repos\Reactive-Extensions_IL2JS\Reactive\ThreadingTests\test\QueryOperatorTests.cs,CreateOrderByInput,The following switch statement is missing a default case: switch (type)              {                  case DataDistributionType.AlreadyAscending:                      for (int i = 0; i < data.Length; i++) data[i] = i;                      break;                  case DataDistributionType.AlreadyDescending:                      for (int i = 0; i < data.Length; i++) data[i] = dataSize - i;                      break;                  case DataDistributionType.Random:                      Random rand = new Random();                      for (int i = 0; i < data.Length; i++) data[i] = rand.Next();                      break;              }
