Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpCodec,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpCodec.cs,AmqpCodec,The method has 282 lines of code.
Long Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpError,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpErrorCode.cs,AmqpError,The method has 116 lines of code.
Long Method,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,AmqpEncoding,The method has 230 lines of code.
Complex Method,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,Complete,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,TryContinueHelper,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,End,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,CompletionCallback,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpError,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpErrorCode.cs,FromException,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,OnReceiveAttach,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpSession,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpSession.cs,ProcessFrame,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.ServiceBus.Messaging.Amqp,AmqpSession,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpSession.cs,OnReceiveLinkFrame,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Encoding,ArrayEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\ArrayEncoding.cs,DecodeObject,Cyclomatic complexity of the method is 73
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeValue,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Attach,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Attach.cs,OnDecode,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Begin,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Begin.cs,OnDecode,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Flow,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Flow.cs,OnDecode,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Open,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Open.cs,OnDecode,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Properties,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Properties.cs,OnDecode,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Source,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Source.cs,OnDecode,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Target,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Target.cs,OnDecode,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.ServiceBus.Messaging.Amqp.Framing,Transfer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Transfer.cs,OnDecode,Cyclomatic complexity of the method is 12
Long Parameter List,Microsoft.ServiceBus.Common.Interop,UnsafeNativeMethods,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\UnsafeNativeMethods.cs,SetWaitableTimer,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Common.Interop,UnsafeNativeMethods,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\UnsafeNativeMethods.cs,WSARecv,The method has 7 parameters.
Long Parameter List,Microsoft.ServiceBus.Common.Interop,UnsafeNativeMethods,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\UnsafeNativeMethods.cs,WSAGetOverlappedResult,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Common.Interop,UnsafeNativeMethods,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\UnsafeNativeMethods.cs,EventWriteTransfer,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Common.Interop,UnsafeNativeMethods,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\UnsafeNativeMethods.cs,ReportEvent,The method has 9 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,AmqpConnection,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,IConnectionFactory,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\IAmqpProvider.cs,CreateConnection,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,INodeFactory,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\IAmqpProvider.cs,BeginCreateNode,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,ReceivingAmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ReceivingAmqpLink.cs,BeginDisposeMessage,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,SendingAmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\SendingAmqpLink.cs,BeginSendMessage,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,Utils,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Utils.cs,Trace,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,Utils,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Utils.cs,Trace,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,Utils,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Utils.cs,Trace,The method has 7 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp,AmqpStream,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\Amqp\AmqpStream.cs,Write,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,ReadCount,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,ReadSizeAndCount,The method has 6 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,CreateDecimal,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Framing,AmqpDescribed,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\AmqpDescribed.cs,AddFieldToString,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Transaction,Controller,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transaction\Controller.cs,BeginDischange,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Transport,TransportStream,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\TransportStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,Microsoft.ServiceBus.Messaging.Amqp.Transport,TransportStream,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\TransportStream.cs,BeginRead,The method has 5 parameters.
Long Identifier,Microsoft.ServiceBus.Common,IOThreadTimer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadTimer.cs,IOThreadTimer,The length of the parameter isTypicallyCanceledShortlyAfterBeingSet is 39.
Long Identifier,Microsoft.ServiceBus.Common,IOThreadTimer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadTimer.cs,IOThreadTimer,The length of the parameter isTypicallyCanceledShortlyAfterBeingSet is 39.
Long Statement,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,Complete,The length of the statement  "		throw Fx.Exception.AsError (new InvalidOperationException (SRCore.AsyncResultCompletedTwice (this.GetType () + "\r\n First Complete Call Stack: \r\n" + this.completeStack + "\r\n"))); " is 183.
Long Statement,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,PrepareAsyncCompletion,The length of the statement  "		// It might be an old' leftover one' if an exception was thrown within the last using (PrepareTransactionalCall()) block. " is 121.
Long Statement,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,PrepareTransactionalCall,The length of the statement  "		ThrowInvalidAsyncResult ("PrepareTransactionalCall should only be called as the object of non-nested using statements. If the Begin succeeds' Check/SyncContinue must be called before another PrepareTransactionalCall."); " is 219.
Long Statement,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,TryContinueHelper,The length of the statement  "				// This is most likely to happen when result.CompletedSynchronously registers differently here and in the callback' which " is 121.
Long Statement,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,ThrowInvalidAsyncResult,The length of the statement  "	throw Fx.Exception.AsError (new InvalidOperationException (SRCore.InvalidAsyncResultImplementation (result.GetType ()))); " is 121.
Long Statement,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,ScheduleCallbackHelper,The length of the statement  "		IOThreadScheduler next = new IOThreadScheduler (Math.Min (this.slots.Length * 2' MaximumCapacity)' this.slotsLowPri.Length); " is 124.
Long Statement,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,ScheduleCallbackLowPriHelper,The length of the statement  "	bool queued = this.slotsLowPri [slot >> Bits.HiShift & SlotMaskLowPri].TryEnqueueWorkItem (callback' state' out wrapped); " is 121.
Long Statement,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,ScheduleCallbackLowPriHelper,The length of the statement  "		IOThreadScheduler next = new IOThreadScheduler (this.slots.Length' Math.Min (this.slotsLowPri.Length * 2' MaximumCapacity)); " is 124.
Long Statement,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,CompletionCallback,The length of the statement  "				if (slotLowPri == (slotLowPri = Interlocked.CompareExchange (ref this.headTailLowPri' Bits.IncrementLo (slotLowPri)' slotLowPri))) { " is 132.
Long Statement,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,TryCoalesce,The length of the statement  "			if (slotLowPri == (slotLowPri = Interlocked.CompareExchange (ref this.headTailLowPri' Bits.IncrementLo (slotLowPri)' slotLowPri))) { " is 132.
Long Statement,Microsoft.ServiceBus.Common,IOThreadTimer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadTimer.cs,GetSystemTimeResolution,The length of the statement  "	if (UnsafeNativeMethods.GetSystemTimeAdjustment (out dummyAdjustment' out increment' out dummyAdjustmentDisabled) != 0) { " is 121.
Long Statement,Microsoft.ServiceBus.Common,IOThreadTimer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadTimer.cs,SetAt,The length of the statement  "		throw Fx.Exception.ArgumentOutOfRange ("newDueTime"' newDueTime' SRClient.ArgumentOutOfRange (0' TimeSpan.MaxValue.Ticks - 1)); " is 127.
Long Statement,Microsoft.ServiceBus.Common,SRCore,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRCore.Designer.cs,NullOrEmptyConfigurationAttribute,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("NullOrEmptyConfigurationAttribute"' Culture)' param0' param1); " is 121.
Long Statement,Microsoft.ServiceBus.Common,SRCore,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRCore.Designer.cs,MultipleTransportSettingConfigurationElement,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("MultipleTransportSettingConfigurationElement"' Culture)' param0); " is 124.
Long Statement,Microsoft.ServiceBus.Common,Fx,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\Common\Fx.cs,IsFatal,The length of the statement  "		if (exception is FatalException || (exception is OutOfMemoryException && !(exception is InsufficientMemoryException)) || exception is ThreadAbortException || exception is AccessViolationException || exception is AssertionFailedException || exception is SEHException) { " is 268.
Long Statement,Microsoft.ServiceBus.Common.Interop,SafeEventLogWriteHandle,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\Interop\SafeEventLogWriteHandle.cs,RegisterEventSource,The length of the statement  "		Debug.Print ("SafeEventLogWriteHandle::RegisterEventSource[" + uncServerName + "' " + sourceName + "] Failed. Last Error: " + error.ToString (CultureInfo.InvariantCulture)); " is 173.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnProtocolHeader,The length of the statement  "			exception = new AmqpException (AmqpError.NotImplemented' SRClient.ProtocolVersionNotSupported (this.initialHeader.ToString ()' header.ToString ())); " is 148.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnProtocolHeader,The length of the statement  "			exception = new AmqpException (AmqpError.NotImplemented' SRClient.ProtocolVersionNotSupported (this.initialHeader.ToString ()' header.ToString ())); " is 148.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnFrameBuffer,The length of the statement  "	if (frame.Command.DescriptorCode == OpenCommand.Code || frame.Command.DescriptorCode == CloseCommand.Code || frame.Command.DescriptorCode == Begin.Code || frame.Command.DescriptorCode == End.Code) { " is 198.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnSessionClosed,The length of the statement  "	Utils.Trace (TraceLevel.Info' "{0}: {1} [{2}'{3}] closed and removed"' this' session' session.LocalChannel' session.RemoteChannel); " is 131.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,DisposeDelivery,The length of the statement  "	Utils.Trace (TraceLevel.Verbose' "{0}: Dispose delivery (id={1}' settle={2}' state={3})."' this' delivery.DeliveryId' settled' state); " is 134.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,ProcessTransfer,The length of the statement  "	Utils.Trace (TraceLevel.Verbose' "{0}: Receive a transfer(id:{1}' settled:{2})."' this' transfer.DeliveryId' transfer.Settled ()); " is 130.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,ProcessTransfer,The length of the statement  "			Utils.Trace (TraceLevel.Verbose' "{0}: The transfer {1} was rejected due to insufficient link credit."' this' transfer.DeliveryId.Value); " is 137.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,OnReceiveAttach,The length of the statement  "			this.Session.Connection.AmqpSettings.RuntimeProvider.BeginOpenLink (this' this.DefaultOpenTimeout' this.OnProviderLinkOpened' null); " is 132.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,Negotiate,The length of the statement  "		this.settings.MaxMessageSize = this.settings.MaxMessageSize.HasValue ? Math.Min (this.settings.MaxMessageSize.Value' attach.MaxMessageSize.Value) : attach.MaxMessageSize.Value; " is 176.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpObject,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpObject.cs,TryClose,The length of the statement  "		Utils.Trace (TraceLevel.Error' "{0}: Fault with exception: {1}"' this' exception != null ? exception.Message : string.Empty); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpObject,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpObject.cs,IsClosing,The length of the statement  "	return state == AmqpObjectState.CloseSent || state == AmqpObjectState.CloseReceived || state == AmqpObjectState.ClosePipe || state == AmqpObjectState.End || state == AmqpObjectState.Faulted; " is 190.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpSession,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpSession.cs,AttachLink,The length of the statement  "	Utils.Trace (TraceLevel.Info' "{0}: Attach {1} '{2}' ({3})"' this' link' link.Name' link.IsReceiver ? "receiver" : "sender"); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,AmqpSession,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpSession.cs,SendCommand,The length of the statement  "		Utils.Trace (TraceLevel.Verbose' "{0}: Dispose {1}-{2}' settled:{3}' outcome:{4}."' this' disposition.First.Value' disposition.Last' disposition.Settled' disposition.State.DescriptorName.Value); " is 194.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,ByteBuffer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ByteBuffer.cs,Wrap,The length of the statement  "	return new BufferedByteBuffer (array.Array' array.Offset' array.Offset' array.Offset + array.Count' array.Offset + array.Count' false); " is 135.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,Extensions,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Extensions.cs,SettleType,The length of the statement  "	SenderSettleMode ssm = attach.SndSettleMode.HasValue ? (SenderSettleMode)attach.SndSettleMode.Value : SenderSettleMode.Mixed; " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,Extensions,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Extensions.cs,SettleType,The length of the statement  "	ReceiverSettleMode rsm = attach.RcvSettleMode.HasValue ? (ReceiverSettleMode)attach.RcvSettleMode.Value : ReceiverSettleMode.First; " is 131.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,ReceivingAmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ReceivingAmqpLink.cs,OnProcessTransfer,The length of the statement  "	Fx.Assert (delivery == null || object.ReferenceEquals (delivery' this.currentDelivery)' "The delivery must be null or must be the same as the current message."); " is 161.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp,ReceivingAmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ReceivingAmqpLink.cs,OnProcessTransfer,The length of the statement  "		Utils.Trace (TraceLevel.Debug' "{0}: Complete a message with payload from {1} transfers."' this' this.currentDelivery.Count); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,GetInvalidFormatCodeException,The length of the statement  "	return GetEncodingException (string.Format (CultureInfo.CurrentCulture' "Invalid format code: {0} at position {1}."' formatCode' position)); " is 140.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Encoding,BinaryEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\BinaryEncoding.cs,GetEncodeSize,The length of the statement  "	return value.Array == null ? FixedWidth.NullEncoded : FixedWidth.FormatCode + AmqpEncoding.GetEncodeWidthBySize (value.Count) + value.Count; " is 140.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DescribedEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DescribedEncoding.cs,GetEncodeSize,The length of the statement  "	return value == null ? FixedWidth.NullEncoded : FixedWidth.FormatCode + AmqpEncoding.GetObjectEncodeSize (value.Descriptor) + AmqpEncoding.GetObjectEncodeSize (value.Value); " is 173.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,GetEncodeSize,The length of the statement  "	return value == null ? FixedWidth.NullEncoded : FixedWidth.FormatCode + (MapEncoding.GetEncodeWidth (value) * 2) + value.ValueSize; " is 131.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Encoding,SymbolEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\SymbolEncoding.cs,GetEncodeSize,The length of the statement  "	return value.Value == null ? FixedWidth.NullEncoded : FixedWidth.FormatCode + AmqpEncoding.GetEncodeWidthBySize (value.ValueSize) + value.ValueSize; " is 148.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Attach,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Attach.cs,ToString,The length of the statement  "	this.AddFieldToString (this.IncompleteUnsettled != null' sb' "incomplete-unsettled"' this.IncompleteUnsettled' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Attach,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Attach.cs,ToString,The length of the statement  "	this.AddFieldToString (this.InitialDeliveryCount != null' sb' "initial-delivery-count"' this.InitialDeliveryCount' ref count); " is 126.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Attach,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Attach.cs,ToString,The length of the statement  "	this.AddFieldToString (this.OfferedCapabilities != null' sb' "offered-capabilities"' this.OfferedCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Attach,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Attach.cs,ToString,The length of the statement  "	this.AddFieldToString (this.DesiredCapabilities != null' sb' "desired-capabilities"' this.DesiredCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Begin,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Begin.cs,ToString,The length of the statement  "	this.AddFieldToString (this.OfferedCapabilities != null' sb' "offered-capabilities"' this.OfferedCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Begin,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Begin.cs,ToString,The length of the statement  "	this.AddFieldToString (this.DesiredCapabilities != null' sb' "desired-capabilities"' this.DesiredCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,DescribedList,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\DescribedList.cs,DecodeValue,The length of the statement  "		int bytesRemaining = size - (buffer.Offset - offset) - (formatCode == FormatCode.List8 ? FixedWidth.UByte : FixedWidth.UInt); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Frame,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Frame.cs,IsValid,The length of the statement  "	return this.size >= Frame.HeaderSize && this.size <= maxFrameSize && this.dataOffset >= Frame.DefaultDataOffset && (this.dataOffset * 2) <= this.size; " is 150.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Open,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Open.cs,ToString,The length of the statement  "	this.AddFieldToString (this.OfferedCapabilities != null' sb' "offered-capabilities"' this.OfferedCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Open,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Open.cs,ToString,The length of the statement  "	this.AddFieldToString (this.DesiredCapabilities != null' sb' "desired-capabilities"' this.DesiredCapabilities' ref count); " is 122.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Properties,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Properties.cs,ToString,The length of the statement  "	this.AddFieldToString (this.AbsoluteExpiryTime != null' sb' "absolute-expiry-time"' this.AbsoluteExpiryTime' ref count); " is 120.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,ProtocolHeader,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\ProtocolHeader.cs,Decode,The length of the statement  "	header.version = new AmqpVersion (AmqpBitConverter.ReadUByte (buffer)' AmqpBitConverter.ReadUByte (buffer)' AmqpBitConverter.ReadUByte (buffer)); " is 145.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,ProtocolHeader,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\ProtocolHeader.cs,GetHashCode,The length of the statement  "	int result = ((int)this.protocolId << 24) + (this.version.Major << 16) + (this.version.Minor << 8) + this.version.Revision; " is 123.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Source,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Source.cs,ToString,The length of the statement  "	this.AddFieldToString (this.DynamicNodeProperties != null' sb' "dynamic-node-properties"' this.DynamicNodeProperties' ref count); " is 129.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Framing,Target,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Target.cs,ToString,The length of the statement  "	this.AddFieldToString (this.DynamicNodeProperties != null' sb' "dynamic-node-properties"' this.DynamicNodeProperties' ref count); " is 129.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslMechanisms,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslMechanisms.cs,ToString,The length of the statement  "	this.AddFieldToString (this.SaslServerMechanisms != null' sb' "sasl-server-mechanisms"' this.SaslServerMechanisms' ref count); " is 126.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslPlainHandler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslPlainHandler.cs,OnInit,The length of the statement  "		string message = Encoding.UTF8.GetString (init.InitialResponse.Array' init.InitialResponse.Offset' init.InitialResponse.Count); " is 127.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Serialization,AmqpContractSerializer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Serialization\AmqpContractSerializer.cs,CompileType,The length of the statement  "		if (memberInfo.DeclaringType != type || (memberInfo.MemberType != MemberTypes.Field && memberInfo.MemberType != MemberTypes.Property)) { " is 136.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Serialization,AmqpContractSerializer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Serialization\AmqpContractSerializer.cs,CompileType,The length of the statement  "		Type memberType = memberInfo.MemberType == MemberTypes.Field ? ((FieldInfo)memberInfo).FieldType : ((PropertyInfo)memberInfo).PropertyType; " is 139.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transaction,Controller,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transaction\Controller.cs,BeginDeclare,The length of the statement  "	return this.sendLink.BeginSendMessage (message' this.GetDeliveryTag ()' AmqpConstants.EmptyBinary' timeout' callback' state); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transaction,Controller,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transaction\Controller.cs,BeginDischange,The length of the statement  "	return this.sendLink.BeginSendMessage (message' this.GetDeliveryTag ()' AmqpConstants.EmptyBinary' timeout' callback' state); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,AmqpTransportInitiator,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\AmqpTransportInitiator.cs,OnReadHeaderComplete,The length of the statement  "			throw new AmqpException (AmqpError.NotImplemented' SRClient.ProtocolVersionNotSupported (this.sentHeader' receivedHeader)); " is 123.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,AmqpTransportInitiator,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\AmqpTransportInitiator.cs,OnReadHeaderComplete,The length of the statement  "		TransportBase secureTransport = this.settings.TransportProviders [this.providerIndex].CreateTransport (args.Transport' true); " is 125.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,AmqpTransportInitiator,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\AmqpTransportInitiator.cs,OnReadHeaderComplete,The length of the statement  "		IAsyncResult result = args.Transport.BeginOpen (this.timeoutHelper.RemainingTime ()' this.OnTransportOpenCompete' args); " is 120.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,AmqpTransportInitiator,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\AmqpTransportInitiator.cs,HandleTransportOpened,The length of the statement  "	if (this.providerIndex == this.settings.TransportProviders.Count || this.settings.TransportProviders [this.providerIndex].ProtocolId == ProtocolId.Amqp) { " is 154.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,TcpTransportListener,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\TcpTransportListener.cs,ShouldRetryAccept,The length of the statement  "	return error == SocketError.ConnectionReset || error == SocketError.NoBufferSpaceAvailable || error == SocketError.TimedOut; " is 124.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,TlsTransportInitiator,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\TlsTransportInitiator.cs,HandleInnerTransportConnected,The length of the statement  "			IAsyncResult result = this.callbackArgs.Transport.BeginOpen (this.timeoutHelper.RemainingTime ()' onTransportOpened' this); " is 123.
Long Statement,Microsoft.ServiceBus.Messaging.Amqp.Transport,TlsTransportListener,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Transport\TlsTransportListener.cs,OnAcceptInnerTransport,The length of the statement  "		IAsyncResult result = innerArgs.Transport.BeginOpen (innerArgs.Transport.DefaultOpenTimeout' this.onTransportOpened' innerArgs); " is 128.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,DuplicateHistoryExpiryTimeExceedsMaximumAllowed,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("DuplicateHistoryExpiryTimeExceedsMaximumAllowed"' Culture)' param0); " is 127.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,SQLSyntaxErrorDetailed,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("SQLSyntaxErrorDetailed"' Culture)' param0' param1' param2' param3); " is 126.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,ConfigInvalidBindingConfigurationName,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("ConfigInvalidBindingConfigurationName"' Culture)' param0' param1); " is 125.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,CannotUseSameMessageInstanceInMultipleOperations,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("CannotUseSameMessageInstanceInMultipleOperations"' Culture)' param0); " is 128.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,ExceededMessagePropertySizeLimit,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("ExceededMessagePropertySizeLimit"' Culture)' param0' param1); " is 120.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,OverflowWhenAddingException,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("OverflowWhenAddingException"' Culture)' param0' param1' param2); " is 123.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,NoCorrelationForChannelMessageId,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("NoCorrelationForChannelMessageId"' Culture)' param0' param1); " is 120.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,NoCorrelationResponseForChannelMessageId,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("NoCorrelationResponseForChannelMessageId"' Culture)' param0' param1); " is 128.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,SubscriptionProvisioningError,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("SubscriptionProvisioningError"' Culture)' param0' param1' param2); " is 125.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,SqlFilterActionCannotRemoveSystemProperty,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("SqlFilterActionCannotRemoveSystemProperty"' Culture)' param0); " is 121.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,FilterFunctionIncorrectNumberOfArguments,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("FilterFunctionIncorrectNumberOfArguments"' Culture)' param0' param1' param2); " is 136.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,ExpectedTypeInvalidCastException,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("ExpectedTypeInvalidCastException"' Culture)' param0' param1' param2); " is 128.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,UnsupportedServiceBusDomainPrefix,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("UnsupportedServiceBusDomainPrefix"' Culture)' param0' param1); " is 121.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,AppSettingsConfigSettingInvalidValue,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("AppSettingsConfigSettingInvalidValue"' Culture)' param0' param1); " is 124.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,AppSettingsCreateFactoryWithInvalidConnectionString,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("AppSettingsCreateFactoryWithInvalidConnectionString"' Culture)' param0); " is 131.
Long Statement,Microsoft.ServiceBus,SRClient,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\SRClient.Designer.cs,AppSettingsCreateManagerWithInvalidConnectionString,The length of the statement  "	return string.Format (Culture' ResourceManager.GetString ("AppSettingsCreateManagerWithInvalidConnectionString"' Culture)' param0); " is 131.
Complex Conditional,Microsoft.ServiceBus.Common,Fx,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\Common\Fx.cs,IsFatal,The conditional expression  "exception is FatalException || (exception is OutOfMemoryException && !(exception is InsufficientMemoryException)) || exception is ThreadAbortException || exception is AccessViolationException || exception is AssertionFailedException || exception is SEHException"  is complex.
Complex Conditional,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnFrameBuffer,The conditional expression  "frame.Command.DescriptorCode == OpenCommand.Code || frame.Command.DescriptorCode == CloseCommand.Code || frame.Command.DescriptorCode == Begin.Code || frame.Command.DescriptorCode == End.Code"  is complex.
Complex Conditional,Microsoft.ServiceBus.Messaging.Amqp,AmqpLink,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLink.cs,OnReceiveAttach,The conditional expression  "(this.IsReceiver && attach.Source == null) || (!this.IsReceiver && attach.Target == null)"  is complex.
Empty Catch Block,Microsoft.ServiceBus.Common,Fx,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\Common\Fx.cs,TryGetDebugSwitch,The method has an empty catch block.
Magic Number,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,Complete,The following statement contains a magic number: if (this.Callback != null) {  	try {  		if (this.VirtualCallback != null) {  			this.VirtualCallback (this.Callback' this);  		}  		else {  			this.Callback (this);  		}  	}  	#pragma  	#pragma  	catch (Exception e) {  		if (Fx.IsFatal (e)) {  			throw;  		}  		throw Fx.Exception.AsError (new CallbackException (SRCore.AsyncCallbackThrewException' e));  	}  	#pragma  }  
Magic Number,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,Complete,The following statement contains a magic number: if (this.Callback != null) {  	try {  		if (this.VirtualCallback != null) {  			this.VirtualCallback (this.Callback' this);  		}  		else {  			this.Callback (this);  		}  	}  	#pragma  	#pragma  	catch (Exception e) {  		if (Fx.IsFatal (e)) {  			throw;  		}  		throw Fx.Exception.AsError (new CallbackException (SRCore.AsyncCallbackThrewException' e));  	}  	#pragma  }  
Magic Number,Microsoft.ServiceBus.Common,AsyncResult,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\AsyncResult.cs,Complete,The following statement contains a magic number: try {  	if (this.VirtualCallback != null) {  		this.VirtualCallback (this.Callback' this);  	}  	else {  		this.Callback (this);  	}  }  #pragma  #pragma  catch (Exception e) {  	if (Fx.IsFatal (e)) {  		throw;  	}  	throw Fx.Exception.AsError (new CallbackException (SRCore.AsyncCallbackThrewException' e));  }  
Magic Number,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,ScheduleCallbackHelper,The following statement contains a magic number: if (wrapped) {  	// Wrapped around the circular buffer.  Create a new' bigger IOThreadScheduler.  	IOThreadScheduler next = new IOThreadScheduler (Math.Min (this.slots.Length * 2' MaximumCapacity)' this.slotsLowPri.Length);  	Interlocked.CompareExchange<IOThreadScheduler> (ref IOThreadScheduler.current' next' this);  }  
Magic Number,Microsoft.ServiceBus.Common,IOThreadScheduler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadScheduler.cs,ScheduleCallbackLowPriHelper,The following statement contains a magic number: if (wrapped) {  	IOThreadScheduler next = new IOThreadScheduler (this.slots.Length' Math.Min (this.slotsLowPri.Length * 2' MaximumCapacity));  	Interlocked.CompareExchange<IOThreadScheduler> (ref IOThreadScheduler.current' next' this);  }  
Magic Number,Microsoft.ServiceBus.Common,IOThreadTimer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\IOThreadTimer.cs,GetSystemTimeResolution,The following statement contains a magic number: return 15 * TimeSpan.TicksPerMillisecond;  
Magic Number,Microsoft.ServiceBus.Common,SynchronizedPool,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\SynchronizedPool.cs,SynchronizedPool,The following statement contains a magic number: this.pending = new PendingEntry[4];  
Magic Number,Microsoft.ServiceBus.Common,SynchronizedPool,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Common\SynchronizedPool.cs,RecordTakeFromGlobalPool,The following statement contains a magic number: if (localPending.Length >= maxPendingEntries) {  	this.pending = new PendingEntry[localPending.Length];  }  else {  	PendingEntry[] newPending = new PendingEntry[localPending.Length * 2];  	Array.Copy (localPending' newPending' localPending.Length);  	this.pending = newPending;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.isInitiator && this.Settings.IdleTimeOut.Value != uint.MaxValue) {  	this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  	if (this.heartBeatInterval < 500) {  		this.heartBeatInterval = 500;  	}  	this.heartBeatTimer = new IOThreadTimer (OnHeartBeatTimer' this' false);  	this.heartBeatTimer.Set (this.heartBeatInterval);  	Utils.Trace (TraceLevel.Info' "{0}: enabled heart beat timer ({1}ms)"' this' this.heartBeatInterval);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.isInitiator && this.Settings.IdleTimeOut.Value != uint.MaxValue) {  	this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  	if (this.heartBeatInterval < 500) {  		this.heartBeatInterval = 500;  	}  	this.heartBeatTimer = new IOThreadTimer (OnHeartBeatTimer' this' false);  	this.heartBeatTimer.Set (this.heartBeatInterval);  	Utils.Trace (TraceLevel.Info' "{0}: enabled heart beat timer ({1}ms)"' this' this.heartBeatInterval);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.isInitiator && this.Settings.IdleTimeOut.Value != uint.MaxValue) {  	this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  	if (this.heartBeatInterval < 500) {  		this.heartBeatInterval = 500;  	}  	this.heartBeatTimer = new IOThreadTimer (OnHeartBeatTimer' this' false);  	this.heartBeatTimer.Set (this.heartBeatInterval);  	Utils.Trace (TraceLevel.Info' "{0}: enabled heart beat timer ({1}ms)"' this' this.heartBeatInterval);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.isInitiator && this.Settings.IdleTimeOut.Value != uint.MaxValue) {  	this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  	if (this.heartBeatInterval < 500) {  		this.heartBeatInterval = 500;  	}  	this.heartBeatTimer = new IOThreadTimer (OnHeartBeatTimer' this' false);  	this.heartBeatTimer.Set (this.heartBeatInterval);  	Utils.Trace (TraceLevel.Info' "{0}: enabled heart beat timer ({1}ms)"' this' this.heartBeatInterval);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: this.heartBeatInterval = (int)(this.Settings.IdleTimeOut.Value * 3 / 8);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.heartBeatInterval < 500) {  	this.heartBeatInterval = 500;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: if (this.heartBeatInterval < 500) {  	this.heartBeatInterval = 500;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpConnection,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpConnection.cs,OnReceiveOpen,The following statement contains a magic number: this.heartBeatInterval = 500;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,AmqpLinkSettings,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\AmqpLinkSettings.cs,GetHashCode,The following statement contains a magic number: return this.LinkName.GetHashCode () * 397 + this.Role.GetHashCode ();  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,ByteArrayComparer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ByteArrayComparer.cs,GetHashCode,The following statement contains a magic number: unchecked {  	for (int i = 0; i < obj.Count; ++i) {  		num = (num << 4 - num) ^ obj.Array [i + obj.Offset];  	}  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,ByteArrayComparer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ByteArrayComparer.cs,GetHashCode,The following statement contains a magic number: for (int i = 0; i < obj.Count; ++i) {  	num = (num << 4 - num) ^ obj.Array [i + obj.Offset];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,ByteArrayComparer,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\ByteArrayComparer.cs,GetHashCode,The following statement contains a magic number: num = (num << 4 - num) ^ obj.Array [i + obj.Offset];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp,Utils,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Utils.cs,TraceRaw,The following statement contains a magic number: if (Utils.TraceListener != null && Utils.TraceListener.ShouldTrace (TraceLevel.Raw)) {  	int maxToTrace = Math.Min (128' buffer.Length);  	ArraySegment<byte> array = new ArraySegment<byte> (buffer.Buffer' buffer.Offset' maxToTrace);  	TraceCore (TraceLevel.Raw' send ? "SEND  {0}" : "RECV  {0}"' array);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadLong,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: fixed (byte* p = &buffer [offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadULong,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadFloat,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadDouble,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: fixed (byte* p = &buffer.Buffer [buffer.Offset]) {  	byte* d = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [4] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [4] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [5] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [5] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [6] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [6] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [7] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: d [7] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: *((ulong*)&d [8]) = *((ulong*)&p [8]);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,ReadUuid,The following statement contains a magic number: *((ulong*)&d [8]) = *((ulong*)&p [8]);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer [offset]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer [offset]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer [offset]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: fixed (byte* d = &buffer [offset]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUInt,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteLong,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteULong,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteFloat,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [7];  	d [1] = p [6];  	d [2] = p [5];  	d [3] = p [4];  	d [4] = p [3];  	d [5] = p [2];  	d [6] = p [1];  	d [7] = p [0];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [0] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [1] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [2] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [3] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteDouble,The following statement contains a magic number: d [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: fixed (byte* d = &buffer.Buffer [buffer.End]) {  	byte* p = (byte*)&data;  	d [0] = p [3];  	d [1] = p [2];  	d [2] = p [1];  	d [3] = p [0];  	d [4] = p [5];  	d [5] = p [4];  	d [6] = p [7];  	d [7] = p [6];  	*((ulong*)&d [8]) = *((ulong*)&p [8]);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [1] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [2] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [3] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [4] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [4] = p [5];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [5] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [5] = p [4];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [6] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [6] = p [7];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [7] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: d [7] = p [6];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: *((ulong*)&d [8]) = *((ulong*)&p [8]);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpBitConverter,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpBitConverter.cs,WriteUuid,The following statement contains a magic number: *((ulong*)&d [8]) = *((ulong*)&p [8]);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,ReadFormatCode,The following statement contains a magic number: if ((formatCode & 0x0F) == 0x0F) {  	formatCode = (formatCode << 8) + AmqpBitConverter.ReadUByte (buffer);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,AmqpEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\AmqpEncoding.cs,ReadFormatCode,The following statement contains a magic number: formatCode = (formatCode << 8) + AmqpBitConverter.ReadUByte (buffer);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [0] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [0] |= (byte)(exponent >> 9);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [2] = 0;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [3] = 0;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [4] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [5] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [6] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [7] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [8] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [8] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [9] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [9] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [10] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [11] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [12] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [12] = p [3];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [13] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [13] = p [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [14] = p [1];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,EncodeValue,The following statement contains a magic number: bytes [15] = p [0];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 8-bit-exponent (0)23-bit-significant  	exponent = ((bytes [0] & 0x7F) << 1) | ((bytes [1] & 0x80) >> 7);  	bytes [0] = 0;  	bytes [1] &= 0x7F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 8-bit-exponent (100)21-bit-significant  	exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  	bytes [1] |= 0x80;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 8-bit-exponent (0)23-bit-significant  	exponent = ((bytes [0] & 0x7F) << 1) | ((bytes [1] & 0x80) >> 7);  	bytes [0] = 0;  	bytes [1] &= 0x7F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 8-bit-exponent (100)21-bit-significant  	exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  	bytes [1] |= 0x80;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 8-bit-exponent (0)23-bit-significant  	exponent = ((bytes [0] & 0x7F) << 1) | ((bytes [1] & 0x80) >> 7);  	bytes [0] = 0;  	bytes [1] &= 0x7F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 8-bit-exponent (100)21-bit-significant  	exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  	bytes [1] |= 0x80;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: exponent = ((bytes [0] & 0x7F) << 1) | ((bytes [1] & 0x80) >> 7);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 8-bit-exponent (100)21-bit-significant  	exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  	bytes [1] |= 0x80;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 8-bit-exponent (100)21-bit-significant  	exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  	bytes [1] |= 0x80;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal32,The following statement contains a magic number: exponent = ((bytes [0] & 0x1F) << 3) | ((bytes [1] & 0xE0) >> 5);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 10-bit-exponent (0)53-bit-significant  	exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 10-bit-exponent (0)53-bit-significant  	exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 10-bit-exponent (0)53-bit-significant  	exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 10-bit-exponent (0)53-bit-significant  	exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  	bytes [0] = 0;  	bytes [1] &= 0x1F;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: exponent = ((bytes [0] & 0x7F) << 3) | ((bytes [1] & 0xE0) >> 5);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 10-bit-exponent (100)51-bit-significant  	exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  	bytes [0] = 0;  	bytes [1] &= 0x7;  	bytes [1] |= 0x20;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal64,The following statement contains a magic number: exponent = ((bytes [0] & 0x1F) << 8) | ((bytes [1] & 0xF8) >> 3);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal128,The following statement contains a magic number: if ((bytes [0] & 0x60) != 0x60) {  	// s 14-bit-exponent (0)113-bit-significant  	exponent = ((bytes [0] & 0x7F) << 7) | ((bytes [1] & 0xFE) >> 1);  	bytes [0] = 0;  	bytes [1] &= 0x1;  }  else if ((bytes [0] & 0x78) != 0) {  	// handle NaN and Infinity  }  else {  	// s 11 14-bit-exponent (100)111-bit-significant  	// it is out of the valid range already. Should not be used  	return 0;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,DecodeDecimal128,The following statement contains a magic number: exponent = ((bytes [0] & 0x7F) << 7) | ((bytes [1] & 0xFE) >> 1);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,CreateDecimal,The following statement contains a magic number: if (exponent <= 0) {  	return new decimal (low' middle' high' sign < 0' (byte)-exponent);  }  else {  	decimal value = new decimal (low' middle' high' sign < 0' 0);  	for (int i = 0; i < exponent; ++i) {  		value *= 10;  	}  	return value;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,CreateDecimal,The following statement contains a magic number: for (int i = 0; i < exponent; ++i) {  	value *= 10;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,DecimalEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\DecimalEncoding.cs,CreateDecimal,The following statement contains a magic number: value *= 10;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,ListEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\ListEncoding.cs,GetEncodeSize,The following statement contains a magic number: if (value == null) {  	return FixedWidth.NullEncoded;  }  else if (value.Count == 0) {  	return FixedWidth.FormatCode;  }  else {  	int valueSize = ListEncoding.GetValueSize (value);  	int width = AmqpEncoding.GetEncodeWidthByCountAndSize (value.Count' valueSize);  	return FixedWidth.FormatCode + width * 2 + valueSize;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,ListEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\ListEncoding.cs,GetEncodeSize,The following statement contains a magic number: if (value.Count == 0) {  	return FixedWidth.FormatCode;  }  else {  	int valueSize = ListEncoding.GetValueSize (value);  	int width = AmqpEncoding.GetEncodeWidthByCountAndSize (value.Count' valueSize);  	return FixedWidth.FormatCode + width * 2 + valueSize;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,ListEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\ListEncoding.cs,GetEncodeSize,The following statement contains a magic number: return FixedWidth.FormatCode + width * 2 + valueSize;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,GetEncodeSize,The following statement contains a magic number: return value == null ? FixedWidth.NullEncoded : FixedWidth.FormatCode + (MapEncoding.GetEncodeWidth (value) * 2) + value.ValueSize;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,ReadMapValue,The following statement contains a magic number: for (; count > 0; count -= 2) {  	object key = AmqpEncoding.DecodeObject (buffer);  	object item = AmqpEncoding.DecodeObject (buffer);  	map [new MapKey (key)] = item;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,ReadMapValue,The following statement contains a magic number: count -= 2
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,GetEncodeWidth,The following statement contains a magic number: return AmqpEncoding.GetEncodeWidthByCountAndSize (value.Count * 2' value.ValueSize);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,Encode,The following statement contains a magic number: if (width == FixedWidth.UByte) {  	AmqpBitConverter.WriteUByte (buffer' (byte)size);  	AmqpBitConverter.WriteUByte (buffer' (byte)(value.Count * 2));  }  else {  	AmqpBitConverter.WriteUInt (buffer' (uint)size);  	AmqpBitConverter.WriteUInt (buffer' (uint)(value.Count * 2));  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,Encode,The following statement contains a magic number: if (width == FixedWidth.UByte) {  	AmqpBitConverter.WriteUByte (buffer' (byte)size);  	AmqpBitConverter.WriteUByte (buffer' (byte)(value.Count * 2));  }  else {  	AmqpBitConverter.WriteUInt (buffer' (uint)size);  	AmqpBitConverter.WriteUInt (buffer' (uint)(value.Count * 2));  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,Encode,The following statement contains a magic number: AmqpBitConverter.WriteUByte (buffer' (byte)(value.Count * 2));  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Encoding,MapEncoding,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Encoding\MapEncoding.cs,Encode,The following statement contains a magic number: AmqpBitConverter.WriteUInt (buffer' (uint)(value.Count * 2));  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,AmqpDescribed,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\AmqpDescribed.cs,AddFieldToString,The following statement contains a magic number: if (condition) {  	if (count > 0) {  		sb.Append (''');  	}  	if (value is ArraySegment<byte>) {  		sb.Append (fieldName);  		sb.Append (':');  		ArraySegment<byte> binValue = (ArraySegment<byte>)value;  		int size = Math.Min (binValue.Count' 64);  		for (int i = 0; i < size; ++i) {  			sb.AppendFormat ("{0:X2}"' binValue.Array [binValue.Offset + i]);  		}  	}  	else {  		sb.AppendFormat (CultureInfo.InvariantCulture' "{0}:{1}"' fieldName' value);  	}  	++count;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,AmqpDescribed,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\AmqpDescribed.cs,AddFieldToString,The following statement contains a magic number: if (value is ArraySegment<byte>) {  	sb.Append (fieldName);  	sb.Append (':');  	ArraySegment<byte> binValue = (ArraySegment<byte>)value;  	int size = Math.Min (binValue.Count' 64);  	for (int i = 0; i < size; ++i) {  		sb.AppendFormat ("{0:X2}"' binValue.Array [binValue.Offset + i]);  	}  }  else {  	sb.AppendFormat (CultureInfo.InvariantCulture' "{0}:{1}"' fieldName' value);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: if (valueLength <= byte.MaxValue) {  	buffer [3] = (byte)FormatCode.Binary8;  	buffer [4] = (byte)valueLength;  	count = 5;  }  else {  	buffer [3] = (byte)FormatCode.Binary32;  	AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  	count = 8;  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: buffer [3] = (byte)FormatCode.Binary8;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: buffer [4] = (byte)valueLength;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: count = 5;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: buffer [3] = (byte)FormatCode.Binary32;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: AmqpBitConverter.WriteUInt (buffer' 4' (uint)valueLength);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Data,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Data.cs,GetEncodedPrefix,The following statement contains a magic number: count = 8;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Frame,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Frame.cs,Decode,The following statement contains a magic number: buffer.Complete (frame.dataOffset * 4 - Frame.HeaderSize);  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Framing,Frame,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Framing\Frame.cs,IsValid,The following statement contains a magic number: return this.size >= Frame.HeaderSize && this.size <= maxFrameSize && this.dataOffset >= Frame.DefaultDataOffset && (this.dataOffset * 2) <= this.size;  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslPlainHandler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslPlainHandler.cs,OnInit,The following statement contains a magic number: if (init.InitialResponse.Count > 0) {  	string message = Encoding.UTF8.GetString (init.InitialResponse.Array' init.InitialResponse.Offset' init.InitialResponse.Count);  	string[] items = message.Split ('\0');  	if (items.Length != 3) {  		throw new UnauthorizedAccessException (SaslPlainHandler.InvalidCredential);  	}  	this.AuthorizationIdentity = items [0];  	this.AuthenticationIdentity = items [1];  	password = items [2];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslPlainHandler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslPlainHandler.cs,OnInit,The following statement contains a magic number: if (init.InitialResponse.Count > 0) {  	string message = Encoding.UTF8.GetString (init.InitialResponse.Array' init.InitialResponse.Offset' init.InitialResponse.Count);  	string[] items = message.Split ('\0');  	if (items.Length != 3) {  		throw new UnauthorizedAccessException (SaslPlainHandler.InvalidCredential);  	}  	this.AuthorizationIdentity = items [0];  	this.AuthenticationIdentity = items [1];  	password = items [2];  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslPlainHandler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslPlainHandler.cs,OnInit,The following statement contains a magic number: if (items.Length != 3) {  	throw new UnauthorizedAccessException (SaslPlainHandler.InvalidCredential);  }  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Sasl,SaslPlainHandler,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Sasl\SaslPlainHandler.cs,OnInit,The following statement contains a magic number: password = items [2];  
Magic Number,Microsoft.ServiceBus.Messaging.Amqp.Serialization,SerializableType,C:\repos\Reactive-Extensions_IL2JS\Tests\AmqpClient\..\Microsoft.ServiceBus.Messaging\Messaging\Amqp\Serialization\SerializableType.cs,WriteObject,The following statement contains a magic number: using (ByteBuffer buffer = ByteBuffer.Wrap (512)) {  	this.OnWriteObject (buffer' graph);  	stream.Write (buffer.Buffer' buffer.Offset' buffer.Length);  }  
