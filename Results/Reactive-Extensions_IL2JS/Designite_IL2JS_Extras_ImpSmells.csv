Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.LiveLabs.Extras,VectorDomain<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Domain.cs,Lub,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,Equals,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.LiveLabs.Extras,Location,C:\repos\Reactive-Extensions_IL2JS\Extras\Location.cs,Location,The method has 7 parameters. Parameters: file' startPos' startLine' startColumn' endPos' endLine' endColumn
Long Parameter List,Microsoft.LiveLabs.Extras,Writer,C:\repos\Reactive-Extensions_IL2JS\Extras\Writer.cs,List,The method has 5 parameters. Parameters: ts' open' elem' delim' close
Complex Conditional,Microsoft.LiveLabs.Extras,CommandLine<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\CommandLine.cs,ExpandVars,The conditional expression  "j < str.Length &&                             (str[j] >= 'a' && str[j] <= 'z' || str[j] >= 'A' && str[j] <= 'Z' ||                              str[j] >= '0' && str[j] <= '9')"  is complex.
Virtual Method Call from Constructor,Microsoft.LiveLabs.Extras,Seq<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Seq.cs,Seq,The constructor "Seq" calls a virtual method "CopyTo".
Magic Number,Microsoft.LiveLabs.Extras,Seq<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Seq.cs,Insert,The following statement contains a magic number: if (elems == null)              {                  elems = new T[1];                  elems[c++] = item;              }              else if (c == elems.Length)              {                  var arr2 = new T[c*2];                  for (var i = 0; i < index; i++)                      arr2[i] = elems[i];                  arr2[index] = item;                  for (var i = index; i < c; i++)                      arr2[i + 1] = elems[i];                  elems = arr2;                  c++;              }              else              {                  for (var i = c - 1; i >= index; i--)                      elems[i + 1] = elems[i];                  elems[index] = item;                  c++;              }
Magic Number,Microsoft.LiveLabs.Extras,Seq<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Seq.cs,RemoveRange,The following statement contains a magic number: if (c == 0)                  elems = null;              else if (c <= elems.Length / 2)              {                  var arr2 = new T[c];                  for (var i = 0; i < index; i++)                      arr2[i] = elems[i];                  for (var i = index; i < c; i++)                      arr2[i] = elems[i + length];                  elems = arr2;              }              else              {                  for (var i = index; i < c; i++)                      elems[i] = elems[i + length];                  for (var i = c; i < c + length; i++)                      elems[i] = default(T);              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,IntSet,The following statement contains a magic number: v = new uint[(n + 31) / 32];
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,IntSet,The following statement contains a magic number: v = new uint[(n + 31) / 32];
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,SetAll,The following statement contains a magic number: if (b)              {                  if (v.Length > 0)                  {                      for (var i = 0; i < v.Length - 1; i++)                          v[i] = 0xffffffffu;                      var rem = n % 32;                      if (rem == 0)                          v[v.Length - 1] = 0xffffffffu;                      else                          v[v.Length - 1] = (1u << rem) - 1u;                  }              }              else              {                  for (var i = 0; i < v.Length; i++)                      v[i] = 0u;              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,Rot7,The following statement contains a magic number: return (int)(((uint)v << 7) | ((uint)v >> 25));
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,Rot7,The following statement contains a magic number: return (int)(((uint)v << 7) | ((uint)v >> 25));
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,GetEnumerator,The following statement contains a magic number: if (k != 0)              {                  for (var i = 0; i < v.Length; i++)                  {                      var x = v[i];                      var j = 0;                      while (x != 0u)                      {                          if ((x % 2) != 0u)                              yield return i * 32 + j;                          j++;                          x >>= 1;                      }                  }              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,GetEnumerator,The following statement contains a magic number: if (k != 0)              {                  for (var i = 0; i < v.Length; i++)                  {                      var x = v[i];                      var j = 0;                      while (x != 0u)                      {                          if ((x % 2) != 0u)                              yield return i * 32 + j;                          j++;                          x >>= 1;                      }                  }              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,Append,The following statement contains a magic number: for (var i = 0; i < v.Length; i++)              {                  var x = v[i];                  var j = 0;                  while (x != 0u)                  {                      if ((x % 2) != 0u)                      {                          if (first)                              first = false;                          else                              sb.Append(''');                          sb.Append(i*32 + j);                      }                      j++;                      x >>= 1;                  }              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet.cs,Append,The following statement contains a magic number: for (var i = 0; i < v.Length; i++)              {                  var x = v[i];                  var j = 0;                  while (x != 0u)                  {                      if ((x % 2) != 0u)                      {                          if (first)                              first = false;                          else                              sb.Append(''');                          sb.Append(i*32 + j);                      }                      j++;                      x >>= 1;                  }              }
Magic Number,Microsoft.LiveLabs.Extras,IntSet64,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet64.cs,SetBit,The following statement contains a magic number: if (index < 0 || index >= 64)                  throw new IndexOutOfRangeException();
Magic Number,Microsoft.LiveLabs.Extras,IntSet64,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet64.cs,GetBit,The following statement contains a magic number: if (index < 0 || index >= 64)                  throw new IndexOutOfRangeException();
Magic Number,Microsoft.LiveLabs.Extras,IntSet64,C:\repos\Reactive-Extensions_IL2JS\Extras\IntSet64.cs,GetEnumerator,The following statement contains a magic number: for (var i = 0; i < 64; i++)              {                  if ((v & 0x1) != 0)                      yield return i;                  v >>= 1;              }
Magic Number,Microsoft.LiveLabs.Extras,Map<K;V>,C:\repos\Reactive-Extensions_IL2JS\Extras\Map.cs,Full,The following statement contains a magic number: return c > 0 && n / c < 2;
Magic Number,Microsoft.LiveLabs.Extras,Map<K;V>,C:\repos\Reactive-Extensions_IL2JS\Extras\Map.cs,Add,The following statement contains a magic number: if (entries == null)              {                  entries = new Entry[1];                  entries[0] = new Entry(key' value);              }              else if (c + 1 < threshold)              {                  for (var i = 0; i < c; i++)                  {                      if (entries[i].Key.Equals(key))                          throw new InvalidOperationException("duplicate key");                  }                  if (c < entries.Length)                      entries[c] = new Entry(key' value);                  else                  {                      var newEntries = new Entry[entries.Length * 2];                      for (var i = 0; i < c; i++)                          newEntries[i] = entries[i];                      newEntries[c] = new Entry(key' value);                      entries = newEntries;                  }              }              else if (c < threshold)              {                  var newEntries = new Entry[NextNonFull(c + 1)];                  for (var i = 0; i < c; i++)                      Insert(newEntries' entries[i].Key' entries[i].Value);                  Insert(newEntries' key' value);                  entries = newEntries;              }              else if (Full(entries.Length' c + 1))              {                  var newEntries = new Entry[NextNonFull(c + 1)];                  foreach (var e in entries)                  {                      if (e != null)                          Insert(newEntries' e.Key' e.Value);                  }                  Insert(newEntries' key' value);                  entries = newEntries;              }              else                  Insert(entries' key' value);
Magic Number,Microsoft.LiveLabs.Extras,Set<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Set.cs,Full,The following statement contains a magic number: return c > 0 && n / c < 2;
Magic Number,Microsoft.LiveLabs.Extras,Set<T>,C:\repos\Reactive-Extensions_IL2JS\Extras\Set.cs,Add,The following statement contains a magic number: if (entries == null)              {                  entries = new Entry[1];                  entries[0] = new Entry(value);              }              else if (c + 1 < threshold)              {                  for (var i = 0; i < c; i++)                  {                      if (entries[i].Value.Equals(value))                          return false;                  }                  if (c < entries.Length)                      entries[c] = new Entry(value);                  else                  {                      var newEntries = new Entry[entries.Length * 2];                      for (var i = 0; i < c; i++)                          newEntries[i] = entries[i];                      newEntries[c] = new Entry(value);                      entries = newEntries;                  }              }              else if (c < threshold)              {                  var newEntries = new Entry[NextNonFull(c + 1)];                  for (var i = 0; i < c; i++)                      Insert(newEntries' entries[i].Value);                  if (!Insert(newEntries' value))                      return false;                  entries = newEntries;              }              else if (Full(entries.Length' c + 1))              {                  var newEntries = new Entry[NextNonFull(c + 1)];                  foreach (var e in entries)                  {                      if (e != null)                          Insert(newEntries' e.Value);                  }                  if (!Insert(newEntries' value))                      return false;                  entries = newEntries;              }              else              {                  if (!Insert(entries' value))                      return false;              }
Magic Number,Microsoft.LiveLabs.Extras,Writer,C:\repos\Reactive-Extensions_IL2JS\Extras\Writer.cs,Check,The following statement contains a magic number: if (startingLine)              {                  if (PrettyPrint)                  {                      for (var i = 0; i < indent * 2; i++)                          tw.Write(' ');                  }                  startingLine = false;              }
