Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,ClientConcierge,Cyclomatic complexity of the method is 10
Complex Method,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,Cyclomatic complexity of the method is 12
Complex Method,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,Cyclomatic complexity of the method is 17
Complex Method,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,Build,Cyclomatic complexity of the method is 13
Long Statement,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,The length of the statement  "		Response BR = new Response (Response.Code.N400' new TextResource ("Sabertooth requires that clients have Host fields in their headers.")); " is 138.
Long Statement,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,The length of the statement  "		Response BR = new Response (Response.Code.N400' new TextResource ("Sabertooth only supports GET' POST' and HEAD at the moment.")); " is 130.
Long Statement,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,The length of the statement  "	if ((CR.LastModified != new DateTime () && CR.LastModified == CD.LastModified) || (CR.LastModified == new DateTime () && CD.ETag != String.Empty && CR.ETag == CD.ETag)) { " is 170.
Long Statement,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,The length of the statement  "		Response ISE = new Response (Response.Code.N500' new TextResource ("If you are reading this text' the Sabertooth mandate responsible for this request has encountered an error: \n" + e)); " is 186.
Long Statement,Sabertooth,ClientTranslator,C:\repos\Kallikrates_Sabertooth\ClientTranslator.cs,ProcessRequest,The length of the statement  "		ClientRequest clientRequest = new ClientRequest (new BinaryReader (Communications)' ((IPEndPoint)Client.Client.RemoteEndPoint).Address); " is 136.
Long Statement,Sabertooth.HTTP,Response,C:\repos\Kallikrates_Sabertooth\HTTP.cs,GetNoContentHeader,The length of the statement  "	returnString += (connectionStatus == Instruction.Connection.KeepAlive ? Instruction.ConnectionKeepAlive : Instruction.ConnectionClose); " is 135.
Long Statement,Sabertooth.HTTP,Response,C:\repos\Kallikrates_Sabertooth\HTTP.cs,GetFullHeader,The length of the statement  "			return nch + Instruction.ContentType (httpBody.Format) + Instruction.ContentLength (httpBody.GetSize ()) + HTTP.Newline; " is 120.
Long Statement,Sabertooth.Mandate,MandateManager,C:\repos\Kallikrates_Sabertooth\Mandate.cs,RebuildMandates,The length of the statement  "	foreach (string path in Directory.GetFiles (Path.Combine (Environment.CurrentDirectory' "Sites")' "*.sbr"' SearchOption.TopDirectoryOnly)) { " is 140.
Long Statement,Sabertooth.Mandate,MandateManager,C:\repos\Kallikrates_Sabertooth\Mandate.cs,RebuildMandates,The length of the statement  "			Console.WriteLine ("Mandate \"{0}\" is not valid' and because it was invalid on launch' it has no fallback iterations in memory."' M.Filename); " is 143.
Long Statement,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,GetSite,The length of the statement  "				throw new Exception ("A request was made to a non-existent root site on this Mandate. This should never happen under any circumstance whatsoever' this message should only ever have been viewed in the source code."); " is 215.
Long Statement,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,OnBuildFailure,The length of the statement  "	Console.WriteLine (String.Format ("A Build has failed' below is the build log and the exception:\n\nBuild Log: {0}\n\nException: {1}"' String.Join ("\n"' buildLog)' e)); " is 169.
Long Statement,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,OnBuildFailure,The length of the statement  "	File.WriteAllText (LocalSiteReference (this.Name + ".buildfailure.log")' String.Format ("A Build has failed' below is the build log and the exception:\n\nBuild Log: {0}\n\nException: {1}"' String.Join ("\n"' buildLog)' e)); " is 223.
Complex Conditional,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,GenerateResponse,The conditional expression  "(CR.LastModified != new DateTime () && CR.LastModified == CD.LastModified) || (CR.LastModified == new DateTime () && CD.ETag != String.Empty && CR.ETag == CD.ETag)"  is complex.
Magic Number,Sabertooth,Server,C:\repos\Kallikrates_Sabertooth\Server.cs,Server,The following statement contains a magic number: ClientListener = new TcpListener (IPAddress.Any' 80);  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: try {  	buildRefs = new List<string> ();  	csFiles = new List<FileInfo> ();  	StreamReader sbr = sbrFile.OpenText ();  	SbrLineState ls = SbrLineState.NUL;  	foreach (string line in sbr.ReadToEnd ().Split (new char[] {  		'\n'  	}).Where (l => l.Length > 0)) {  		if (line.Length >= 5) {  			switch (line.Substring (0' 5)) {  			case "[REF]":  				ls = SbrLineState.REF;  				continue;  			case "[SRC]":  				ls = SbrLineState.SRC;  				continue;  			}  		}  		switch (ls) {  		case SbrLineState.NUL:  			break;  		case SbrLineState.REF:  			this.buildRefs.Add (line);  			break;  		case SbrLineState.SRC:  			if (File.Exists (LocalSiteReference (line))) {  				this.csFiles.Add (new FileInfo (LocalSiteReference (line)));  			}  			else {  				Console.WriteLine ("ERROR: File \"{0}\" does not exist as specified in mandate \"{1}\""' line' this.Filename);  			}  			break;  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: try {  	buildRefs = new List<string> ();  	csFiles = new List<FileInfo> ();  	StreamReader sbr = sbrFile.OpenText ();  	SbrLineState ls = SbrLineState.NUL;  	foreach (string line in sbr.ReadToEnd ().Split (new char[] {  		'\n'  	}).Where (l => l.Length > 0)) {  		if (line.Length >= 5) {  			switch (line.Substring (0' 5)) {  			case "[REF]":  				ls = SbrLineState.REF;  				continue;  			case "[SRC]":  				ls = SbrLineState.SRC;  				continue;  			}  		}  		switch (ls) {  		case SbrLineState.NUL:  			break;  		case SbrLineState.REF:  			this.buildRefs.Add (line);  			break;  		case SbrLineState.SRC:  			if (File.Exists (LocalSiteReference (line))) {  				this.csFiles.Add (new FileInfo (LocalSiteReference (line)));  			}  			else {  				Console.WriteLine ("ERROR: File \"{0}\" does not exist as specified in mandate \"{1}\""' line' this.Filename);  			}  			break;  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: foreach (string line in sbr.ReadToEnd ().Split (new char[] {  	'\n'  }).Where (l => l.Length > 0)) {  	if (line.Length >= 5) {  		switch (line.Substring (0' 5)) {  		case "[REF]":  			ls = SbrLineState.REF;  			continue;  		case "[SRC]":  			ls = SbrLineState.SRC;  			continue;  		}  	}  	switch (ls) {  	case SbrLineState.NUL:  		break;  	case SbrLineState.REF:  		this.buildRefs.Add (line);  		break;  	case SbrLineState.SRC:  		if (File.Exists (LocalSiteReference (line))) {  			this.csFiles.Add (new FileInfo (LocalSiteReference (line)));  		}  		else {  			Console.WriteLine ("ERROR: File \"{0}\" does not exist as specified in mandate \"{1}\""' line' this.Filename);  		}  		break;  	}  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: foreach (string line in sbr.ReadToEnd ().Split (new char[] {  	'\n'  }).Where (l => l.Length > 0)) {  	if (line.Length >= 5) {  		switch (line.Substring (0' 5)) {  		case "[REF]":  			ls = SbrLineState.REF;  			continue;  		case "[SRC]":  			ls = SbrLineState.SRC;  			continue;  		}  	}  	switch (ls) {  	case SbrLineState.NUL:  		break;  	case SbrLineState.REF:  		this.buildRefs.Add (line);  		break;  	case SbrLineState.SRC:  		if (File.Exists (LocalSiteReference (line))) {  			this.csFiles.Add (new FileInfo (LocalSiteReference (line)));  		}  		else {  			Console.WriteLine ("ERROR: File \"{0}\" does not exist as specified in mandate \"{1}\""' line' this.Filename);  		}  		break;  	}  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: if (line.Length >= 5) {  	switch (line.Substring (0' 5)) {  	case "[REF]":  		ls = SbrLineState.REF;  		continue;  	case "[SRC]":  		ls = SbrLineState.SRC;  		continue;  	}  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: if (line.Length >= 5) {  	switch (line.Substring (0' 5)) {  	case "[REF]":  		ls = SbrLineState.REF;  		continue;  	case "[SRC]":  		ls = SbrLineState.SRC;  		continue;  	}  }  
Magic Number,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following statement contains a magic number: switch (line.Substring (0' 5)) {  case "[REF]":  	ls = SbrLineState.REF;  	continue;  case "[SRC]":  	ls = SbrLineState.SRC;  	continue;  }  
Magic Number,Sabertooth.Mandate,Site,C:\repos\Kallikrates_Sabertooth\Mandate.cs,IsAuthorized,The following statement contains a magic number: realm = param [2] as string;  
Missing Default,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following switch statement is missing a default case: switch (line.Substring (0' 5)) {  case "[REF]":  	ls = SbrLineState.REF;  	continue;  case "[SRC]":  	ls = SbrLineState.SRC;  	continue;  }  
Missing Default,Sabertooth.Mandate,Mandate,C:\repos\Kallikrates_Sabertooth\Mandate.cs,EvalSbr,The following switch statement is missing a default case: switch (ls) {  case SbrLineState.NUL:  	break;  case SbrLineState.REF:  	this.buildRefs.Add (line);  	break;  case SbrLineState.SRC:  	if (File.Exists (LocalSiteReference (line))) {  		this.csFiles.Add (new FileInfo (LocalSiteReference (line)));  	}  	else {  		Console.WriteLine ("ERROR: File \"{0}\" does not exist as specified in mandate \"{1}\""' line' this.Filename);  	}  	break;  }  
