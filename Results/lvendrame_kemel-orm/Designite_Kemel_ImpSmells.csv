Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kemel.Base,Dal,C:\repos\lvendrame_kemel-orm\Kemel\Base\Dal.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,Kemel.Data,Kommand,C:\repos\lvendrame_kemel-orm\Kemel\Data\Kommand.cs,ExecuteListWithTransaction,Cyclomatic complexity of the method is 13
Complex Method,Kemel.Data,Kommand,C:\repos\lvendrame_kemel-orm\Kemel\Data\Kommand.cs,ExecuteListWithoutTransaction,Cyclomatic complexity of the method is 13
Complex Method,Kemel.Entity,EntityStateBehavior,C:\repos\lvendrame_kemel-orm\Kemel\Entity\EntityStateBehavior.cs,DoBehavior,Cyclomatic complexity of the method is 15
Complex Method,Kemel,ListExtensions,C:\repos\lvendrame_kemel-orm\Kemel\Extensions\ListExtensions.cs,ToDataTable,Cyclomatic complexity of the method is 8
Complex Method,Kemel,TypeExtensions,C:\repos\lvendrame_kemel-orm\Kemel\Extensions\TypeExtensions.cs,GetDbType,Cyclomatic complexity of the method is 17
Complex Method,Kemel.Kuery.Behaviors,QueryTypeBehavior,C:\repos\lvendrame_kemel-orm\Kemel\Kuery\Behaviors\QueryTypeBehavior.cs,DoBehavior,Cyclomatic complexity of the method is 21
Complex Method,Kemel.Kuery.Constraint.Behaviors,ConstraintTypeBehavior,C:\repos\lvendrame_kemel-orm\Kemel\Kuery\Constraint\Behaviors\ConstraintTypeBehavior.cs,DoBehavior,Cyclomatic complexity of the method is 15
Complex Method,Kemel.Kuery.Constraint.Behaviors,ComparisonBehavior,C:\repos\lvendrame_kemel-orm\Kemel\Kuery\Constraint\Behaviors\ComparisonBehavior.cs,DoBehavior,Cyclomatic complexity of the method is 57
Complex Method,Kemel.Schema,ColumnSchema,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnSchema.cs,GetType,Cyclomatic complexity of the method is 31
Complex Method,Kemel.Schema,ColumnSchema,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnSchema.cs,GetType,Cyclomatic complexity of the method is 28
Complex Method,Kemel.Schema,ColumnSchema,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnSchema.cs,GetDbType,Cyclomatic complexity of the method is 17
Complex Method,Kemel.Schema,SchemaTypeBehavior,C:\repos\lvendrame_kemel-orm\Kemel\Schema\SchemaTypeBehavior.cs,DoBehavior,Cyclomatic complexity of the method is 24
Long Statement,Kemel.Data,Kommand,C:\repos\lvendrame_kemel-orm\Kemel\Data\Kommand.cs,ExecuteReader,The length of the statement  "	return this.PrepareTransaction () ? this.ExecuteReaderWithTransaction (behavior) : this.ExecuteReaderWithoutTransaction (behavior); " is 131.
Long Statement,Kemel.Data,Kommand,C:\repos\lvendrame_kemel-orm\Kemel\Data\Kommand.cs,ExecuteList,The length of the statement  "	return this.PrepareTransaction () ? this.ExecuteListWithTransaction<T> (useExtendProperties) : this.ExecuteListWithoutTransaction<T> (useExtendProperties); " is 155.
Long Statement,Kemel.Data,Kommand,C:\repos\lvendrame_kemel-orm\Kemel\Data\Kommand.cs,ExecuteDataTable,The length of the statement  "	return this.PrepareTransaction () ? this.ExecuteDataTableWithTransaction () : this.ExecuteDataTableWithoutTransaction (); " is 121.
Empty Catch Block,Kemel.Schema,TableSchema,C:\repos\lvendrame_kemel-orm\Kemel\Schema\TableSchema.cs,FromTableName,The method has an empty catch block.
Missing Default,Kemel.Base,Dal,C:\repos\lvendrame_kemel-orm\Kemel\Base\Dal.cs,Save,The following switch statement is missing a default case: switch (ettEntity.EntityState) {  case EntityItemState.Added:  	this.Insert (ettEntity);  	break;  case EntityItemState.Deleted:  	this.DeleteById (ettEntity);  	break;  case EntityItemState.Modified:  	this.Update (ettEntity);  	break;  }  
Missing Default,Kemel.Schema,ColumnSchema,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnSchema.cs,GetType,The following switch statement is missing a default case: switch (dbType) {  case "text":  case "varchar":  case "varchar2":  case "long":  case "char":  	ret = typeof(System.String);  	break;  case "int":  	ret = typeof(System.Int32?);  	break;  case "tinyint":  	ret = typeof(System.Byte?);  	break;  case "decimal":  	ret = typeof(System.Decimal?);  	break;  case "number":  case "numeric":  	if (scale == 0 && precision == 1)  		ret = typeof(System.Byte?);  	else if (scale == 0)  		ret = typeof(System.Int32?);  	else  		ret = typeof(System.Decimal?);  	break;  case "date":  case "smalldatetime":  case "timestamp":  case "datetime":  	ret = typeof(System.DateTime?);  	break;  case "bit":  	ret = typeof(System.Boolean?);  	break;  }  
Missing Default,Kemel.Schema.ColumnValidators,IdentityValidator,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnValidators\IdentityValidator.cs,Validate,The following switch statement is missing a default case: switch (crudOperation) {  case Kemel.Base.CrudOperation.Update:  case Kemel.Base.CrudOperation.Delete:  	if (value == null || string.IsNullOrEmpty (value.ToString ())) {  		throw new KemelException (string.Format (Messages.FieldNotEmpty' this.Column.Name));  	}  	break;  }  
Missing Default,Kemel.Schema.ColumnValidators,NullValidator,C:\repos\lvendrame_kemel-orm\Kemel\Schema\ColumnValidators\NullValidator.cs,Validate,The following switch statement is missing a default case: switch (crudOperation) {  case Kemel.Base.CrudOperation.Create:  case Kemel.Base.CrudOperation.Update:  case Kemel.Base.CrudOperation.Delete:  	if (value == null || string.IsNullOrEmpty (value.ToString ())) {  		throw new KemelException (string.Format (Messages.FieldNotEmpty' this.Column.Name));  	}  	break;  }  
