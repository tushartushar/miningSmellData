Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,Cyclomatic complexity of the method is 9
Long Statement,LogVisualizer.Views,CommandView,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Views\CommandView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LogVisualizer;component/views/commandview.xaml"' System.UriKind.Relative); " is 120.
Long Statement,LogVisualizer.Views,RawLoggerView,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Views\RawLoggerView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/LogVisualizer;component/views/rawloggerview.xaml"' System.UriKind.Relative); " is 122.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Empty Catch Block,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The method has an empty catch block.
Empty Catch Block,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The method has an empty catch block.
Magic Number,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,UdpInterceptor,The following statement contains a magic number: _udpClient = new UdpClient(8080);
Magic Number,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The following statement contains a magic number: switch (message.Level) {                           case "ERROR":                              message.NumericLevel = 4;                              break;                          case "WARN":                              message.NumericLevel = 3;                              break;                          case "INFO":                              message.NumericLevel = 2;                              break;                          case "DEBUG":                              message.NumericLevel = 1;                              break;                        }
Magic Number,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The following statement contains a magic number: switch (message.Level) {                           case "ERROR":                              message.NumericLevel = 4;                              break;                          case "WARN":                              message.NumericLevel = 3;                              break;                          case "INFO":                              message.NumericLevel = 2;                              break;                          case "DEBUG":                              message.NumericLevel = 1;                              break;                        }
Magic Number,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The following statement contains a magic number: switch (message.Level) {                           case "ERROR":                              message.NumericLevel = 4;                              break;                          case "WARN":                              message.NumericLevel = 3;                              break;                          case "INFO":                              message.NumericLevel = 2;                              break;                          case "DEBUG":                              message.NumericLevel = 1;                              break;                        }
Missing Default,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The following switch statement is missing a default case: switch (message.Level) {                           case "ERROR":                              message.NumericLevel = 4;                              break;                          case "WARN":                              message.NumericLevel = 3;                              break;                          case "INFO":                              message.NumericLevel = 2;                              break;                          case "DEBUG":                              message.NumericLevel = 1;                              break;                        }
Missing Default,LogVisualizer.Infrastructure,UdpInterceptor,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Infrastructure\UdpInterceptor.cs,Start,The following switch statement is missing a default case: switch (key)                          {                              case "op_type":                                  message.OpType = value;                              break;                              case "op_type_id":                                  message.OpTypeId = value;                              break;                          }
Missing Default,LogVisualizer.Views,RawLoggerView,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\LogVisualizer\Views\RawLoggerView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.theView = ((LogVisualizer.Views.RawLoggerView)(target));              return;              }
