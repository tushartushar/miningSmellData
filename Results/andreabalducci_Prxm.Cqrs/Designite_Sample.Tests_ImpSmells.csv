Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sample.Tests.DomainTests,BaseGwtTest<T>,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\BaseGwtTest.cs,Exercise,Cyclomatic complexity of the method is 8
Long Identifier,Sample.Tests.TestInfrastructure.TestDoubles.AutoMock,AutoMockingFacility,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\TestInfrastructure\TestDoubles\AutoMock\AutoMockingFacility.cs,,The length of the parameter _autoMockingDependencyResolver is 30.
Magic Number,Sample.Tests.DomainTests,InventoryItemsTests,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\InventoryItemsTests.cs,receive_items,The following statement contains a magic number: item.Stock(100);
Magic Number,Sample.Tests.DomainTests,InventoryItemsTests,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\InventoryItemsTests.cs,receive_items,The following statement contains a magic number: Assert.AreEqual(currentQty + 100' item.Quantity);
Magic Number,Sample.Tests.DomainTests,InventoryItemsTests,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\InventoryItemsTests.cs,massive_save_to_storage,The following statement contains a magic number: Parallel.ForEach(Enumerable.Range(1' 10000)' x =>                                                               {                                                                   using (var r = BuildRepository())                                                                   {                                                                       var item = new InventoryItem(                                                                           Guid.NewGuid()'                                                                           "001"'                                                                           "Sample Item"                                                                       );                                                                         r.Save(item' item.Id);                                                                   }                                                               });
Magic Number,Sample.Tests.DomainTests,InventoryItemsTests,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\InventoryItemsTests.cs,massive_save_to_storage,The following statement contains a magic number: Debug.WriteLine("Elapsed " + s.ElapsedMilliseconds / 1000.0);
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Cannot_pick_quantity_that_is_not_present_in_inventory_item,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,Given,The following statement contains a magic number: return                   new DomainEvent[] {                      new InventoryItemCreated() {Id = aggregateId}'                      new InventoryItemStocked(aggregateId' 20)'                  };
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Cannot_pick_quantity_that_is_not_present_in_inventory_item,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,When,The following statement contains a magic number: aggregateRoot.Pick(30);
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Cannot_pick_quantity_that_is_not_present_in_inventory_item,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,ExpectedEvents,The following statement contains a magic number: return               new DomainEvent[] {                      new InvalidPickingAttempted(                          aggregateId'                           InvalidPickingReason.NegativePickingAttempted'                          20'                           30)'                  };
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Cannot_pick_quantity_that_is_not_present_in_inventory_item,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,ExpectedEvents,The following statement contains a magic number: return               new DomainEvent[] {                      new InvalidPickingAttempted(                          aggregateId'                           InvalidPickingReason.NegativePickingAttempted'                          20'                           30)'                  };
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Can_pick_quantity_if_enough_is_present_in_stock,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Copy of Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,Given,The following statement contains a magic number: return                   new DomainEvent[] {                      new InventoryItemCreated() {Id = aggregateId}'                      new InventoryItemStocked(aggregateId' 20)'                  };
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Can_pick_quantity_if_enough_is_present_in_stock,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Copy of Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,When,The following statement contains a magic number: aggregateRoot.Pick(10);
Magic Number,Sample.Tests.DomainTests.Inventory.InventoryItemTests,Can_pick_quantity_if_enough_is_present_in_stock,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\DomainTests\Inventory\InventoryItemTests\Copy of Cannot_pick_quantity_that_is_not_present_in_inventory_item.cs,ExpectedEvents,The following statement contains a magic number: return                new DomainEvent[] {                      new InventoryItemPicked(                          aggregateId'                           10)'                  };
Magic Number,Sample.Tests.InProcessBusTests,InProcessBus,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\InProcessBusTests\InProcessBus.cs,multiple_threads_sending_commands_all_executed_on_first_calling_thread,The following statement contains a magic number: const int maxlimit = 500;
Magic Number,Sample.Tests.InProcessBusTests,InProcessBus,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\InProcessBusTests\InProcessBus.cs,multiple_threads_sending_commands_all_executed_on_first_calling_thread,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Sample.Tests.Server.Support,MongoRawEventStorageFixture,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\Server\Support\MongoRawEventStorageFixture.cs,Verify_basic_save_of_an_event,The following statement contains a magic number: Dea a = new Dea() { Paperoga = "Yes"' Test = 2 };
Magic Number,Sample.Tests.Server.Support,MongoRawEventStorageFixture,D:\research\architectureSmells\repos\andreabalducci_Prxm.Cqrs\Sample.Tests\Server\Support\MongoRawEventStorageFixture.cs,Verify_basic_save_of_an_event,The following statement contains a magic number: Deb b = new Deb() { BlaBlaList = new List<String>() { "one"' "two"' "three" }' Number = 34.5 };
