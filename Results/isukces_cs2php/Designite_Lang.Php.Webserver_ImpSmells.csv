Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Lang.Php.Webserver,HttpRequest,C:\repos\isukces_cs2php\Lang.Php.Webserver\HttpRequest.cs,ParseFirstLine,The following statement contains a magic number: {                  // parsowanie uri                  string txt = _requestUri;                  _script = ReadPart(ref txt' "?");                  if (!string.IsNullOrEmpty(txt))                  {                      var get = ReadPart(ref txt' "#");                      var getItems = get.Split('&');                      foreach (var getItem in getItems)                      {                          var keyValue = getItem.Split('=');                          if (keyValue.Length < 2) continue;                          this._get[keyValue[0]] = keyValue[1];                      }                  }                }
Magic Number,Lang.Php.Webserver,HttpRequest,C:\repos\isukces_cs2php\Lang.Php.Webserver\HttpRequest.cs,Parse,The following statement contains a magic number: while (!string.IsNullOrEmpty(txt))              {                  int idx = txt.IndexOf("\r\n");                  if (idx < 0)                  {                      pl(txt);                      break;                  }                  pl(txt.Substring(0' idx));                  txt = txt.Substring(idx + 2);                }
Magic Number,Lang.Php.Webserver,HttpRequest,C:\repos\isukces_cs2php\Lang.Php.Webserver\HttpRequest.cs,ParseFirstLine,The following statement contains a magic number: {                  // parsowanie uri                  string txt = _requestUri;                  _script = ReadPart(ref txt' "?");                  if (!string.IsNullOrEmpty(txt))                  {                      var get = ReadPart(ref txt' "#");                      var getItems = get.Split('&');                      foreach (var getItem in getItems)                      {                          var keyValue = getItem.Split('=');                          if (keyValue.Length < 2) continue;                          this._get[keyValue[0]] = keyValue[1];                      }                  }                }
Magic Number,Lang.Php.Webserver,HttpRequest,C:\repos\isukces_cs2php\Lang.Php.Webserver\HttpRequest.cs,Parse,The following statement contains a magic number: while (!string.IsNullOrEmpty(txt))              {                  int idx = txt.IndexOf("\r\n");                  if (idx < 0)                  {                      pl(txt);                      break;                  }                  pl(txt.Substring(0' idx));                  txt = txt.Substring(idx + 2);                }
Magic Number,Lang.Php.Webserver,ServerEngine,C:\repos\isukces_cs2php\Lang.Php.Webserver\ServerEngine.cs,StartListening,The following statement contains a magic number: try              {                  listener.Bind(localEndPoint);                  _work = true;                  listener.Listen(100);                    Thread t = new Thread(() =>                  {                        while (true)                      {                          allDone.Reset();                          Console.WriteLine("Waiting for a connection...");                          listener.BeginAccept(AcceptCallback' listener);                          allDone.WaitOne();                          if (!_work)                              break;                      }                  });                  t.Start();                    }              catch (Exception e)              {                  Console.WriteLine(e.ToString());              }
Magic Number,Lang.Php.Webserver,ServerEngine,C:\repos\isukces_cs2php\Lang.Php.Webserver\ServerEngine.cs,StartListening,The following statement contains a magic number: try              {                  listener.Bind(localEndPoint);                  _work = true;                  listener.Listen(100);                    Thread t = new Thread(() =>                  {                        while (true)                      {                          allDone.Reset();                          Console.WriteLine("Waiting for a connection...");                          listener.BeginAccept(AcceptCallback' listener);                          allDone.WaitOne();                          if (!_work)                              break;                      }                  });                  t.Start();                    }              catch (Exception e)              {                  Console.WriteLine(e.ToString());              }
Magic Number,Lang.Php.Webserver,MainWindow,C:\repos\isukces_cs2php\Lang.Php.Webserver\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: {                  ServerEngine e = ServerEngine.Instance;                  e.DocumentRoot = Path.Combine(                       Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)'                      "cs2php"'                      "webserver");                    e.OnLog += e_OnLog;                  string[] args = Environment.GetCommandLineArgs();                  foreach (var i in args.Skip(1))                      e.Load(i);                  e.ListenPort = 11000;                  e.StartListening();              }
Magic Number,Lang.Php.Webserver,MainWindow,C:\repos\isukces_cs2php\Lang.Php.Webserver\MainWindow.xaml.cs,e_OnLog,The following statement contains a magic number: if (loglines.Count > 100)                  loglines.RemoveAt(0);
Missing Default,Lang.Php.Webserver,MainWindow,C:\repos\isukces_cs2php\Lang.Php.Webserver\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.log = ((System.Windows.Controls.TextBlock)(target));              return;              }
