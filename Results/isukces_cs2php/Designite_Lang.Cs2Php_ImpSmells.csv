Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessArgument,Cyclomatic complexity of the method is 35
Complex Method,Lang.Cs2Php,CompilerEngine,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\CompilerEngine.cs,WriteCompileError,Cyclomatic complexity of the method is 9
Complex Method,Lang.Cs2Php,CompilerEngine,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\CompilerEngine.cs,PreparePhpCompiler,Cyclomatic complexity of the method is 9
Complex Method,Lang.Cs2Php,ConfigDataExtension,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\IConfigDataExtension.cs,CopyFrom,Cyclomatic complexity of the method is 7
Long Statement,Lang.Cs2Php,CompilerEngine,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\CompilerEngine.cs,ExecuteInSeparateAppDomain,The length of the statement  "		var compilerEngine = (CompilerEngine)appDomain.CreateInstanceFrom (wrapperType.Assembly.Location' wrapperType.FullName).Unwrap (); " is 130.
Long Statement,Lang.Cs2Php,CompilerEngine,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\CompilerEngine.cs,Swap,The length of the statement  "	var metadataFileReferences = comp.CSharpProject.MetadataReferences.OfType<MetadataFileReference> ().Select (reference => new { " is 126.
Long Statement,Lang.Cs2Php,CompilerEngine,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\CompilerEngine.cs,PreparePhpCompiler,The length of the statement  "	comp.ReferencedAssemblies = comp.CSharpProject.MetadataReferences.Select (reference => comp.Sandbox.LoadByFullFilename (reference.Display).WrappedAssembly).ToList (); " is 166.
Long Statement,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,DoCompilation,The length of the statement  "		ce.Set1 (cfg.Referenced.ToArray ()' cfg.TranlationHelpers.ToArray ()' cfg.ReferencedPhpLibsLocations.Select (a => a.Key + "\n" + a.Value).ToArray ()); " is 150.
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: try {  	_currentDir = new FileInfo (filename).DirectoryName;  	var lines = (from line in File.ReadAllLines (filename)  	let lineTrimmed = (line ?? "").Trim ()  	where !string.IsNullOrEmpty (lineTrimmed) && !lineTrimmed.StartsWith (";")  	select lineTrimmed).ToArray ();  	// set FORMSBIN=c:\programs\_CS2PHP\  	foreach (var line in lines) {  		if (line.StartsWith ("set ")) {  			var regex = new Regex ("^set\\s+([A-Z]+)\\s*=\\s*(.*)$"' RegexOptions.IgnoreCase);  			var match = regex.Match (line);  			if (!match.Success)  				throw new Exception ("Syntax error in \r\n" + line);  			_names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  			continue;  		}  		if (line.StartsWith ("-")) {  			var regex = new Regex ("^(-[A-Z]+)\\s+(.*)$"' RegexOptions.IgnoreCase);  			var match = regex.Match (line);  			if (!match.Success)  				throw new Exception ("Syntax error in \r\n" + line);  			ProcessArgument (match.Groups [1].Value);  			ProcessArgument (match.Groups [2].Value);  		} else {  			ProcessArgument (line);  		}  	}  } finally {  	_command = c;  	_currentDir = cd;  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: try {  	_currentDir = new FileInfo (filename).DirectoryName;  	var lines = (from line in File.ReadAllLines (filename)  	let lineTrimmed = (line ?? "").Trim ()  	where !string.IsNullOrEmpty (lineTrimmed) && !lineTrimmed.StartsWith (";")  	select lineTrimmed).ToArray ();  	// set FORMSBIN=c:\programs\_CS2PHP\  	foreach (var line in lines) {  		if (line.StartsWith ("set ")) {  			var regex = new Regex ("^set\\s+([A-Z]+)\\s*=\\s*(.*)$"' RegexOptions.IgnoreCase);  			var match = regex.Match (line);  			if (!match.Success)  				throw new Exception ("Syntax error in \r\n" + line);  			_names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  			continue;  		}  		if (line.StartsWith ("-")) {  			var regex = new Regex ("^(-[A-Z]+)\\s+(.*)$"' RegexOptions.IgnoreCase);  			var match = regex.Match (line);  			if (!match.Success)  				throw new Exception ("Syntax error in \r\n" + line);  			ProcessArgument (match.Groups [1].Value);  			ProcessArgument (match.Groups [2].Value);  		} else {  			ProcessArgument (line);  		}  	}  } finally {  	_command = c;  	_currentDir = cd;  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("set ")) {  		var regex = new Regex ("^set\\s+([A-Z]+)\\s*=\\s*(.*)$"' RegexOptions.IgnoreCase);  		var match = regex.Match (line);  		if (!match.Success)  			throw new Exception ("Syntax error in \r\n" + line);  		_names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  		continue;  	}  	if (line.StartsWith ("-")) {  		var regex = new Regex ("^(-[A-Z]+)\\s+(.*)$"' RegexOptions.IgnoreCase);  		var match = regex.Match (line);  		if (!match.Success)  			throw new Exception ("Syntax error in \r\n" + line);  		ProcessArgument (match.Groups [1].Value);  		ProcessArgument (match.Groups [2].Value);  	} else {  		ProcessArgument (line);  	}  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: foreach (var line in lines) {  	if (line.StartsWith ("set ")) {  		var regex = new Regex ("^set\\s+([A-Z]+)\\s*=\\s*(.*)$"' RegexOptions.IgnoreCase);  		var match = regex.Match (line);  		if (!match.Success)  			throw new Exception ("Syntax error in \r\n" + line);  		_names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  		continue;  	}  	if (line.StartsWith ("-")) {  		var regex = new Regex ("^(-[A-Z]+)\\s+(.*)$"' RegexOptions.IgnoreCase);  		var match = regex.Match (line);  		if (!match.Success)  			throw new Exception ("Syntax error in \r\n" + line);  		ProcessArgument (match.Groups [1].Value);  		ProcessArgument (match.Groups [2].Value);  	} else {  		ProcessArgument (line);  	}  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: if (line.StartsWith ("set ")) {  	var regex = new Regex ("^set\\s+([A-Z]+)\\s*=\\s*(.*)$"' RegexOptions.IgnoreCase);  	var match = regex.Match (line);  	if (!match.Success)  		throw new Exception ("Syntax error in \r\n" + line);  	_names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  	continue;  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: _names [match.Groups [1].Value.Trim ()] = match.Groups [2].Value.Trim ();  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: if (line.StartsWith ("-")) {  	var regex = new Regex ("^(-[A-Z]+)\\s+(.*)$"' RegexOptions.IgnoreCase);  	var match = regex.Match (line);  	if (!match.Success)  		throw new Exception ("Syntax error in \r\n" + line);  	ProcessArgument (match.Groups [1].Value);  	ProcessArgument (match.Groups [2].Value);  } else {  	ProcessArgument (line);  }  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ProcessFile,The following statement contains a magic number: ProcessArgument (match.Groups [2].Value);  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ResolveFilename,The following statement contains a magic number: do {  	doThisAgain = false;  	var regex = new Regex ("(%([A-Z]+)%)"' RegexOptions.IgnoreCase);  	filename = regex.Replace (filename' match => {  		string t;  		_names.TryGetValue (match.Groups [2].Value' out t);  		doThisAgain = true;  		return t;  	});  } while (doThisAgain);  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ResolveFilename,The following statement contains a magic number: filename = regex.Replace (filename' match => {  	string t;  	_names.TryGetValue (match.Groups [2].Value' out t);  	doThisAgain = true;  	return t;  });  
Magic Number,Lang.Cs2Php,ArgumentProcessingContext,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\ArgumentProcessingContext.cs,ResolveFilename,The following statement contains a magic number: _names.TryGetValue (match.Groups [2].Value' out t);  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: try {  	var processingContext = new ArgumentProcessingContext ();  	processingContext.Parse (args);  	if (processingContext.files.Count < 2)  		throw new Exception ("Invalid input options' unknown csproj file or output directory");  	if (processingContext.files.Count > 2)  		throw new Exception ("Unknown parameter " + processingContext.files [2]);  	processingContext.Engine.CsProject = processingContext.files.First ();  	processingContext.Engine.OutDir = processingContext.files.Last ();  	using (var a = new AppConfigManipulator ()) {  		DoCompilation (processingContext.Engine' ref showUsage);  	}  	Console.ForegroundColor = ConsoleColor.Green;  	Console.WriteLine ("Success");  	Console.ResetColor ();  } catch (Exception exception) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.WriteLine ("Error:");  	Console.ResetColor ();  	while (exception != null) {  		Console.WriteLine ("   " + exception.Message + "\r\n");  		exception = exception.InnerException;  	}  	if (showUsage)  		Usage ();  }  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: try {  	var processingContext = new ArgumentProcessingContext ();  	processingContext.Parse (args);  	if (processingContext.files.Count < 2)  		throw new Exception ("Invalid input options' unknown csproj file or output directory");  	if (processingContext.files.Count > 2)  		throw new Exception ("Unknown parameter " + processingContext.files [2]);  	processingContext.Engine.CsProject = processingContext.files.First ();  	processingContext.Engine.OutDir = processingContext.files.Last ();  	using (var a = new AppConfigManipulator ()) {  		DoCompilation (processingContext.Engine' ref showUsage);  	}  	Console.ForegroundColor = ConsoleColor.Green;  	Console.WriteLine ("Success");  	Console.ResetColor ();  } catch (Exception exception) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.WriteLine ("Error:");  	Console.ResetColor ();  	while (exception != null) {  		Console.WriteLine ("   " + exception.Message + "\r\n");  		exception = exception.InnerException;  	}  	if (showUsage)  		Usage ();  }  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: try {  	var processingContext = new ArgumentProcessingContext ();  	processingContext.Parse (args);  	if (processingContext.files.Count < 2)  		throw new Exception ("Invalid input options' unknown csproj file or output directory");  	if (processingContext.files.Count > 2)  		throw new Exception ("Unknown parameter " + processingContext.files [2]);  	processingContext.Engine.CsProject = processingContext.files.First ();  	processingContext.Engine.OutDir = processingContext.files.Last ();  	using (var a = new AppConfigManipulator ()) {  		DoCompilation (processingContext.Engine' ref showUsage);  	}  	Console.ForegroundColor = ConsoleColor.Green;  	Console.WriteLine ("Success");  	Console.ResetColor ();  } catch (Exception exception) {  	Console.ForegroundColor = ConsoleColor.Red;  	Console.WriteLine ("Error:");  	Console.ResetColor ();  	while (exception != null) {  		Console.WriteLine ("   " + exception.Message + "\r\n");  		exception = exception.InnerException;  	}  	if (showUsage)  		Usage ();  }  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: if (processingContext.files.Count < 2)  	throw new Exception ("Invalid input options' unknown csproj file or output directory");  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: if (processingContext.files.Count > 2)  	throw new Exception ("Unknown parameter " + processingContext.files [2]);  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: if (processingContext.files.Count > 2)  	throw new Exception ("Unknown parameter " + processingContext.files [2]);  
Magic Number,Lang.Cs2Php,Program,D:\newReposJune17\isukces_cs2php\Lang.Cs2Php\Program.cs,Main,The following statement contains a magic number: throw new Exception ("Unknown parameter " + processingContext.files [2]);  
