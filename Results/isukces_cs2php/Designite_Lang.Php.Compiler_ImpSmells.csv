Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lang.Php.Compiler,FieldTranslationInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The method has 109 lines of code.
Long Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitClassFieldAccessExpression,The method has 126 lines of code.
Long Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The method has 102 lines of code.
Long Method,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The method has 166 lines of code.
Complex Method,Lang.Php.Compiler,DependentAssemblyWrapper,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\AppConfigManipulator.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,Cs2PhpCompiler,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,DownloadAndUnzip,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler,Cs2PhpCompiler,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,Compile2PhpAndEmit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,PathUtil,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\PathUtil.cs,MakeWinPath,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,ClassTranslationInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,Update,Cyclomatic complexity of the method is 14
Complex Method,Lang.Php.Compiler,FieldTranslationInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,Cyclomatic complexity of the method is 20
Complex Method,Lang.Php.Compiler.Source,PhpQualifiedName,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpQualifiedName.cs,NameForEmit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpClassDefinition,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeModule,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,Emit,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Source,PhpArrayCreateExpression,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,GetPhpCode,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeBlock,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpCodeBlock.cs,Emit,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Source,PhpExpressionStatement,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler.Source,PhpIfStatement,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpIfStatement.cs,Emit,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Source,PhpStatementBase,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpStatementBase.cs,EmitHeaderStatement,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator,ExpressionSimplifier,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpBinaryOperatorExpression,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Translator,ExpressionSimplifier,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpMethodCallExpression,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Translator,PhpStatementSimplifier,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpStatementSimplifier.cs,VisitPhpCodeBlock,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitBinaryOperatorExpression,Cyclomatic complexity of the method is 11
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,Cyclomatic complexity of the method is 11
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitClassFieldAccessExpression,Cyclomatic complexity of the method is 23
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,Cyclomatic complexity of the method is 17
Complex Method,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,Cyclomatic complexity of the method is 21
Complex Method,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,Cyclomatic complexity of the method is 14
Complex Method,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,TranslateField,Cyclomatic complexity of the method is 18
Complex Method,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,Visit,Cyclomatic complexity of the method is 32
Complex Method,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,GetKind,Cyclomatic complexity of the method is 32
Complex Method,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,TranslateToPhp,Cyclomatic complexity of the method is 12
Complex Method,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,CreateExpressionFromDirectCallAttribute,Cyclomatic complexity of the method is 20
Complex Method,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,Cyclomatic complexity of the method is 15
Complex Method,Lang.Php.Compiler.Translator.Node,MysqliTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\MysqliTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 15
Long Parameter List,Lang.Php.Compiler.Source,PhpCodeModule,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,EmitWithNamespace,The method has 5 parameters. Parameters: ns' emiter' writer' style' classesInNamespace
Long Parameter List,Lang.Php.Compiler.Source,PhpStatementBase,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpStatementBase.cs,EmitHeaderStatement,The method has 5 parameters. Parameters: emiter' writer' style' header' statement
Long Parameter List,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,CreateExpressionFromDirectCallAttribute,The method has 5 parameters. Parameters: ctx' directCallAttribute' targetObject' arguments' methodInfo
Long Parameter List,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,Make_FilterInput,The method has 5 parameters. Parameters: type' name' filter' options' flags
Long Identifier,Lang.Php.Compiler,EmitContext,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\EmitContext.cs,,The length of the parameter PROPERTYNAME_LIBRARYDICTIONARIES is 32.
Long Identifier,Lang.Php.Compiler,EmitContext,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\EmitContext.cs,,The length of the parameter PROPERTYNAME_LIBRARYDICTIONARIES is 32.
Long Identifier,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The length of the parameter translatedByExternalNodeTranslator is 34.
Long Identifier,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,The length of the parameter fileNameExpressionICodeRelated is 30.
Long Statement,Lang.Php.Compiler.Translator,ExpressionSimplifier,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpBinaryOperatorExpression,The length of the statement  "                                var msg = string.Format("left={0}' right={1} '{2}+{3}'"' LValue' RValue' LValue == null ? null : LValue.GetType().FullName' RValue == null ? null : RValue.GetType().FullName); " is 175.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,The length of the statement  "            // we can use "state.Principles.CurrentType" as third parameter if we prefer "new self()" or "new parent()" contructor calls " is 124.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "            //throw new NotSupportedException(string.Format("Do not use PregMatchResult class properties. For testing purposes use Is{0}"' src.Member.Name)); " is 145.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "                case "Lang.Php.PregMatchResult MatchWithOffset(System.String' System.String' System.Collections.Generic.Dictionary`2[System.Object'Lang.Php.PregMatchWithOffset] ByRef' Int32)": " is 176.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "                case "Lang.Php.PregMatchResult Match(System.String' System.String' System.Collections.Generic.Dictionary`2[System.Object'System.String] ByRef' Int32)": " is 151.
Long Statement,Lang.Php.Compiler.Translator,Translator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "            //     var interfacesToTranslate = info.ClassTranslations.Values.Where(u => u.Type.Assembly == info.CurrentAssembly).ToArray(); " is 127.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpCodeBlock,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpCodeBlock"' this.GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpArrayCreateExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpArrayCreateExpression"' this.GetType().FullName)); " is 151.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpDefinedConstExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpDefinedConstExpression"' this.GetType().FullName)); " is 152.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpFreeExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpFreeExpression"' this.GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpBreakStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpBreakStatement"' this.GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpCodeModuleName,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpCodeModuleName"' this.GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpArrayAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpArrayAccessExpression"' this.GetType().FullName)); " is 151.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpAssignExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpAssignExpression"' this.GetType().FullName)); " is 146.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpClassFieldAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpClassFieldAccessExpression"' this.GetType().FullName)); " is 156.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpBinaryOperatorExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpBinaryOperatorExpression"' this.GetType().FullName)); " is 154.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpConditionalExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpConditionalExpression"' this.GetType().FullName)); " is 151.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpConstValue,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpConstValue"' this.GetType().FullName)); " is 140.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpElementAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpElementAccessExpression"' this.GetType().FullName)); " is 153.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpContinueStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpContinueStatement"' this.GetType().FullName)); " is 147.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpExpressionStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpExpressionStatement"' this.GetType().FullName)); " is 149.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpForEachStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpForEachStatement"' this.GetType().FullName)); " is 146.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpForStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpForStatement"' this.GetType().FullName)); " is 142.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpIfStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpIfStatement"' this.GetType().FullName)); " is 141.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpIncrementDecrementExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpIncrementDecrementExpression"' this.GetType().FullName)); " is 158.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpInstanceFieldAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpInstanceFieldAccessExpression"' this.GetType().FullName)); " is 159.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpPropertyAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpPropertyAccessExpression"' this.GetType().FullName)); " is 154.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpMethodInvokeValue,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpMethodInvokeValue"' this.GetType().FullName)); " is 147.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpMethodCallExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpMethodCallExpression"' this.GetType().FullName)); " is 150.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpParenthesizedExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpParenthesizedExpression"' this.GetType().FullName)); " is 153.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpReturnStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpReturnStatement"' this.GetType().FullName)); " is 145.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpThisExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpThisExpression"' this.GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpUnaryOperatorExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpUnaryOperatorExpression"' this.GetType().FullName)); " is 153.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpVariableExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpVariableExpression"' this.GetType().FullName)); " is 148.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpWhileStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpWhileStatement"' this.GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpSwitchStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpSwitchStatement"' this.GetType().FullName)); " is 145.
Long Statement,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassPropertyAccess,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassPropertyAccess.cs,TranslateToPhp,The length of the statement  "            throw new NotImplementedException(string.Format("Unable to translate ClassPropertyAccessExpression {0}.{1}"' src.Member.DeclaringType' src.Member.Name)); " is 153.
Long Statement,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The length of the statement  "                        // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] ) " is 197.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,SubstituteByReplacerMethod,The length of the statement  "            var found = otherClass.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | flags).FirstOrDefault(i => i.ToString() == search); " is 132.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,SubstituteByReplacerMethod,The length of the statement  "                throw new Exception(string.Format("Klasa {0} nie zawiera metody lustrzanej {1}\r\nDodaj\r\n{2}"' otherClass' search' src.MethodInfo.GetMethodHeader())); " is 152.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,Try_DirectCallAttribute,The length of the statement  "            return CreateExpressionFromDirectCallAttribute(ctx' directCallAttribute' src.TargetObject' src.Arguments' src.MethodInfo); " is 122.
Long Statement,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The length of the statement  "            if (fn == "System.Nullable`1[System.Int32] ValidateInt(Type' System.String' Lang.Php.Filters.IntFlags' Lang.Php.Filters.IntOptions)") " is 133.
Long Statement,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInputServer,The length of the statement  "            if (fn == "System.String ValidateIp(Lang.Php.Filters.ServerVariables' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)") " is 125.
Long Statement,Lang.Php.Compiler.Translator.Node.Linq,EnumerableTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Linq\EnumerableTranslator.cs,TranslateToPhp,The length of the statement  "                if (fn == "System.Collections.Generic.List`1[System.String] ToList[String](System.Collections.Generic.IEnumerable`1[System.String])") " is 133.
Long Statement,Lang.Php.Compiler.Translator.Node.Linq,EnumerableTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Linq\EnumerableTranslator.cs,TranslateToPhp,The length of the statement  "                if (fn == "System.Linq.IOrderedEnumerable`1[System.Collections.Generic.IEnumerable`1[System.String]] OrderBy[IEnumerable`1'Func`2](System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[System.String]]' System.Func`2[System.Collections.Generic.IEnumerable`1[System.String]'System.Func`2[System.String'System.String]])") " is 346.
Complex Conditional,Lang.Php.Compiler.Source,PhpSourceBase,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpSourceBase.cs,EqualCode,The conditional expression  "(a is IPhpValue || a == null) && (b is IPhpValue || b == null)"  is complex.
Complex Conditional,Lang.Php.Compiler.Translator.Node,GraphTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\GraphTranslator.cs,TranslateToPhp,The conditional expression  "name =="Font1" || name =="Font2" || name =="Font3" || name =="Font4" || name =="Font5""  is complex.
Complex Conditional,Lang.Php.Compiler.Translator.Node,MysqliTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\MysqliTranslator.cs,TranslateToPhp,The conditional expression  "t == typeof(Int64)                                  || t == typeof(Int32)                                  || t == typeof(Byte)                                  || t == typeof(UInt64)                                  || t == typeof(UInt32)                                  || t == typeof(UInt16)"  is complex.
Empty Catch Block,Lang.Php.Compiler,AppConfigManipulator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\AppConfigManipulator.cs,Dispose,The method has an empty catch block.
Magic Number,Lang.Php.Compiler,PhpSourceCodeWriter,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\PhpSourceCodeWriter.cs,OnIntentChange,The following statement contains a magic number: IntentString = new string(' '' intent * 4);
Magic Number,Lang.Php.Compiler,AssemblyTranslationInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,LibNameFromAssembly,The following statement contains a magic number: tmp = tmp.Substring(0' tmp.Length - 4);
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: hash     = hash * 31 + (Library == (object)null ? 0 : Library.GetHashCode());
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: hash     = hash * 31 + _name.GetHashCode();
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,FieldOrderGroup,The following statement contains a magic number: return fieldDefinition.IsConst ? 0 : (fieldDefinition.IsStatic ? 1 : 2);
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,The following statement contains a magic number: orderGroup < 3
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: nn = ((char)(65 + ii)).ToString();
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: ii < 26
Magic Number,Lang.Php.Compiler.Source,PhpArrayCreateExpression,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,MakeKeyValue,The following statement contains a magic number: keyValues.Length % 2 == 1
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,SplitToLines,The following statement contains a magic number: var idx = code.IndexOf("\r\n"' StringComparison.Ordinal) + 2;
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,The following statement contains a magic number: vv(new PhpConstValue(i.Substring(0' i.Length - 2)));
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: var _hash_ = 17;
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_     = _hash_ * 31 + SourceType.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_     = _hash_ * 31 + ReplaceBy.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator,PregTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,Make,The following statement contains a magic number: addoffset && i == 2
Magic Number,Lang.Php.Compiler.Translator,PregTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,GetPriority,The following statement contains a magic number: return -100;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassField,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassField.cs,GetPriority,The following statement contains a magic number: return 9;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassPropertyAccess,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassPropertyAccess.cs,GetPriority,The following statement contains a magic number: return 999;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,GetPriority,The following statement contains a magic number: return 9;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,TranslateToPhp,The following statement contains a magic number: ii.Items == null || ii.Items.Length != 2
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Methods.cs,GetPriority,The following statement contains a magic number: return 2;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_Property,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Property.cs,GetPriority,The following statement contains a magic number: return 100;
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,Mk,The following statement contains a magic number: sec1 % 60 == 0
Magic Number,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,GetPriority,The following statement contains a magic number: return 999;
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: var options = PhpArrayCreateExpression.MakeKeyValue(                    new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,MakeFilter,The following statement contains a magic number: v.Add(ctx.TranslateValue(src.Arguments[2]));
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,MakeFilter,The following statement contains a magic number: src.Arguments.Length > 2
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterVar,The following statement contains a magic number: def = ctx.TranslateValue(src.Arguments[2].MyValue);
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterVar,The following statement contains a magic number: src.Arguments.Length > 2
Magic Number,Lang.Php.Compiler.Translator.Node,GraphTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\GraphTranslator.cs,TranslateToPhp,The following statement contains a magic number: var size = int.Parse(name.Substring(4));
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: methodName = methodName.Substring(4);
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Magic Number,Lang.Php.Compiler.Translator.Node,ResponseHeaderTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\ResponseHeaderTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (fn)              {                  case "Void Expires(System.DateTime)":                      return MkHeader(ctx' "Expires"' _PhpFormat(src.Arguments[0]));                  case "Void LastModified(System.DateTime)":                      return MkHeader(ctx' "Last-Modified"' _PhpFormat(src.Arguments[0]));                  case "Void ContentType(System.String' Boolean)":                      return src.Arguments.Length == 2                          ? MkHeader(ctx' "Last-Modified"' src.Arguments[0]' src.Arguments[1])                          : MkHeader(ctx' "Last-Modified"' src.Arguments[0]);              }
Magic Number,Lang.Php.Compiler.Translator.Node,StringExtensionsTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\StringExtensionsTranslator.cs,TranslateToPhp,The following statement contains a magic number: list.Arguments.AddRange(a.Skip(2));
Magic Number,Lang.Php.Compiler.Translator.Node,StringExtensionsTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\StringExtensionsTranslator.cs,GetPriority,The following statement contains a magic number: return 2;
Missing Default,Lang.Php.Compiler,PathUtil,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\PathUtil.cs,MakeWinPath,The following switch statement is missing a default case: switch (atBegin)              {                  case SeparatorProcessing.Append:                      if (!path.StartsWith(WIN_SEP))                          path = WIN_SEP + path;                      break;                  case SeparatorProcessing.Remove:                      if (path.StartsWith(WIN_SEP))                          path = path.Substring(1);                      break;              }
Missing Default,Lang.Php.Compiler,PathUtil,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\PathUtil.cs,MakeWinPath,The following switch statement is missing a default case: switch (atEnd)              {                  case SeparatorProcessing.Append:                      if (!path.EndsWith(WIN_SEP))                          path = path + WIN_SEP;                      break;                  case SeparatorProcessing.Remove:                      if (path.EndsWith(WIN_SEP))                          path = path.Substring(0' path.Length - 1);                      break;              }
Missing Default,Lang.Php.Compiler,FieldTranslationInfo,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The following switch statement is missing a default case: switch (fti.Destination)              {                  case FieldTranslationDestionations.JustValue:                  case FieldTranslationDestionations.GlobalVariable:                      canBeNull         = true;                      fti.IncludeModule = null; // force null                      break;                  case FieldTranslationDestionations.DefinedConst:                  case FieldTranslationDestionations.ClassConst:                  case FieldTranslationDestionations.NormalField:                      var cti           = info.GetOrMakeTranslationInfo(fieldInfoDeclaringType);                      fti.IncludeModule = cti.ModuleName;                      if (cti.BuildIn)                      {                          fti.IncludeModule = null;                          canBeNull         = true;                      }                        var isFieldOutsideClass = fti.Destination == FieldTranslationDestionations.GlobalVariable ||                                                fti.Destination == FieldTranslationDestionations.DefinedConst;                  {                      // can be in other module for GlobalVariable and DefinedConst                      var moduleAttribute = fieldInfo.GetCustomAttribute<ModuleAttribute>();                      if (moduleAttribute != null)                      {                          if (!isFieldOutsideClass)                              throw new Exception(string.Format(                                  "Module attribute can only be defined for GlobalVariable or DefinedConst. Check {0}."'                                  fieldInfo.ExcName()));                          fti.IncludeModule = new PhpCodeModuleName(moduleAttribute.ModuleShortName'                              info.GetOrMakeTranslationInfo(fieldInfoDeclaringType.Assembly));                      }                  }                      if (cti.IsPage)                          fti.IsDefinedInNonincludableModule = true;                      if (!isFieldOutsideClass)                          if (cti.IsArray || cti.Type.IsEnum || cti.BuildIn)                          {                              canBeNull         = true;                              fti.IncludeModule = null; // force null                          }                          else if (cti.DontIncludeModuleForClassMembers)                          {                              throw new Exception(                                  string.Format("field {0} belongs to nonincludable class (array' enum or skipped)"'                                      fieldInfo.ExcName()));                          }                        break;              }
Missing Default,Lang.Php.Compiler.Translator,ExpressionSimplifier,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpBinaryOperatorExpression,The following switch statement is missing a default case: switch (node.Operator)              {                  case ".":                      {                          var _left = Simplify(node.Left);                          var _right = Simplify(node.Right);                          var n = new PhpBinaryOperatorExpression(node.Operator' _left' _right);                          var c = ExplodeConcats(n' ".").ToList();                                for (var i = 1; i < c.Count; i++)                          {                              var L = c[i - 1];                              var R = c[i];                              if (L is PhpConstValue && R is PhpConstValue)                              {                                  var LValue = (L as PhpConstValue).Value;                                  var RValue = (R as PhpConstValue).Value;                                  if (LValue is string && RValue is string)                                  {                                      c[i - 1] = new PhpConstValue((string)LValue + (string)RValue);                                      c.RemoveAt(i);                                      i--;                                      continue;                                  }                                  var LCode = PhpValues.ToPhpCodeValue(LValue);                                  var RCode = PhpValues.ToPhpCodeValue(RValue);                                  string left' right;                                  if (LCode.TryGetPhpString(out left) && RCode.TryGetPhpString(out right))                                  {                                      c[i - 1] = new PhpConstValue(left + right);                                      c.RemoveAt(i);                                      i--;                                      continue;                                  }                                    var msg = string.Format("left={0}' right={1} '{2}+{3}'"' LValue' RValue' LValue == null ? null : LValue.GetType().FullName' RValue == null ? null : RValue.GetType().FullName);    #if DEBUG                                  throw new NotImplementedException(msg);  #else                          Console.WriteLine(msg);                          Console.WriteLine(L.GetPhpCode(null));                          Console.WriteLine(R.GetPhpCode(null));                          continue;  #endif                              }                          }                          var result = c[0];                          if (c.Count > 1)                              foreach (var x2 in c.Skip(1))                                  result = new PhpBinaryOperatorExpression("."' result' x2);                          return ReturnSubst(node' result);                      }                  case "|":                      {                          //                    var aLeft = node.Left as PhpConstValue;                          //                    var aRight = node.Right as PhpConstValue;                          //                    if (aLeft != null && aRight != null && aLeft.Value!=null && aRight.Value!=null)                          //                    {                          //                        var typeLeft = aLeft.Value.GetType();                          //                        var typeRight = aRight.Value.GetType();                          //                        if (typeLeft.IsEnum && typeLeft == typeRight)                          //                        {                          //                            var leftValue = (int)aLeft.Value;                          //                            var rightValue = (int)aRight.Value;                          //                            var c = leftValue | rightValue;                          //                            var dd = PhpCodeValue.FromInt(c' true);                          //                            var d = new PhpConstValue(c' false);                          //                            return d;                          //                        }                          //                    }                      }                      break;              }
Missing Default,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitBinaryOperatorExpression,The following switch statement is missing a default case: switch (src.Operator)                      {                          case "+":                              return new PhpConstValue(s1 + s2);                          case "-":                              return new PhpConstValue(s1 - s2);                          case "*":                              return new PhpConstValue(s1 * s2);                          case "/":                              return new PhpConstValue(s1 / s2);                      }
Missing Default,Lang.Php.Compiler.Translator,PhpValueTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The following switch statement is missing a default case: switch (ats.CallType)                                  {                                      case MethodCallStyles.Procedural:                                          method.Arguments.Add(new PhpMethodInvokeValue(phpTargetObject));                                          return method;                                      //    case MethodCallStyles.:                                      //        method.Arguments.Add(new PhpMethodInvokeValue(phpTargetObject));                                      //        return method;                                      //    default:                                      //        throw new NotSupportedException();                                  }
Missing Default,Lang.Php.Compiler.Translator.Node,BasicTranslator_Property,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Property.cs,_Nullable,The following switch statement is missing a default case: switch (s)              {                  case "Value":                  {                      var targetObject = _ctx.TranslateValue(_src.TargetObject);                      return targetObject;                  }                  case "HasValue":                  {                      var targetObject = _ctx.TranslateValue(_src.TargetObject);                      var isNull = new PhpMethodCallExpression("is_null"' targetObject);                      var notNull = new PhpUnaryOperatorExpression(isNull' "!");                      return notNull;                  }              }
Missing Default,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Missing Default,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (src.Member.Name)              {                  case "Now":                      {                          // $date = new DateTime('2000-01-01');                          var c = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          c.DontIncludeClass = true;                          return c;                      }              }
Missing Default,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following switch statement is missing a default case: switch (methodName)                  {                      case "TagBound":                          FillTagOpen(2' ctx' src' ">");                          Append(src.Arguments[1]);                          FillTagEnd(src.Arguments[0]);                          return MakeEchoIfNecessary(isecho);                      case "Attributes":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(" ");                              Append(key);                              Append("=\"");                              Append(value);                              Append("\"");                          }                          return MakeEchoIfNecessary(isecho);                      case "TagOpen":                      case "TagSingle":                          var end = methodName == "TagOpen" ? ">" : " />";                          FillTagOpen(1' ctx' src' end);                          return MakeEchoIfNecessary(isecho);                      case "TagOpenOpen":                          FillTagOpen(1' ctx' src' "");                          return MakeEchoIfNecessary(isecho);                      case "TagClose":                          FillTagEnd(src.Arguments[0]);                          if (src.Arguments.Length == 2)                          {  //                        throw new NotSupportedException();                              Append("\r\n");                          }                          return MakeEchoIfNecessary(isecho);                      case "Comment":                          Append("<!-- ");                          Append(src.Arguments[0]);                          Append(" -->");                          return MakeEchoIfNecessary(isecho);                      case "Pixels":                      case "Percent":                          Append(src.Arguments[0]);                          Append(methodName == "Pixels" ? "px" : "%");                          return MakeEchoIfNecessary(isecho);                      case "Mm":                          Append(src.Arguments[0]);                          Append("mm");                          return MakeEchoIfNecessary(isecho);                      case "Css":                          for (var i = 1; i < src.Arguments.Length; i += 2)                          {                              var key = src.Arguments[i - 1];                              var value = src.Arguments[i];                              Append(key);                              Append(":");                              Append(value);                              Append(";");                          }                          return MakeEchoIfNecessary(isecho);                      case "CssBorder":                          Append(src.Arguments[0]);                          Append(" ");                          Append(src.Arguments[1]);                          Append(" ");                          Append(src.Arguments[2]);                          return MakeEchoIfNecessary(isecho);                  }
Missing Default,Lang.Php.Compiler.Translator.Node,ResponseHeaderTranslator,D:\research\architectureSmells\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\ResponseHeaderTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (fn)              {                  case "Void Expires(System.DateTime)":                      return MkHeader(ctx' "Expires"' _PhpFormat(src.Arguments[0]));                  case "Void LastModified(System.DateTime)":                      return MkHeader(ctx' "Last-Modified"' _PhpFormat(src.Arguments[0]));                  case "Void ContentType(System.String' Boolean)":                      return src.Arguments.Length == 2                          ? MkHeader(ctx' "Last-Modified"' src.Arguments[0]' src.Arguments[1])                          : MkHeader(ctx' "Last-Modified"' src.Arguments[0]);              }
