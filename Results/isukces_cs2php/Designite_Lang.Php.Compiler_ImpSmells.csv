Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The method has 105 lines of code.
Long Method,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The method has 105 lines of code.
Long Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitClassFieldAccessExpression,The method has 126 lines of code.
Long Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The method has 103 lines of code.
Long Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The method has 179 lines of code.
Long Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The method has 179 lines of code.
Complex Method,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,Compile2PhpAndEmit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,Compile2PhpAndEmit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,DependentAssemblyWrapper,C:\repos\isukces_cs2php\Lang.Php.Compiler\AppConfigManipulator.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,Update,Cyclomatic complexity of the method is 12
Complex Method,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler.Source,IPhpStatementBase,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\IPhpStatementBase.cs,EmitHeaderStatement,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Source,PhpQualifiedName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpQualifiedName.cs,NameForEmit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,PhpCodeModuleName,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,PhpCodeModuleName,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeBlock,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpCodeBlock.cs,Emit,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Source,PhpCodeBlock,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpCodeBlock.cs,Emit,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler.Source,PhpIfStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpIfStatement.cs,Emit,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Source,PhpIfStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpIfStatement.cs,Emit,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Source,PhpCodeModule,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,Emit,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Source,PhpCodeModule,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,Emit,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator,StatementSimplifier,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\StatementSimplifier.cs,VisitPhpCodeBlock,Cyclomatic complexity of the method is 8
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitBinaryOperatorExpression,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,Cyclomatic complexity of the method is 11
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitClassFieldAccessExpression,Cyclomatic complexity of the method is 12
Complex Method,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,Cyclomatic complexity of the method is 13
Complex Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,Cyclomatic complexity of the method is 19
Complex Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,Cyclomatic complexity of the method is 14
Complex Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,Cyclomatic complexity of the method is 19
Complex Method,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,Cyclomatic complexity of the method is 14
Complex Method,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,GetKind,Cyclomatic complexity of the method is 32
Complex Method,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,TranslateToPhp,Cyclomatic complexity of the method is 12
Complex Method,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 10
Complex Method,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 9
Complex Method,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,CreateExpressionFromDirectCallAttribute,Cyclomatic complexity of the method is 19
Complex Method,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,Cyclomatic complexity of the method is 16
Complex Method,Lang.Php.Compiler.Translator.Node,MysqliTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\MysqliTranslator.cs,TranslateToPhp,Cyclomatic complexity of the method is 12
Long Parameter List,Lang.Php.Compiler.Source,IPhpStatementBase,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\IPhpStatementBase.cs,EmitHeaderStatement,The method has 5 parameters. Parameters: emiter' writer' style' header' statement
Long Parameter List,Lang.Php.Compiler.Source,PhpCodeModule,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,EmitWithNamespace,The method has 5 parameters. Parameters: ns' emiter' writer' style' classesInNamespace
Long Parameter List,Lang.Php.Compiler.Source,PhpCodeModule,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpCodeModule.cs,EmitWithNamespace,The method has 5 parameters. Parameters: ns' emiter' writer' style' classesInNamespace
Long Parameter List,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,CreateExpressionFromDirectCallAttribute,The method has 5 parameters. Parameters: ctx' directCallAttribute' targetObject' arguments' methodInfo
Long Parameter List,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,Make_FilterInput,The method has 5 parameters. Parameters: type' name' filter' options' flags
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameProjectCompilation is 30.
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameReferencedAssemblies is 32.
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameTranslationAssemblies is 33.
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameProjectCompilation is 30.
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameReferencedAssemblies is 32.
Long Identifier,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,,The length of the parameter PropertyNameTranslationAssemblies is 33.
Long Identifier,Lang.Php.Compiler,EmitContext,C:\repos\isukces_cs2php\Lang.Php.Compiler\EmitContext.cs,,The length of the parameter PROPERTYNAME_LIBRARYDICTIONARIES is 32.
Long Identifier,Lang.Php.Compiler,EmitContext,C:\repos\isukces_cs2php\Lang.Php.Compiler\EmitContext.cs,,The length of the parameter PROPERTYNAME_LIBRARYDICTIONARIES is 32.
Long Identifier,Lang.Php.Compiler,OptimizeOptions,C:\repos\isukces_cs2php\Lang.Php.Compiler\OptimizeOptions.cs,,The length of the parameter PROPERTYNAME_JOINECHOSTATEMENTS is 31.
Long Identifier,Lang.Php.Compiler,OptimizeOptions,C:\repos\isukces_cs2php\Lang.Php.Compiler\OptimizeOptions.cs,,The length of the parameter PROPERTYNAME_JOINECHOSTATEMENTS is 31.
Long Identifier,Lang.Php.Compiler,PhpModuleNamespaceManager,C:\repos\isukces_cs2php\Lang.Php.Compiler\PhpModuleNamespaceManager.cs,,The length of the parameter PROPERTYNAME_ONLYONEROOTSTATEMENT is 33.
Long Identifier,Lang.Php.Compiler,PhpModuleNamespaceManager,C:\repos\isukces_cs2php\Lang.Php.Compiler\PhpModuleNamespaceManager.cs,,The length of the parameter PROPERTYNAME_ONLYONEROOTSTATEMENT is 33.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNameIncludePathConstOrVarName is 37.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpPackageSourceUri is 31.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpPackagePathStrip is 31.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpIncludePathExpression is 36.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNameIncludePathConstOrVarName is 37.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpPackageSourceUri is 31.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpPackagePathStrip is 31.
Long Identifier,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,,The length of the parameter PropertyNamePhpIncludePathExpression is 36.
Long Identifier,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,,The length of the parameter PropertyNameDontIncludeModuleForClassMembers is 44.
Long Identifier,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,,The length of the parameter PropertyNameDontIncludeModuleForClassMembers is 44.
Long Identifier,Lang.Php.Compiler,PhpEmitStyle,C:\repos\isukces_cs2php\Lang.Php.Compiler\PhpEmitStyle.cs,,The length of the parameter PROPERTYNAME_USEBRACKETSEVENIFNOTNECESSARY is 42.
Long Identifier,Lang.Php.Compiler,PhpEmitStyle,C:\repos\isukces_cs2php\Lang.Php.Compiler\PhpEmitStyle.cs,,The length of the parameter PROPERTYNAME_USEBRACKETSEVENIFNOTNECESSARY is 42.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter PropertyNameIsScriptNamePhpEncoded is 34.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter PropertyNameIsDefinedInNonincludableModule is 42.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter _isDefinedInNonincludableModule is 31.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter PropertyNameIsScriptNamePhpEncoded is 34.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter PropertyNameIsDefinedInNonincludableModule is 42.
Long Identifier,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,,The length of the parameter _isDefinedInNonincludableModule is 31.
Long Identifier,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,,The length of the parameter PropertyNameTranslationAssemblies is 33.
Long Identifier,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,,The length of the parameter PropertyNameAssemblyTranslations is 32.
Long Identifier,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,,The length of the parameter PropertyNameTranslationAssemblies is 33.
Long Identifier,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,,The length of the parameter PropertyNameAssemblyTranslations is 32.
Long Identifier,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,,The length of the parameter PropertyNameOptionalIncludePathPrefix is 37.
Long Identifier,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,,The length of the parameter PropertyNamePhpIncludePathExpression is 36.
Long Identifier,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,,The length of the parameter PropertyNameOptionalIncludePathPrefix is 37.
Long Identifier,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,,The length of the parameter PropertyNamePhpIncludePathExpression is 36.
Long Identifier,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The length of the parameter translatedByExternalNodeTranslator is 34.
Long Identifier,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,The length of the parameter fileNameExpressionICodeRelated is 30.
Long Identifier,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,AppendCodeReq,The length of the parameter fileNameExpressionICodeRelated is 30.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,Compile2PhpAndEmit,The length of the statement  "                    info.KnownConstsValues[definedConstName] = new KnownConstInfo(definedConstName' relativePath' false);                            //   referencedLibsPaths[definedConstName] = new KnownConstInfo(definedConstName' relativePath' false); " is 232.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,EmitContentFiles,The length of the statement  "            var srcDir = PathUtil.MakeWinPath(attr == null ? null : attr.Source' PathUtil.SeparatorProcessing.Append' PathUtil.SeparatorProcessing.Append).ToLower(); " is 153.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,EmitContentFiles,The length of the statement  "            var dstDir = PathUtil.MakeWinPath(attr == null ? null : attr.Destination' PathUtil.SeparatorProcessing.Append' PathUtil.SeparatorProcessing.Append); " is 148.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,Compile2PhpAndEmit,The length of the statement  "                    info.KnownConstsValues[definedConstName] = new KnownConstInfo(definedConstName' relativePath' false);                            //   referencedLibsPaths[definedConstName] = new KnownConstInfo(definedConstName' relativePath' false); " is 232.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,EmitContentFiles,The length of the statement  "            var srcDir = PathUtil.MakeWinPath(attr == null ? null : attr.Source' PathUtil.SeparatorProcessing.Append' PathUtil.SeparatorProcessing.Append).ToLower(); " is 153.
Long Statement,Lang.Php.Compiler,Cs2PhpCompiler,C:\repos\isukces_cs2php\Lang.Php.Compiler\Cs2PhpCompiler.cs,EmitContentFiles,The length of the statement  "            var dstDir = PathUtil.MakeWinPath(attr == null ? null : attr.Destination' PathUtil.SeparatorProcessing.Append' PathUtil.SeparatorProcessing.Append); " is 148.
Long Statement,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,Update,The length of the statement  "                    _scriptName = (PhpQualifiedName)(declaringTypeTranslationInfo.ScriptName + "__" + _type.Name); // parent clas followed by __ and short name " is 139.
Long Statement,Lang.Php.Compiler,ClassTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\ClassTranslationInfo.cs,Update,The length of the statement  "                    _scriptName = (PhpQualifiedName)(declaringTypeTranslationInfo.ScriptName + "__" + _type.Name); // parent clas followed by __ and short name " is 139.
Long Statement,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The length of the statement  "                                throw new Exception(string.Format("Module attribute can only be defined for GlobalVariable or DefinedConst. Check {0}."' fieldInfo.ExcName())); " is 143.
Long Statement,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The length of the statement  "                                throw new Exception(string.Format("Module attribute can only be defined for GlobalVariable or DefinedConst. Check {0}."' fieldInfo.ExcName())); " is 143.
Long Statement,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,CheckAccesibility,The length of the statement  "                throw new Exception(string.Format("Constructor {0}.{1} cannot be accessed from {2}.{3}.\r\nType {0} is marked as 'Array' or 'Page'."' " is 133.
Long Statement,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,CheckAccesibility,The length of the statement  "            throw new Exception(string.Format("Method {0}.{1} cannot be accessed from {2}.{3}.\r\nType {0} is marked as 'Array' or 'Page'."' " is 128.
Long Statement,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,CheckAccesibility,The length of the statement  "                throw new Exception(string.Format("Constructor {0}.{1} cannot be accessed from {2}.{3}.\r\nType {0} is marked as 'Array' or 'Page'."' " is 133.
Long Statement,Lang.Php.Compiler,TranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\TranslationInfo.cs,CheckAccesibility,The length of the statement  "            throw new Exception(string.Format("Method {0}.{1} cannot be accessed from {2}.{3}.\r\nType {0} is marked as 'Array' or 'Page'."' " is 128.
Long Statement,Lang.Php.Compiler.Source,PhpForStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpForStatement.cs,Simplify,The length of the statement  "            var theSame = EqualCode(_condition' condition) && EqualCode(_statement' statement) && EqualCode_Array(_initVariables' initVariables) && EqualCode_Array(_incrementors' incrementors); " is 181.
Long Statement,Lang.Php.Compiler.Source,PhpForStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpForStatement.cs,Simplify,The length of the statement  "            var theSame = EqualCode(_condition' condition) && EqualCode(_statement' statement) && EqualCode_Array(_initVariables' initVariables) && EqualCode_Array(_incrementors' incrementors); " is 181.
Long Statement,Lang.Php.Compiler.Source,PhpVariableExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpVariableExpression.cs,MakeLocal,The length of the statement  "            return new PhpVariableExpression(AddDollar(name)' isFunctionArgument ? PhpVariableKind.LocalArgument : PhpVariableKind.Local); " is 126.
Long Statement,Lang.Php.Compiler.Source,PhpVariableExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpVariableExpression.cs,MakeLocal,The length of the statement  "            return new PhpVariableExpression(AddDollar(name)' isFunctionArgument ? PhpVariableKind.LocalArgument : PhpVariableKind.Local); " is 126.
Long Statement,Lang.Php.Compiler.Translator,ExpressionSimplifier,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpBinaryOperatorExpression,The length of the statement  "                                var msg = string.Format("left={0}' right={1} '{2}+{3}'"' LValue' RValue' LValue == null ? null : LValue.GetType().FullName' RValue == null ? null : RValue.GetType().FullName); " is 175.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "            //throw new NotSupportedException(string.Format("Do not use PregMatchResult class properties. For testing purposes use Is{0}"' src.Member.Name)); " is 145.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "                case "Lang.Php.PregMatchResult MatchWithOffset(System.String' System.String' System.Collections.Generic.Dictionary`2[System.Object'Lang.Php.PregMatchWithOffset] ByRef' Int32)": " is 176.
Long Statement,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,TranslateToPhp,The length of the statement  "                case "Lang.Php.PregMatchResult Match(System.String' System.String' System.Collections.Generic.Dictionary`2[System.Object'System.String] ByRef' Int32)": " is 151.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,The length of the statement  "            // we can use "state.Principles.CurrentType" as third parameter if we prefer "new self()" or "new parent()" contructor calls " is 124.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,The length of the statement  "                        var translationMethods = replacer.ReplaceBy.GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) " is 122.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitCallConstructor,The length of the statement  "                        throw new Exception(string.Format("Klasa {0} nie umie przetłumaczyć konstruktora {1}"' replacer.ReplaceBy.FullName' replacer.SourceType.FullName)); " is 147.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitClassFieldAccessExpression,The length of the statement  "                        throw new NotSupportedException(string.Format("Unable to translate class field with destination option equal {0}"' tInfo.Destination)); " is 135.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The length of the statement  "                    var newPropertyInfo = classReplacer.ReplaceBy.GetProperty(src.Member.Name' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance); " is 145.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The length of the statement  "                                throw new NotSupportedException(string.Format("Property {1}.{0} has invalid 'Map' parameter in DirectCallAttribute"' propertyInfo.Name' propertyInfo.DeclaringType)); " is 165.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitMethodExpression,The length of the statement  "                    WriteWarning(string.Format("Using not public method {0}.{1} as expression"' src.Method.DeclaringType' src.Method.Name)); " is 120.
Long Statement,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitStaticMemberAccessExpression,The length of the statement  "            var mem = yy.GetMembers(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic).ToArray().Where(i => i.Name == src.MemberName).ToArray(); " is 149.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "            var classesToTranslate = _info.ClassTranslations.Values.Where(u => u.Type.Assembly.FullName == _info.CurrentAssembly.FullName).ToArray(); " is 137.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "            //     var interfacesToTranslate = info.ClassTranslations.Values.Where(u => u.Type.Assembly == info.CurrentAssembly).ToArray(); " is 127.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "                        var fileNames = classTranslationInfo.Type.GetCustomAttributes<RequireOnceAttribute>().Select(i => i.Filename).Distinct().ToArray(); " is 131.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "                        var fileNames = classTranslationInfo.Type.GetCustomAttributes<RequireOnceAttribute>().Select(i => i.Filename).Distinct().ToArray(); " is 131.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "            var classesToTranslate = _info.ClassTranslations.Values.Where(u => u.Type.Assembly.FullName == _info.CurrentAssembly.FullName).ToArray(); " is 137.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "            //     var interfacesToTranslate = info.ClassTranslations.Values.Where(u => u.Type.Assembly == info.CurrentAssembly).ToArray(); " is 127.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "                        var fileNames = classTranslationInfo.Type.GetCustomAttributes<RequireOnceAttribute>().Select(i => i.Filename).Distinct().ToArray(); " is 131.
Long Statement,Lang.Php.Compiler.Translator,Translator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Translator.cs,Translate,The length of the statement  "                        var fileNames = classTranslationInfo.Type.GetCustomAttributes<RequireOnceAttribute>().Select(i => i.Filename).Distinct().ToArray(); " is 131.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpCodeBlock,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpCodeBlock"' GetType().FullName)); " is 134.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpArrayCreateExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpArrayCreateExpression"' GetType().FullName)); " is 146.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpDefinedConstExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpDefinedConstExpression"' GetType().FullName)); " is 147.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpFreeExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpFreeExpression"' GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpBreakStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpBreakStatement"' GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpCodeModuleName,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpCodeModuleName"' GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpArrayAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpArrayAccessExpression"' GetType().FullName)); " is 146.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpAssignExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpAssignExpression"' GetType().FullName)); " is 141.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpClassFieldAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpClassFieldAccessExpression"' GetType().FullName)); " is 151.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpBinaryOperatorExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpBinaryOperatorExpression"' GetType().FullName)); " is 149.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpConditionalExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpConditionalExpression"' GetType().FullName)); " is 146.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpConstValue,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpConstValue"' GetType().FullName)); " is 135.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpElementAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpElementAccessExpression"' GetType().FullName)); " is 148.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpContinueStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpContinueStatement"' GetType().FullName)); " is 142.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpExpressionStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpExpressionStatement"' GetType().FullName)); " is 144.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpForEachStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpForEachStatement"' GetType().FullName)); " is 141.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpForStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpForStatement"' GetType().FullName)); " is 137.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpIfStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpIfStatement"' GetType().FullName)); " is 136.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpIncrementDecrementExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpIncrementDecrementExpression"' GetType().FullName)); " is 153.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpInstanceFieldAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpInstanceFieldAccessExpression"' GetType().FullName)); " is 154.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpPropertyAccessExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpPropertyAccessExpression"' GetType().FullName)); " is 149.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpMethodInvokeValue,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpMethodInvokeValue"' GetType().FullName)); " is 142.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpMethodCallExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpMethodCallExpression"' GetType().FullName)); " is 145.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpParenthesizedExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpParenthesizedExpression"' GetType().FullName)); " is 148.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpReturnStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpReturnStatement"' GetType().FullName)); " is 140.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpThisExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpThisExpression"' GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpUnaryOperatorExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpUnaryOperatorExpression"' GetType().FullName)); " is 148.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpVariableExpression,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpVariableExpression"' GetType().FullName)); " is 143.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpWhileStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpWhileStatement"' GetType().FullName)); " is 139.
Long Statement,Lang.Php.Compiler.Translator,PhpBaseVisitor<T>,C:\repos\isukces_cs2php\Lang.Php.Compiler\_Visitors\PhpBaseVisitor.cs,VisitPhpSwitchStatement,The length of the statement  "                throw new NotImplementedException(string.Format("Method {0} is not supported in class {1}"' "VisitPhpSwitchStatement"' GetType().FullName)); " is 140.
Long Statement,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassPropertyAccess,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassPropertyAccess.cs,TranslateToPhp,The length of the statement  "            throw new NotImplementedException(string.Format("Unable to translate ClassPropertyAccessExpression {0}.{1}"' src.Member.DeclaringType' src.Member.Name)); " is 153.
Long Statement,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The length of the statement  "                        // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] ) " is 197.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,SubstituteByReplacerMethod,The length of the statement  "            var found = otherClass.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | flags).Where(i => i.ToString() == search).FirstOrDefault(); " is 140.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,SubstituteByReplacerMethod,The length of the statement  "                throw new Exception(string.Format("Klasa {0} nie zawiera metody lustrzanej {1}\r\nDodaj\r\n{2}"' otherClass' search' src.MethodInfo.GetMethodHeader())); " is 152.
Long Statement,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,Try_DirectCallAttribute,The length of the statement  "            return CreateExpressionFromDirectCallAttribute(ctx' directCallAttribute' src.TargetObject' src.Arguments' src.MethodInfo); " is 122.
Long Statement,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The length of the statement  "            if (fn == "System.Nullable`1[System.Int32] ValidateInt(Type' System.String' Lang.Php.Filters.IntFlags' Lang.Php.Filters.IntOptions)") " is 133.
Long Statement,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInputServer,The length of the statement  "            if (fn == "System.String ValidateIp(Lang.Php.Filters.ServerVariables' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)") " is 125.
Long Statement,Lang.Php.Compiler.Translator.Node.Linq,EnumerableTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Linq\EnumerableTranslator.cs,TranslateToPhp,The length of the statement  "                if (fn == "System.Collections.Generic.List`1[System.String] ToList[String](System.Collections.Generic.IEnumerable`1[System.String])") " is 133.
Long Statement,Lang.Php.Compiler.Translator.Node.Linq,EnumerableTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Linq\EnumerableTranslator.cs,TranslateToPhp,The length of the statement  "                if (fn == "System.Linq.IOrderedEnumerable`1[System.Collections.Generic.IEnumerable`1[System.String]] OrderBy[IEnumerable`1'Func`2](System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[System.String]]' System.Func`2[System.Collections.Generic.IEnumerable`1[System.String]'System.Func`2[System.String'System.String]])") " is 346.
Complex Conditional,Lang.Php.Compiler.Source,PhpSourceBase,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpSourceBase.cs,EqualCode,The conditional expression  "(a is IPhpValue || a == null) && (b is IPhpValue || b == null)"  is complex.
Complex Conditional,Lang.Php.Compiler.Translator.Node,GraphTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\GraphTranslator.cs,TranslateToPhp,The conditional expression  "name =="Font1" || name =="Font2" || name =="Font3" || name =="Font4" || name =="Font5""  is complex.
Complex Conditional,Lang.Php.Compiler.Translator.Node,MysqliTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\MysqliTranslator.cs,TranslateToPhp,The conditional expression  "t == typeof(Int64)                                  || t == typeof(Int32)                                  || t == typeof(Byte)                                  || t == typeof(UInt64)                                  || t == typeof(UInt32)                                  || t == typeof(UInt16)"  is complex.
Empty Catch Block,Lang.Php.Compiler,AppConfigManipulator,C:\repos\isukces_cs2php\Lang.Php.Compiler\AppConfigManipulator.cs,Dispose,The method has an empty catch block.
Magic Number,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,LibNameFromAssembly,The following statement contains a magic number: if (tmp.EndsWith(".dll"))                  tmp = tmp.Substring(0' tmp.Length - 4);
Magic Number,Lang.Php.Compiler,AssemblyTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\AssemblyTranslationInfo.cs,LibNameFromAssembly,The following statement contains a magic number: if (tmp.EndsWith(".dll"))                  tmp = tmp.Substring(0' tmp.Length - 4);
Magic Number,Lang.Php.Compiler,PhpSourceCodeWriter,C:\repos\isukces_cs2php\Lang.Php.Compiler\PhpSourceCodeWriter.cs,OnIntentChange,The following statement contains a magic number: IntentString = new string(' '' intent * 4);
Magic Number,Lang.Php.Compiler.Source,PhpArrayCreateExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,MakeKeyValue,The following statement contains a magic number: if (key_values.Length % 2 == 1)                  throw new ArgumentException("key_values");
Magic Number,Lang.Php.Compiler.Source,PhpArrayCreateExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,MakeKeyValue,The following statement contains a magic number: for (var i = 1; i < key_values.Length; i += 2)              {                  if (key_values[i] == null)                      continue;                  var g = new PhpAssignExpression(key_values[i - 1]' key_values[i]);                  a.Add(g);              }
Magic Number,Lang.Php.Compiler.Source,PhpArrayCreateExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,MakeKeyValue,The following statement contains a magic number: if (key_values.Length % 2 == 1)                  throw new ArgumentException("key_values");
Magic Number,Lang.Php.Compiler.Source,PhpArrayCreateExpression,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Expressions\PhpArrayCreateExpression.cs,MakeKeyValue,The following statement contains a magic number: for (var i = 1; i < key_values.Length; i += 2)              {                  if (key_values[i] == null)                      continue;                  var g = new PhpAssignExpression(key_values[i - 1]' key_values[i]);                  a.Add(g);              }
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: var _hash_ = 17;
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + ((Library == (object)null) ? 0 : Library.GetHashCode());
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _name.GetHashCode();
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: var _hash_ = 17;
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + ((Library == (object)null) ? 0 : Library.GetHashCode());
Magic Number,Lang.Php.Compiler.Source,PhpCodeModuleName,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\PhpCodeModuleName.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _name.GetHashCode();
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,SplitToLines,The following statement contains a magic number: while (code.IndexOf("\r\n"' StringComparison.Ordinal) > 0)              {                  var idx = code.IndexOf("\r\n"' StringComparison.Ordinal) + 2;                  result.Add(code.Substring(0' idx));                  code = code.Substring(idx);              }
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,The following statement contains a magic number: {                  IPhpValue echoArguments = null;                  Action<IPhpValue> vv = u =>                  {                      // ReSharper disable once AccessToModifiedClosure                      echoArguments = echoArguments == null ? u : new PhpBinaryOperatorExpression("."' echoArguments' u);                  };                    var result = new List<EchoEmitItem>();                  foreach (var value in values)                  {                      if (value is PhpConstValue)                      {                          var constValue = (value as PhpConstValue).Value;                          var constStringValue = constValue as string;                          if (constStringValue != null)                          {                              #region Const-string                              var lines = SplitToLines(constStringValue);                              foreach (var i in lines)                              {                                  if (i.EndsWith("\r\n"))                                  {                                      vv(new PhpConstValue(i.Substring(0' i.Length - 2)));                                      vv(new PhpDefinedConstExpression("PHP_EOL"' null));                                      // ReSharper disable once PossibleNullReferenceException                                      result.Add(new EchoEmitItem(echoArguments.GetPhpCode(style)' false));                                      echoArguments = null;                                  }                                  else                                      vv(new PhpConstValue(i));                              }                              continue;                              #endregion                          }                      }                      vv(value);                  }                  if (echoArguments != null)                      result.Add(new EchoEmitItem(echoArguments.GetPhpCode(style)' false));                  return result.ToArray();              }
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,SplitToLines,The following statement contains a magic number: while (code.IndexOf("\r\n"' StringComparison.Ordinal) > 0)              {                  var idx = code.IndexOf("\r\n"' StringComparison.Ordinal) + 2;                  result.Add(code.Substring(0' idx));                  code = code.Substring(idx);              }
Magic Number,Lang.Php.Compiler.Source,PhpExpressionStatement,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Statements\PhpExpressionStatement.cs,GetEchoItems,The following statement contains a magic number: {                  IPhpValue echoArguments = null;                  Action<IPhpValue> vv = u =>                  {                      // ReSharper disable once AccessToModifiedClosure                      echoArguments = echoArguments == null ? u : new PhpBinaryOperatorExpression("."' echoArguments' u);                  };                    var result = new List<EchoEmitItem>();                  foreach (var value in values)                  {                      if (value is PhpConstValue)                      {                          var constValue = (value as PhpConstValue).Value;                          var constStringValue = constValue as string;                          if (constStringValue != null)                          {                              #region Const-string                              var lines = SplitToLines(constStringValue);                              foreach (var i in lines)                              {                                  if (i.EndsWith("\r\n"))                                  {                                      vv(new PhpConstValue(i.Substring(0' i.Length - 2)));                                      vv(new PhpDefinedConstExpression("PHP_EOL"' null));                                      // ReSharper disable once PossibleNullReferenceException                                      result.Add(new EchoEmitItem(echoArguments.GetPhpCode(style)' false));                                      echoArguments = null;                                  }                                  else                                      vv(new PhpConstValue(i));                              }                              continue;                              #endregion                          }                      }                      vv(value);                  }                  if (echoArguments != null)                      result.Add(new EchoEmitItem(echoArguments.GetPhpCode(style)' false));                  return result.ToArray();              }
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,FieldOrderGroup,The following statement contains a magic number: return fieldDefinition.IsConst ? 0 : (fieldDefinition.IsStatic ? 1 : 2);
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,The following statement contains a magic number: try              {                  if (IsEmpty)                      return;                  if (style.CurrentNamespace == null)                      style.CurrentNamespace = PhpNamespace.Root;                  if (style.CurrentNamespace != _name.Namespace)                      throw new Exception("Unable to emit class into different namespace");                  var e = "";                  if (!_baseTypeName.IsEmpty)                      e = " extends " + _baseTypeName.NameForEmit(style);                  writer.OpenLnF("class {0}{1} {{"' Name.ShortName' e);                  style.CurrentClass = _name; // do not move this before "class XXX" is emited                  for (var orderGroup = 0; orderGroup < 3; orderGroup++)                      foreach (var field in _fields.Where(_ => FieldOrderGroup(_) == orderGroup))                      {                          field.Emit(emiter' writer' style);                      }                  foreach (var me in Methods)                  {                      me.Emit(emiter' writer' style);                  }                  writer.CloseLn("}");              }              finally              {                  style.CurrentClass = saveStyleCurrentClass;                  style.CurrentNamespace = saveStyleCurrentNamespace;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,FieldOrderGroup,The following statement contains a magic number: return fieldDefinition.IsConst ? 0 : (fieldDefinition.IsStatic ? 1 : 2);
Magic Number,Lang.Php.Compiler.Source,PhpClassDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassDefinition.cs,Emit,The following statement contains a magic number: try              {                  if (IsEmpty)                      return;                  if (style.CurrentNamespace == null)                      style.CurrentNamespace = PhpNamespace.Root;                  if (style.CurrentNamespace != _name.Namespace)                      throw new Exception("Unable to emit class into different namespace");                  var e = "";                  if (!_baseTypeName.IsEmpty)                      e = " extends " + _baseTypeName.NameForEmit(style);                  writer.OpenLnF("class {0}{1} {{"' Name.ShortName' e);                  style.CurrentClass = _name; // do not move this before "class XXX" is emited                  for (var orderGroup = 0; orderGroup < 3; orderGroup++)                      foreach (var field in _fields.Where(_ => FieldOrderGroup(_) == orderGroup))                      {                          field.Emit(emiter' writer' style);                      }                  foreach (var me in Methods)                  {                      me.Emit(emiter' writer' style);                  }                  writer.CloseLn("}");              }              finally              {                  style.CurrentClass = saveStyleCurrentClass;                  style.CurrentNamespace = saveStyleCurrentNamespace;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Source,PhpClassMethodDefinition,C:\repos\isukces_cs2php\Lang.Php.Compiler\Source\_Definitions\PhpClassMethodDefinition.cs,Refactor,The following statement contains a magic number: foreach (var group in groups)              {                  if (group.Where(i => i.IsArgument).Any())                      continue;                  if (!group.First().VariableName.Contains("@"))                      continue;                  string nn;                  if (ii < 26)                      nn = ((char)(65 + ii)).ToString();                  else                      nn = ((char)(65 + ii / 26)).ToString() + ((char)(65 + ii % 26)).ToString();                    nn = "$" + nn;                  nn += "___" + group.First().VariableName.Replace("$"' "").Replace("@"' "_");                    // po prostu                  nn = group.First().VariableName.Replace("@"' "__");                  foreach (var item in group)                      item.ChangeNameAction(nn);                  ii++;              }
Magic Number,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,Make,The following statement contains a magic number: for (int i = 2; i < src.Arguments.Length; i++)              {                  p.Add(ctx.TranslateValue(src.Arguments[i].MyValue));                  if (addoffset && i == 2)                      p.Add(new PhpDefinedConstExpression("PREG_OFFSET_CAPTURE"' null));                }
Magic Number,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,Make,The following statement contains a magic number: for (int i = 2; i < src.Arguments.Length; i++)              {                  p.Add(ctx.TranslateValue(src.Arguments[i].MyValue));                  if (addoffset && i == 2)                      p.Add(new PhpDefinedConstExpression("PREG_OFFSET_CAPTURE"' null));                }
Magic Number,Lang.Php.Compiler.Translator,PregTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PregTranslator.cs,GetPriority,The following statement contains a magic number: return -100;
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: var _hash_ = 17;
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _sourceType.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _replaceBy.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: var _hash_ = 17;
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _sourceType.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator,ClassReplaceInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ClassReplaceInfo.cs,GetHashCode,The following statement contains a magic number: _hash_ = _hash_ * 31 + _replaceBy.GetHashCode();
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassField,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassField.cs,GetPriority,The following statement contains a magic number: return 9;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_ClassPropertyAccess,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_ClassPropertyAccess.cs,GetPriority,The following statement contains a magic number: return 999;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,GetPriority,The following statement contains a magic number: return 9;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslatorForConstructor,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Constructor.cs,TranslateToPhp,The following statement contains a magic number: if (cType == typeof(Dictionary<'>))              {                  var a = new PhpArrayCreateExpression();                  if (src.Initializers == null || src.Initializers.Length == 0) return a;                  var b = new List<IPhpValue>();                  foreach (var i in src.Initializers)                  {                      var ii = i as IValueTable_PseudoValue;                      if (ii != null)                      {                          if (ii.Items == null || ii.Items.Length != 2)                              throw new NotSupportedException();                          var l = ctx.TranslateValue(ii.Items[0]);                          var r = ctx.TranslateValue(ii.Items[1]);                          b.Add(new PhpAssignExpression(l' r));                      }                      else                          throw new NotSupportedException();                  }                  a.Initializers = b.ToArray();                  return a;              }
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Methods.cs,GetPriority,The following statement contains a magic number: return 2;
Magic Number,Lang.Php.Compiler.Translator.Node,BasicTranslator_Property,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\BasicTranslator_Property.cs,GetPriority,The following statement contains a magic number: return 100;
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Magic Number,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,mk,The following statement contains a magic number: if (sec1 % 60 == 0)                  return string.Format("PT{0}M"' sec1 / SecPerMin);
Magic Number,Lang.Php.Compiler.Translator.Node,DotnetMethodCallTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DotnetMethodCallTranslator.cs,GetPriority,The following statement contains a magic number: return 999;
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.Nullable`1[System.Int32] ValidateInt(Type' System.String' Lang.Php.Filters.IntFlags' Lang.Php.Filters.IntOptions)")                  return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.Nullable`1[System.Int32] ValidateInt(Type' System.String' Lang.Php.Filters.IntFlags' Lang.Php.Filters.IntOptions)")                  return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.Nullable`1[System.Int32] ValidateInt(Type' System.String' Lang.Php.Filters.IntFlags' Lang.Php.Filters.IntOptions)")                  return Make_FilterInput(                      ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                      FILTER_VALIDATE_INT'                      src.Arguments.Length < 4 ? null : ctx.TranslateValue(src.Arguments[3])'                      ctx.TranslateValue(src.Arguments[2])                      );
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "Boolean ValidateBoolean(Type' System.String' Boolean)")              {                  var options = PhpArrayCreateExpression.MakeKeyValue(                    new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));                  return Make_FilterInput(                        ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                        FILTER_VALIDATE_BOOLEAN'                        options);              }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.String ValidateIp(Type' System.String' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  //     var other = FilterInput.ValidateIp(FilterInput.Type.Get' "Somename"'IpFlags.IpV4);                  // not tested well                  // var options = PhpArrayCreateExpression.MakeKeyValue(                  // new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));                  var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);                  return Make_FilterInput(                       ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                       FILTER_VALIDATE_IP'                       options);              }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.String ValidateIp(Type' System.String' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  //     var other = FilterInput.ValidateIp(FilterInput.Type.Get' "Somename"'IpFlags.IpV4);                  // not tested well                  // var options = PhpArrayCreateExpression.MakeKeyValue(                  // new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));                  var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);                  return Make_FilterInput(                       ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                       FILTER_VALIDATE_IP'                       options);              }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.String ValidateIp(Type' System.String' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  //     var other = FilterInput.ValidateIp(FilterInput.Type.Get' "Somename"'IpFlags.IpV4);                  // not tested well                  // var options = PhpArrayCreateExpression.MakeKeyValue(                  // new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));                  var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);                  return Make_FilterInput(                       ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                       FILTER_VALIDATE_IP'                       options);              }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterInput,The following statement contains a magic number: if (fn == "System.String ValidateIp(Type' System.String' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  //     var other = FilterInput.ValidateIp(FilterInput.Type.Get' "Somename"'IpFlags.IpV4);                  // not tested well                  // var options = PhpArrayCreateExpression.MakeKeyValue(                  // new PhpConstValue("default")' ctx.TranslateValue(src.Arguments[2].MyValue));                  var options = MakeOptionsFlags(                      src.Arguments.Length > 2 ? ctx.TranslateValue(src.Arguments[2]) : null'                      src.Arguments.Length > 3 ? ctx.TranslateValue(src.Arguments[3]) : null);                  return Make_FilterInput(                       ctx.TranslateValue(src.Arguments[0])' ctx.TranslateValue(src.Arguments[1])'                       FILTER_VALIDATE_IP'                       options);              }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,MakeFilter,The following statement contains a magic number: if (src.Arguments.Length > 2)                  v.Add(ctx.TranslateValue(src.Arguments[2]));
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,MakeFilter,The following statement contains a magic number: if (src.Arguments.Length > 2)                  v.Add(ctx.TranslateValue(src.Arguments[2]));
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterVar,The following statement contains a magic number: if (fn == "System.String ValidateIp(System.Object' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  IPhpValue flags = null;                  IPhpValue def = null;                  if (src.Arguments.Length > 1)                      flags = ctx.TranslateValue(src.Arguments[1].MyValue);                  if (src.Arguments.Length > 2)                      def = ctx.TranslateValue(src.Arguments[2].MyValue);                  return Make_FilterVar(                       ctx.TranslateValue(src.Arguments[0].MyValue)'                       FILTER_VALIDATE_IP'                       def'                       flags);                  //PhpArrayCreateExpression.MakeKeyValue(                  //new PhpConstValue("default")'                   //ctx.TranslateValue(src.Arguments[1].MyValue))'                  //ctx.TranslateValue(src.Arguments[1].MyValue)                }
Magic Number,Lang.Php.Compiler.Translator.Node,FilterTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\FilterTranslator.cs,_FilterVar,The following statement contains a magic number: if (fn == "System.String ValidateIp(System.Object' Lang.Php.Filters.IpFlags' Lang.Php.Filters.IpOptions)")              {                  IPhpValue flags = null;                  IPhpValue def = null;                  if (src.Arguments.Length > 1)                      flags = ctx.TranslateValue(src.Arguments[1].MyValue);                  if (src.Arguments.Length > 2)                      def = ctx.TranslateValue(src.Arguments[2].MyValue);                  return Make_FilterVar(                       ctx.TranslateValue(src.Arguments[0].MyValue)'                       FILTER_VALIDATE_IP'                       def'                       flags);                  //PhpArrayCreateExpression.MakeKeyValue(                  //new PhpConstValue("default")'                   //ctx.TranslateValue(src.Arguments[1].MyValue))'                  //ctx.TranslateValue(src.Arguments[1].MyValue)                }
Magic Number,Lang.Php.Compiler.Translator.Node,GraphTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\GraphTranslator.cs,TranslateToPhp,The following statement contains a magic number: if (src.Member.DeclaringType == typeof(Font))              {                  var name = src.Member.Name;                  if (name =="Font1" || name =="Font2" || name =="Font3" || name =="Font4" || name =="Font5" ) {                      var size = int.Parse(name.Substring(4));                      return new PhpConstValue(size);                  }                  throw new NotImplementedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,TranslateToPhp,The following statement contains a magic number: if (src.MethodInfo.DeclaringType == typeof(Html))              {                  this.ctx = ctx;                  list = new List<IPhpValue>();                  var methodName = src.MethodInfo.Name;                  var isecho = methodName.StartsWith("Echo");                  if (isecho)                      methodName = methodName.Substring(4);                  if (methodName == "TagBound")                  {                      FillTagOpen(2' ctx' src' ">");                      Append(src.Arguments[1]);                      FillTagEnd(src.Arguments[0]);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Attributes")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(" ");                          Append(key);                          Append("=\"");                          Append(value);                          Append("\"");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpen" || methodName == "TagSingle")                  {                      var end = methodName == "TagOpen" ? ">" : " />";                      FillTagOpen(1' ctx' src' end);                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagOpenOpen")                  {                      FillTagOpen(1' ctx' src' "");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "TagClose")                  {                      FillTagEnd(src.Arguments[0]);                      if (src.Arguments.Length == 2)                      {  //                        throw new NotSupportedException();                          Append("\r\n");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Comment")                  {                      Append("<!-- ");                      Append(src.Arguments[0]);                      Append(" -->");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Pixels" || methodName == "Percent")                  {                      Append(src.Arguments[0]);                      Append(methodName == "Pixels" ? "px" : "%");                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "Mm")                  {                      Append(src.Arguments[0]);                      Append("mm");                      return MakeEchoIfNecessary(isecho);                  }                    if (methodName == "Css")                  {                      for (var i = 1; i < src.Arguments.Length; i += 2)                      {                          var key = src.Arguments[i - 1];                          var value = src.Arguments[i];                          Append(key);                          Append(":");                          Append(value);                          Append(";");                      }                      return MakeEchoIfNecessary(isecho);                  }                  if (methodName == "CssBorder")                  {                      Append(src.Arguments[0]);                      Append(" ");                      Append(src.Arguments[1]);                      Append(" ");                      Append(src.Arguments[2]);                      return MakeEchoIfNecessary(isecho);                  }                  throw new NotSupportedException();              }
Magic Number,Lang.Php.Compiler.Translator.Node,Lang__Php__Html__Methods,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\Lang__Php__Html__Methods.cs,FillTagOpen,The following statement contains a magic number: for (var i = argsFrom + 1; i < src.Arguments.Length; i += 2)              {                  var key = src.Arguments[i - 1];                  var value = src.Arguments[i];                  Append(" ");                  Append(key);                  Append("=\"");                  Append(value);                  Append("\"");              }
Magic Number,Lang.Php.Compiler.Translator.Node,ResponseHeaderTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\ResponseHeaderTranslator.cs,TranslateToPhp,The following statement contains a magic number: switch (fn)              {                  case "Void Expires(System.DateTime)":                      return MkHeader(ctx' "Expires"' _PhpFormat(src.Arguments[0]));                  case "Void LastModified(System.DateTime)":                      return MkHeader(ctx' "Last-Modified"' _PhpFormat(src.Arguments[0]));                  case "Void ContentType(System.String' Boolean)":                      return src.Arguments.Length == 2                          ? MkHeader(ctx' "Last-Modified"' src.Arguments[0]' src.Arguments[1])                          : MkHeader(ctx' "Last-Modified"' src.Arguments[0]);              }
Magic Number,Lang.Php.Compiler.Translator.Node,StringExtensionsTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\StringExtensionsTranslator.cs,TranslateToPhp,The following statement contains a magic number: list.Arguments.AddRange(a.Skip(2));
Magic Number,Lang.Php.Compiler.Translator.Node,StringExtensionsTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\StringExtensionsTranslator.cs,GetPriority,The following statement contains a magic number: return 2;
Missing Default,Lang.Php.Compiler,PathUtil,C:\repos\isukces_cs2php\Lang.Php.Compiler\PathUtil.cs,MakeWinPath,The following switch statement is missing a default case: switch (atBegin)              {                  case SeparatorProcessing.Append:                      if (!path.StartsWith(WIN_SEP))                          path = WIN_SEP + path;                      break;                  case SeparatorProcessing.Remove:                      if (path.StartsWith(WIN_SEP))                          path = path.Substring(1);                      break;              }
Missing Default,Lang.Php.Compiler,PathUtil,C:\repos\isukces_cs2php\Lang.Php.Compiler\PathUtil.cs,MakeWinPath,The following switch statement is missing a default case: switch (atEnd)              {                  case SeparatorProcessing.Append:                      if (!path.EndsWith(WIN_SEP))                          path = path + WIN_SEP;                      break;                  case SeparatorProcessing.Remove:                      if (path.EndsWith(WIN_SEP))                          path = path.Substring(0' path.Length - 1);                      break;              }
Missing Default,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The following switch statement is missing a default case: switch (fti._destination)              {                  case FieldTranslationDestionations.JustValue:                  case FieldTranslationDestionations.GlobalVariable:                      canBeNull = true;                       fti._includeModule = null; // force null                      break;                  case FieldTranslationDestionations.DefinedConst:                  case FieldTranslationDestionations.ClassConst:                  case FieldTranslationDestionations.NormalField:                      var cti = info.GetOrMakeTranslationInfo(fieldInfoDeclaringType);                      fti._includeModule = cti.ModuleName;                      if (cti.BuildIn)                      {                          fti._includeModule = null;                          canBeNull = true;                      }                      var isFieldOutsideClass = fti._destination == FieldTranslationDestionations.GlobalVariable ||                                    fti._destination == FieldTranslationDestionations.DefinedConst;                      {                          // can be in other module for GlobalVariable and DefinedConst                          var moduleAttribute = fieldInfo.GetCustomAttribute<ModuleAttribute>();                          if (moduleAttribute != null)                          {                              if (!isFieldOutsideClass)                                  throw new Exception(string.Format("Module attribute can only be defined for GlobalVariable or DefinedConst. Check {0}."' fieldInfo.ExcName()));                              fti._includeModule = new PhpCodeModuleName(moduleAttribute.ModuleShortName'                                  info.GetOrMakeTranslationInfo(fieldInfoDeclaringType.Assembly));                          }                      }                      if (cti.IsPage)                          fti._isDefinedInNonincludableModule = true;                      if (!isFieldOutsideClass)                      {                          if (cti.IsArray || cti.Type.IsEnum || cti.BuildIn)                          {                              canBeNull = true;                              fti._includeModule = null; // force null                          }                          else if (cti.DontIncludeModuleForClassMembers)                              throw new Exception(                                  string.Format("field {0} belongs to nonincludable class (array' enum or skipped)"'                                      fieldInfo.ExcName()));                      }                      break;              }
Missing Default,Lang.Php.Compiler,FieldTranslationInfo,C:\repos\isukces_cs2php\Lang.Php.Compiler\_TranslationInfo\FieldTranslationInfo.cs,FromFieldInfo,The following switch statement is missing a default case: switch (fti._destination)              {                  case FieldTranslationDestionations.JustValue:                  case FieldTranslationDestionations.GlobalVariable:                      canBeNull = true;                       fti._includeModule = null; // force null                      break;                  case FieldTranslationDestionations.DefinedConst:                  case FieldTranslationDestionations.ClassConst:                  case FieldTranslationDestionations.NormalField:                      var cti = info.GetOrMakeTranslationInfo(fieldInfoDeclaringType);                      fti._includeModule = cti.ModuleName;                      if (cti.BuildIn)                      {                          fti._includeModule = null;                          canBeNull = true;                      }                      var isFieldOutsideClass = fti._destination == FieldTranslationDestionations.GlobalVariable ||                                    fti._destination == FieldTranslationDestionations.DefinedConst;                      {                          // can be in other module for GlobalVariable and DefinedConst                          var moduleAttribute = fieldInfo.GetCustomAttribute<ModuleAttribute>();                          if (moduleAttribute != null)                          {                              if (!isFieldOutsideClass)                                  throw new Exception(string.Format("Module attribute can only be defined for GlobalVariable or DefinedConst. Check {0}."' fieldInfo.ExcName()));                              fti._includeModule = new PhpCodeModuleName(moduleAttribute.ModuleShortName'                                  info.GetOrMakeTranslationInfo(fieldInfoDeclaringType.Assembly));                          }                      }                      if (cti.IsPage)                          fti._isDefinedInNonincludableModule = true;                      if (!isFieldOutsideClass)                      {                          if (cti.IsArray || cti.Type.IsEnum || cti.BuildIn)                          {                              canBeNull = true;                              fti._includeModule = null; // force null                          }                          else if (cti.DontIncludeModuleForClassMembers)                              throw new Exception(                                  string.Format("field {0} belongs to nonincludable class (array' enum or skipped)"'                                      fieldInfo.ExcName()));                      }                      break;              }
Missing Default,Lang.Php.Compiler.Translator,ExpressionSimplifier,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\ExpressionSimplifier.cs,VisitPhpBinaryOperatorExpression,The following switch statement is missing a default case: switch (node.Operator)              {                  case ".":                      {                          var _left = Simplify(node.Left);                          var _right = Simplify(node.Right);                          var n = new PhpBinaryOperatorExpression(node.Operator' _left' _right);                          var c = ExplodeConcats(n' ".").ToList();                                for (var i = 1; i < c.Count; i++)                          {                              var L = c[i - 1];                              var R = c[i];                              if (L is PhpConstValue && R is PhpConstValue)                              {                                  var LValue = (L as PhpConstValue).Value;                                  var RValue = (R as PhpConstValue).Value;                                  if (LValue is string && RValue is string)                                  {                                      c[i - 1] = new PhpConstValue((string)LValue + (string)RValue);                                      c.RemoveAt(i);                                      i--;                                      continue;                                  }                                  var LCode = PhpValues.ToPhpCodeValue(LValue);                                  var RCode = PhpValues.ToPhpCodeValue(RValue);                                  string left' right;                                  if (LCode.TryGetPhpString(out left) && RCode.TryGetPhpString(out right))                                  {                                      c[i - 1] = new PhpConstValue(left + right);                                      c.RemoveAt(i);                                      i--;                                      continue;                                  }                                    var msg = string.Format("left={0}' right={1} '{2}+{3}'"' LValue' RValue' LValue == null ? null : LValue.GetType().FullName' RValue == null ? null : RValue.GetType().FullName);    #if DEBUG                                  throw new NotImplementedException(msg);  #else                          Console.WriteLine(msg);                          Console.WriteLine(L.GetPhpCode(null));                          Console.WriteLine(R.GetPhpCode(null));                          continue;  #endif                              }                          }                          var result = c[0];                          if (c.Count > 1)                              foreach (var x2 in c.Skip(1))                                  result = new PhpBinaryOperatorExpression("."' result' x2);                          return ReturnSubst(node' result);                      }                  case "|":                      {                          //                    var aLeft = node.Left as PhpConstValue;                          //                    var aRight = node.Right as PhpConstValue;                          //                    if (aLeft != null && aRight != null && aLeft.Value!=null && aRight.Value!=null)                          //                    {                          //                        var typeLeft = aLeft.Value.GetType();                          //                        var typeRight = aRight.Value.GetType();                          //                        if (typeLeft.IsEnum && typeLeft == typeRight)                          //                        {                          //                            var leftValue = (int)aLeft.Value;                          //                            var rightValue = (int)aRight.Value;                          //                            var c = leftValue | rightValue;                          //                            var dd = PhpCodeValue.FromInt(c' true);                          //                            var d = new PhpConstValue(c' false);                          //                            return d;                          //                        }                          //                    }                      }                      break;              }
Missing Default,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitBinaryOperatorExpression,The following switch statement is missing a default case: switch (src.Operator)                      {                          case "+":                              return new PhpConstValue(s1 + s2);                          case "-":                              return new PhpConstValue(s1 - s2);                          case "*":                              return new PhpConstValue(s1 * s2);                          case "/":                              return new PhpConstValue(s1 / s2);                      }
Missing Default,Lang.Php.Compiler.Translator,PhpValueTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\PhpValueTranslator.cs,VisitInstancePropertyAccessExpression,The following switch statement is missing a default case: switch (ats.CallType)                                  {                                      case MethodCallStyles.Procedural:                                          method.Arguments.Add(new PhpMethodInvokeValue(phpTargetObject));                                          return method;                                      //    case MethodCallStyles.:                                      //        method.Arguments.Add(new PhpMethodInvokeValue(phpTargetObject));                                      //        return method;                                      //    default:                                      //        throw new NotSupportedException();                                  }
Missing Default,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (src.Info.ToString())              {                  case "Void .ctor(Int32' Int32' Int32)":                      {                          //                $date = new DateTime();                          //$date->setDate(2001' 2' 3);                          var dtObject = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          dtObject.DontIncludeClass = true;                          // date_date_set                           var b = new PhpMethodCallExpression("date_date_set"'                              dtObject'                              ctx.TranslateValue(src.Arguments[0])'                              ctx.TranslateValue(src.Arguments[1])'                              ctx.TranslateValue(src.Arguments[2])                              );                          var c = new PhpMethodCallExpression("date_time_set"'                              b'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)                              );                          var mktime = new PhpMethodCallExpression("mktime"'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              new PhpConstValue(0)'                              ctx.TranslateValue(src.Arguments[1])' //month                              ctx.TranslateValue(src.Arguments[2])'// day                              ctx.TranslateValue(src.Arguments[0]) // year                              );                          var epoch = new PhpBinaryOperatorExpression("."' new PhpConstValue("@")' mktime);                          dtObject.Arguments.Add(new PhpMethodInvokeValue(epoch));                          return dtObject;                          // int mktime ([ int $hour = date("H") [' int $minute = date("i") [' int $second = date("s") [' int $month = date("n") [' int $day = date("j") [' int $year = date("Y") [' int $is_dst = -1 ]]]]]]] )                          // $datetimeobject = new DateTime(mktime(0' 0' 0' $data[$j]['month']' $data[$j]['day']'$data[$j]['year']));                      }              }
Missing Default,Lang.Php.Compiler.Translator.Node,DateTimeTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\DateTimeTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (src.Member.Name)              {                  case "Now":                      {                          // $date = new DateTime('2000-01-01');                          var c = PhpMethodCallExpression.MakeConstructor("DateTime"' null);                          c.DontIncludeClass = true;                          return c;                      }              }
Missing Default,Lang.Php.Compiler.Translator.Node,ResponseHeaderTranslator,C:\repos\isukces_cs2php\Lang.Php.Compiler\Translator\Node\ResponseHeaderTranslator.cs,TranslateToPhp,The following switch statement is missing a default case: switch (fn)              {                  case "Void Expires(System.DateTime)":                      return MkHeader(ctx' "Expires"' _PhpFormat(src.Arguments[0]));                  case "Void LastModified(System.DateTime)":                      return MkHeader(ctx' "Last-Modified"' _PhpFormat(src.Arguments[0]));                  case "Void ContentType(System.String' Boolean)":                      return src.Arguments.Length == 2                          ? MkHeader(ctx' "Last-Modified"' src.Arguments[0]' src.Arguments[1])                          : MkHeader(ctx' "Last-Modified"' src.Arguments[0]);              }
