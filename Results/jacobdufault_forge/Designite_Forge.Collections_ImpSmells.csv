Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,ConvertWorldToIndex,The method has 5 parameters. Parameters: worldScale' xWorld' zWorld' xIndex' zIndex
Long Parameter List,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,ConvertIndexToWorld,The method has 5 parameters. Parameters: worldScale' xIndex' zIndex' xWorld' zWorld
Long Statement,Forge.Collections,UnorderedList<T>,C:\repos\jacobdufault_forge\Forge.Collections\UnorderedList.cs,Add,The length of the statement  "                throw new Exception(String.Format("Item {0} is already stored in another UnorderedList' or has been added twice to the same one"' item)); " is 137.
Magic Number,Forge.Collections,Bag<T>,C:\repos\jacobdufault_forge\Forge.Collections\Bag.cs,Add,The following statement contains a magic number: if (Length == _items.Length) {                  Array.Resize(ref _items' (int)((_items.Length + 1) * 1.5));              }
Magic Number,Forge.Collections,Bag<T>,C:\repos\jacobdufault_forge\Forge.Collections\Bag.cs,Insert,The following statement contains a magic number: if (Length == _items.Length) {                  Array.Resize(ref _items' (int)((_items.Length + 1) * 1.5));              }
Magic Number,Forge.Collections,SparseArray<T>,C:\repos\jacobdufault_forge\Forge.Collections\SparseArray.cs,EnsureIndex,The following statement contains a magic number: if (index >= _items.Length) {                  int newSize = _items.Length;                  while (index >= newSize) {                      newSize *= 2;                  }                    Array.Resize(ref _items' newSize);              }
Magic Number,Forge.Collections,UnorderedList<T>,C:\repos\jacobdufault_forge\Forge.Collections\UnorderedList.cs,Add,The following statement contains a magic number: if (Length == Items.Length) {                  Array.Resize(ref Items' Items.Length * 2);              }
Magic Number,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,MapWorldToIndex,The following statement contains a magic number: if (world >= 0) {                  return (world / worldScale) * 2;              }                else {                  return (-(world + 1) / worldScale) * 2 + 1;              }
Magic Number,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,MapWorldToIndex,The following statement contains a magic number: if (world >= 0) {                  return (world / worldScale) * 2;              }                else {                  return (-(world + 1) / worldScale) * 2 + 1;              }
Magic Number,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,MapIndexToWorld,The following statement contains a magic number: if (index % 2 == 0) {                  return (index / 2) * worldScale;              }                // negative world coordinate              else {                  return (-(index + 1) / 2) * worldScale;              }
Magic Number,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,MapIndexToWorld,The following statement contains a magic number: if (index % 2 == 0) {                  return (index / 2) * worldScale;              }                // negative world coordinate              else {                  return (-(index + 1) / 2) * worldScale;              }
Magic Number,Forge.Collections,WorldIndexCoordinateTransform,C:\repos\jacobdufault_forge\Forge.Collections\WorldIndexCoordinateTransform.cs,MapIndexToWorld,The following statement contains a magic number: if (index % 2 == 0) {                  return (index / 2) * worldScale;              }                // negative world coordinate              else {                  return (-(index + 1) / 2) * worldScale;              }
