Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Forge.Utilities,TypeExtensions,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeExtensions.cs,IsImplementationOf,Cyclomatic complexity of the method is 8
Complex Method,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,Cyclomatic complexity of the method is 18
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 12 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 14 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 16 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 18 parameters.
Long Parameter List,Forge.Utilities,Contract,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Contract.cs,AssertArguments,The method has 20 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 5 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 6 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 7 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 8 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 9 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 10 parameters.
Long Parameter List,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The method has 11 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 5 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 7 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 9 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Debug,The method has 11 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 5 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 7 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 9 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Info,The method has 11 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 5 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 7 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 9 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Warn,The method has 11 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 5 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 7 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 9 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Error,The method has 11 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 5 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 6 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 7 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 8 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 9 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 10 parameters.
Long Parameter List,Forge.Utilities,Log,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Log.cs,Fatal,The method has 11 parameters.
Long Statement,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The length of the statement  "	if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false)) " is 150.
Long Statement,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,sin_lookup,The length of the statement  "		return Real.Create (SIN_TABLE [i.RawValue]' false) + ((Real.Create (SIN_TABLE [i.RawValue + 1]' false) - Real.Create (SIN_TABLE [i.RawValue]' false)) / Real.Create (10' false)) * j; " is 181.
Long Statement,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Asin,The length of the statement  "	Real f1 = mul (mul (mul (mul (Real.Create (145103 >> Real.SHIFT_AMOUNT' false)' F) - Real.Create (599880 >> Real.SHIFT_AMOUNT' false)' F) + Real.Create (1420468 >> Real.SHIFT_AMOUNT' false)' F) - Real.Create (3592413 >> Real.SHIFT_AMOUNT' false)' F) + Real.Create (26353447 >> Real.SHIFT_AMOUNT' false); " is 303.
Long Statement,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,Equals,The length of the statement  "	return ReferenceEquals (tuple' null) == false && EqualityComparer<T1>.Default.Equals (tuple.Item1' Item1) && EqualityComparer<T2>.Default.Equals (tuple.Item2' Item2); " is 166.
Long Statement,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,Equals,The length of the statement  "	return ReferenceEquals (tuple' null) == false && EqualityComparer<T1>.Default.Equals (tuple.Item1' Item1) && EqualityComparer<T2>.Default.Equals (tuple.Item2' Item2) && EqualityComparer<T3>.Default.Equals (tuple.Item3' Item3); " is 226.
Long Statement,Forge.Utilities,TypeExtensions,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeExtensions.cs,GetInterface,The length of the statement  "		throw new ArgumentException ("GetInterface requires that if the interface " + "type is generic' then it must be the generic type definition' not a " + "specific generic type instantiation"); " is 190.
Long Statement,Forge.Utilities,TypeExtensions,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeExtensions.cs,IsImplementationOf,The length of the statement  "		throw new ArgumentException ("IsImplementationOf requires that if the interface " + "type is generic' then it must be the generic type definition' not a " + "specific generic type instantiation"); " is 196.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CreateInstance,The length of the statement  "		throw new InvalidOperationException ("Unable to create instance of " + ReflectedType.FullName + "; there is no default constructor"' e); " is 136.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CreateInstance,The length of the statement  "		throw new InvalidOperationException ("Constructor of " + ReflectedType.FullName + " threw an exception when creating an instance"' e); " is 134.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "				Log<TypeMetadata>.Info ("Ignoring property {0}.{1} because it has a " + "NonSerialized or a NotSerializable attribute"' reflectedType.FullName' property.Name); " is 159.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "			Log<TypeMetadata>.Info ("Ignoring property {0}.{1} because it cannot both be " + "read from and written to"' reflectedType.FullName' property.Name); " is 148.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "			Log<TypeMetadata>.Info ("Adding property {0}.{1} to metadata for {2}"' reflectedType.FullName' property.Name' reflectedType.FullName); " is 134.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "			Log<TypeMetadata>.Info ("Ignoring field {0}.{1} because it is marked " + "NoNSerialized"' reflectedType.FullName' field.Name); " is 126.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "				Log<TypeMetadata>.Info ("Ignoring field {0}.{1} because it has a " + "NonSerialized or a NotSerializable attribute"' reflectedType.FullName' field.Name); " is 153.
Long Statement,Forge.Utilities,TypeMetadata,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\TypeMetadata.cs,CollectProperties,The length of the statement  "			Log<TypeMetadata>.Info ("Adding field {0}.{1} to metadata for {2}"' reflectedType.FullName' field.Name' reflectedType.FullName); " is 128.
Complex Conditional,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The conditional expression  "i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false)"  is complex.
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else if (n == '8')  				_stringBuilder.Append (arg8);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else if (n == '8')  				_stringBuilder.Append (arg8);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else if (n == '8')  			_stringBuilder.Append (arg8);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else if (n == '8')  			_stringBuilder.Append (arg8);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else if (n == '8')  		_stringBuilder.Append (arg8);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else if (n == '8')  		_stringBuilder.Append (arg8);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else if (n == '8')  				_stringBuilder.Append (arg8);  			else if (n == '9')  				_stringBuilder.Append (arg9);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: lock (_stringBuilder) {  	_stringBuilder.Length = 0;  	int length = format.Length;  	int start = 0' current = 0;  	while (current < length) {  		char c = format [current];  		if (c == '{') {  			Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  			if (start != current)  				_stringBuilder.Append (format' start' current - start);  			char n = format [current + 1];  			// variable code  			if (n == '0')  				_stringBuilder.Append (arg0);  			else if (n == '1')  				_stringBuilder.Append (arg1);  			else if (n == '2')  				_stringBuilder.Append (arg2);  			else if (n == '3')  				_stringBuilder.Append (arg3);  			else if (n == '4')  				_stringBuilder.Append (arg4);  			else if (n == '5')  				_stringBuilder.Append (arg5);  			else if (n == '6')  				_stringBuilder.Append (arg6);  			else if (n == '7')  				_stringBuilder.Append (arg7);  			else if (n == '8')  				_stringBuilder.Append (arg8);  			else if (n == '9')  				_stringBuilder.Append (arg9);  			else  				throw new ArgumentException ("Invalid replacement group in format string " + format);  			current += 2;  			start = current + 1;  		}  		++current;  	}  	if (start != current)  		_stringBuilder.Append (format' start' length - start);  	return _stringBuilder.ToString ();  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else if (n == '8')  			_stringBuilder.Append (arg8);  		else if (n == '9')  			_stringBuilder.Append (arg9);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: while (current < length) {  	char c = format [current];  	if (c == '{') {  		Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  		if (start != current)  			_stringBuilder.Append (format' start' current - start);  		char n = format [current + 1];  		// variable code  		if (n == '0')  			_stringBuilder.Append (arg0);  		else if (n == '1')  			_stringBuilder.Append (arg1);  		else if (n == '2')  			_stringBuilder.Append (arg2);  		else if (n == '3')  			_stringBuilder.Append (arg3);  		else if (n == '4')  			_stringBuilder.Append (arg4);  		else if (n == '5')  			_stringBuilder.Append (arg5);  		else if (n == '6')  			_stringBuilder.Append (arg6);  		else if (n == '7')  			_stringBuilder.Append (arg7);  		else if (n == '8')  			_stringBuilder.Append (arg8);  		else if (n == '9')  			_stringBuilder.Append (arg9);  		else  			throw new ArgumentException ("Invalid replacement group in format string " + format);  		current += 2;  		start = current + 1;  	}  	++current;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else if (n == '8')  		_stringBuilder.Append (arg8);  	else if (n == '9')  		_stringBuilder.Append (arg9);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: if (c == '{') {  	Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  	if (start != current)  		_stringBuilder.Append (format' start' current - start);  	char n = format [current + 1];  	// variable code  	if (n == '0')  		_stringBuilder.Append (arg0);  	else if (n == '1')  		_stringBuilder.Append (arg1);  	else if (n == '2')  		_stringBuilder.Append (arg2);  	else if (n == '3')  		_stringBuilder.Append (arg3);  	else if (n == '4')  		_stringBuilder.Append (arg4);  	else if (n == '5')  		_stringBuilder.Append (arg5);  	else if (n == '6')  		_stringBuilder.Append (arg6);  	else if (n == '7')  		_stringBuilder.Append (arg7);  	else if (n == '8')  		_stringBuilder.Append (arg8);  	else if (n == '9')  		_stringBuilder.Append (arg9);  	else  		throw new ArgumentException ("Invalid replacement group in format string " + format);  	current += 2;  	start = current + 1;  }  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: Contract.Requires (format [current + 2] == '}'' "Character after replacement group must be a }");  
Magic Number,Forge.Utilities,FastStringFormat,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\FastStringFormat.cs,Format,The following statement contains a magic number: current += 2;  
Magic Number,Forge.Utilities,RandomExtensionMethods,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\GameRandom.cs,NextLong,The following statement contains a magic number: do {  	byte[] buf = new byte[8];  	random.NextBytes (buf);  	ulongRand = (ulong)BitConverter.ToInt64 (buf' 0);  } while (ulongRand > ulong.MaxValue - ((ulong.MaxValue % uRange) + 1) % uRange);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,GetDigitCount,The following statement contains a magic number: while (number >= 10) {  	number /= 10;  	digits += 1;  }  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,GetDigitCount,The following statement contains a magic number: while (number >= 10) {  	number /= 10;  	digits += 1;  }  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,GetDigitCount,The following statement contains a magic number: number /= 10;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,FromParts,The following statement contains a magic number: if (PostDecimal != 0)  	f.RawValue += (Real.Create (PostDecimal) / 1000).RawValue;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,FromParts,The following statement contains a magic number: f.RawValue += (Real.Create (PostDecimal) / 1000).RawValue;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sqrt,The following statement contains a magic number: if (f.RawValue > 0x64000)  	numberOfIterations = 12;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sqrt,The following statement contains a magic number: numberOfIterations = 12;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sqrt,The following statement contains a magic number: if (f.RawValue > 0x3e8000)  	numberOfIterations = 16;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sqrt,The following statement contains a magic number: numberOfIterations = 16;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: for (; i < 0; i += Real.Create (25736' false))  	;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: i += Real.Create (25736' false)
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i > Real.Create (25736' false))  	i %= Real.Create (25736' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i > Real.Create (25736' false))  	i %= Real.Create (25736' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: i %= Real.Create (25736' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (i != 0 && i != Real.Create (6434' false) && i != Real.Create (12868' false) && i != Real.Create (19302' false) && i != Real.Create (25736' false))  	j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: j = (i * Real.Create (100' false)) / Real.Create (714' false) - k * Real.Create (10' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (90' false))  	return sin_lookup (k' j);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (180' false))  	return sin_lookup (Real.Create (180' false) - k' j);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (180' false))  	return sin_lookup (Real.Create (180' false) - k' j);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: return sin_lookup (Real.Create (180' false) - k' j);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (270' false))  	return sin_lookup (k - Real.Create (180' false)' j).Inverse;  else  	return sin_lookup (Real.Create (360' false) - k' j).Inverse;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (270' false))  	return sin_lookup (k - Real.Create (180' false)' j).Inverse;  else  	return sin_lookup (Real.Create (360' false) - k' j).Inverse;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: if (k <= Real.Create (270' false))  	return sin_lookup (k - Real.Create (180' false)' j).Inverse;  else  	return sin_lookup (Real.Create (360' false) - k' j).Inverse;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: return sin_lookup (k - Real.Create (180' false)' j).Inverse;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Sin,The following statement contains a magic number: return sin_lookup (Real.Create (360' false) - k' j).Inverse;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,sin_lookup,The following statement contains a magic number: if (j > 0 && j < Real.Create (10' false) && i < Real.Create (90' false))  	return Real.Create (SIN_TABLE [i.RawValue]' false) + ((Real.Create (SIN_TABLE [i.RawValue + 1]' false) - Real.Create (SIN_TABLE [i.RawValue]' false)) / Real.Create (10' false)) * j;  else  	return Real.Create (SIN_TABLE [i.RawValue]' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,sin_lookup,The following statement contains a magic number: if (j > 0 && j < Real.Create (10' false) && i < Real.Create (90' false))  	return Real.Create (SIN_TABLE [i.RawValue]' false) + ((Real.Create (SIN_TABLE [i.RawValue + 1]' false) - Real.Create (SIN_TABLE [i.RawValue]' false)) / Real.Create (10' false)) * j;  else  	return Real.Create (SIN_TABLE [i.RawValue]' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,sin_lookup,The following statement contains a magic number: if (j > 0 && j < Real.Create (10' false) && i < Real.Create (90' false))  	return Real.Create (SIN_TABLE [i.RawValue]' false) + ((Real.Create (SIN_TABLE [i.RawValue + 1]' false) - Real.Create (SIN_TABLE [i.RawValue]' false)) / Real.Create (10' false)) * j;  else  	return Real.Create (SIN_TABLE [i.RawValue]' false);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,sin_lookup,The following statement contains a magic number: return Real.Create (SIN_TABLE [i.RawValue]' false) + ((Real.Create (SIN_TABLE [i.RawValue + 1]' false) - Real.Create (SIN_TABLE [i.RawValue]' false)) / Real.Create (10' false)) * j;  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Cos,The following statement contains a magic number: return Sin (i + Real.Create (6435' false));  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Atan2,The following statement contains a magic number: if (F2 > 0)  	result = Atan (F1 / F2);  else if (F2 < 0) {  	if (F1 >= 0)  		result = (PI - Atan (Abs (F1 / F2)));  	else  		result = (PI - Atan (Abs (F1 / F2))).Inverse;  } else  	result = (F1 >= 0 ? PI : PI.Inverse) / Real.Create (2' true);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Atan2,The following statement contains a magic number: if (F2 < 0) {  	if (F1 >= 0)  		result = (PI - Atan (Abs (F1 / F2)));  	else  		result = (PI - Atan (Abs (F1 / F2))).Inverse;  } else  	result = (F1 >= 0 ? PI : PI.Inverse) / Real.Create (2' true);  
Magic Number,Forge.Utilities,Real,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Real.cs,Atan2,The following statement contains a magic number: result = (F1 >= 0 ? PI : PI.Inverse) / Real.Create (2' true);  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: if (ReferenceEquals (Item2' null) == false) {  	hc = (hc << 3) ^ EqualityComparer<T2>.Default.GetHashCode (Item2);  }  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: hc = (hc << 3) ^ EqualityComparer<T2>.Default.GetHashCode (Item2);  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: if (ReferenceEquals (Item2' null) == false) {  	hc = (hc << 3) ^ EqualityComparer<T2>.Default.GetHashCode (Item2);  }  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: hc = (hc << 3) ^ EqualityComparer<T2>.Default.GetHashCode (Item2);  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: if (ReferenceEquals (Item2' null) == false) {  	hc = (hc << 3) ^ EqualityComparer<T3>.Default.GetHashCode (Item3);  }  
Magic Number,Forge.Utilities,Tuple,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Tuple.cs,GetHashCode,The following statement contains a magic number: hc = (hc << 3) ^ EqualityComparer<T3>.Default.GetHashCode (Item3);  
Magic Number,Forge.Utilities,Vector2r,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Vector2r.cs,GetHashCode,The following statement contains a magic number: hash *= (29 + X.GetHashCode ());  
Magic Number,Forge.Utilities,Vector2r,F:\newReposMay17\jacobdufault_forge\Forge.Utilities\Vector2r.cs,GetHashCode,The following statement contains a magic number: hash *= (29 + Z.GetHashCode ());  
