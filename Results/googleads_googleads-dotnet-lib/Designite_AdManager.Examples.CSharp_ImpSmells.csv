Implementation smell,Namespace,Class,File,Method,Description
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The method has 128 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateNativeCreative.cs,Run,The method has 121 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The method has 114 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The method has 179 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The method has 157 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The method has 160 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\NativeStyleService\CreateNativeStyles.cs,Run,The method has 152 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\PlacementService\CreatePlacements.cs,Run,The method has 116 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The method has 116 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The method has 128 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateNativeCreative.cs,Run,The method has 121 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The method has 114 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The method has 179 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The method has 157 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The method has 160 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\NativeStyleService\CreateNativeStyles.cs,Run,The method has 152 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\PlacementService\CreatePlacements.cs,Run,The method has 116 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The method has 128 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateNativeCreative.cs,Run,The method has 121 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The method has 114 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The method has 179 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The method has 157 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The method has 160 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\NativeStyleService\CreateNativeStyles.cs,Run,The method has 152 lines of code.
Long Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\PlacementService\CreatePlacements.cs,Run,The method has 116 lines of code.
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,SetLineItemCustomFieldValue,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CustomFieldService\SetLineItemCustomFieldValue.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\PlacementService\CreatePlacements.cs,Run,Cyclomatic complexity of the method is 17
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,SetLineItemCustomFieldValue,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CustomFieldService\SetLineItemCustomFieldValue.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\PlacementService\CreatePlacements.cs,Run,Cyclomatic complexity of the method is 17
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,SetLineItemCustomFieldValue,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CustomFieldService\SetLineItemCustomFieldValue.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreatePlacements,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\PlacementService\CreatePlacements.cs,Run,Cyclomatic complexity of the method is 17
Long Parameter List,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalService\CreateProposals.cs,Run,The method has 5 parameters. Parameters: user' primarySalespersonId' primaryTraffickerId' programmaticBuyerId' advertiserId
Long Parameter List,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalService\CreateProposals.cs,Run,The method has 5 parameters. Parameters: user' primarySalespersonId' primaryTraffickerId' programmaticBuyerId' advertiserId
Long Parameter List,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalService\CreateProposals.cs,Run,The method has 5 parameters. Parameters: user' primarySalespersonId' primaryTraffickerId' programmaticBuyerId' advertiserId
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithoutSecurityPolicy is 37.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithSecurityPolicy is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAllLicas,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemCreativeAssociationService\GetAllLicas.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetLicasForLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemCreativeAssociationService\GetLicasForLineItem.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetReconciliationLineItemReportsForReconciliationReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ReconciliationLineItemReportService\GetReconciliationLineItemReportsForReconciliationReport.cs,Run,The length of the parameter reconciliationLineItemReportService is 35.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetReconciliationOrderReportsForReconciliationReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ReconciliationOrderReportService\GetReconciliationOrderReportsForReconciliationReport.cs,Run,The length of the parameter reconciliationOrderReportService is 32.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetReconciliationReportRowsForReconciliationReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ReconciliationReportRowService\GetReconciliationReportRowsForReconciliationReport.cs,Run,The length of the parameter reconciliationReportRowService is 30.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithoutSecurityPolicy is 37.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithSecurityPolicy is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAllLicas,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemCreativeAssociationService\GetAllLicas.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetLicasForLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemCreativeAssociationService\GetLicasForLineItem.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithoutSecurityPolicy is 37.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCdnConfigurations,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CdnConfigurationService\CreateCdnConfigurations.cs,Run,The length of the parameter cdnConfigurationWithSecurityPolicy is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAllLicas,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemCreativeAssociationService\GetAllLicas.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Long Identifier,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetLicasForLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemCreativeAssociationService\GetLicasForLineItem.cs,Run,The length of the parameter lineItemCreativeAssociationService is 34.
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp,SampleBase,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\SampleBase.cs,GetTimeStamp,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp,SampleBase,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\SampleBase.cs,GetTimeStamp,The following statement contains a magic number: return (DateTime.UtcNow - new DateTime(1970' 1' 1)).TotalMilliseconds.ToString();
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.clicksLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.impressionsLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.pageViews = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.recencyDays = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 88;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\AudienceSegmentService\UpdateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 180;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductBaseRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\BaseRateService\CreateProductBaseRates.cs,Run,The following statement contains a magic number: productBaseRate.rate = new Money()                  {                      currencyCode = "USD"'                      microAmount = 2000000L                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductBaseRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\BaseRateService\CreateProductBaseRates.cs,Run,The following statement contains a magic number: Console.WriteLine(                              "A product base rate with ID '{0}'' name '{1}' " +                              "and rate '{2} {3}' was created."' createdBaseRate.id'                              createdBaseRate.GetType().Name'                              (((ProductBaseRate) createdBaseRate).rate.microAmount / 1000000f)'                              ((ProductBaseRate) createdBaseRate).rate.currencyCode);
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplateBaseRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\BaseRateService\CreateProductTemplateBaseRates.cs,Run,The following statement contains a magic number: productTemplateBaseRate.rate = new Money()                  {                      currencyCode = "USD"'                      microAmount = 2000000L                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplateBaseRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\BaseRateService\CreateProductTemplateBaseRates.cs,Run,The following statement contains a magic number: Console.WriteLine(                              "A product template base rate with ID '{0}'' name '{1}' " +                              "and rate '{2} {3}' was created."' createdBaseRate.id'                              createdBaseRate.GetType().Name'                              (((ProductTemplateBaseRate) createdBaseRate).rate.microAmount /                                  1000000f)'                              ((ProductTemplateBaseRate) createdBaseRate).rate.currencyCode);
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateBaseRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\BaseRateService\UpdateBaseRates.cs,Run,The following statement contains a magic number: Money newRate = new Money()                      {                          currencyCode = "USD"'                          microAmount = 3000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: Company[] companies = new Company[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10000680L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageWidthVariableValue.value = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageHeightVariableValue.value = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: Creative[] imageCreatives = new ImageCreative[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CreativeService\CreateNativeCreative.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10004400L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The following statement contains a magic number: carModelHondaCivicValue.customTargetingKeyId = keys[2].id;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateExchangeRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ExchangeRateService\CreateExchangeRates.cs,Run,The following statement contains a magic number: exchangeRate.exchangeRate = 15000000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateExchangeRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ExchangeRateService\CreateExchangeRates.cs,Run,The following statement contains a magic number: Console.WriteLine(                              "An exchange rate with ID '{0}'' currency code '{1}'' " +                              "direction '{2}' and exchange rate '{3}' was created."' exchangeRate.id'                              exchangeRate.currencyCode' exchangeRate.direction'                              (exchangeRate.exchangeRate / 10000000000f));
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateExchangeRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ExchangeRateService\UpdateExchangeRates.cs,Run,The following statement contains a magic number: exchangeRate.exchangeRate = 15000000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateExchangeRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ExchangeRateService\UpdateExchangeRates.cs,Run,The following statement contains a magic number: Console.WriteLine(                                  "An exchange rate with ID '{0}'' currency code '{1}'' " +                                  "direction '{2}' and exchange rate '{3}' was updated."'                                  exchangeRate.id' exchangeRate.currencyCode' exchangeRate.direction'                                  (exchangeRate.exchangeRate / 10000000000f));
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double availablePercent =                          (double)(forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double)(forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double breakdownAvailablePercent =                                      (double)(breakdownAvailable / (breakdownMatched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double availablePercent =                          (double) (forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double) (forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: AdUnit[] adUnits = new AdUnit[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.width = 400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.height = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.width = 728;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.height = 90;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: Label[] labels = new Label[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: countryLocation.id = 2840L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: regionLocation.id = 20123L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: postalCodeLocation.id = 9000093;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: cityLocation.id = 1016367L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: metroLocation.id = 200501L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: saturdayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: sundayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: browserTechnology.id = 500072L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: LineItem[] lineItems = new LineItem[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: lineItem.costPerUnit.microAmount = 2000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: goal.units = 500000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.costPerUnit = new Money()                  {                      currencyCode = "USD"'                      microAmount = 1000000L                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.primaryGoal = new Goal()                  {                      goalType = GoalType.DAILY'                      unitType = UnitType.IMPRESSIONS'                      units = 100                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: nativeStyle.creativeTemplateId = 10004400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: Order[] orders = new Order[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,GetOrdersStartingSoon,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\OrderService\GetOrdersStartingSoon.cs,Run,The following statement contains a magic number: StatementBuilder statementBuilder = new StatementBuilder()                      .Where("status = :status and startDateTime >= :now and startDateTime <= :soon")                      .OrderBy("id ASC")                      .Limit(pageSize)                      .AddValue("status"' OrderStatus.APPROVED.ToString())                      .AddValue("now"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now' "America/New_York"))                      .AddValue("soon"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(5)'                              "America/New_York"));
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreatePremiumRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\PremiumRateService\CreatePremiumRates.cs,Run,The following statement contains a magic number: cpmPremiumRateValue.adjustmentSize = 2000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreatePremiumRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\PremiumRateService\CreatePremiumRates.cs,Run,The following statement contains a magic number: cpcPremiumRateValue.adjustmentSize = 10000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdatePremiumRates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\PremiumRateService\UpdatePremiumRates.cs,Run,The following statement contains a magic number: flatFeePremiumRateValue.adjustmentSize = 10000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: creativeMasterPlaceholder.size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: creativeMasterPlaceholder.size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: companionCreativePlaceholder.size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: companionCreativePlaceholder.size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: countryLocation.id = 2840L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: regionLocation.id = 2344L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProductTemplates.cs,Run,The following statement contains a magic number: chromeBrowser.id = 500072L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProgrammaticProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProgrammaticProductTemplates.cs,Run,The following statement contains a magic number: creativePlaceholder.size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProgrammaticProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProgrammaticProductTemplates.cs,Run,The following statement contains a magic number: creativePlaceholder.size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProgrammaticProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProgrammaticProductTemplates.cs,Run,The following statement contains a magic number: countryLocation.id = 2840L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProgrammaticProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\CreateProgrammaticProductTemplates.cs,Run,The following statement contains a magic number: regionLocation.id = 2344L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,UpdateProductTemplates,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProductTemplateService\UpdateProductTemplates.cs,Run,The following statement contains a magic number: countryLocation.id = 2124L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.startDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(7)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.endDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(30)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.goal = new Goal()                      {                          unitType = UnitType.IMPRESSIONS'                          units = 1000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netCost = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netRate = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ProposalService\CreateProposals.cs,Run,The following statement contains a magic number: proposal.primarySalesperson = new SalespersonSplit()                  {                      userId = primarySalespersonId'                      split = 100000                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,RunDeliveryReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\ReportService\RunDeliveryReport.cs,Run,The following statement contains a magic number: reportJob.reportQuery.startDate = DateTimeUtilities                      .FromDateTime(endDateTime.AddDays(-8)' "America/New_York").date;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,ApproveSuggestedAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\SuggestedAdUnitService\ApproveSuggestedAdUnits.cs,Run,The following statement contains a magic number: long NUMBER_OF_REQUESTS = 50L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: Team[] teams = new Team[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201905,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201905\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.clicksLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.impressionsLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.pageViews = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.recencyDays = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 88;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,UpdateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\AudienceSegmentService\UpdateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 180;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: Company[] companies = new Company[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10000680L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageWidthVariableValue.value = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageHeightVariableValue.value = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: Creative[] imageCreatives = new ImageCreative[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CreativeService\CreateNativeCreative.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10004400L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The following statement contains a magic number: carModelHondaCivicValue.customTargetingKeyId = keys[2].id;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double availablePercent =                          (double)(forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double)(forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double breakdownAvailablePercent =                                      (double)(breakdownAvailable / (breakdownMatched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double availablePercent =                          (double) (forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double) (forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: AdUnit[] adUnits = new AdUnit[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.width = 400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.height = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.width = 728;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.height = 90;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: Label[] labels = new Label[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: countryLocation.id = 2840L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: regionLocation.id = 20123L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: postalCodeLocation.id = 9000093;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: cityLocation.id = 1016367L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: metroLocation.id = 200501L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: saturdayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: sundayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: browserTechnology.id = 500072L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: LineItem[] lineItems = new LineItem[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: lineItem.costPerUnit.microAmount = 2000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: goal.units = 500000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.costPerUnit = new Money()                  {                      currencyCode = "USD"'                      microAmount = 1000000L                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.primaryGoal = new Goal()                  {                      goalType = GoalType.DAILY'                      unitType = UnitType.IMPRESSIONS'                      units = 100                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: nativeStyle.creativeTemplateId = 10004400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: Order[] orders = new Order[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,GetOrdersStartingSoon,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\OrderService\GetOrdersStartingSoon.cs,Run,The following statement contains a magic number: StatementBuilder statementBuilder = new StatementBuilder()                      .Where("status = :status and startDateTime >= :now and startDateTime <= :soon")                      .OrderBy("id ASC")                      .Limit(pageSize)                      .AddValue("status"' OrderStatus.APPROVED.ToString())                      .AddValue("now"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now' "America/New_York"))                      .AddValue("soon"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(5)'                              "America/New_York"));
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.startDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(7)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.endDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(30)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.goal = new Goal()                      {                          unitType = UnitType.IMPRESSIONS'                          units = 1000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netCost = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netRate = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ProposalService\CreateProposals.cs,Run,The following statement contains a magic number: proposal.primarySalesperson = new SalespersonSplit()                  {                      userId = primarySalespersonId'                      split = 100000                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,RunDeliveryReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\ReportService\RunDeliveryReport.cs,Run,The following statement contains a magic number: reportJob.reportQuery.startDate = DateTimeUtilities                      .FromDateTime(endDateTime.AddDays(-8)' "America/New_York").date;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,ApproveSuggestedAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\SuggestedAdUnitService\ApproveSuggestedAdUnits.cs,Run,The following statement contains a magic number: long NUMBER_OF_REQUESTS = 50L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: Team[] teams = new Team[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201908,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201908\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.clicksLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateActivityGroups,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ActivityGroupService\CreateActivityGroups.cs,Run,The following statement contains a magic number: longTermActivityGroup.impressionsLookback = 30;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: TrafficTimeSeriesFilterCriteria criteria = new TrafficTimeSeriesFilterCriteria() {                      // Target all USA traffic.                      targeting = new Targeting() {                          inventoryTargeting = new InventoryTargeting() {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting() {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }'                          geoTargeting = new GeoTargeting() {                              targetedLocations = new Location[] {                                  new Location() {                                      id = 2840 // United States                                  }                              }                          }                      }'                      // Adjust only 1920x1080 video traffic.                      adUnitSizes = new AdUnitSize[] {                          new AdUnitSize() {                              size = new Size() {                                  width = 1920'                                  height = 1080                              }'                              environmentType = EnvironmentType.VIDEO_PLAYER                          }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var januarySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.HISTORICAL'                      historicalAdjustment = new HistoricalAdjustment() {                          referenceDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 1'                                  day = 30                              }                          }'                          targetDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 1'                                  day = 30                              }'                              endDate = new Date() {                                  year = new System.DateTime().Year + 1'                                  month = 1'                                  day = 30                              }                          }'                          milliPercentMultiplier = 105_000L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var holidaySegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 24                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year'                                  month = 12'                                  day = 25                              }                          }'                          valuePeriodType = PeriodType.DAILY'                          timeSeriesValues = new long[] { 500_000' 1_000_000}                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTrafficAdjustments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AdjustmentService\CreateTrafficAdjustments.cs,Run,The following statement contains a magic number: var septemberSegment = new TrafficForecastAdjustmentSegment() {                      basisType = BasisType.ABSOLUTE'                      adjustmentTimeSeries = new TimeSeries() {                          timeSeriesDateRange = new DateRange() {                              startDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 1                              }'                              endDate = new Date() {                                  year = System.DateTime.Now.Year + 1'                                  month = 9'                                  day = 7                              }                          }'                          valuePeriodType = PeriodType.CUSTOM'                          timeSeriesValues = new long[] { 900_000 }                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.pageViews = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.recencyDays = 6;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AudienceSegmentService\CreateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 88;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,UpdateAudienceSegments,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\AudienceSegmentService\UpdateAudienceSegments.cs,Run,The following statement contains a magic number: audienceSegment.membershipExpirationDays = 180;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: Company[] companies = new Company[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCompanies,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CompanyService\CreateCompanies.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10000680L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageWidthVariableValue.value = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreativeFromTemplate,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreativeFromTemplate.cs,Run,The following statement contains a magic number: imageHeightVariableValue.value = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: Creative[] imageCreatives = new ImageCreative[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCreatives,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCreatives.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCustomCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateCustomCreative.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeCreative,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CreativeService\CreateNativeCreative.cs,Run,The following statement contains a magic number: long creativeTemplateId = 10004400L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateCustomTargetingKeysAndValues,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\CustomTargetingService\CreateCustomTargetingKeysAndValues.cs,Run,The following statement contains a magic number: carModelHondaCivicValue.customTargetingKeyId = keys[2].id;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: LineItem lineItem = new LineItem()                  {                      targeting = new Targeting()                      {                          inventoryTargeting = new InventoryTargeting()                          {                              targetedAdUnits = new AdUnitTargeting[] {                                  new AdUnitTargeting()                                  {                                      adUnitId = rootAdUnitId'                                      includeDescendants = true                                  }                              }                          }                      }'                      creativePlaceholders = new CreativePlaceholder[] {                          new CreativePlaceholder()                          {                              size = new Size()                              {                                  width = 300'                                  height = 250                              }                          }                      }'                      lineItemType = LineItemType.SPONSORSHIP'                      // Set the line item to run for 5 days.                      startDateTime = DateTimeUtilities.FromDateTime(                          tomorrow' "America/New_York")'                      endDateTime = DateTimeUtilities.FromDateTime(                          tomorrow.AddDays(5)' "America/New_York")'                      // Set the cost type to match the unit type.                      costType = CostType.CPM'                      primaryGoal = new Goal()                      {                          goalType = GoalType.DAILY'                          unitType = UnitType.IMPRESSIONS'                          units = 50L                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: AvailabilityForecastOptions options = new AvailabilityForecastOptions()                      {                          includeContendingLineItems = true'                          // Targeting criteria breakdown can only be included if breakdowns                          // are not speficied.                          includeTargetingCriteriaBreakdown = false'                          breakdown = new ForecastBreakdownOptions                          {                              timeWindows = new DateTime[] {                                  lineItem.startDateTime'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(1)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(2)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(3)'                                      "America/New_York")'                                  DateTimeUtilities.FromDateTime(tomorrow.AddDays(4)'                                      "America/New_York")'                                  lineItem.endDateTime                              }'                              targets = new ForecastBreakdownTarget[] {                                  new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "United States"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location() { id = 2840L }                                              }                                          }                                      }                                  }' new ForecastBreakdownTarget()                                  {                                      // Optional name field to identify this breakdown                                      // in the response.                                      name = "Geneva"'                                      targeting = new Targeting()                                      {                                          inventoryTargeting = new InventoryTargeting()                                          {                                              targetedAdUnits = new AdUnitTargeting[] {                                                  new AdUnitTargeting()                                                  {                                                      adUnitId = rootAdUnitId'                                                      includeDescendants = true                                                  }                                              }                                          }'                                          geoTargeting = new GeoTargeting()                                          {                                              targetedLocations = new Location[] {                                                  new Location () { id = 20133L }                                              }                                          }                                      }                                  }                              }                          }                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double availablePercent =                          (double)(forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double)(forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecast,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecast.cs,Run,The following statement contains a magic number: double breakdownAvailablePercent =                                      (double)(breakdownAvailable / (breakdownMatched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double availablePercent =                          (double) (forecast.availableUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetAvailabilityForecastById,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ForecastService\GetAvailabilityForecastById.cs,Run,The following statement contains a magic number: double possiblePercent =                              (double) (forecast.possibleUnits / (matched * 1.0)) * 100;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: AdUnit[] adUnits = new AdUnit[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateAdUnits.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.width = 400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size1.height = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size2.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.width = 728;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoAdUnit,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\CreateVideoAdUnit.cs,Run,The following statement contains a magic number: size3.height = 90;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,UpdateAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\InventoryService\UpdateAdUnits.cs,Run,The following statement contains a magic number: AdUnitSize adUnitSize = new AdUnitSize()                      {                          size = new Size()                          {                              width = 480'                              height = 60                          }'                          environmentType = EnvironmentType.BROWSER                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: Label[] labels = new Label[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLabels,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LabelService\CreateLabels.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: countryLocation.id = 2840L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: regionLocation.id = 20123L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: postalCodeLocation.id = 9000093;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: cityLocation.id = 1016367L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: metroLocation.id = 200501L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: saturdayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: sundayDayPart.endTime.hour = 24;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: browserTechnology.id = 500072L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: LineItem[] lineItems = new LineItem[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: lineItem.costPerUnit.microAmount = 2000000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: goal.units = 500000L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateLineItems.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder creativeMasterPlaceholder = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 400'                          height = 300'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder1 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: CreativePlaceholder companionCreativePlaceholder2 = new CreativePlaceholder()                  {                      size = new Size()                      {                          width = 728'                          height = 90'                          isAspectRatio = false                      }                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.costPerUnit = new Money()                  {                      currencyCode = "USD"'                      microAmount = 1000000L                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateVideoLineItem,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\LineItemService\CreateVideoLineItem.cs,Run,The following statement contains a magic number: lineItem.primaryGoal = new Goal()                  {                      goalType = GoalType.DAILY'                      unitType = UnitType.IMPRESSIONS'                      units = 100                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.width = 300;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: size.height = 250;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateNativeStyles,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\NativeStyleService\CreateNativeStyles.cs,Run,The following statement contains a magic number: nativeStyle.creativeTemplateId = 10004400;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: Order[] orders = new Order[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateOrders,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\OrderService\CreateOrders.cs,Run,The following statement contains a magic number: i < 5
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,GetOrdersStartingSoon,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\OrderService\GetOrdersStartingSoon.cs,Run,The following statement contains a magic number: StatementBuilder statementBuilder = new StatementBuilder()                      .Where("status = :status and startDateTime >= :now and startDateTime <= :soon")                      .OrderBy("id ASC")                      .Limit(pageSize)                      .AddValue("status"' OrderStatus.APPROVED.ToString())                      .AddValue("now"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now' "America/New_York"))                      .AddValue("soon"'                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(5)'                              "America/New_York"));
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: Size size = new Size()                      {                          width = 300'                          height = 250'                          isAspectRatio = false                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.startDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(7)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.endDateTime =                          DateTimeUtilities.FromDateTime(System.DateTime.Now.AddDays(30)'                              "America/New_York");
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.goal = new Goal()                      {                          unitType = UnitType.IMPRESSIONS'                          units = 1000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netCost = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposalLineItems,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalLineItemService\CreateProposalLineItems.cs,Run,The following statement contains a magic number: proposalLineItem.netRate = new Money()                      {                          currencyCode = "USD"'                          microAmount = 2000000L                      };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateProposals,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ProposalService\CreateProposals.cs,Run,The following statement contains a magic number: proposal.primarySalesperson = new SalespersonSplit()                  {                      userId = primarySalespersonId'                      split = 100000                  };
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,RunDeliveryReport,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\ReportService\RunDeliveryReport.cs,Run,The following statement contains a magic number: reportJob.reportQuery.startDate = DateTimeUtilities                      .FromDateTime(endDateTime.AddDays(-8)' "America/New_York").date;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,ApproveSuggestedAdUnits,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\SuggestedAdUnitService\ApproveSuggestedAdUnits.cs,Run,The following statement contains a magic number: long NUMBER_OF_REQUESTS = 50L;
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: Team[] teams = new Team[5];
Magic Number,Google.Api.Ads.AdManager.Examples.CSharp.v201911,CreateTeams,D:\research\architectureSmells\repos\googleads_googleads-dotnet-lib\examples\AdManager\CSharp\v201911\TeamService\CreateTeams.cs,Run,The following statement contains a magic number: i < 5
