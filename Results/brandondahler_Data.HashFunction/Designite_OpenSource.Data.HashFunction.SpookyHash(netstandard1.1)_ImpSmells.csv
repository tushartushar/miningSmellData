Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,Cyclomatic complexity of the method is 11
Complex Method,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,Cyclomatic complexity of the method is 11
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,SpookyHashV1_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,SpookyHashV1_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,SpookyHashV1_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: var tempHashValue = new UInt64[12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: _shortHashBuffer = new byte[192];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: dataCount + _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: Debug.Assert(_bytesProcessed == 96 || _bytesProcessed == 192);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: Debug.Assert(_bytesProcessed == 96 || _bytesProcessed == 192);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: var finalMixBuffer = new byte[96];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: finalMixBuffer[95] = (byte)remainderCount;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: Mix(finalHashValue' new ArraySegment<byte>(finalMixBuffer' 0' 96));
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var remainderCount = dataCount % 32;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(dataArray' currentOffset);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[0] += BitConverter.ToUInt64(dataArray' currentOffset + 16);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[1] += BitConverter.ToUInt64(dataArray' currentOffset + 24);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: currentOffset += 32;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(dataArray' currentOffset);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: currentOffset += 16;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: remainderCount -= 16;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: remainderCount >= 16
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] = ((UInt64) dataCount) << 56;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] = ((UInt64) dataCount) << 56;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var finalRemainderBuffer = new byte[16];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(finalRemainderBuffer' 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(finalRemainderBuffer' 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(finalRemainderBuffer' 0);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32)tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: Debug.Assert(data.Count % 96 == 0);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[i] += BitConverter.ToUInt64(dataArray' currentOffset + (i * 8));
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] ^= hashValue[i];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] ^= hashValue[i];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 1) % 12] = RotateLeft(hashValue[(i + 1) % 12]' _EndPartialRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 1) % 12] = RotateLeft(hashValue[(i + 1) % 12]' _EndPartialRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: i < 11
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,RotateLeft,The following statement contains a magic number: return                      (operand << shiftCount) |                      (operand >> (64 - shiftCount));
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: var tempHashValue = new UInt64[12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[0] = tempHashValue[3] = tempHashValue[6] = tempHashValue[9] = seed1;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[1] = tempHashValue[4] = tempHashValue[7] = tempHashValue[10] = seed2;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,BlockTransformer,The following statement contains a magic number: tempHashValue[2] = tempHashValue[5] = tempHashValue[8] = tempHashValue[11] = 0XDEADBEEFDEADBEEF;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: _shortHashBuffer = new byte[192];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: dataCount + _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: Debug.Assert(_bytesProcessed == 96 || _bytesProcessed == 192);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: Debug.Assert(_bytesProcessed == 96 || _bytesProcessed == 192);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: _bytesProcessed < 192
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: var finalMixBuffer = new byte[96];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: finalMixBuffer[95] = (byte)remainderCount;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,FinalizeHashValueInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) finalHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(finalHashValue[0])'                              64);                        case 128:                          var hashValueResult = new byte[16];                            BitConverter.GetBytes(finalHashValue[0])                              .CopyTo(hashValueResult' 0);                            BitConverter.GetBytes(finalHashValue[1])                              .CopyTo(hashValueResult' 8);                              return new HashValue(hashValueResult' 128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var tempHashValue = new UInt64[4] {                      _hashValue[0]'                      _hashValue[1]'                      _hashValue[2]'                      _hashValue[2]                  };
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var remainderCount = dataCount % 32;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(dataArray' currentOffset);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[0] += BitConverter.ToUInt64(dataArray' currentOffset + 16);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[1] += BitConverter.ToUInt64(dataArray' currentOffset + 24);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: currentOffset += 32;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(dataArray' currentOffset);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(dataArray' currentOffset + 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: currentOffset += 16;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: remainderCount -= 16;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: remainderCount >= 16
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += ((UInt64) dataCount) << 56;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += ((UInt64) dataCount) << 56;
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: var finalRemainderBuffer = new byte[16];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(finalRemainderBuffer' 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[3] += BitConverter.ToUInt64(finalRemainderBuffer' 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: tempHashValue[2] += BitConverter.ToUInt64(finalRemainderBuffer' 0);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ComputeShortHashInternal,The following statement contains a magic number: switch (_hashSizeInBits)                  {                      case 32:                          return new HashValue(                              BitConverter.GetBytes((UInt32) tempHashValue[0])'                              32);                        case 64:                          return new HashValue(                              BitConverter.GetBytes(tempHashValue[0])'                              64);                        case 128:                          var finalHashValue = new byte[16];                            BitConverter.GetBytes(tempHashValue[0])                              .CopyTo(finalHashValue' 0);                            BitConverter.GetBytes(tempHashValue[1])                              .CopyTo(finalHashValue' 8);                            return new HashValue(                              finalHashValue'                              128);                        default:                          throw new NotImplementedException();                  }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: Debug.Assert(data.Count % 96 == 0);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[i] += BitConverter.ToUInt64(dataArray' currentOffset + (i * 8));
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 10) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] ^= hashValue[i];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] ^= hashValue[i];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,Mix,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,End,The following statement contains a magic number: hashValue[i] += BitConverter.ToUInt64(dataArray' i * 8);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,End,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 11) % 12] += hashValue[(i + 1) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 2) % 12] ^= hashValue[(i + 11) % 12];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 1) % 12] = RotateLeft(hashValue[(i + 1) % 12]' _EndPartialRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: hashValue[(i + 1) % 12] = RotateLeft(hashValue[(i + 1) % 12]' _EndPartialRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,EndPartial,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortMixRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[(i + 2) % 4] += hashValue[(i + 3) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: hashValue[i % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortMix,The following statement contains a magic number: i < 12
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] ^= hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 2) % 4] = RotateLeft(hashValue[(i + 2) % 4]' _ShortEndRotationParameters[i]);
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: hashValue[(i + 3) % 4] += hashValue[(i + 2) % 4];
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,ShortEnd,The following statement contains a magic number: i < 11
Magic Number,OpenSource.Data.HashFunction.SpookyHash,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,RotateLeft,The following statement contains a magic number: return                      (operand << shiftCount) |                      (operand >> (64 - shiftCount));
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV2_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV2_Implementation.cs,SpookyHashV2_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV2_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV2_Implementation.cs,SpookyHashV2_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Magic Number,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV2_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV2_Implementation.cs,SpookyHashV2_Implementation,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Missing Default,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV1_Implementation.cs,SpookyHashV1_Implementation,The following switch statement is missing a default case: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
Missing Default,OpenSource.Data.HashFunction.SpookyHash,SpookyHashV2_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.SpookyHash\SpookyHashV2_Implementation.cs,SpookyHashV2_Implementation,The following switch statement is missing a default case: switch (_config.HashSizeInBits)              {                  case 32:                      _seed1 = _config.Seed & 0xFFFFFFFF;                      _seed2 = _seed1;                      break;                    case 64:                      _seed1 = _config.Seed;                      _seed2 = _seed1;                      break;                    case 128:                      _seed1 = _config.Seed;                      _seed2 = _config.Seed2;                      break;              }
