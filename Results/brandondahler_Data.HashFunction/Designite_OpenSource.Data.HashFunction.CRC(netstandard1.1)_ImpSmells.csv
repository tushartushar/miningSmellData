Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,TransformByteGroupsInternal,The length of the statement  "                            tempHashValue = (tempHashValue << 8) ^ tempCrcTable[((byte) (tempHashValue >> tempMostSignificantShift)) ^ dataArray[currentOffset]]; " is 133.
Long Statement,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,TransformByteGroupsInternal,The length of the statement  "                                tempHashValue = (tempHashValue >> 1) ^ tempCrcTable[(byte) (tempHashValue & 1) ^ ((byte) (dataArray[currentOffset] >> currentBit) & 1)]; " is 136.
Long Statement,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,TransformByteGroupsInternal,The length of the statement  "                                tempHashValue =  (tempHashValue << 1) ^ tempCrcTable[(byte) ((tempHashValue >> tempMostSignificantShift) & 1) ^ ((byte) (dataArray[currentOffset] >> (7 - currentBit)) & 1)]; " is 173.
Magic Number,OpenSource.Data.HashFunction.CRC,CRC_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,CRC_Implementation,The following statement contains a magic number: _config.HashSizeInBits <= 0 || _config.HashSizeInBits > 64
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: tempHashValue = (tempHashValue >> 8) ^ tempCrcTable[(byte) tempHashValue ^ dataArray[currentOffset]];
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,TransformByteGroupsInternal,The following statement contains a magic number: tempHashSizeInBits >= 8
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,GetDataDivisionTableInternal,The following statement contains a magic number: var perBitCount = 8;
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,GetDataDivisionTableInternal,The following statement contains a magic number: hashSizeInBits < 8
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,GetDataDivisionTableInternal,The following statement contains a magic number: curValue &= (UInt64.MaxValue >> (64 - hashSizeInBits));
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,ToBytes,The following statement contains a magic number: value &= (UInt64.MaxValue >> (64 - bitLength));
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,ToBytes,The following statement contains a magic number: var valueBytes = new byte[(bitLength + 7) / 8];
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,ToBytes,The following statement contains a magic number: var valueBytes = new byte[(bitLength + 7) / 8];
Magic Number,OpenSource.Data.HashFunction.CRC,BlockTransformer,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.CRC\CRC_Implementation.cs,ToBytes,The following statement contains a magic number: value >>= 8;
