Implementation smell,Namespace,Class,File,Method,Description
Long Statement,OpenSource.Data.HashFunction.FNV,FNVConfig,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNVConfig.cs,GetPredefinedConfig,The length of the statement  "                throw new ArgumentOutOfRangeException(nameof(hashSizeInBits)' hashSizeInBits' $"{nameof(hashSizeInBits)} must be a positive power of 2 between 32 and 1024."); " is 158.
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1aFactory,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1aFactory.cs,Create,The following statement contains a magic number: return Create(                  FNVConfig.GetPredefinedConfig(64));
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1a_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1a_Implementation.cs,CreateBlockTransformer,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      return new BlockTransformer_32Bit(_fnvPrimeOffset);                    case 64:                      return new BlockTransformer_64Bit(_fnvPrimeOffset);                    default:                      return new BlockTransformer_Extended(_fnvPrimeOffset);              }
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1a_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1a_Implementation.cs,CreateBlockTransformer,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      return new BlockTransformer_32Bit(_fnvPrimeOffset);                    case 64:                      return new BlockTransformer_64Bit(_fnvPrimeOffset);                    default:                      return new BlockTransformer_Extended(_fnvPrimeOffset);              }
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1Base,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,FNV1Base,The following statement contains a magic number: _config.HashSizeInBits <= 0 || _config.HashSizeInBits % 32 != 0
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1Base,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,ExtendedMultiply,The following statement contains a magic number: Debug.Assert(hashSizeInBytes % 4 == 0);
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1Base,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,ExtendedMultiply,The following statement contains a magic number: var product = new UInt32[hashSizeInBytes / 4];
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1Base,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,ExtendedMultiply,The following statement contains a magic number: carryOver = (UInt32)(productResult >> 32);
Magic Number,OpenSource.Data.HashFunction.FNV,BlockTransformer_64BitBase<TSelf>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,BlockTransformer_64BitBase,The following statement contains a magic number: _prime = ((UInt64) fnvPrimeOffset.Prime[1] << 32) | fnvPrimeOffset.Prime[0];
Magic Number,OpenSource.Data.HashFunction.FNV,BlockTransformer_64BitBase<TSelf>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,BlockTransformer_64BitBase,The following statement contains a magic number: _hashValue = ((UInt64) fnvPrimeOffset.Offset[1] << 32) | fnvPrimeOffset.Offset[0];
Magic Number,OpenSource.Data.HashFunction.FNV,BlockTransformer_ExtendedBase<TSelf>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Base.cs,BlockTransformer_ExtendedBase,The following statement contains a magic number: _hashSizeInBytes = _hashValue.Length * 4;
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1Factory,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1Factory.cs,Create,The following statement contains a magic number: return Create(                  FNVConfig.GetPredefinedConfig(64));
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1_Implementation.cs,CreateBlockTransformer,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      return new BlockTransformer_32Bit(_fnvPrimeOffset);                    case 64:                      return new BlockTransformer_64Bit(_fnvPrimeOffset);                    default:                      return new BlockTransformer_Extended(_fnvPrimeOffset);              }
Magic Number,OpenSource.Data.HashFunction.FNV,FNV1_Implementation,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\FNV1_Implementation.cs,CreateBlockTransformer,The following statement contains a magic number: switch (_config.HashSizeInBits)              {                  case 32:                      return new BlockTransformer_32Bit(_fnvPrimeOffset);                    case 64:                      return new BlockTransformer_64Bit(_fnvPrimeOffset);                    default:                      return new BlockTransformer_Extended(_fnvPrimeOffset);              }
Magic Number,OpenSource.Data.HashFunction.FNV.Utilities,FNVPrimeOffset,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\Utilities\FNVPrimeOffset.cs,Create,The following statement contains a magic number: bitSize <= 0 || bitSize % 32 != 0
Magic Number,OpenSource.Data.HashFunction.FNV.Utilities,FNVPrimeOffset,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\Utilities\FNVPrimeOffset.cs,ToUInt32Array,The following statement contains a magic number: Debug.Assert(bitSize % 32 == 0);
Magic Number,OpenSource.Data.HashFunction.FNV.Utilities,FNVPrimeOffset,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\Utilities\FNVPrimeOffset.cs,ToUInt32Array,The following statement contains a magic number: var uint32Values = new UInt32[bitSize / 32];
Magic Number,OpenSource.Data.HashFunction.FNV.Utilities,FNVPrimeOffset,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.FNV\Utilities\FNVPrimeOffset.cs,ToUInt32Array,The following statement contains a magic number: var copyLength = uint32Values.Length * 4;
