Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,Cyclomatic complexity of the method is 9
Long Identifier,OpenSource.Data.HashFunction.Test.HashAlgorithm,HashAlgorithmWrapperConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\HashAlgorithm\HashAlgorithmWrapperConfig_Tests.cs,HashAlgorithmWrapperConfig_Clone_Works,The length of the parameter hashAlgorithmWrapperConfigClone is 31.
Long Identifier,OpenSource.Data.HashFunction.Test.HashAlgorithm,HashAlgorithmWrapperFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\HashAlgorithm\HashAlgorithmWrapperFactory_Tests.cs,HashAlgorithmWrapperFactory_Create_Config_Works,The length of the parameter resultingHashAlgorithmWrapperConfig is 35.
Long Identifier,OpenSource.Data.HashFunction.Test.HashAlgorithm,HashAlgorithmWrapper_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\HashAlgorithm\HashAlgorithmWrapper_Implementation_Tests.cs,HashAlgorithmWrapper_Implementation_Constructor_ValidInputs_Works,The length of the parameter hashAlgorithmWrapperConfigMock is 30.
Long Identifier,OpenSource.Data.HashFunction.Test.HashAlgorithm,HashAlgorithmWrapper_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\HashAlgorithm\HashAlgorithmWrapper_Implementation_Tests.cs,HashAlgorithmWrapper_Implementation_Constructor_Config_IsCloned,The length of the parameter hashAlgorithmWrapperConfigMock is 30.
Long Identifier,OpenSource.Data.HashFunction.Test.HashAlgorithm,HashAlgorithmWrapper_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\HashAlgorithm\HashAlgorithmWrapper_Implementation_Tests.cs,HashAlgorithmWrapper_Implementation_Constructor_Config_InstanceFactory_IsNull_Throws,The length of the parameter hashAlgorithmWrapperConfigMock is 30.
Long Statement,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Config_IsCloneOfClone,The length of the statement  "            var buzHashConfig2 = Mock.Of<IBuzHashConfig>(bhc => bhc.Rtab == new UInt64[256] && bhc.HashSizeInBits == 32 && bhc.ShiftDirection == CircularShiftDirection.Left && bhc.Clone() == buzHashConfig3); " is 195.
Long Statement,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Config_IsCloneOfClone,The length of the statement  "            var fnvConfig2 = Mock.Of<IFNVConfig>(fc => fc.HashSizeInBits == 32 && fc.Prime == BigInteger.One && fc.Offset == BigInteger.One && fc.Clone() == fnvConfig3); " is 157.
Long Statement,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Config_IsCloneOfClone,The length of the statement  "            var fnvConfig2 = Mock.Of<IFNVConfig>(fc => fc.HashSizeInBits == 32 && fc.Prime == BigInteger.One && fc.Offset == BigInteger.One && fc.Clone() == fnvConfig3); " is 157.
Long Statement,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The length of the statement  "                throw new ArgumentException("hexString's length must be divisible by 2 after removing spaces' underscores' and dashes."' "hexString"); " is 134.
Magic Number,OpenSource.Data.HashFunction.Test.BernsteinHash,BernsteinHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BernsteinHash\BernsteinHash_Implementation_Tests.cs,BernsteinHash_Implementation_HashSizeInBits_IsSet,The following statement contains a magic number: Assert.Equal(32' bernsteinHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.BernsteinHash,ModifiedBernsteinHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BernsteinHash\ModifiedBernsteinHash_Implementation_Tests.cs,ModifiedBernsteinHash_Implementation_HashSizeInBits_IsSet,The following statement contains a magic number: Assert.Equal(32' bernsteinHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BConfig_Tests.cs,Blake2BConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(512' blake2BConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BConfig_Tests.cs,Blake2BConfig_Clone_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BConfig_Tests.cs,Blake2BConfig_Clone_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BConfig_Tests.cs,Blake2BConfig_Clone_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BConfig_Tests.cs,Blake2BConfig_Clone_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BFactory_Tests.cs,Blake2BFactory_Create_Config_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BFactory_Tests.cs,Blake2BFactory_Create_Config_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BFactory_Tests.cs,Blake2BFactory_Create_Config_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2BFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2BFactory_Tests.cs,Blake2BFactory_Create_Config_Works,The following statement contains a magic number: var blake2BConfig = new Blake2BConfig() {                  HashSizeInBits = 256'                  Key = new byte[64]'                  Salt = new byte[16]'                  Personalization = new byte[16]'              };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_HashSize_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 7' 9' 10' 11' 12' 13' 14' 15' 513' 520 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidHashSize_Works,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 64)                  .Select(i => i * 8);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidHashSize_Works,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 64)                  .Select(i => i * 8);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidKeyLength_Throws,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                      .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidKeyLength_Throws,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.Key)                      .Returns(new byte[65]);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidKeyLength_Works,The following statement contains a magic number: var validKeyLengths = Enumerable.Range(0' 65);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidKeyLength_Works,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                          .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidSaltLength_Throws,The following statement contains a magic number: var invalidSaltLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidSaltLength_Throws,The following statement contains a magic number: var invalidSaltLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidSaltLength_Throws,The following statement contains a magic number: var invalidSaltLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidSaltLength_Throws,The following statement contains a magic number: var invalidSaltLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidSaltLength_Throws,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                          .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidSaltLength_Works,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                      .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidSaltLength_Works,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.Salt)                      .Returns(new byte[16]);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidPersonalizationLength_Throws,The following statement contains a magic number: var invalidPersonalizationLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidPersonalizationLength_Throws,The following statement contains a magic number: var invalidPersonalizationLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidPersonalizationLength_Throws,The following statement contains a magic number: var invalidPersonalizationLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidPersonalizationLength_Throws,The following statement contains a magic number: var invalidPersonalizationLengths = new[] { 0' 15' 17' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_InvalidPersonalizationLength_Throws,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                          .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidPersonalizationLength_Works,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.HashSizeInBits)                      .Returns(512);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Constructor_Config_ValidPersonalizationLength_Works,The following statement contains a magic number: blake2bConfigMock.SetupGet(bc => bc.Personalization)                      .Returns(new byte[16]);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var blake2BConfig2 = Mock.Of<IBlake2BConfig>(bc => bc.HashSizeInBits == 8 && bc.Clone() == blake2BConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_HashSizeInBits_IsFromConfig,The following statement contains a magic number: var blake2BConfig2 = Mock.Of<IBlake2BConfig>(bc => bc.HashSizeInBits == 8);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2,Blake2B_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Blake2B_Implementation_Tests.cs,Blake2B_Implementation_HashSizeInBits_IsFromConfig,The following statement contains a magic number: Assert.Equal(8' blake2BHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowOnly_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowOnly_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(7331UL' uint128.High);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_opAddition_Works,The following statement contains a magic number: var x = new UInt128(1337UL);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_opAddition_Works,The following statement contains a magic number: Assert.Equal(1338UL' y.Low);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_opAddition_WithCarryOver_Works,The following statement contains a magic number: var y = x + new UInt128(3UL);
Magic Number,OpenSource.Data.HashFunction.Test.Blake2.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Blake2\Utilities\UInt128_Tests.cs,UInt128_opAddition_WithCarryOver_Works,The following statement contains a magic number: Assert.Equal(2UL' y.Low);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(64' buzHashConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Clone_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Clone_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Clone_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Clone_WithNullArrays_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = null'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashConfig_Tests.cs,BuzHashConfig_Clone_WithNullArrays_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = null'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashFactory_Tests.cs,BuzHashFactory_Create_Config_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashFactory_Tests.cs,BuzHashFactory_Create_Config_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHashFactory_Tests.cs,BuzHashFactory_Create_Config_Works,The following statement contains a magic number: var buzHashConfig = new BuzHashConfig() {                  Rtab = new UInt64[256]'                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_ValidInputs_Work,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                      .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_ValidInputs_Work,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.HashSizeInBits)                      .Returns(64);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Rtab_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 16' 32' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 7' 9' 31' 33' 63' 65' 127' 128' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                          .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                          .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Seed_IsValid_Works,The following statement contains a magic number: var validValues = new[] { 0UL' 1UL' 65536UL' 0xFFFFFFFFFFFFFFFFUL };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Seed_IsValid_Works,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                          .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_Seed_IsValid_Works,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.HashSizeInBits)                          .Returns(64);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_ShiftDirection_IsInvalid_Throws,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                      .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_ShiftDirection_IsInvalid_Throws,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.HashSizeInBits)                      .Returns(64);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_ShiftDirection_IsValid_Works,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                          .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Constructor_Config_ShiftDirection_IsValid_Works,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.HashSizeInBits)                          .Returns(64);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var buzHashConfig2 = Mock.Of<IBuzHashConfig>(bhc => bhc.Rtab == new UInt64[256] && bhc.HashSizeInBits == 32 && bhc.ShiftDirection == CircularShiftDirection.Left && bhc.Clone() == buzHashConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var buzHashConfig2 = Mock.Of<IBuzHashConfig>(bhc => bhc.Rtab == new UInt64[256] && bhc.HashSizeInBits == 32 && bhc.ShiftDirection == CircularShiftDirection.Left && bhc.Clone() == buzHashConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                          .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_ComputeHashInternal_WhenInvalidHashSize_Throws,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.HashSizeInBits)                      .Returns(() => shouldReturnValidHashSize ? 32 : 1);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,BuzHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\BuzHash_Implementation_Tests.cs,BuzHash_Implementation_ComputeHashInternal_WhenInvalidHashSize_Throws,The following statement contains a magic number: buzHashConfigMock.SetupGet(bhc => bhc.Rtab)                      .Returns(new UInt64[256]);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,DefaultBuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\DefaultBuzHashConfig_Tests.cs,DefaultBuzHashConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(64' defaultBuzHashConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,DefaultBuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\DefaultBuzHashConfig_Tests.cs,DefaultBuzHashConfig_Clone_Works,The following statement contains a magic number: var defaultBuzHashConfig = new DefaultBuzHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.BuzHash,DefaultBuzHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\BuzHash\DefaultBuzHashConfig_Tests.cs,DefaultBuzHashConfig_Clone_Works,The following statement contains a magic number: var defaultBuzHashConfig = new DefaultBuzHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  ShiftDirection = CircularShiftDirection.Right              };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHashConfig_Tests.cs,CityHashConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(32' cityHashConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHashConfig_Tests.cs,CityHashConfig_Clone_Works,The following statement contains a magic number: var cityHashConfig = new CityHashConfig() {                  HashSizeInBits = 64'              };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHashFactory_Tests.cs,CityHashFactory_Create_Config_Works,The following statement contains a magic number: var cityHashConfig = new CityHashConfig() {                  HashSizeInBits = 64'              };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 129' 256 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var cityHashConfig2 = Mock.Of<ICityHashConfig>(chc => chc.HashSizeInBits == 32 && chc.Clone() == cityHashConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash,CityHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\CityHash_Implementation_Tests.cs,CityHash_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowOnly_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowOnly_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.CityHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CityHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(7331UL' uint128.High);
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_Extensions_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_byteArray,The following statement contains a magic number: var knownValues = new Dictionary<int' byte[]>() {                  {  1' new byte[] { 0x00 } }'                  {  2' new byte[] { 0x02 } }'                  {  4' new byte[] { 0x09 } }'                  {  8' new byte[] { 0x1a } }'                  { 16' new byte[] { 0xb5' 0x04 } }'                  { 32' new byte[] { 0xe7' 0xfd' 0x52' 0xf9 } }'                  { 48' new byte[] { 0xcb' 0x66' 0x52' 0xf9' 0x70' 0xac } }'                  { 53' new byte[] { 0x3e' 0xf9' 0x52' 0xf9' 0x70' 0xac' 0x0c } }'                  { 55' new byte[] { 0xd1' 0xfc' 0x52' 0xf9' 0x70' 0xac' 0x2c } }'                  { 64' new byte[] { 0xe7' 0xfd' 0x52' 0xf9' 0x70' 0xac' 0x2c' 0x9b } }'              };
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_double,The following statement contains a magic number: var value = 39.93820d;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_float,The following statement contains a magic number: var value = 39.93820f;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_int,The following statement contains a magic number: var value = 2830928;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_long,The following statement contains a magic number: var value = 138812075890L;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_short,The following statement contains a magic number: var value = (short) 3209;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_uint,The following statement contains a magic number: var value = 2830928U;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_ulong,The following statement contains a magic number: var value = 138812075890UL;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_ushort,The following statement contains a magic number: var value = (ushort) 36090;
Magic Number,OpenSource.Data.HashFunction.Test,Sugar,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,AssertSugar,The following statement contains a magic number: hashFunctionMock.SetupGet(hf => hf.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_double,The following statement contains a magic number: var value = 39.93820d;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_float,The following statement contains a magic number: var value = 39.93820f;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_int,The following statement contains a magic number: var value = 2830928;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_long,The following statement contains a magic number: var value = 138812075890L;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_short,The following statement contains a magic number: var value = (short)3209;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_uint,The following statement contains a magic number: var value = 2830928U;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_ulong,The following statement contains a magic number: var value = 138812075890UL;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,IHashFunction_Extensions_ComputeHash_WithDesiredBits_ushort,The following statement contains a magic number: var value = (ushort)36090;
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,AssertSugar,The following statement contains a magic number: hashFunctionMock.SetupGet(hf => hf.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test,SugarWithDesiredSize,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_Extensions_Tests.cs,AssertSugar,The following statement contains a magic number: hashFunctionMock.Setup(hf => hf.ComputeHash(It.Is<byte[]>(d => data.SequenceEqual(d))))                      .Returns(Mock.Of<IHashValue>(hv => hv.Hash == new byte[4]))                      .Verifiable();
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,IHashFunction_ComputeHash_ByteArray_MatchesKnownValues,The following statement contains a magic number: Assert.Equal(                      new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                       hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,IHashFunction_ComputeHash_ByteArray_MatchesKnownValues,The following statement contains a magic number: Assert.Equal(                      new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                       hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,ToBytes,The following statement contains a magic number: bitLength <= 0 || bitLength > 64
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,ToBytes,The following statement contains a magic number: value &= (UInt64.MaxValue >> (64 - bitLength));
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,ToBytes,The following statement contains a magic number: var valueBytes = new byte[(bitLength + 7) / 8];
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,ToBytes,The following statement contains a magic number: var valueBytes = new byte[(bitLength + 7) / 8];
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_TestBase<THashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IHashFunction_TestBase.cs,ToBytes,The following statement contains a magic number: value >>= 8;
Magic Number,OpenSource.Data.HashFunction.Test,IStreamableHashFunction_TestBase<TStreamableHashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IStreamableHashFunction_TestBase.cs,IStreamableHashFunction_ComputeHashAsync_Stream_Seekable_MatchesKnownValues,The following statement contains a magic number: Assert.Equal(                          new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                          hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IStreamableHashFunction_TestBase<TStreamableHashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IStreamableHashFunction_TestBase.cs,IStreamableHashFunction_ComputeHashAsync_Stream_Seekable_MatchesKnownValues,The following statement contains a magic number: Assert.Equal(                          new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                          hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IStreamableHashFunction_TestBase<TStreamableHashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IStreamableHashFunction_TestBase.cs,IStreamableHashFunction_ComputeHashAsync_Stream_Seekable_MatchesKnownValues_SlowStream,The following statement contains a magic number: Assert.Equal(                          new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                          hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IStreamableHashFunction_TestBase<TStreamableHashFunction>,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\IStreamableHashFunction_TestBase.cs,IStreamableHashFunction_ComputeHashAsync_Stream_Seekable_MatchesKnownValues_SlowStream,The following statement contains a magic number: Assert.Equal(                          new HashValue(knownValue.ExpectedValue.Take((hf.HashSizeInBits + 7) / 8)' hf.HashSizeInBits)'                          hashResults);
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_SpeedTest,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\IHashFunction_SpeedTest.cs,IHashFunction_SpeedTest_SingleBlock,The following statement contains a magic number: sw.Elapsed < new TimeSpan(0' 0' 0' 1' 0) || computeCount < 3
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_SpeedTest,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\IHashFunction_SpeedTest.cs,IHashFunction_SpeedTest_SingleBlock,The following statement contains a magic number: Console.WriteLine("{0' -40} {1:F2} MB/s ({2} B in {3:F3} ms)"'                      testHashFunction.Key + ":"'                      totalBytesComputedAgainst / 1048576.0d / sw.Elapsed.TotalSeconds'                      totalBytesComputedAgainst'                      sw.ElapsedMilliseconds);
Magic Number,OpenSource.Data.HashFunction.Test,IHashFunction_SpeedTest,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\IHashFunction_SpeedTest.cs,IHashFunction_SpeedTest_MultipleItems,The following statement contains a magic number: Console.WriteLine("{0' -40} {1:F2} MB/s ({2} B in {3:F3} ms)"'                      testHashFunction.Key + ":"'                      (testBytes.Length * MULTIPLE_ITEMS_COUNT) / (1048510.0d) / ((double) sw.ElapsedTicks / TimeSpan.TicksPerSecond)'                      testBytes.Length * MULTIPLE_ITEMS_COUNT'                      ((double)sw.ElapsedTicks / TimeSpan.TicksPerMillisecond));
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_ValidParameters_Works,The following statement contains a magic number: GC.KeepAlive(                  new HashValue(Enumerable.Range(0' 1).Select(i => (byte)i)' 8));
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_ValidParameters_Works,The following statement contains a magic number: GC.KeepAlive(                  new HashValue(new byte[1]' 8));
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var underlyingHashValues = new IEnumerable<byte>[] {                  Enumerable.Range(1' 2).Select(i => (byte) i)'                  Enumerable.Range(1' 2).Concat(new[] { 0 }).Select(i => (byte) i)'                  new List<byte>() { 1' 2 }'                  new List<byte>() { 1' 2' 0 }'                  new byte[] { 1' 2 }'                  new byte[] { 1' 2' 0 }              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var hashValues = new[] {                      new HashValue(underlyingHashValue' 8)'                      new HashValue(underlyingHashValue' 9)'                      new HashValue(underlyingHashValue' 10)'                      new HashValue(underlyingHashValue' 16)'                      new HashValue(underlyingHashValue' 24)                  };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var hashValues = new[] {                      new HashValue(underlyingHashValue' 8)'                      new HashValue(underlyingHashValue' 9)'                      new HashValue(underlyingHashValue' 10)'                      new HashValue(underlyingHashValue' 16)'                      new HashValue(underlyingHashValue' 24)                  };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var hashValues = new[] {                      new HashValue(underlyingHashValue' 8)'                      new HashValue(underlyingHashValue' 9)'                      new HashValue(underlyingHashValue' 10)'                      new HashValue(underlyingHashValue' 16)'                      new HashValue(underlyingHashValue' 24)                  };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var hashValues = new[] {                      new HashValue(underlyingHashValue' 8)'                      new HashValue(underlyingHashValue' 9)'                      new HashValue(underlyingHashValue' 10)'                      new HashValue(underlyingHashValue' 16)'                      new HashValue(underlyingHashValue' 24)                  };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: var hashValues = new[] {                      new HashValue(underlyingHashValue' 8)'                      new HashValue(underlyingHashValue' 9)'                      new HashValue(underlyingHashValue' 10)'                      new HashValue(underlyingHashValue' 16)'                      new HashValue(underlyingHashValue' 24)                  };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2 }' hashValues[2].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2 }' hashValues[2].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2 }' hashValues[3].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2 }' hashValues[3].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 0 }' hashValues[4].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_CoerceToArray_WorksAsExpected,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 0 }' hashValues[4].Hash);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Constructor_Hash_IsNull_Throws,The following statement contains a magic number: Assert.Equal(                  "hash"'                  Assert.Throws<ArgumentNullException>(() =>                          new HashValue(null' 8))                      .ParamName);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Hash_IsCopyOfConstructorValue,The following statement contains a magic number: var enumerableValue = Enumerable.Range(2' 1).Select(i => (byte)i);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Hash_IsCopyOfConstructorValue,The following statement contains a magic number: var hashValue = new HashValue(enumerableValue' 8);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Hash_IsCopyOfConstructorValue,The following statement contains a magic number: var arrayValue = new byte[] { 2 };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Hash_IsCopyOfConstructorValue,The following statement contains a magic number: var hashValue = new HashValue(arrayValue' 8);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_BitLength_IsSameAsConstructorValue,The following statement contains a magic number: var validBitLengths = Enumerable.Range(1' 16);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_BitLength_IsSameAsConstructorValue,The following statement contains a magic number: var hashValue = new HashValue(new byte[2]' validBitLength);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBase64String_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("f")' 8)' Base64String = "Zg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fo")' 16)' Base64String = "Zm8=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foo")' 24)' Base64String = "Zm9v" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foob")' 32)' Base64String = "Zm9vYg==" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("fooba")' 40)' Base64String = "Zm9vYmE=" }'                  new { HashValue = new HashValue(Encoding.ASCII.GetBytes("foobar")' 48)' Base64String = "Zm9vYmFy" }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173 }' 8);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173 }' 8);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.True(bitArray[2]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.True(bitArray[3]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.False(bitArray[4]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.True(bitArray[5]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.False(bitArray[6]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsBitArray_ExpectedValues,The following statement contains a magic number: Assert.True(bitArray[7]);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsHexString_ExpectedValue,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsHexString_ExpectedValue,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_AsHexString_ExpectedValue,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_GetHashCode_ExpectedValues,The following statement contains a magic number: var knownValues = new[] {                  new { HashValue = new HashValue(new byte[] { 0 }' 4)' HashCode = 16213 }'                  new { HashValue = new HashValue(new byte[] { 0 }' 8)' HashCode = 16089 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 12)' HashCode = 494915 }'                  new { HashValue = new HashValue(new byte[] { 0' 0 }' 16)' HashCode = 521823 }'              };
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 255 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 23);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 23);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 254 }' 23);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 254 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 254 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 24 && hv.Hash == new byte[] { 173' 0' 254 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var hashValue = new HashValue(new byte[] { 173' 0' 255 }' 24);
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 23 && hv.Hash == new byte[] { 173' 0' 127 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 23 && hv.Hash == new byte[] { 173' 0' 127 });
Magic Number,OpenSource.Data.HashFunction.Test.Core.Utilities,HashValue_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Core\Utilities\HashValue_Tests.cs,HashValue_Equals_Works,The following statement contains a magic number: var mockValue = Mock.Of<IHashValue>(hv => hv.BitLength == 23 && hv.Hash == new byte[] { 173' 0' 127 });
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Constructor_ValidInputs_Work,The following statement contains a magic number: crcConfigMock.SetupGet(cc => cc.HashSizeInBits)                      .Returns(64);
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: crcConfigMock.Setup(cc => cc.Clone())                      .Returns(                          new CRCConfig() {                              HashSizeInBits = 64                          });
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 65' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 65' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = Enumerable.Range(1' 64);
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var crcConfig2 = Mock.Of<ICRCConfig>(cc => cc.HashSizeInBits == 32 && cc.Clone() == crcConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.CRC,CRC_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\CRC\CRC_Implementation_Tests.cs,CRC_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 64);
Magic Number,OpenSource.Data.HashFunction.Test.ELF64,ELF64_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\ELF64\ELF64_Implementation_Tests.cs,ELF64_Implementation_HashSizeInBits_IsNotChanged,The following statement contains a magic number: Assert.Equal(32' elf64.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash,FarmHashFingerprint128_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\FarmHashFingerprint128_Implementation_Tests.cs,FarmHashFingerprint128_Implementation_HashSizeInBits_Is128,The following statement contains a magic number: Assert.Equal(128' farmHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash,FarmHashFingerprint32_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\FarmHashFingerprint32_Implementation_Tests.cs,FarmHashFingerprint32_Implementation_HashSizeInBits_Is32,The following statement contains a magic number: Assert.Equal(32' farmHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash,FarmHashFingerprint64_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\FarmHashFingerprint64_Implementation_Tests.cs,FarmHashFingerprint64_Implementation_HashSizeInBits_Is64,The following statement contains a magic number: Assert.Equal(64' farmHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: var uint128 = new UInt128(1337UL' 7331UL);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Constructor_LowHigh_Works,The following statement contains a magic number: Assert.Equal(7331UL' uint128.High);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Low_Works,The following statement contains a magic number: uint128.Low = 1337UL;
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_Low_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.Low);
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_High_Works,The following statement contains a magic number: uint128.High = 1337UL;
Magic Number,OpenSource.Data.HashFunction.Test.FarmHash.Utilities,UInt128_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FarmHash\Utilities\UInt128_Tests.cs,UInt128_High_Works,The following statement contains a magic number: Assert.Equal(1337UL' uint128.High);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1aFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1aFactory_Tests.cs,FNV1aFactory_Create_Works,The following statement contains a magic number: var defaultFNVConfig = FNVConfig.GetPredefinedConfig(64);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1aFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1aFactory_Tests.cs,FNV1aFactory_Create_Config_Works,The following statement contains a magic number: var fnvConfig = FNVConfig.GetPredefinedConfig(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_ValidInputs_Work,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: fnvConfigMock.Setup(fc => fc.Clone())                      .Returns(                          new FNVConfig() {                              HashSizeInBits = 32'                              Prime = BigInteger.One'                              Offset = BigInteger.One                          });
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsInvalid_Throws,The following statement contains a magic number: var invalidPrimes = new[] { new BigInteger(-256)' new BigInteger(-1)' BigInteger.Zero };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsInvalid_Throws,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsInvalid_Throws,The following statement contains a magic number: var invalidOffsets = new[] { new BigInteger(-256)' new BigInteger(-1)' BigInteger.Zero };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsInvalid_Throws,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var fnvConfig2 = Mock.Of<IFNVConfig>(fc => fc.HashSizeInBits == 32 && fc.Prime == BigInteger.One && fc.Offset == BigInteger.One && fc.Clone() == fnvConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1a_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1a_Implementation_Tests.cs,FNV1a_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var x = new UInt32[] { 65536' 1024 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var x = new UInt32[] { 65536' 1024 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var y = new UInt32[] { 524288' 65536' 1024' 8 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var y = new UInt32[] { 524288' 65536' 1024' 8 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var y = new UInt32[] { 524288' 65536' 1024' 8 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var y = new UInt32[] { 524288' 65536' 1024' 8 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var expectedValue = new UInt32[] { 0' 536870920' 134217729' 1572864 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var expectedValue = new UInt32[] { 0' 536870920' 134217729' 1572864 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: var expectedValue = new UInt32[] { 0' 536870920' 134217729' 1572864 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: Assert.Equal(expectedValue' FNV1Impl._ExtendedMultiply(x' y' 16));
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Base_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Base_Tests.cs,FNV1Base_ExtendedMultiply_WorksConversly,The following statement contains a magic number: Assert.Equal(expectedValue' FNV1Impl._ExtendedMultiply(y' x' 16));
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Factory_Tests.cs,FNV1Factory_Create_Works,The following statement contains a magic number: var defaultFNVConfig = FNVConfig.GetPredefinedConfig(64);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1Factory_Tests.cs,FNV1Factory_Create_Config_Works,The following statement contains a magic number: var fnvConfig = FNVConfig.GetPredefinedConfig(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_ValidInputs_Work,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: fnvConfigMock.Setup(fc => fc.Clone())                      .Returns(                          new FNVConfig() {                              HashSizeInBits = 32'                              Prime = BigInteger.One'                              Offset = BigInteger.One                          });
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidLengths = new[] { -1' 0' 31' 33' 63' 65' 127' 129 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validLengths = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsInvalid_Throws,The following statement contains a magic number: var invalidPrimes = new[] { new BigInteger(-256)' new BigInteger(-1)' BigInteger.Zero };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsInvalid_Throws,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: var validPrimes = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Prime_IsValid_Works,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsInvalid_Throws,The following statement contains a magic number: var invalidOffsets = new[] { new BigInteger(-256)' new BigInteger(-1)' BigInteger.Zero };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsInvalid_Throws,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: var validOffsets = new[] { 1' 2' 8' 64' 256' 65536' 1073741824 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Constructor_Config_Offset_IsValid_Works,The following statement contains a magic number: fnvConfigMock.SetupGet(fc => fc.HashSizeInBits)                          .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_Config_IsCloneOfClone,The following statement contains a magic number: var fnvConfig2 = Mock.Of<IFNVConfig>(fc => fc.HashSizeInBits == 32 && fc.Prime == BigInteger.One && fc.Offset == BigInteger.One && fc.Clone() == fnvConfig3);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNV1_Implementation_Tests.cs,FNV1_Implementation_HashSizeInBits_MatchesConfig,The following statement contains a magic number: var validHashSizes = Enumerable.Range(1' 1024).Select(i => i * 32);
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_Clone_Works,The following statement contains a magic number: var fnvConfig = new FNVConfig() {                  HashSizeInBits = 32'                  Prime = new BigInteger(1337)'                  Offset = new BigInteger(7331)              };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_Clone_Works,The following statement contains a magic number: var fnvConfig = new FNVConfig() {                  HashSizeInBits = 32'                  Prime = new BigInteger(1337)'                  Offset = new BigInteger(7331)              };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_Clone_Works,The following statement contains a magic number: var fnvConfig = new FNVConfig() {                  HashSizeInBits = 32'                  Prime = new BigInteger(1337)'                  Offset = new BigInteger(7331)              };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV,FNVConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\FNVConfig_Tests.cs,FNVConfig_GetPredefinedConfig_InvalidSizes_Throw,The following statement contains a magic number: var invalidHashSizes = new[] { 0' 1' 8' 16' 31' 33' 63' 65' 127' 255' 1023' 2048' 4096 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidBitSize_Throws,The following statement contains a magic number: var invalidBitSizes = new[] { -1' 0' 8' 16' 31' 33' 63' 65' 255 };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_ValidBitSize_Throws,The following statement contains a magic number: var validBitSizes = new[] { 32' 64' 96' 128' 256' 512' 1024' 65536  };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidPrime_Throws,The following statement contains a magic number: var invalidPrimes = new[] { new BigInteger(-65536)' BigInteger.Zero' BigInteger.MinusOne };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidPrime_Throws,The following statement contains a magic number: Assert.Equal(                      "prime"'                      Assert.Throws<ArgumentOutOfRangeException>(                              () => FNVPrimeOffset.Create(32' invalidPrime' BigInteger.One))                          .ParamName);
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidOffset_Throws,The following statement contains a magic number: var invalidOffsets = new[] { new BigInteger(-65536)' BigInteger.Zero' BigInteger.MinusOne };
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_InvalidOffset_Throws,The following statement contains a magic number: Assert.Equal(                      "offset"'                      Assert.Throws<ArgumentOutOfRangeException>(                              () => FNVPrimeOffset.Create(32' BigInteger.One' invalidOffset))                          .ParamName);
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_Create_Works,The following statement contains a magic number: Assert.NotNull(                  FNVPrimeOffset.Create(32' BigInteger.One' BigInteger.One));
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_PrimeAndOffset_Works,The following statement contains a magic number: var fnvPrimeOffset = FNVPrimeOffset.Create(32' BigInteger.One' new BigInteger(UInt64.MaxValue));
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_PrimeAndOffset_Works,The following statement contains a magic number: var fnvPrimeOffset = FNVPrimeOffset.Create(96' new BigInteger(UInt64.MaxValue)' BigInteger.One);
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_PrimeAndOffset_ResultsAreCached,The following statement contains a magic number: var fnvPrimeOffset1 = FNVPrimeOffset.Create(32' BigInteger.One' BigInteger.One);
Magic Number,OpenSource.Data.HashFunction.Test.FNV.Utilities,FNVPrimeOffset_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\FNV\Utilities\FNVPrimeOffset_Tests.cs,FNVPrimeOffset_PrimeAndOffset_ResultsAreCached,The following statement contains a magic number: var fnvPrimeOffset2 = FNVPrimeOffset.Create(32' BigInteger.One' BigInteger.One);
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup2Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup2Config_Tests.cs,JenkinsLookup2Config_Clone_Works,The following statement contains a magic number: var jenkinsLookup2Config = new JenkinsLookup2Config() {                  Seed = 1337U'              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup2Factory_Tests.cs,JenkinsLookup2Factory_Create_Config_Works,The following statement contains a magic number: var jenkinsLookup2Config = new JenkinsLookup2Config() {                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Config_Tests.cs,JenkinsLookup3Config_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(32' jenkinsLookup3Config.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Config_Tests.cs,JenkinsLookup3Config_Clone_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Config_Tests.cs,JenkinsLookup3Config_Clone_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Config_Tests.cs,JenkinsLookup3Config_Clone_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Factory_Tests.cs,JenkinsLookup3Factory_Create_Config_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Factory_Tests.cs,JenkinsLookup3Factory_Create_Config_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Factory_Tests.cs,JenkinsLookup3Factory_Create_Config_Works,The following statement contains a magic number: var jenkinsLookup3Config = new JenkinsLookup3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'                  Seed2 = 7331U              };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Tests.cs,JenkinsLookup3_32bit_ComputeHash_ExtremelyLongStream_Works,The following statement contains a magic number: var loremIpsumRepeatCount = 800;
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3Tests.cs,JenkinsLookup3_32bit_ComputeHash_ExtremelyLongStream_Works,The following statement contains a magic number: var jenkinsLookup3 = new JenkinsLookup3_Implementation(                  new JenkinsLookup3Config() {                       HashSizeInBits = 32                   });
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: jenkinsLookupConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: jenkinsLookupConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: jenkinsLookupConfigMock.Setup(jlc => jlc.Clone())                      .Returns(() => new JenkinsLookup3Config() {                          HashSizeInBits = 32                      });
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: jenkinsLookupConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.Jenkins,JenkinsLookup3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Jenkins\JenkinsLookup3_Implementation_Tests.cs,JenkinsLookup3_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: jenkinsLookupConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MetroHash,MetroHash128_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MetroHash\MetroHash128_Implementation_Tests.cs,MetroHash128_Implementation_HashSizeInBits_Is64,The following statement contains a magic number: Assert.Equal(128' metroHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.MetroHash,MetroHash64_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MetroHash\MetroHash64_Implementation_Tests.cs,MetroHash64_Implementation_HashSizeInBits_Is64,The following statement contains a magic number: Assert.Equal(64' metroHash.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash1Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash1Config_Tests.cs,MurmurHash1Config_Clone_Works,The following statement contains a magic number: var murmurHash1Config = new MurmurHash1Config() {                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash1Factory_Tests.cs,MurmurHash1Factory_Create_Config_Works,The following statement contains a magic number: var murmurHash1Config = new MurmurHash1Config() {                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2Config_Tests.cs,MurmurHash2Config_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(64' murmurHash2Config.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2Config_Tests.cs,MurmurHash2Config_Clone_Works,The following statement contains a magic number: var murmurHash2Config = new MurmurHash2Config() {                  HashSizeInBits = 32'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2Config_Tests.cs,MurmurHash2Config_Clone_Works,The following statement contains a magic number: var murmurHash2Config = new MurmurHash2Config() {                  HashSizeInBits = 32'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2Factory_Tests.cs,MurmurHash2Factory_Create_Config_Works,The following statement contains a magic number: var murmurHash2Config = new MurmurHash2Config() {                  HashSizeInBits = 32'                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2Factory_Tests.cs,MurmurHash2Factory_Create_Config_Works,The following statement contains a magic number: var murmurHash2Config = new MurmurHash2Config() {                  HashSizeInBits = 32'                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: murmurHash2ConfigMock.SetupGet(mmhc => mmhc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: murmurHash2ConfigMock.Setup(mmhc => mmhc.Clone())                      .Returns(() => new MurmurHash2Config() {                          HashSizeInBits = 32                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 63' 65' 128' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash2ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash2_Implementation_Tests.cs,MurmurHash2_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash2ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3Config_Tests.cs,MurmurHash3Config_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(32' murmurHash3Config.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3Config_Tests.cs,MurmurHash3Config_Clone_Works,The following statement contains a magic number: var murmurHash3Config = new MurmurHash3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3Config_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3Config_Tests.cs,MurmurHash3Config_Clone_Works,The following statement contains a magic number: var murmurHash3Config = new MurmurHash3Config() {                  HashSizeInBits = 64'                  Seed = 1337U'              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3Factory_Tests.cs,MurmurHash3Factory_Create_Config_Works,The following statement contains a magic number: var murmurHash3Config = new MurmurHash3Config() {                  HashSizeInBits = 128'                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3Factory_Tests.cs,MurmurHash3Factory_Create_Config_Works,The following statement contains a magic number: var murmurHash3Config = new MurmurHash3Config() {                  HashSizeInBits = 128'                  Seed = 1337U              };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: murmurHash3ConfigMock.SetupGet(mmhc => mmhc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: murmurHash3ConfigMock.Setup(mmhc => mmhc.Clone())                      .Returns(() => new MurmurHash3Config() {                          HashSizeInBits = 32                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 31' 33' 64' 127' 129' 256' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash3ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash3ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash3ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.MurmurHash,MurmurHash3_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\MurmurHash\MurmurHash3_Implementation_Tests.cs,MurmurHash3_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: murmurHash3ConfigMock.SetupGet(jlc => jlc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,PearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\PearsonConfig_Tests.cs,PearsonConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(8' pearsonConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,PearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\PearsonConfig_Tests.cs,PearsonConfig_Clone_Works,The following statement contains a magic number: var pearsonConfig = new PearsonConfig() {                  Table = new byte[256]'                  HashSizeInBits = 16'              };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,PearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\PearsonConfig_Tests.cs,PearsonConfig_Clone_Works,The following statement contains a magic number: var pearsonConfig = new PearsonConfig() {                  Table = new byte[256]'                  HashSizeInBits = 16'              };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,PearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\PearsonConfig_Tests.cs,PearsonConfig_Clone_WithNullArrays_Works,The following statement contains a magic number: var pearsonConfig = new PearsonConfig() {                  Table = null'                  HashSizeInBits = 16'              };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,PearsonFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\PearsonFactory_Tests.cs,PearsonFactory_Create_Config_Works,The following statement contains a magic number: var pearsonConfig = new WikipediaPearsonConfig() {                  HashSizeInBits = 32'              };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.Table)                      .Returns(                          Enumerable.Range(0' 256)                              .Select(i => (byte) i)                              .ToArray());
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.HashSizeInBits)                      .Returns(8);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: pearsonConfigMock.Setup(pc => pc.Clone())                      .Returns(() => new WikipediaPearsonConfig() {                          HashSizeInBits = 8                      });
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsNull_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.HashSizeInBits)                      .Returns(8);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 1' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 1' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 1' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 1' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: var invalidLengths = new[] { 1' 64' 128' 255' 257' 512 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.Table)                          .Returns(                              Enumerable.Range(0' invalidLength)                                  .Select(i => (byte) (i % 256))                                  .ToArray());
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsInvalidLength_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.HashSizeInBits)                          .Returns(8);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsNotDistinct_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.Table)                      .Returns(                          Enumerable.Range(0' 255)                              .Concat(new[] { 0 })                              .Select(i => (byte) i)                              .ToArray());
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_Table_IsNotDistinct_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.HashSizeInBits)                      .Returns(8);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 9' 15' 17' 31' 33' 63' 65' 127' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.Table)                          .Returns(                              Enumerable.Range(0' 256)                                  .Select(i => (byte) i)                                  .ToArray());
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 8' 16' 24' 32' 64' 128' 256' 65536 };
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,Pearson_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\Pearson_Implementation_Tests.cs,Pearson_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: pearsonConfigMock.SetupGet(pc => pc.Table)                          .Returns(                              Enumerable.Range(0' 256)                                  .Select(i => (byte) i)                                  .ToArray());
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,WikipediaPearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\WikipediaPearsonConfig_Tests.cs,WikipediaPearsonConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(8' wikipediaPearsonConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.Pearson,WikipediaPearsonConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Pearson\WikipediaPearsonConfig_Tests.cs,WikipediaPearsonConfig_Clone_Works,The following statement contains a magic number: var wikipediaPearsonConfig = new WikipediaPearsonConfig() {                  HashSizeInBits = 16              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashConfig_Tests.cs,SpookyHashConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(128' spookyHashConfig.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashConfig_Tests.cs,SpookyHashConfig_Clone_Works,The following statement contains a magic number: var spookyHashConfig = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashConfig_Tests.cs,SpookyHashConfig_Clone_Works,The following statement contains a magic number: var spookyHashConfig = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashConfig_Tests.cs,SpookyHashConfig_Clone_Works,The following statement contains a magic number: var spookyHashConfig = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1Factory_Tests.cs,SpookyHashV1Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV1Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1Factory_Tests.cs,SpookyHashV1Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV1Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1Factory_Tests.cs,SpookyHashV1Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV1Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: spookyHashConfigMock.Setup(xhc => xhc.Clone())                      .Returns(() => new SpookyHashConfig() {                          HashSizeInBits = 32'                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: Assert.Throws<NotImplementedException>(                  () => spookyHashV1.ComputeHash(new byte[200]));
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV1_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV1_Implementation_Tests.cs,SpookyHashV1_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2Factory_Tests.cs,SpookyHashV2Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV2Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2Factory_Tests.cs,SpookyHashV2Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV2Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2Factory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2Factory_Tests.cs,SpookyHashV2Factory_Create_Config_Works,The following statement contains a magic number: var spookyHashV2Config = new SpookyHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'                  Seed2 = 7331UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: spookyHashConfigMock.Setup(xhc => xhc.Clone())                      .Returns(() => new SpookyHashConfig() {                          HashSizeInBits = 32'                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64' 128 };
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: Assert.Throws<NotImplementedException>(                  () => spookyHashV2.ComputeHash(new byte[200]));
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.SpookyHash,SpookyHashV2_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\SpookyHash\SpookyHashV2_Implementation_Tests.cs,SpookyHashV2_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: spookyHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.Test._Utilities,UtilityExtension_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Test\_Utilities\UtilityExtension_Tests.cs,UtilityExtension_HexToBytes_InvalidHexLength_Throws,The following statement contains a magic number: Enumerable.Range(0' 32).Select(i => (i * 2) + 1)
Magic Number,OpenSource.Data.HashFunction.Test.Test._Utilities,UtilityExtension_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\Test\_Utilities\UtilityExtension_Tests.cs,UtilityExtension_HexToBytes_InvalidHexLength_Throws,The following statement contains a magic number: Enumerable.Range(0' 32).Select(i => (i * 2) + 1)
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHashConfig_Tests.cs,xxHashConfig_Defaults_HaventChanged,The following statement contains a magic number: Assert.Equal(32' xxHashConfigInstance.HashSizeInBits);
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHashConfig_Tests.cs,xxHashConfig_Clone_Works,The following statement contains a magic number: var xxHashConfigInstance = new xxHashConfig() {                  HashSizeInBits = 64'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHashConfig_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHashConfig_Tests.cs,xxHashConfig_Clone_Works,The following statement contains a magic number: var xxHashConfigInstance = new xxHashConfig() {                  HashSizeInBits = 64'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHashFactory_Tests.cs,xxHashFactory_Create_Config_Works,The following statement contains a magic number: var XxHashConfig = new xxHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHashFactory_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHashFactory_Tests.cs,xxHashFactory_Create_Config_Works,The following statement contains a magic number: var XxHashConfig = new xxHashConfig() {                  HashSizeInBits = 32'                  Seed = 1337UL'              };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_ValidInputs_Works,The following statement contains a magic number: xxHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(32);
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_IsCloned,The following statement contains a magic number: xxHashConfigMock.Setup(xhc => xhc.Clone())                      .Returns(() => new xxHashConfig() {                          HashSizeInBits = 32'                      });
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsInvalid_Throws,The following statement contains a magic number: var invalidHashSizes = new[] { -1' 0' 1' 2' 3' 4' 5' 6' 7' 8' 31' 33' 63' 65' 127' 128' 129' 65535 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_Constructor_Config_HashSizeInBits_IsValid_Works,The following statement contains a magic number: var validHashSizes = new[] { 32' 64 };
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: xxHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_ComputeHash_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: xxHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: xxHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test.xxHash,xxHash_Implementation_Tests,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\xxHash\xxHash_Implementation_Tests.cs,xxHash_Implementation_ComputeHashAsync_HashSizeInBits_MagicallyInvalid_Throws,The following statement contains a magic number: xxHashConfigMock.SetupGet(xhc => xhc.HashSizeInBits)                      .Returns(() => {                          readCount += 1;                            if (readCount == 1)                              return 32;                            return 33;                      });
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: hexString = hexString.Substring(2);
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: chars.Length % 2 == 1
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: var bytes = new byte[chars.Length / 2];
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: bytes[x / 2] = 0;
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: x % 2 == 0
Magic Number,OpenSource.Data.HashFunction.Test._Utilities,UtilityExtensions,D:\research\architectureSmells\repos\brandondahler_Data.HashFunction\src\OpenSource.Data.HashFunction.Test\_Utilities\UtilityExtensions.cs,HexToBytes,The following statement contains a magic number: bytes[x / 2] |= (byte)(chars[x] - '0');
