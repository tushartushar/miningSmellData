Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tasks.Show.Controls,IndexingStackPanel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\IndexingStackPanel.cs,MeasureOverride,Cyclomatic complexity of the method is 12
Complex Method,Tasks.Show.Controls,TimelinePanel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\TimelinePanel.cs,CalculateVerticalOffset,Cyclomatic complexity of the method is 10
Complex Method,Tasks.Show.Helpers,Storage,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Storage.cs,Load,Cyclomatic complexity of the method is 7
Complex Method,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,Cyclomatic complexity of the method is 7
Complex Method,Microsoft.Shell,SingleInstance,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\SingleInstance.cs,GetCommandLineArgs,Cyclomatic complexity of the method is 7
Long Parameter List,Tasks.Show.Controls,PixelAlignedImage,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\PixelAlignedBitmap.cs,TryApplyVisualTransform,The method has 5 parameters.
Long Parameter List,Tasks.Show.Helpers,BrushToAlphaBrushConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,BrushToAlphaBrushConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,BoolToDoubleConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,BoolToDoubleConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ReverseBooleanToVisibilityConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ReverseBooleanToVisibilityConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,DateTimeToStringConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,DateTimeToStringConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,DebugConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,DebugConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ColorToBrushConverterWithFallback,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ColorToBrushConverterWithFallback,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ColorToColorConverterWithFallback,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,ColorToColorConverterWithFallback,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,FallbackWhenNullConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.Helpers,FallbackWhenNullConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Tasks.Show.Utils,HotKeyHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\HotKeyHelper.cs,HookHotKey,The method has 5 parameters.
Long Parameter List,Tasks.Show.Utils,HotKeyHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\HotKeyHelper.cs,RegisterHotKey,The method has 4 parameters.
Long Parameter List,Tasks.Show.Utils,HotKeyHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\HotKeyHelper.cs,RegisterHotKey,The method has 4 parameters.
Long Parameter List,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The method has 4 parameters.
Long Parameter List,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,ConvertBack,The method has 4 parameters.
Long Identifier,Microsoft.Shell,SingleInstance,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\SingleInstance.cs,SignalFirstInstance,The length of the parameter firstInstanceRemoteServiceReference is 35.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,ArrangeOverride,The length of the statement  "	if ((left == _lastChildArrange.Left && top == _lastChildArrange.Top) || (!this.IsAnimationEnabled) || (_isInitialLayout)) { " is 123.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,OnPreviewMouseDown,The length of the statement  "	if (IsDraggingEnabled && ((CanDragHorizontally && this.ActualWidth < this.Child.DesiredSize.Width) || (CanDragVertically && this.ActualHeight < this.Child.DesiredSize.Height))) { " is 178.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,OnPreviewMouseMove,The length of the statement  "	if (IsDraggingEnabled && ((CanDragHorizontally && this.ActualWidth < this.Child.DesiredSize.Width) || (CanDragVertically && this.ActualHeight < this.Child.DesiredSize.Height))) { " is 178.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,StartAnimation,The length of the statement  "	// track animation started stopped (using horizontal only' which is fine because horizontal and vertical always run together) " is 125.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,StartAnimation,The length of the statement  "	SplineDoubleKeyFrame hK = new SplineDoubleKeyFrame (left' KeyTime.FromTimeSpan (TimeSpan.FromMilliseconds (this.Duration))); " is 124.
Long Statement,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,StartAnimation,The length of the statement  "	SplineDoubleKeyFrame vK = new SplineDoubleKeyFrame (top' KeyTime.FromTimeSpan (TimeSpan.FromMilliseconds (this.Duration))); " is 123.
Long Statement,Tasks.Show.Controls,CalloutShape,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\CalloutShape.cs,ArrangeOverride,The length of the statement  "	_rect = new Rect (margin' margin' Math.Max (0' finalSize.Width - penThickness)' Math.Max (0' finalSize.Height - penThickness)); " is 127.
Long Statement,Tasks.Show.Controls,EditableTextBlock,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\EditableTextBlock.cs,OnMouseUp,The length of the statement  "		Dispatcher.CurrentDispatcher.BeginInvoke (DispatcherPriority.Background' (DispatcherOperationCallback)delegate (object arg) { " is 125.
Long Statement,Tasks.Show.Controls,TimelinePanel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\TimelinePanel.cs,ArrangeOverride,The length of the statement  "			width = CalculateTimelineOffset (child.EndRangeDate' finalSize.Width) - CalculateTimelineOffset (child.Date' finalSize.Width); " is 126.
Long Statement,Tasks.Show.Helpers,BrushToAlphaBrushConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\Converters.cs,Convert,The length of the statement  "		SolidColorBrush alphaBrush = new SolidColorBrush (Color.FromArgb (this.Alpha' brush.Color.R' brush.Color.G' brush.Color.B)); " is 124.
Long Statement,Tasks.Show.UserControls,FolderDetailsDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\FolderDetailsDropDown.xaml.cs,Close,The length of the statement  "	if (Folder != null && !m_newFolderTextBox.Text.Equals (Folder.Name) && Folder.IsValidFolderName (m_newFolderTextBox.Text)) { " is 124.
Long Statement,Tasks.Show,Taskbar,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Taskbar.cs,Init,The length of the statement  "			((INotifyCollectionChanged)App.Root.TaskData.AllFolders).CollectionChanged += (sender' args) => RefreshTaskbarTasks (jumpList); " is 127.
Long Statement,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,DeleteCompleted_Click,The length of the statement  "		if (MessageBox.Show (String.Format ("Are you sure you want to delete {0} completed task{1}? There is no way to restore {2} once {3} deleted."' items.Length' (items.Length > 1 ? "s" : "")' (items.Length > 1 ? "them" : "it")' (items.Length > 1 ? "they are" : "it is"))' "Delete completed tasks?"' MessageBoxButton.YesNo) == MessageBoxResult.Yes) { " is 345.
Long Statement,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,The length of the statement  "		var theFolder = m_rootViewModel.TaskData.AllFolders.Where (folder => folder.Name.EasyEquals (commandLineArgs [2])).FirstOrDefault (); " is 133.
Long Statement,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,RegisterApplicationRecoveryAndRestart,The length of the statement  "		RecoverySettings recoverySettings = new RecoverySettings (new RecoveryData (PerformRecovery' null)' c_keepAliveInterval); " is 121.
Long Statement,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,DeleteFolders_Click,The length of the statement  "	m_rootViewModel.TaskData.UserFolders.Where (f => !m_rootViewModel.TaskData.Tasks.Any (t => t.Folder == f)).ToArray ().ForEach (f => m_rootViewModel.TaskData.RemoveFolder (f)); " is 175.
Long Statement,Tasks.Show.Utils,HotKeyHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\HotKeyHelper.cs,HookHotKey,The length of the statement  "		throw new ApplicationException ("window doesn't have a source yet. Did you wait till after the SourceInitialized event?"); " is 122.
Long Statement,Microsoft.Shell,SingleInstance,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\SingleInstance.cs,GetCommandLineArgs,The length of the statement  "		string appFolderPath = Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.LocalApplicationData)' uniqueApplicationName); " is 136.
Long Statement,Microsoft.Shell,SingleInstance,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\SingleInstance.cs,SignalFirstInstance,The length of the statement  "	IPCRemoteService firstInstanceRemoteServiceReference = (IPCRemoteService)RemotingServices.Connect (typeof(IPCRemoteService)' remotingServiceUrl); " is 145.
Long Statement,Tasks.Show.ViewModels,TimelineViewModel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,refreshDates,The length of the statement  "		begin = this.Tasks.Where (t => t.SignificantDate.HasValue && t.SignificantDate < DateTime.MaxValue.Date).Min (t => t.SignificantDate.Value); " is 140.
Long Statement,Tasks.Show.ViewModels,TimelineViewModel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,refreshDates,The length of the statement  "		end = this.Tasks.Where (t => t.SignificantDate.HasValue && t.SignificantDate < DateTime.MaxValue.Date).Max (t => t.SignificantDate.Value); " is 138.
Complex Conditional,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,ArrangeOverride,The conditional expression  "(left == _lastChildArrange.Left && top == _lastChildArrange.Top) || (!this.IsAnimationEnabled) || (_isInitialLayout)"  is complex.
Complex Conditional,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,OnPreviewMouseDown,The conditional expression  "IsDraggingEnabled && ((CanDragHorizontally && this.ActualWidth < this.Child.DesiredSize.Width) || (CanDragVertically && this.ActualHeight < this.Child.DesiredSize.Height))"  is complex.
Complex Conditional,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,OnPreviewMouseMove,The conditional expression  "IsDraggingEnabled && ((CanDragHorizontally && this.ActualWidth < this.Child.DesiredSize.Width) || (CanDragVertically && this.ActualHeight < this.Child.DesiredSize.Height))"  is complex.
Complex Conditional,Tasks.Show.Controls,PixelAlignedImage,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\PixelAlignedBitmap.cs,OnSourceChanged,The conditional expression  "((oldValue != null) && (bitmap._sourceDownloaded != null)) && (!oldValue.IsFrozen && (oldValue is BitmapSource))"  is complex.
Virtual Method Call from Constructor,Tasks.Show.ViewModels,TaskViewModel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TaskViewModel.cs,TaskViewModel,The constructor "TaskViewModel" calls a virtual method "OnPropertyChanged".
Empty Catch Block,Tasks.Show,Taskbar,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Taskbar.cs,Init,The method has an empty catch block.
Empty Catch Block,Tasks.Show,Taskbar,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Taskbar.cs,RefreshTaskbarTasks,The method has an empty catch block.
Empty Catch Block,Microsoft.Shell,SingleInstance,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\SingleInstance.cs,GetCommandLineArgs,The method has an empty catch block.
Magic Number,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,ArrangeOverride,The following statement contains a magic number: if (_isInitialLayout && firstLayoutTimer == null) {  	firstLayoutTimer = new DispatcherTimer ();  	firstLayoutTimer.Interval = TimeSpan.FromMilliseconds (500);  	EventHandler handler = null;  	handler = delegate (object s' EventArgs e) {  		firstLayoutTimer.Tick -= handler;  		firstLayoutTimer.Stop ();  		_isInitialLayout = false;  	};  	firstLayoutTimer.Tick += handler;  	firstLayoutTimer.Start ();  }  
Magic Number,Tasks.Show.Controls,AnimatedScrollDecorator,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\AnimatedScrollingDecorator.cs,ArrangeOverride,The following statement contains a magic number: firstLayoutTimer.Interval = TimeSpan.FromMilliseconds (500);  
Magic Number,Tasks.Show.Controls,PixelAlignedImage,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\PixelAlignedBitmap.cs,AreClose,The following statement contains a magic number: return ((delta < 1.53E-06) && (delta > -1.53E-06));  
Magic Number,Tasks.Show.Controls,PixelAlignedImage,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Controls\PixelAlignedBitmap.cs,AreClose,The following statement contains a magic number: return ((delta < 1.53E-06) && (delta > -1.53E-06));  
Magic Number,Tasks.Show.Helpers,DayExtensions,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\DateTimeExtensions.cs,Next,The following statement contains a magic number: if (offsetDays <= 0) {  	offsetDays += 7;  }  
Magic Number,Tasks.Show.Helpers,DayExtensions,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\DateTimeExtensions.cs,Next,The following statement contains a magic number: offsetDays += 7;  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: try {  	Matrix m = PresentationSource.FromVisual (Application.Current.MainWindow).CompositionTarget.TransformToDevice;  	x = 96 / m.M11;  	y = 96 / m.M22;  } catch {  	y = 96;  	x = 96;  }  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: try {  	Matrix m = PresentationSource.FromVisual (Application.Current.MainWindow).CompositionTarget.TransformToDevice;  	x = 96 / m.M11;  	y = 96 / m.M22;  } catch {  	y = 96;  	x = 96;  }  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: try {  	Matrix m = PresentationSource.FromVisual (Application.Current.MainWindow).CompositionTarget.TransformToDevice;  	x = 96 / m.M11;  	y = 96 / m.M22;  } catch {  	y = 96;  	x = 96;  }  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: try {  	Matrix m = PresentationSource.FromVisual (Application.Current.MainWindow).CompositionTarget.TransformToDevice;  	x = 96 / m.M11;  	y = 96 / m.M22;  } catch {  	y = 96;  	x = 96;  }  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: x = 96 / m.M11;  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: y = 96 / m.M22;  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: y = 96;  
Magic Number,Tasks.Show.Helpers,GlassHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Helpers\GlassHelper.cs,GetCurrentDPI,The following statement contains a magic number: x = 96;  
Magic Number,Tasks.Show.UserControls,DateDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\DateDropDown.xaml.cs,RefreshDates,The following statement contains a magic number: if (lastRefresh.Date != DateTime.Today) {  	Dates.Clear ();  	Dates.Add (new LabeledDateTime ("No Due Date"' null));  	Dates.Add (new LabeledDateTime ("Today"' DateTime.Today));  	Dates.Add (new LabeledDateTime ("Tomorrow"' DateTime.Today.AddDays (1)));  	Dates.Add (new LabeledDateTime ("This Week"' DateTime.Today.Next (DayOfWeek.Friday)));  	Dates.Add (new LabeledDateTime ("One Week from Today"' DateTime.Today.AddDays (7)));  	Dates.Add (new LabeledDateTime ("Someday"' DateTime.MaxValue.Date));  	lastRefresh = DateTime.Today;  }  
Magic Number,Tasks.Show.UserControls,DateDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\DateDropDown.xaml.cs,RefreshDates,The following statement contains a magic number: Dates.Add (new LabeledDateTime ("One Week from Today"' DateTime.Today.AddDays (7)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("5 Minutes or Less"' TimeSpan.FromMinutes (5)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("15 Minutes"' TimeSpan.FromMinutes (15)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("30 Minutes"' TimeSpan.FromMinutes (30)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("Two Hours"' TimeSpan.FromHours (2)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("Three Hours"' TimeSpan.FromHours (3)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("Half Day"' TimeSpan.FromHours (4)));  
Magic Number,Tasks.Show.UserControls,TimeSpanDropDown,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\UserControls\TimeSpanDropDown.xaml.cs,TimeSpanDropDown,The following statement contains a magic number: timeSpans.Add (new LabeledTimeSpan ("Full Day or More"' TimeSpan.FromHours (8)));  
Magic Number,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,The following statement contains a magic number: if ((commandLineArgs.Count == 1) && isFirstInstance) {  	// Do nothing  } // if no arguments and not first instance  else if ((commandLineArgs.Count == 1) && !isFirstInstance) {  	// Do nothing  } // if second argument is /newtask  else if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/newtask")) {  	this_hotkey (null' EventArgs.Empty);  } // otherwise' second argument is /goto and third argument is folder to select  else if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/goto")) {  	// find requested folder  	var theFolder = m_rootViewModel.TaskData.AllFolders.Where (folder => folder.Name.EasyEquals (commandLineArgs [2])).FirstOrDefault ();  	if (theFolder != null) {  		m_rootViewModel.TaskData.CurrentFolder = theFolder;  	}  }  
Magic Number,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,The following statement contains a magic number: if ((commandLineArgs.Count == 1) && !isFirstInstance) {  	// Do nothing  } // if second argument is /newtask  else if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/newtask")) {  	this_hotkey (null' EventArgs.Empty);  } // otherwise' second argument is /goto and third argument is folder to select  else if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/goto")) {  	// find requested folder  	var theFolder = m_rootViewModel.TaskData.AllFolders.Where (folder => folder.Name.EasyEquals (commandLineArgs [2])).FirstOrDefault ();  	if (theFolder != null) {  		m_rootViewModel.TaskData.CurrentFolder = theFolder;  	}  }  
Magic Number,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,The following statement contains a magic number: if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/newtask")) {  	this_hotkey (null' EventArgs.Empty);  } // otherwise' second argument is /goto and third argument is folder to select  else if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/goto")) {  	// find requested folder  	var theFolder = m_rootViewModel.TaskData.AllFolders.Where (folder => folder.Name.EasyEquals (commandLineArgs [2])).FirstOrDefault ();  	if (theFolder != null) {  		m_rootViewModel.TaskData.CurrentFolder = theFolder;  	}  }  
Magic Number,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,ProcessCommandLineArgs,The following statement contains a magic number: if ((commandLineArgs.Count > 1) && (commandLineArgs [1].ToLowerInvariant () == "/goto")) {  	// find requested folder  	var theFolder = m_rootViewModel.TaskData.AllFolders.Where (folder => folder.Name.EasyEquals (commandLineArgs [2])).FirstOrDefault ();  	if (theFolder != null) {  		m_rootViewModel.TaskData.CurrentFolder = theFolder;  	}  }  
Magic Number,Tasks.Show,MainWindow,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\MainWindow.xaml.cs,CreateWindowGlass,The following statement contains a magic number: try {  	// obtain the window handle for the window  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// get system dpi  	double x = 0;  	double y = 0;  	GlassHelper.GetCurrentDPI (out x' out y);  	double dpiScaler = x / 96.0;  	// set margins  	GlassHelper.Margins margins = new GlassHelper.Margins ();  	// extend glass frame into client area  	margins.cxLeftWidth = Convert.ToInt32 (c_glassMargins.Left * dpiScaler);  	margins.cxRightWidth = Convert.ToInt32 (c_glassMargins.Right * dpiScaler);  	margins.cyTopHeight = Convert.ToInt32 (c_glassMargins.Top * dpiScaler);  	margins.cyBottomHeight = Convert.ToInt32 (c_glassMargins.Bottom * dpiScaler);  	int hr = GlassHelper.DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	if (hr < 0) {  		// glass failed  		FakeGlass.Visibility = Visibility.Visible;  	}  } // if not able to extend glass' paint the default background color  catch (DllNotFoundException) {  	FakeGlass.Visibility = Visibility.Visible;  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 0) {  	return "Today";  } else if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 0) {  	return "Today";  } else if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 0) {  	return "Today";  } else if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == 1) {  	return "Tomorrow";  } else if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff == -1) {  	return "Yesterday";  } else if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff > 1 && dayDiff < 7) {  	return input.DayOfWeek.ToString ();  } else if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyDateConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyDateConverter.cs,FormatDate,The following statement contains a magic number: if (dayDiff >= 7 && dayDiff < 12) {  	// not doing a full two weeks because it starts to feel confusing too far out  	return "Next " + input.DayOfWeek.ToString ();  } else {  	return input.ToString ("ddd' MMMM d' yyyy");  }  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromMinutes (5))  	return "5 Minutes or Less";  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromMinutes (15))  	return "15 Minutes";  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromMinutes (30))  	return "30 Minutes";  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromHours (2))  	return "Two Hours";  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromHours (3))  	return "Three Hours";  
Magic Number,Tasks.Show.Utils,PrettyTimeSpanConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Utils\PrettyTimeSpanConverter.cs,formatTimeSpan,The following statement contains a magic number: if (input <= TimeSpan.FromHours (4))  	return "Half Day";  
Magic Number,Tasks.Show.ViewModels,Filters,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\Filters.cs,Filters,The following statement contains a magic number: m_items.Add ("Due Soon"' task => {  	if (task.IsComplete)  		return false;  	if (!task.Due.HasValue)  		return false;  	return task.Due.Value.Date >= DateTime.Today && task.Due.Value <= DateTime.Today.AddDays (3);  });  
Magic Number,Tasks.Show.ViewModels,Filters,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\Filters.cs,Filters,The following statement contains a magic number: return task.Due.Value.Date >= DateTime.Today && task.Due.Value <= DateTime.Today.AddDays (3);  
Magic Number,Tasks.Show.ViewModels,TimelineViewModel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,refreshDates,The following statement contains a magic number: begin = DateMath.Min (begin' DateTime.Today.AddMonths (-2));  
Magic Number,Tasks.Show.ViewModels,TimelineViewModel,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,refreshDates,The following statement contains a magic number: end = DateMath.Max (end' DateTime.Today.AddMonths (2));  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: if (value is TimeSpan) {  	TimeSpan t = (TimeSpan)value;  	double m = (double)t.TotalMinutes;  	m = Math.Max (m' 30);  	m = Math.Min (m' 12 * 60);  	return (m / TimelineViewModel.TimeSliceMinutes) * TimelineViewModel.TimeSliceHeight;  }  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: if (value is TimeSpan) {  	TimeSpan t = (TimeSpan)value;  	double m = (double)t.TotalMinutes;  	m = Math.Max (m' 30);  	m = Math.Min (m' 12 * 60);  	return (m / TimelineViewModel.TimeSliceMinutes) * TimelineViewModel.TimeSliceHeight;  }  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: if (value is TimeSpan) {  	TimeSpan t = (TimeSpan)value;  	double m = (double)t.TotalMinutes;  	m = Math.Max (m' 30);  	m = Math.Min (m' 12 * 60);  	return (m / TimelineViewModel.TimeSliceMinutes) * TimelineViewModel.TimeSliceHeight;  }  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: m = Math.Max (m' 30);  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: m = Math.Min (m' 12 * 60);  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: m = Math.Min (m' 12 * 60);  
Magic Number,Tasks.Show.ViewModels,EstimateToHeightConverter,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\TimelineViewModel.cs,Convert,The following statement contains a magic number: return (60 / TimelineViewModel.TimeSliceMinutes) * TimelineViewModel.TimeSliceHeight;  
Magic Number,Tasks.Show.Views,TaskView,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\Views\TaskView.xaml.cs,Button_Click,The following statement contains a magic number: this.Opacity = 0.85;  
Missing Default,Tasks.Show.ViewModels,EditTask,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.App\ViewModels\EditTask.cs,task_propertyChanged,The following switch statement is missing a default case: switch (args.PropertyName) {  case "Due":  	OnPropertyChanged (new PropertyChangedEventArgs ("DueString"));  	return;  case "Description":  	validateDescription ();  	OnPropertyChanged (new PropertyChangedEventArgs ("DescriptionString"));  	return;  }  
