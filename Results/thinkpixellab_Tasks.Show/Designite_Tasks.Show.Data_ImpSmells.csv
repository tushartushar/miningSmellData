Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tasks.Show.Models,TaskParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\TaskParser.cs,TryParse,Cyclomatic complexity of the method is 10
Long Statement,Tasks.Show.Models,BaseTask,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\BaseTask.cs,CloneWithFolder,The length of the statement  "            return new Task() { Completed = this.Completed' Description = this.Description' Due = this.Due' Estimate = this.Estimate' Folder = folder' IsImportant = this.IsImportant }; " is 172.
Magic Number,Tasks.Show.Models,DateParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 0; i < 7; i++)              {                  var date = now.AddDays(i);                  vals[date.DayOfWeek.ToString().ToLowerInvariant()] = date;              }
Magic Number,Tasks.Show.Models,DateParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 7; i < 14; i++)              {                  var date = now.AddDays(i);                  vals[("next " + date.DayOfWeek.ToString()).ToLowerInvariant()] = date;              }
Magic Number,Tasks.Show.Models,DateParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 7; i < 14; i++)              {                  var date = now.AddDays(i);                  vals[("next " + date.DayOfWeek.ToString()).ToLowerInvariant()] = date;              }
Magic Number,Tasks.Show.Models,DateParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,tryParseDay,The following statement contains a magic number: if (s_dayMatchRegex.IsMatch(input))              {                  var match = s_dayMatchRegex.Match(input);                  Debug.Assert(match.Groups.Count == 3);                    string maybeDay = match.Groups[1].Value.ToLowerInvariant();                  string theRest = match.Groups[2].Value;                    var matches = mapping.Keys.Where(key => key.StartsWith(maybeDay)).ToArray();                  if (matches.Length == 1)                  {                      // we have a match!...maybe                      maybeDay = string.Format("{0} {1}"' mapping[matches[0]].ToString("yyyy-MM-dd")' theRest);                      return DateTime.TryParse(maybeDay' out value);                  }                    return false;              }              else              {                  return false;              }
Magic Number,Tasks.Show.Models,DateParser,C:\repos\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,tryParseDay,The following statement contains a magic number: if (s_dayMatchRegex.IsMatch(input))              {                  var match = s_dayMatchRegex.Match(input);                  Debug.Assert(match.Groups.Count == 3);                    string maybeDay = match.Groups[1].Value.ToLowerInvariant();                  string theRest = match.Groups[2].Value;                    var matches = mapping.Keys.Where(key => key.StartsWith(maybeDay)).ToArray();                  if (matches.Length == 1)                  {                      // we have a match!...maybe                      maybeDay = string.Format("{0} {1}"' mapping[matches[0]].ToString("yyyy-MM-dd")' theRest);                      return DateTime.TryParse(maybeDay' out value);                  }                    return false;              }              else              {                  return false;              }
