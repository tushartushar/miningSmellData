Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tasks.Show.Helpers,XmlHelper,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Helpers\XmlHelper.cs,GetTask,Cyclomatic complexity of the method is 7
Complex Method,Tasks.Show.Models,TaskParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\TaskParser.cs,TryParse,Cyclomatic complexity of the method is 11
Long Parameter List,Tasks.Show.Models,TaskData,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\TaskData.cs,TaskData,The method has 4 parameters.
Long Statement,Tasks.Show.Models,TaskData,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\TaskData.cs,AddFolder,The length of the statement  "	Contract.Requires (!m_folderList.Any (existing => existing.Name.EasyEquals (folder.Name))' "A folder with the same name exists"); " is 129.
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	var date = now.AddDays (i);  	vals [date.DayOfWeek.ToString ().ToLowerInvariant ()] = date;  }  
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 7; i < 14; i++) {  	var date = now.AddDays (i);  	vals [("next " + date.DayOfWeek.ToString ()).ToLowerInvariant ()] = date;  }  
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,getMapping,The following statement contains a magic number: for (int i = 7; i < 14; i++) {  	var date = now.AddDays (i);  	vals [("next " + date.DayOfWeek.ToString ()).ToLowerInvariant ()] = date;  }  
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,tryParseDay,The following statement contains a magic number: if (s_dayMatchRegex.IsMatch (input)) {  	var match = s_dayMatchRegex.Match (input);  	Debug.Assert (match.Groups.Count == 3);  	string maybeDay = match.Groups [1].Value.ToLowerInvariant ();  	string theRest = match.Groups [2].Value;  	var matches = mapping.Keys.Where (key => key.StartsWith (maybeDay)).ToArray ();  	if (matches.Length == 1) {  		// we have a match!...maybe  		maybeDay = string.Format ("{0} {1}"' mapping [matches [0]].ToString ("yyyy-MM-dd")' theRest);  		return DateTime.TryParse (maybeDay' out value);  	}  	return false;  } else {  	return false;  }  
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,tryParseDay,The following statement contains a magic number: if (s_dayMatchRegex.IsMatch (input)) {  	var match = s_dayMatchRegex.Match (input);  	Debug.Assert (match.Groups.Count == 3);  	string maybeDay = match.Groups [1].Value.ToLowerInvariant ();  	string theRest = match.Groups [2].Value;  	var matches = mapping.Keys.Where (key => key.StartsWith (maybeDay)).ToArray ();  	if (matches.Length == 1) {  		// we have a match!...maybe  		maybeDay = string.Format ("{0} {1}"' mapping [matches [0]].ToString ("yyyy-MM-dd")' theRest);  		return DateTime.TryParse (maybeDay' out value);  	}  	return false;  } else {  	return false;  }  
Magic Number,Tasks.Show.Models,DateParser,D:\newReposJune17\thinkpixellab_Tasks.Show\Tasks.Show.Data\Models\DateParser.cs,tryParseDay,The following statement contains a magic number: Debug.Assert (match.Groups.Count == 3);  
