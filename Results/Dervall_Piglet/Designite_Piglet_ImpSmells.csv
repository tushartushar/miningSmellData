Implementation smell,Namespace,Class,File,Method,Description
Long Method,Piglet.Lexer.Construction,DFA,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\DFA.cs,Minimize,The method has 232 lines of code.
Long Method,Piglet.Lexer.Construction,RegExLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\RegExLexer.cs,NextToken,The method has 209 lines of code.
Long Method,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,CreateParseTable,The method has 108 lines of code.
Long Method,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,SetActionTable,The method has 105 lines of code.
Long Method,Piglet.Parser,LRParser<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\LRParser.cs,Parse,The method has 103 lines of code.
Complex Method,Piglet.Common,CompressedTable,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Common\CompressedTable.cs,CompressedTable,Cyclomatic complexity of the method is 10
Complex Method,Piglet.Lexer.Construction,CharSet,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharSet.cs,ClipRange,Cyclomatic complexity of the method is 9
Complex Method,Piglet.Lexer.Construction,DFA,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\DFA.cs,Create,Cyclomatic complexity of the method is 11
Complex Method,Piglet.Lexer.Construction,DFA,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\DFA.cs,Minimize,Cyclomatic complexity of the method is 14
Complex Method,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,FindNewRanges,Cyclomatic complexity of the method is 8
Complex Method,Piglet.Lexer.Construction,NfaBuilder,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\NfaBuilder.cs,Create,Cyclomatic complexity of the method is 10
Complex Method,Piglet.Lexer.Construction,RegExLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\RegExLexer.cs,EscapedCharToAcceptCharRange,Cyclomatic complexity of the method is 10
Complex Method,Piglet.Lexer.Construction,RegExLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\RegExLexer.cs,NextToken,Cyclomatic complexity of the method is 39
Complex Method,Piglet.Lexer.Construction,ShuntingYard,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\ShuntingYard.cs,ShuntedTokens,Cyclomatic complexity of the method is 10
Complex Method,Piglet.Lexer.Runtime,LexerStateImpl,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Runtime\LexerBase.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,Piglet.Lexer.Runtime,TransitionTable<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Runtime\TransitionTable.cs,TransitionTable,Cyclomatic complexity of the method is 13
Complex Method,Piglet.Parser.Configuration.Fluent,FluentRule,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Configuration\Fluent\FluentRule.cs,ConfigureProductions,Cyclomatic complexity of the method is 11
Complex Method,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,CreateParseTable,Cyclomatic complexity of the method is 13
Complex Method,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,SetActionTable,Cyclomatic complexity of the method is 9
Complex Method,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,Closure,Cyclomatic complexity of the method is 11
Complex Method,Piglet.Parser,LRParser<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\LRParser.cs,Parse,Cyclomatic complexity of the method is 11
Long Parameter List,Piglet.Lexer.Construction.DotNotation,DotNotation,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\DotNotation\DotNotation.cs,GetDfaAndNfaGraphs,The method has 5 parameters. Parameters: regex' input' minimize' nfaString' dfaString
Long Statement,Piglet.Lexer.Construction,CharSet,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharSet.cs,ClipRange,The length of the statement  "                    foreach (var charRange in ClipRange(new CharRange {From = @from' To = (char)(excludedRange.From - 1)}' excludedCharRanges)) " is 123.
Long Statement,Piglet.Lexer.Construction,CharSet,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharSet.cs,ClipRange,The length of the statement  "                    foreach (var charRange in ClipRange(new CharRange { From = (char)(excludedRange.To + 1)' To = to }' excludedCharRanges)) " is 120.
Long Statement,Piglet.Lexer.Construction,DFA,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\DFA.cs,Create,The length of the statement  "                        var oldState = dfa.States.FirstOrDefault(f => f.NfaStates.SetEquals(newState.NfaStates));/* f.NfaStates.Count == newState.NfaStates.Count &&  " is 140.
Long Statement,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,DistinguishValidInputs,The length of the statement  "			var beginningsAndEnds = ranges.Select(f => f.From).Concat(ranges.Select(f => f.To == char.MaxValue ? f.To : (char)(f.To+1))).ToArray(); " is 135.
Long Statement,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,DistinguishValidInputs,The length of the statement  "				transition.ValidInput = new CharSet(transition.ValidInput.Ranges.SelectMany(range => FindNewRanges(range' distinguishedRanges))); " is 129.
Long Statement,Piglet.Lexer.Construction,NFA,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\NFA.cs,Closure,The length of the statement  "                (from e in Transitions.Where(f => states.Contains(f.From) && !f.ValidInput.Any() && !visitedStates.Contains(f.To)) select e.To).ToArray(); " is 138.
Long Statement,Piglet.Lexer.Runtime,NfaLexer<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Runtime\NfaLexer.cs,GetAction,The length of the statement  "            return action != null && action.Item2.Item2 != null ? action.Item2 : new Tuple<int' Func<string' T>>(int.MinValue' null); " is 121.
Long Statement,Piglet.Lexer.Configuration,LexerConfigurator<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Configuration\LexerConfigurator.cs,CreateLexer,The length of the statement  "            IList<NFA> nfas = tokens.Select(token => NfaBuilder.Create(new ShuntingYard(new RegExLexer( new StringReader(token.Item1))))).ToList(); " is 135.
Long Statement,Piglet.Parser.Configuration.Fluent,FluentRule,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Configuration\Fluent\FluentRule.cs,ConfigureProductions,The length of the statement  "                    var indexNames = production.Select((f' index) => new Tuple<int' string>(index' f.Name)).Where(f => f.Item2 != null).ToArray(); " is 126.
Long Statement,Piglet.Parser.Configuration,ParserConfigurator<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Configuration\ParserConfigurator.cs,AugmentGrammar,The length of the statement  "            augmentedStart.AddProduction(startSymbol); // This production is never reduced' parser accepts when its about to reduce. No reduce action. " is 138.
Long Statement,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,CalculateNullable,The length of the statement  "                        bool symbolIsNullable = production.Symbols.All(symbol => !(symbol is Terminal<T>) && nullable.Contains((NonTerminal<T>)symbol)); " is 128.
Long Statement,Piglet.Parser.Construction,ParserBuilder<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\ParserBuilder.cs,CreateParseTable,The length of the statement  "            // Useful point to look at the table' and everything the builder has generated' since after this point the grammar is pretty much destroyed. " is 140.
Long Statement,Piglet.Parser.Construction.Debug,ParseTableToString,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\Debug\ParseTableToString.cs,ToDebugString,The length of the statement  "            sb.Append(string.Format(format' new[] { "STATE" }.Concat(grammar.AllSymbols.Select(f => f.DebugName)).ToArray<object>())); " is 122.
Long Statement,Piglet.Parser.Construction.Debug,ParseTableToString,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\Debug\ParseTableToString.cs,ToDebugString,The length of the statement  "                }).Concat(grammar.AllSymbols.OfType<NonTerminal<T>>().Where(f => f.ProductionRules.All(p => p.ResultSymbol != grammar.AcceptSymbol)).Select(f => table.Goto[i' f.TokenNumber - numTerminals] == " is 191.
Magic Number,Piglet.Common,CompressedTable,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Common\CompressedTable.cs,CompressedTable,The following statement contains a magic number: var hash = stateActions.Aggregate(0' (acc' x) => (acc * 397) ^ x);
Magic Number,Piglet.Common,CompressedTable,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Common\CompressedTable.cs,CompressedTable,The following statement contains a magic number: offsetHash = (offsetHash * 397) ^ table[j];
Magic Number,Piglet.Lexer.Construction,CharRange,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharRange.cs,ToGraphSafeString,The following statement contains a magic number: return c >= 33 && c <= 0x7e                         ? c.ToString()                         : string.Format("0x{0:x2}"' (int)c);
Magic Number,Piglet.Lexer.Construction,CharRange,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharRange.cs,GetHashCode,The following statement contains a magic number: return (From.GetHashCode()*397) ^ To.GetHashCode();
Magic Number,Piglet.Lexer.Construction,CharSet,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\CharSet.cs,CharSet,The following statement contains a magic number: ranges.Length % 2 != 0
Magic Number,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,DistinguishValidInputs,The following statement contains a magic number: var distinguishedRanges = new List<CharRange>(pivot * 2);
Magic Number,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,FindNewRanges,The following statement contains a magic number: int pivot = a + (b - a) / 2;
Magic Number,Piglet.Lexer.Construction,FiniteAutomata<TState>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\FiniteAutomata.cs,FindNewRanges,The following statement contains a magic number: int pivot = a2 + (b2 - a2) / 2;
Magic Number,Piglet.Lexer.Runtime,TransitionTable<T>,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Runtime\TransitionTable.cs,TransitionTable,The following statement contains a magic number: asciiIndices = new int[256];
Magic Number,Piglet.Parser.Configuration.Fluent,FluentParserConfigurator,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Configuration\Fluent\FluentParserConfigurator.cs,MakeListRule,The following statement contains a magic number: listRule.AddProduction(listRule' separator' ((FluentRule)rule).NonTerminal).SetReduceFunction(f =>                  {                      var list = (List<TListType>)f[0];                      list.Add((TListType)f[2]);                      return list;                  });
Magic Number,Piglet.Parser.Construction.Debug,ParseTableToString,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Parser\Construction\Debug\ParseTableToString.cs,ToDebugString,The following statement contains a magic number: formatParams.Distinct().Count() == 2
Missing Default,Piglet.Lexer.Construction,RegExLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\RegExLexer.cs,EscapedCharToAcceptCharsInClass,The following switch statement is missing a default case: switch (c)              {                  case '-':                  case '^':                      return SingleChar(c);                }
Missing Default,Piglet.Lexer.Construction,ShuntingYard,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\ShuntingYard.cs,PreceedingTypeRequiresConcat,The following switch statement is missing a default case: switch (type)              {                  case RegExToken.TokenType.OperatorMul:                  case RegExToken.TokenType.OperatorQuestion:                  case RegExToken.TokenType.OperatorPlus:                  case RegExToken.TokenType.Accept:                  case RegExToken.TokenType.OperatorCloseParanthesis:                  case RegExToken.TokenType.NumberedRepeat:                      return true;              }
Missing Default,Piglet.Lexer.Construction,ShuntingYard,D:\research\architectureSmells\repos\Dervall_Piglet\Piglet\Lexer\Construction\ShuntingYard.cs,NextTypeRequiresConcat,The following switch statement is missing a default case: switch (type)              {                  case RegExToken.TokenType.Accept:                  case RegExToken.TokenType.OperatorOpenParanthesis:                      return true;                }
