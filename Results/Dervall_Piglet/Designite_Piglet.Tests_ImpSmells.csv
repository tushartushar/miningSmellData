Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Piglet.Tests.Parser,ErrorRecoveryTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ErrorRecoveryTests.cs,TestRecoverFromErrors,The length of the statement  "            Assert.AreEqual("aaaaaaa;THESEAREEATEN;aaa;aa;a;aaaaa;aaaaaaaa;".Aggregate(0' (i' c) => c == 'a' ? i + 1 : i)' legalAs); " is 120.
Long Statement,Piglet.Tests.Parser,ErrorRecoveryTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ErrorRecoveryTests.cs,TestErrorRecoveryInFluentConfiguration,The length of the statement  "            Assert.AreEqual("aaaaaaa;THESEAREEATEN;aaa;aa;a;aaaaa;aaaaaaaa;".Aggregate(0' (i' c) => c == 'a' ? i + 1 : i)' legalAs); " is 120.
Empty Catch Block,Piglet.Tests.Parser.Configuration,TestNonTerminal,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\Configuration\TestNonTerminal.cs,TestBadProduction,The method has an empty catch block.
Empty Catch Block,Piglet.Tests.Parser.Configuration,TestTerminal,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\Configuration\TestTerminal.cs,TestMultipleDefinedTerminalWithDifferentRegEx,The method has an empty catch block.
Empty Catch Block,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestRetardedCyclicGrammar,The method has an empty catch block.
Empty Catch Block,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestShiftReduceConflictWithAccept,The method has an empty catch block.
Empty Catch Block,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestNonAssociativity,The method has an empty catch block.
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestSimpleMinimization,The following statement contains a magic number: Assert.AreEqual(3' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestSimpleMinimization,The following statement contains a magic number: Assert.AreEqual(2' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestSemiComplexMinimization,The following statement contains a magic number: Assert.AreEqual(5' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestSemiComplexMinimization,The following statement contains a magic number: Assert.AreEqual(2' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,Test2ComplexMinimization,The following statement contains a magic number: Assert.AreEqual(7' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,Test2ComplexMinimization,The following statement contains a magic number: Assert.AreEqual(4' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestMoreComplexMinimization,The following statement contains a magic number: Assert.AreEqual(12' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestStateMinimization,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestStateMinimization.cs,TestMoreComplexMinimization,The following statement contains a magic number: Assert.AreEqual(4' dfa.States.Count);
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestConstructWithDigit,The following statement contains a magic number: Assert.AreEqual(3' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestConstructWithDigit,The following statement contains a magic number: Assert.AreEqual(3' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestRepeat,The following statement contains a magic number: Assert.AreEqual(4' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestRepeat,The following statement contains a magic number: Assert.AreEqual(4' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOneOrMore,The following statement contains a magic number: Assert.AreEqual(3' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOneOrMore,The following statement contains a magic number: Assert.AreEqual(3' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOneOrOnce,The following statement contains a magic number: Assert.AreEqual(2' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOneOrOnce,The following statement contains a magic number: Assert.AreEqual(2' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestAlternate,The following statement contains a magic number: Assert.AreEqual(6' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestAlternate,The following statement contains a magic number: Assert.AreEqual(6' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestClosure,The following statement contains a magic number: Assert.AreEqual(6' s0Closure.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestClosure,The following statement contains a magic number: Assert.AreEqual(6' s0Closure.Select(f => f.StateNumber).Distinct().Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestConcatenate,The following statement contains a magic number: Assert.AreEqual(4' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestConcatenate,The following statement contains a magic number: Assert.AreEqual(3' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestComplex,The following statement contains a magic number: Assert.AreEqual(30' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestComplex,The following statement contains a magic number: Assert.AreEqual(35' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOtherComplex,The following statement contains a magic number: Assert.AreEqual(10' nfa.States.Count());
Magic Number,Piglet.Tests.Lexer.Construction,TestNFA,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\Construction\TestNFA.cs,TestOtherComplex,The following statement contains a magic number: Assert.AreEqual(11' nfa.Transitions.Count());
Magic Number,Piglet.Tests.Parser.Configuration,TestNonTerminal,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\Configuration\TestNonTerminal.cs,TestBadProduction,The following statement contains a magic number: nt.AddProduction("abc"' 123' 2.0' false);
Magic Number,Piglet.Tests.Parser.Configuration,TestNonTerminal,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\Configuration\TestNonTerminal.cs,TestBadProduction,The following statement contains a magic number: nt.AddProduction("abc"' 123' 2.0' false);
Magic Number,Piglet.Tests.Parser.Construction.Debug,TestDebugStrings,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\Construction\Debug\TestDebugStrings.cs,TestParseTableToString,The following statement contains a magic number: string debugString = parser.ParseTable.ToDebugString(grammar' 3);
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: var uncompressedTable = new short[']                                               {                                                   {7' 8' 9' 6' 5' 4}'                                                   {1' 1' 1' 1' 1' 1}'                                                   {2' 2' 2' 2' 2' 2}'                                                   {2' 2' 3' 3' 3' 3}'                                                   {1' 1' 1' 2' 2' 2}                                               };
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: y < 6
Magic Number,Piglet.Tests.Common,TestParseTables,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Common\TestParseTables.cs,TestCompressedActionTable,The following statement contains a magic number: x < 5
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: expr.AddProduction(expr' minus' expr).SetReduceFunction(f =>              {                  Console.WriteLine("{0} - {1}"' f[0]' f[2]);                  return f[0] - f[2];              });
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: expr.AddProduction(expr' minus' expr).SetReduceFunction(f =>              {                  Console.WriteLine("{0} - {1}"' f[0]' f[2]);                  return f[0] - f[2];              });
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: expr.AddProduction(expr' mul' expr).SetReduceFunction(f =>              {                  Console.WriteLine("{0} * {1}"' f[0]' f[2]);                  return f[0] * f[2];              });
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: expr.AddProduction(expr' mul' expr).SetReduceFunction(f =>              {                  Console.WriteLine("{0} * {1}"' f[0]' f[2]);                  return f[0] * f[2];              });
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(9 - -5*-4 - 2' result);
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(9 - -5*-4 - 2' result);
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(9 - -5*-4 - 2' result);
Magic Number,Piglet.Tests.Parser,ContextPrecedenceTests,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ContextPrecedenceTests.cs,TestUnaryMinus,The following statement contains a magic number: Assert.AreEqual(9 - -5*-4 - 2' result);
Magic Number,Piglet.Tests.Parser,FluentConfigurationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\FluentConfigurationTest.cs,TestFluentJsonParserConfiguration,The following statement contains a magic number: Assert.AreEqual(5' jObject.Elements.Count);
Magic Number,Piglet.Tests.Parser,FluentConfigurationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\FluentConfigurationTest.cs,TestFluentCalculator,The following statement contains a magic number: Assert.AreEqual(23' result);
Magic Number,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestACalculator,The following statement contains a magic number: expr.AddProduction(expr' "+"' term).SetReduceFunction(s => s[0] + s[2]);
Magic Number,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestACalculator,The following statement contains a magic number: expr.AddProduction(expr' "-"' term).SetReduceFunction(s => s[0] - s[2]);
Magic Number,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestACalculator,The following statement contains a magic number: term.AddProduction(term' "*"' factor).SetReduceFunction(s => s[0] * s[2]);
Magic Number,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestACalculator,The following statement contains a magic number: term.AddProduction(term' "/"' factor).SetReduceFunction(s => s[0] / s[2]);
Magic Number,Piglet.Tests.Parser,ParserIntegrationTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\ParserConfigurationTest.cs,TestACalculator,The following statement contains a magic number: Assert.AreEqual(-5' result);
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' plus' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} + {1}"' s[0]' s[2]);                  return s[0] + s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' plus' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} + {1}"' s[0]' s[2]);                  return s[0] + s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' minus' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} - {1}"' s[0]' s[2]);                  return s[0] - s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' minus' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} - {1}"' s[0]' s[2]);                  return s[0] - s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' mul' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} * {1}"' s[0]' s[2]);                  return s[0] * s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' mul' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} * {1}"' s[0]' s[2]);                  return s[0] * s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' div' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} / {1}"' s[0]' s[2]);                  return s[0] / s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: exp.AddProduction(exp' div' exp).SetReduceFunction(s =>              {                  Console.WriteLine("{0} / {1}"' s[0]' s[2]);                  return s[0] / s[2];              });
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(-2' parser.Parse("1 - (1 + (1 * 2))"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(2' parser.Parse("(((1 - 1) + 1) * 2)"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(4 - 7 - 3' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(4 - 7 - 3' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(4 - 7 - 3' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4' parser.Parse("1 + 2 - 3 * 4"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4' parser.Parse("1 + 2 - 3 * 4"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4' parser.Parse("1 + 2 - 3 * 4"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(5 * 5 / 5' parser.Parse("5*5/5"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(5 * 5 / 5' parser.Parse("5*5/5"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(5 * 5 / 5' parser.Parse("5*5/5"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestLeftAssociative,The following statement contains a magic number: Assert.AreEqual(1 + 2 - 3 * 4 / 5 + 124 * 8' parser.Parse("1 + 2 - 3 * 4 / 5 + 124 * 8"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestRightAssociativity,The following statement contains a magic number: exp.AddProduction(exp' minus' exp).SetReduceFunction(f => f[0] - f[2]);
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestRightAssociativity,The following statement contains a magic number: Assert.AreEqual(4 - (7 - 3)' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestRightAssociativity,The following statement contains a magic number: Assert.AreEqual(4 - (7 - 3)' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestRightAssociativity,The following statement contains a magic number: Assert.AreEqual(4 - (7 - 3)' parser.Parse("4 - 7 - 3"));
Magic Number,Piglet.Tests.Parser,TokenPrecedenceTest,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Parser\TokenPrecedenceTest.cs,TestNonAssociativity,The following statement contains a magic number: exp.AddProduction(exp' equals' exp)                      .SetReduceFunction(f => f[0] - f[2]);
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexDigits,The following statement contains a magic number: Assert.AreEqual(123' tuple.Item2);
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexDigits,The following statement contains a magic number: Assert.AreEqual(42' tuple.Item2);
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexErrorOnThirdLine,The following statement contains a magic number: i < 10
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexLargeText,The following statement contains a magic number: Assert.AreEqual(172' numWords);
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexLargeText,The following statement contains a magic number: Assert.AreEqual(18' numPunctuation);
Magic Number,Piglet.Tests.Lexer,TestLexer,D:\research\architectureSmells\repos\Dervall_Piglet\Tests\Lexer\TestLexer.cs,TestLexLargeText,The following statement contains a magic number: Assert.AreEqual(190' numTokens);
