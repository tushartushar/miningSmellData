Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mercury.ParticleEngine,Axis,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Axis.cs,GetHashCode,The following statement contains a magic number: unchecked {                  var hashCode = _x.GetHashCode();                    hashCode = (hashCode * 397) ^ _y.GetHashCode();                                    return hashCode;              }
Magic Number,Mercury.ParticleEngine,Colour,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Colour.cs,CopyTo,The following statement contains a magic number: destination[2] = _l;
Magic Number,Mercury.ParticleEngine,FastRand,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\FastRand.cs,NextInteger,The following statement contains a magic number: _state = 214013 * _state + 2531011;
Magic Number,Mercury.ParticleEngine,FastRand,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\FastRand.cs,NextInteger,The following statement contains a magic number: _state = 214013 * _state + 2531011;
Magic Number,Mercury.ParticleEngine,FastRand,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\FastRand.cs,NextInteger,The following statement contains a magic number: return (_state >> 16) & 0x7FFF;
Magic Number,Mercury.ParticleEngine,LineSegment,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\LineSegment.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _point2.GetHashCode();
Magic Number,Mercury.ParticleEngine,Range,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Range.cs,Range,The following statement contains a magic number: Radius   = Diameter / 2;
Magic Number,Mercury.ParticleEngine,Range,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Range.cs,Parse,The following statement contains a magic number: if (regex.IsMatch(value)) {                  var match = regex.Match(value);                    var group1 = match.Groups[1].Value;                  var group2 = match.Groups[2].Value;                    // No error handling required on boundary parsing' regex has already validated the                  // format of the boundary values...                  var x = Int32.Parse(group1' NumberStyles.Integer' format);                  var y = Int32.Parse(group2' NumberStyles.Integer' format);                    return new Range(x' y);              }
Magic Number,Mercury.ParticleEngine,RangeF,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\RangeF.cs,Parse,The following statement contains a magic number: if (regex.IsMatch(value)) {                  var match = regex.Match(value);                    var group1 = match.Groups[1].Value;                  var group2 = match.Groups[2].Value;                    // No error handling required on boundary parsing' regex has already validated the                  // format of the boundary values...                  var x = Single.Parse(group1' NumberStyles.Float' format);                  var y = Single.Parse(group2' NumberStyles.Float' format);                    return new RangeF(x' y);              }
Magic Number,Mercury.ParticleEngine.Modifiers,ColourInterpolator2,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Modifiers\ColourInterpolator2.cs,Update,The following statement contains a magic number: while (count-- > 0) {                  particle->Colour[0] = (InitialColour._h + (delta._h * particle->Age));                  particle->Colour[1] = (InitialColour._s + (delta._s * particle->Age));                  particle->Colour[2] = (InitialColour._l + (delta._l * particle->Age));                    particle++;              }
Magic Number,Mercury.ParticleEngine.Modifiers,VelocityColourModifier,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Modifiers\VelocityColourModifier.cs,Update,The following statement contains a magic number: while (count-- > 0) {                  var velocity2 = ((particle->Velocity[0] * particle->Velocity[0]) + (particle->Velocity[1] * particle->Velocity[1]));                  var deltaColour = VelocityColour - StationaryColour;                    if (velocity2 >= velocityThreshold2) {                      VelocityColour.CopyTo(particle->Colour);                  }                  else {                      var t = (float)Math.Sqrt(velocity2) / VelocityThreshold;                        particle->Colour[0] = (deltaColour._h * t) + StationaryColour._h;                      particle->Colour[1] = (deltaColour._s * t) + StationaryColour._s;                      particle->Colour[2] = (deltaColour._l * t) + StationaryColour._l;                  }                    particle++;              }
Magic Number,Mercury.ParticleEngine.Profiles,BoxProfile,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Profiles\BoxProfile.cs,GetOffsetAndHeading,The following statement contains a magic number: switch (FastRand.NextInteger(3)) {                  case 0: { // Left                          *offset = new Coordinate(Width * -0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 1: { // Top                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * -0.5f);                          break;                      }                  case 2: { // Right                          *offset = new Coordinate(Width * 0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 3: { // Bottom                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * 0.5f);                          break;                      }              }
Magic Number,Mercury.ParticleEngine.Profiles,BoxProfile,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Profiles\BoxProfile.cs,GetOffsetAndHeading,The following statement contains a magic number: switch (FastRand.NextInteger(3)) {                  case 0: { // Left                          *offset = new Coordinate(Width * -0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 1: { // Top                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * -0.5f);                          break;                      }                  case 2: { // Right                          *offset = new Coordinate(Width * 0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 3: { // Bottom                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * 0.5f);                          break;                      }              }
Magic Number,Mercury.ParticleEngine.Profiles,BoxProfile,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Profiles\BoxProfile.cs,GetOffsetAndHeading,The following statement contains a magic number: switch (FastRand.NextInteger(3)) {                  case 0: { // Left                          *offset = new Coordinate(Width * -0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 1: { // Top                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * -0.5f);                          break;                      }                  case 2: { // Right                          *offset = new Coordinate(Width * 0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 3: { // Bottom                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * 0.5f);                          break;                      }              }
Missing Default,Mercury.ParticleEngine.Profiles,BoxProfile,C:\repos\Matthew-Davey_mercury-particle-engine\Mercury.ParticleEngine.Core\Profiles\BoxProfile.cs,GetOffsetAndHeading,The following switch statement is missing a default case: switch (FastRand.NextInteger(3)) {                  case 0: { // Left                          *offset = new Coordinate(Width * -0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 1: { // Top                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * -0.5f);                          break;                      }                  case 2: { // Right                          *offset = new Coordinate(Width * 0.5f' FastRand.NextSingle(Height * -0.5f' Height * 0.5f));                          break;                      }                  case 3: { // Bottom                          *offset = new Coordinate(FastRand.NextSingle(Width * -0.5f' Width * 0.5f)' Height * 0.5f);                          break;                      }              }
