Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,EditorForm_Closing,Cyclomatic complexity of the method is 9
Complex Method,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,destroySlide_Click,Cyclomatic complexity of the method is 8
Complex Method,WordSlide,EditorOpenForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorOpenForm.cs,fillLimitedPool,Cyclomatic complexity of the method is 8
Complex Method,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importRHO,Cyclomatic complexity of the method is 8
Complex Method,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importCH,Cyclomatic complexity of the method is 10
Complex Method,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,Cyclomatic complexity of the method is 10
Complex Method,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,Cyclomatic complexity of the method is 22
Complex Method,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,Cyclomatic complexity of the method is 21
Complex Method,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm_KeyDown,Cyclomatic complexity of the method is 28
Complex Method,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,Cyclomatic complexity of the method is 15
Complex Method,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,Cyclomatic complexity of the method is 15
Complex Method,WordSlide,SetupForm,C:\repos\Asky314159_wordslide\win32\WordSlide\SetupForm.cs,fillLimitedPool,Cyclomatic complexity of the method is 8
Complex Method,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,SetNewVersion,Cyclomatic complexity of the method is 9
Complex Method,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,WordSlideApplicationContext,Cyclomatic complexity of the method is 10
Complex Method,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,launcherForm_FormClosing,Cyclomatic complexity of the method is 18
Long Statement,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,populate,The length of the statement  "		slidePool.Add (new EditableSlide (x' openFile.Texts [x]' openFile.Chorus == x' openFile.Chorus != -1' openFile.LocalLinesPerSlide [x])); " is 136.
Long Statement,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,populate,The length of the statement  "		slideList.Add (new PlaceholderSlide (openFile.Order [x]' openFile.Chorus == openFile.Order [x]' openFile.Chorus != -1)); " is 120.
Long Statement,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,EditorForm_Closing,The length of the statement  "		switch (MessageBox.Show ("Any unsaved changes will be lost. Do you want to save now?"' ""' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Warning)) { " is 148.
Long Statement,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,updateLocalLinesPerSlide,The length of the statement  "	defaultLinesCheckBox.Text = String.Format (WordSlide.Resources.DefaultLocalLinesPerSlide' slidePool [availableSlides.SelectedIndex].ToString ()); " is 145.
Long Statement,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,updateLocalLinesPerSlide,The length of the statement  "	localLinesLabel.Text = String.Format (WordSlide.Resources.LocalLinesPerSlide' slidePool [availableSlides.SelectedIndex].ToString ()); " is 133.
Long Statement,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,The length of the statement  "		MessageBox.Show ("The import failed. Please ensure that the entered data or selected file is valid."' "Import Failed"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 163.
Long Statement,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,The length of the statement  "		MessageBox.Show ("The search term could not be found. Try removing leading articles. If it is intended to be a URL' please ensure it ends with the correct extension."' "Import Failed"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 229.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,SetupScreenSaver,The length of the statement  "	this.SetStyle (ControlStyles.OptimizedDoubleBuffer | ControlStyles.UserPaint | ControlStyles.AllPaintingInWmPaint' true); " is 121.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "		e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15); " is 129.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "		e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15); " is 137.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "		e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15); " is 135.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "		e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15); " is 143.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)); " is 154.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)); " is 154.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)); " is 158.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart)); " is 277.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height)); " is 296.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height)); " is 320.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)); " is 152.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50)); " is 288.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)); " is 152.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50)); " is 288.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)); " is 142.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "						float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width; " is 149.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "						float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width; " is 163.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)); " is 139.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "					e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart)); " is 267.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)); " is 148.
Long Statement,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The length of the statement  "				e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart)); " is 270.
Long Statement,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,importLibrary,The length of the statement  "		MessageBox.Show (String.Format (Resources.InvalidFileError' Path.GetFileName (fileName))' Resources.InvalidFileTitle' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 162.
Long Statement,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveBackup,The length of the statement  "	Library.ExportLibrary (Path.Combine (Engine.DataDirectory' "backup.sll")' Directory.GetFiles (Engine.SlideDirectory' "*.sld")); " is 127.
Long Statement,WordSlide,SetupForm,C:\repos\Asky314159_wordslide\win32\WordSlide\SetupForm.cs,loadLastTime,The length of the statement  "		BinaryReader reader = new BinaryReader (new FileStream (Path.Combine (Engine.DataDirectory' "lastshow.o")' FileMode.Open)); " is 123.
Long Statement,WordSlide,SetupForm,C:\repos\Asky314159_wordslide\win32\WordSlide\SetupForm.cs,saveLastTime,The length of the statement  "	BinaryWriter writer = new BinaryWriter (new FileStream (Path.Combine (Engine.DataDirectory' "lastshow.o")' FileMode.Create)); " is 125.
Long Statement,WordSlide,Updater,C:\repos\Asky314159_wordslide\win32\WordSlide\Updater.cs,client_DownloadStringCompleted,The length of the statement  "		success = (!string.IsNullOrEmpty (newVersion) && !string.IsNullOrEmpty (DownloadUrl) && !string.IsNullOrEmpty (DownloadChecksum)); " is 130.
Long Statement,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,checkForUpdate,The length of the statement  "	currentLabel.Text = "Current version: " + Engine.Version.Major + "." + Engine.Version.Minor + "." + Engine.Version.Build + (Engine.Version.Revision == 0 ? "" : "." + Engine.Version.Revision); " is 191.
Long Statement,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,SetNewVersion,The length of the statement  "	newLabel.Text = "Latest version: " + v.Major + "." + v.Minor + "." + v.Build + (v.Revision == 0 ? "" : "." + v.Revision); " is 121.
Long Statement,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,caseNegOne,The length of the statement  "	updateMessage ("There is a new version available. Would you like to update now?"' "The program will restart when the update is complete."); " is 139.
Long Statement,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,caseOne,The length of the statement  "	updateMessage ("You appear to be running a version newer than the newest offered by"' "the server. Needless to say' you do not need to update."); " is 145.
Long Statement,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,ReportError,The length of the statement  "	File.AppendAllText (Path.Combine (Engine.DataDirectory' "crashlog")' string.Format ("WordSlide {1} - {2}{0}------------------------------{0}{3}{0}"' Environment.NewLine' Engine.Version.ToString ()' DateTime.Now.ToString ("MMMM d yyyy HH mm")' (e != null ? e.ToString () : "Unknown exception"))); " is 295.
Long Statement,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,CloseForUpdate,The length of the statement  "	updateProcessStartInfo.Arguments = string.Format ("--selfUpdate \"{0}\" \"{1}\""' this.engine.UpdatePath' Engine.ProgramDirectory); " is 131.
Long Statement,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,IsUacEnabled,The length of the statement  "	return Convert.ToInt32 (Microsoft.Win32.RegistryKey.OpenBaseKey (Microsoft.Win32.RegistryHive.LocalMachine' Microsoft.Win32.RegistryView.Registry64).OpenSubKey (@"Software\Microsoft\Windows\CurrentVersion\Policies\System").GetValue ("EnableLUA"' 0)) != 0; " is 255.
Long Statement,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,SelfUpdate,The length of the statement  "		MessageBox.Show ("Timed out waiting for previous instance to exit."' "WordSlide"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 126.
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: try {  	iss = new EditableSlideSet ();  	StreamReader reader = new StreamReader (path);  	bool flag1 = false;  	bool flag2 = false;  	bool flag3 = false;  	int count = 0;  	string text = "";  	while (!reader.EndOfStream) {  		int ch = reader.Read ();  		if (flag1 && flag2) {  			if (count == 0 && ch == 2) {  				flag1 = false;  			}  			if (count < 4) {  				count++;  			}  			else {  				if (ch == 0) {  					if (flag3) {  						flag1 = false;  						iss.Name += "i";  					}  					else {  						flag3 = true;  					}  				}  				else {  					text += (char)ch;  				}  			}  		}  		else {  			text = "";  			count = 0;  			if (flag1 && ch == 15) {  				flag2 = true;  			}  			else {  				flag1 = false;  				flag2 = false;  				if (ch == 160 || ch == 168) {  					flag1 = true;  				}  			}  		}  	}  	reader.Close ();  }  catch (Exception e) {  	//Program.ReportError(e);  	return ImporterErrorCode.GenericError;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: try {  	iss = new EditableSlideSet ();  	StreamReader reader = new StreamReader (path);  	bool flag1 = false;  	bool flag2 = false;  	bool flag3 = false;  	int count = 0;  	string text = "";  	while (!reader.EndOfStream) {  		int ch = reader.Read ();  		if (flag1 && flag2) {  			if (count == 0 && ch == 2) {  				flag1 = false;  			}  			if (count < 4) {  				count++;  			}  			else {  				if (ch == 0) {  					if (flag3) {  						flag1 = false;  						iss.Name += "i";  					}  					else {  						flag3 = true;  					}  				}  				else {  					text += (char)ch;  				}  			}  		}  		else {  			text = "";  			count = 0;  			if (flag1 && ch == 15) {  				flag2 = true;  			}  			else {  				flag1 = false;  				flag2 = false;  				if (ch == 160 || ch == 168) {  					flag1 = true;  				}  			}  		}  	}  	reader.Close ();  }  catch (Exception e) {  	//Program.ReportError(e);  	return ImporterErrorCode.GenericError;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: try {  	iss = new EditableSlideSet ();  	StreamReader reader = new StreamReader (path);  	bool flag1 = false;  	bool flag2 = false;  	bool flag3 = false;  	int count = 0;  	string text = "";  	while (!reader.EndOfStream) {  		int ch = reader.Read ();  		if (flag1 && flag2) {  			if (count == 0 && ch == 2) {  				flag1 = false;  			}  			if (count < 4) {  				count++;  			}  			else {  				if (ch == 0) {  					if (flag3) {  						flag1 = false;  						iss.Name += "i";  					}  					else {  						flag3 = true;  					}  				}  				else {  					text += (char)ch;  				}  			}  		}  		else {  			text = "";  			count = 0;  			if (flag1 && ch == 15) {  				flag2 = true;  			}  			else {  				flag1 = false;  				flag2 = false;  				if (ch == 160 || ch == 168) {  					flag1 = true;  				}  			}  		}  	}  	reader.Close ();  }  catch (Exception e) {  	//Program.ReportError(e);  	return ImporterErrorCode.GenericError;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: try {  	iss = new EditableSlideSet ();  	StreamReader reader = new StreamReader (path);  	bool flag1 = false;  	bool flag2 = false;  	bool flag3 = false;  	int count = 0;  	string text = "";  	while (!reader.EndOfStream) {  		int ch = reader.Read ();  		if (flag1 && flag2) {  			if (count == 0 && ch == 2) {  				flag1 = false;  			}  			if (count < 4) {  				count++;  			}  			else {  				if (ch == 0) {  					if (flag3) {  						flag1 = false;  						iss.Name += "i";  					}  					else {  						flag3 = true;  					}  				}  				else {  					text += (char)ch;  				}  			}  		}  		else {  			text = "";  			count = 0;  			if (flag1 && ch == 15) {  				flag2 = true;  			}  			else {  				flag1 = false;  				flag2 = false;  				if (ch == 160 || ch == 168) {  					flag1 = true;  				}  			}  		}  	}  	reader.Close ();  }  catch (Exception e) {  	//Program.ReportError(e);  	return ImporterErrorCode.GenericError;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: try {  	iss = new EditableSlideSet ();  	StreamReader reader = new StreamReader (path);  	bool flag1 = false;  	bool flag2 = false;  	bool flag3 = false;  	int count = 0;  	string text = "";  	while (!reader.EndOfStream) {  		int ch = reader.Read ();  		if (flag1 && flag2) {  			if (count == 0 && ch == 2) {  				flag1 = false;  			}  			if (count < 4) {  				count++;  			}  			else {  				if (ch == 0) {  					if (flag3) {  						flag1 = false;  						iss.Name += "i";  					}  					else {  						flag3 = true;  					}  				}  				else {  					text += (char)ch;  				}  			}  		}  		else {  			text = "";  			count = 0;  			if (flag1 && ch == 15) {  				flag2 = true;  			}  			else {  				flag1 = false;  				flag2 = false;  				if (ch == 160 || ch == 168) {  					flag1 = true;  				}  			}  		}  	}  	reader.Close ();  }  catch (Exception e) {  	//Program.ReportError(e);  	return ImporterErrorCode.GenericError;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: while (!reader.EndOfStream) {  	int ch = reader.Read ();  	if (flag1 && flag2) {  		if (count == 0 && ch == 2) {  			flag1 = false;  		}  		if (count < 4) {  			count++;  		}  		else {  			if (ch == 0) {  				if (flag3) {  					flag1 = false;  					iss.Name += "i";  				}  				else {  					flag3 = true;  				}  			}  			else {  				text += (char)ch;  			}  		}  	}  	else {  		text = "";  		count = 0;  		if (flag1 && ch == 15) {  			flag2 = true;  		}  		else {  			flag1 = false;  			flag2 = false;  			if (ch == 160 || ch == 168) {  				flag1 = true;  			}  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: while (!reader.EndOfStream) {  	int ch = reader.Read ();  	if (flag1 && flag2) {  		if (count == 0 && ch == 2) {  			flag1 = false;  		}  		if (count < 4) {  			count++;  		}  		else {  			if (ch == 0) {  				if (flag3) {  					flag1 = false;  					iss.Name += "i";  				}  				else {  					flag3 = true;  				}  			}  			else {  				text += (char)ch;  			}  		}  	}  	else {  		text = "";  		count = 0;  		if (flag1 && ch == 15) {  			flag2 = true;  		}  		else {  			flag1 = false;  			flag2 = false;  			if (ch == 160 || ch == 168) {  				flag1 = true;  			}  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: while (!reader.EndOfStream) {  	int ch = reader.Read ();  	if (flag1 && flag2) {  		if (count == 0 && ch == 2) {  			flag1 = false;  		}  		if (count < 4) {  			count++;  		}  		else {  			if (ch == 0) {  				if (flag3) {  					flag1 = false;  					iss.Name += "i";  				}  				else {  					flag3 = true;  				}  			}  			else {  				text += (char)ch;  			}  		}  	}  	else {  		text = "";  		count = 0;  		if (flag1 && ch == 15) {  			flag2 = true;  		}  		else {  			flag1 = false;  			flag2 = false;  			if (ch == 160 || ch == 168) {  				flag1 = true;  			}  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: while (!reader.EndOfStream) {  	int ch = reader.Read ();  	if (flag1 && flag2) {  		if (count == 0 && ch == 2) {  			flag1 = false;  		}  		if (count < 4) {  			count++;  		}  		else {  			if (ch == 0) {  				if (flag3) {  					flag1 = false;  					iss.Name += "i";  				}  				else {  					flag3 = true;  				}  			}  			else {  				text += (char)ch;  			}  		}  	}  	else {  		text = "";  		count = 0;  		if (flag1 && ch == 15) {  			flag2 = true;  		}  		else {  			flag1 = false;  			flag2 = false;  			if (ch == 160 || ch == 168) {  				flag1 = true;  			}  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: while (!reader.EndOfStream) {  	int ch = reader.Read ();  	if (flag1 && flag2) {  		if (count == 0 && ch == 2) {  			flag1 = false;  		}  		if (count < 4) {  			count++;  		}  		else {  			if (ch == 0) {  				if (flag3) {  					flag1 = false;  					iss.Name += "i";  				}  				else {  					flag3 = true;  				}  			}  			else {  				text += (char)ch;  			}  		}  	}  	else {  		text = "";  		count = 0;  		if (flag1 && ch == 15) {  			flag2 = true;  		}  		else {  			flag1 = false;  			flag2 = false;  			if (ch == 160 || ch == 168) {  				flag1 = true;  			}  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && flag2) {  	if (count == 0 && ch == 2) {  		flag1 = false;  	}  	if (count < 4) {  		count++;  	}  	else {  		if (ch == 0) {  			if (flag3) {  				flag1 = false;  				iss.Name += "i";  			}  			else {  				flag3 = true;  			}  		}  		else {  			text += (char)ch;  		}  	}  }  else {  	text = "";  	count = 0;  	if (flag1 && ch == 15) {  		flag2 = true;  	}  	else {  		flag1 = false;  		flag2 = false;  		if (ch == 160 || ch == 168) {  			flag1 = true;  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && flag2) {  	if (count == 0 && ch == 2) {  		flag1 = false;  	}  	if (count < 4) {  		count++;  	}  	else {  		if (ch == 0) {  			if (flag3) {  				flag1 = false;  				iss.Name += "i";  			}  			else {  				flag3 = true;  			}  		}  		else {  			text += (char)ch;  		}  	}  }  else {  	text = "";  	count = 0;  	if (flag1 && ch == 15) {  		flag2 = true;  	}  	else {  		flag1 = false;  		flag2 = false;  		if (ch == 160 || ch == 168) {  			flag1 = true;  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && flag2) {  	if (count == 0 && ch == 2) {  		flag1 = false;  	}  	if (count < 4) {  		count++;  	}  	else {  		if (ch == 0) {  			if (flag3) {  				flag1 = false;  				iss.Name += "i";  			}  			else {  				flag3 = true;  			}  		}  		else {  			text += (char)ch;  		}  	}  }  else {  	text = "";  	count = 0;  	if (flag1 && ch == 15) {  		flag2 = true;  	}  	else {  		flag1 = false;  		flag2 = false;  		if (ch == 160 || ch == 168) {  			flag1 = true;  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && flag2) {  	if (count == 0 && ch == 2) {  		flag1 = false;  	}  	if (count < 4) {  		count++;  	}  	else {  		if (ch == 0) {  			if (flag3) {  				flag1 = false;  				iss.Name += "i";  			}  			else {  				flag3 = true;  			}  		}  		else {  			text += (char)ch;  		}  	}  }  else {  	text = "";  	count = 0;  	if (flag1 && ch == 15) {  		flag2 = true;  	}  	else {  		flag1 = false;  		flag2 = false;  		if (ch == 160 || ch == 168) {  			flag1 = true;  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && flag2) {  	if (count == 0 && ch == 2) {  		flag1 = false;  	}  	if (count < 4) {  		count++;  	}  	else {  		if (ch == 0) {  			if (flag3) {  				flag1 = false;  				iss.Name += "i";  			}  			else {  				flag3 = true;  			}  		}  		else {  			text += (char)ch;  		}  	}  }  else {  	text = "";  	count = 0;  	if (flag1 && ch == 15) {  		flag2 = true;  	}  	else {  		flag1 = false;  		flag2 = false;  		if (ch == 160 || ch == 168) {  			flag1 = true;  		}  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (count == 0 && ch == 2) {  	flag1 = false;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (count < 4) {  	count++;  }  else {  	if (ch == 0) {  		if (flag3) {  			flag1 = false;  			iss.Name += "i";  		}  		else {  			flag3 = true;  		}  	}  	else {  		text += (char)ch;  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && ch == 15) {  	flag2 = true;  }  else {  	flag1 = false;  	flag2 = false;  	if (ch == 160 || ch == 168) {  		flag1 = true;  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && ch == 15) {  	flag2 = true;  }  else {  	flag1 = false;  	flag2 = false;  	if (ch == 160 || ch == 168) {  		flag1 = true;  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (flag1 && ch == 15) {  	flag2 = true;  }  else {  	flag1 = false;  	flag2 = false;  	if (ch == 160 || ch == 168) {  		flag1 = true;  	}  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (ch == 160 || ch == 168) {  	flag1 = true;  }  
Magic Number,WordSlide,Importer,C:\repos\Asky314159_wordslide\win32\WordSlide\Importer.cs,importPPT,The following statement contains a magic number: if (ch == 160 || ch == 168) {  	flag1 = true;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  default:  	if (changetext)  		textBox.Text = webPrompt;  	textBox.Width = 332;  	browseButton.Visible = false;  	break;  case 2:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "SLD Files|*.sld";  	openFileDialog.FileName = "";  	break;  case 3:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "PPT Files|*.ppt";  	openFileDialog.FileName = "";  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  default:  	if (changetext)  		textBox.Text = webPrompt;  	textBox.Width = 332;  	browseButton.Visible = false;  	break;  case 2:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "SLD Files|*.sld";  	openFileDialog.FileName = "";  	break;  case 3:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "PPT Files|*.ppt";  	openFileDialog.FileName = "";  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  default:  	if (changetext)  		textBox.Text = webPrompt;  	textBox.Width = 332;  	browseButton.Visible = false;  	break;  case 2:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "SLD Files|*.sld";  	openFileDialog.FileName = "";  	break;  case 3:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "PPT Files|*.ppt";  	openFileDialog.FileName = "";  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  default:  	if (changetext)  		textBox.Text = webPrompt;  	textBox.Width = 332;  	browseButton.Visible = false;  	break;  case 2:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "SLD Files|*.sld";  	openFileDialog.FileName = "";  	break;  case 3:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "PPT Files|*.ppt";  	openFileDialog.FileName = "";  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  default:  	if (changetext)  		textBox.Text = webPrompt;  	textBox.Width = 332;  	browseButton.Visible = false;  	break;  case 2:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "SLD Files|*.sld";  	openFileDialog.FileName = "";  	break;  case 3:  	if (changetext)  		textBox.Text = "";  	textBox.Width = 251;  	browseButton.Visible = true;  	openFileDialog.Filter = "PPT Files|*.ppt";  	openFileDialog.FileName = "";  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: textBox.Width = 332;  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: textBox.Width = 251;  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,sourceBox_SelectedIndexChanged,The following statement contains a magic number: textBox.Width = 251;  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  case 0:  	success = Importer.importRHO (textBox.Text);  	break;  case 1:  	success = Importer.importCH (textBox.Text);  	break;  case 2:  	success = Importer.importSLD (textBox.Text);  	break;  case 3:  	success = Importer.importPPT (textBox.Text);  	break;  }  
Magic Number,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,The following statement contains a magic number: switch (sourceBox.SelectedIndex) {  case 0:  	success = Importer.importRHO (textBox.Text);  	break;  case 1:  	success = Importer.importCH (textBox.Text);  	break;  case 2:  	success = Importer.importSLD (textBox.Text);  	break;  case 3:  	success = Importer.importPPT (textBox.Text);  	break;  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings = new string[11];  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [2] = string.Format (Resources.Help_backwardButton' engine.Options.BackwardKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [3] = string.Format (Resources.Help_blankButton' engine.Options.BlankKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [4] = string.Format (Resources.Help_chorusButton' engine.Options.ChorusKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [5] = string.Format (Resources.Help_forwardSongButton' engine.Options.SongForwardKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [6] = string.Format (Resources.Help_backwardSongButton' engine.Options.SongBackwardKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [7] = string.Format (Resources.Help_forwardVerseButton' engine.Options.VerseForwardKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [8] = string.Format (Resources.Help_backwardVerseButton' engine.Options.VerseBackwardKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [9] = string.Format (Resources.Help_videoTestButton' engine.Options.TestKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,ScreenSaverForm,The following statement contains a magic number: helpstrings [10] = string.Format (Resources.Help_helpButton' engine.Options.HelpKey.ToString ());  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (test) {  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  	e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Top' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Left' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Top' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillRectangle (new SolidBrush (Color.FromArgb (engine.Options.TextColor))' this.Bounds.Width - 15' this.Bounds.Height - 15' 15' 15);  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!blank && !displaySlide.blank) {  	string[] lines = displaySlide.text.Split (Environment.NewLine.ToCharArray ()' StringSplitOptions.None);  	float textstart = Bounds.Top + engine.Options.TextStart;  	float titlestart = Bounds.Top + engine.Options.TitleStart;  	float helpstart = Bounds.Top + Options.TitleStartDefault;  	if (!help) {  		if (displaySlide.firstslide) {  			textstart += engine.Options.TitleTextSpace;  			SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  			SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  			SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  			e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  			e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  		}  		if (displaySlide.lastslide) {  			if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  			else {  				SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  				e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  			}  		}  		for (int x = 0; x < lines.Length; x++) {  			SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			string[] sublines;  			if (textsize.Width < Bounds.Width) {  				sublines = new string[1];  				sublines [0] = lines [x];  			}  			else {  				string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  				sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  				int sublineindex = 0;  				for (int z = 0; z < words.Length; z++) {  					float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  					if (wordwidth < Bounds.Width) {  						if ((linewidth + wordwidth + 1) < Bounds.Width) {  							if (linewidth != 0)  								sublines [sublineindex] += " ";  						}  						else {  							sublineindex++;  						}  						sublines [sublineindex] += words [z];  					}  				}  			}  			for (int y = 0; y < sublines.Length; y++) {  				textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  				e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  				textstart += textsize.Height;  			}  		}  	}  	else {  		for (int x = 0; x < helpstrings.Length; x++) {  			SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  			helpstart += linesize.Height;  		}  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (!help) {  	if (displaySlide.firstslide) {  		textstart += engine.Options.TitleTextSpace;  		SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  		SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  		SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  		e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  		e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  	}  	if (displaySlide.lastslide) {  		if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  		else {  			SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  			e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  		}  	}  	for (int x = 0; x < lines.Length; x++) {  		SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		string[] sublines;  		if (textsize.Width < Bounds.Width) {  			sublines = new string[1];  			sublines [0] = lines [x];  		}  		else {  			string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  			sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  			int sublineindex = 0;  			for (int z = 0; z < words.Length; z++) {  				float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  				if (wordwidth < Bounds.Width) {  					if ((linewidth + wordwidth + 1) < Bounds.Width) {  						if (linewidth != 0)  							sublines [sublineindex] += " ";  					}  					else {  						sublineindex++;  					}  					sublines [sublineindex] += words [z];  				}  			}  		}  		for (int y = 0; y < sublines.Length; y++) {  			textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  			e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  			textstart += textsize.Height;  		}  	}  }  else {  	for (int x = 0; x < helpstrings.Length; x++) {  		SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  		helpstart += linesize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.firstslide) {  	textstart += engine.Options.TitleTextSpace;  	SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  	SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  	SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  	e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  	e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.firstslide) {  	textstart += engine.Options.TitleTextSpace;  	SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  	SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  	SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  	e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  	e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.firstslide) {  	textstart += engine.Options.TitleTextSpace;  	SizeF titlesize = e.Graphics.MeasureString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size));  	SizeF bylinesize = e.Graphics.MeasureString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size));  	SizeF copyrightsize = e.Graphics.MeasureString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  	e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  	e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (displaySlide.title' new System.Drawing.Font (engine.Options.TitleFont.family' engine.Options.TitleFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - titlesize.Width) / 2) + Bounds.Left' titlestart));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (displaySlide.by' new System.Drawing.Font (engine.Options.BylineFont.family' engine.Options.BylineFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - bylinesize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (displaySlide.copyright' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - copyrightsize.Width) / 2) + Bounds.Left' titlestart + titlesize.Height + bylinesize.Height));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.lastslide) {  	if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  	else {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.lastslide) {  	if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  	else {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.lastslide) {  	if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  	else {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (displaySlide.lastslide) {  	if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  	else {  		SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  		e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  else {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  else {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  else {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: if (slideindex < slideSet.Length - 1 && !slideSet [slideindex + 1].Blank) {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  else {  	SizeF dotsize = e.Graphics.MeasureString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size));  	e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (engine.Options.SongEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (engine.Options.ShowEnd' new System.Drawing.Font (engine.Options.DotFont.family' engine.Options.DotFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - dotsize.Width) / 2) + Bounds.Left' this.Bounds.Bottom - 50));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: for (int x = 0; x < lines.Length; x++) {  	SizeF textsize = e.Graphics.MeasureString (lines [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  	string[] sublines;  	if (textsize.Width < Bounds.Width) {  		sublines = new string[1];  		sublines [0] = lines [x];  	}  	else {  		string[] words = lines [x].Split (" ".ToCharArray ()' StringSplitOptions.RemoveEmptyEntries);  		sublines = new string[((int)(textsize.Width / Bounds.Width)) + 1];  		int sublineindex = 0;  		for (int z = 0; z < words.Length; z++) {  			float wordwidth = e.Graphics.MeasureString (words [z]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  			float linewidth = e.Graphics.MeasureString (sublines [sublineindex]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)).Width;  			if (wordwidth < Bounds.Width) {  				if ((linewidth + wordwidth + 1) < Bounds.Width) {  					if (linewidth != 0)  						sublines [sublineindex] += " ";  				}  				else {  					sublineindex++;  				}  				sublines [sublineindex] += words [z];  			}  		}  	}  	for (int y = 0; y < sublines.Length; y++) {  		textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  		e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  		textstart += textsize.Height;  	}  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: for (int y = 0; y < sublines.Length; y++) {  	textsize = e.Graphics.MeasureString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  	e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  	textstart += textsize.Height;  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (sublines [y]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - textsize.Width) / 2) + Bounds.Left' textstart));  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: for (int x = 0; x < helpstrings.Length; x++) {  	SizeF linesize = e.Graphics.MeasureString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size));  	e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  	helpstart += linesize.Height;  }  
Magic Number,WordSlide,ScreenSaverForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ScreenSaverForm.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString (helpstrings [x]' new System.Drawing.Font (engine.Options.TextFont.family' engine.Options.TextFont.size)' new SolidBrush (Color.FromArgb (engine.Options.TextColor))' new PointF (((this.Bounds.Width - linesize.Width) / 2) + Bounds.Left' helpstart));  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList = new Keys[11];  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [2] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.BackwardKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [3] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.BlankKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [4] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.ChorusKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [5] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.SongForwardKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [6] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.SongBackwardKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [7] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.VerseForwardKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [8] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.VerseBackwardKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [9] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.HelpKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: keyList [10] = (Keys)Enum.Parse (typeof(Keys)' engine.Options.TestKey' true);  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: backwardSlideBox.Text = keyList [2].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: blankBox.Text = keyList [3].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: chorusBox.Text = keyList [4].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: forwardSongBox.Text = keyList [5].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: backwardSongBox.Text = keyList [6].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: forwardVerseBox.Text = keyList [7].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: backwardVerseBox.Text = keyList [8].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: helpBox.Text = keyList [9].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,loadSettings,The following statement contains a magic number: testBox.Text = keyList [10].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.BackwardKey = keyList [2].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.BlankKey = keyList [3].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.ChorusKey = keyList [4].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.SongForwardKey = keyList [5].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.SongBackwardKey = keyList [6].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.VerseForwardKey = keyList [7].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.VerseBackwardKey = keyList [8].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.HelpKey = keyList [9].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,saveSettings,The following statement contains a magic number: engine.Options.TestKey = keyList [10].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardSlideBox_Click,The following statement contains a magic number: keyList [2] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardSlideBox_Click,The following statement contains a magic number: backwardSlideBox.Text = keyList [2].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,blankBox_Click,The following statement contains a magic number: keyList [3] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,blankBox_Click,The following statement contains a magic number: blankBox.Text = keyList [3].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,chorusBox_Click,The following statement contains a magic number: keyList [4] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,chorusBox_Click,The following statement contains a magic number: chorusBox.Text = keyList [4].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,forwardSongBox_Click,The following statement contains a magic number: keyList [5] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,forwardSongBox_Click,The following statement contains a magic number: forwardSongBox.Text = keyList [5].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardSongBox_Click,The following statement contains a magic number: keyList [6] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardSongBox_Click,The following statement contains a magic number: backwardSongBox.Text = keyList [6].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,forwardVerseBox_Click,The following statement contains a magic number: keyList [7] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,forwardVerseBox_Click,The following statement contains a magic number: forwardVerseBox.Text = keyList [7].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardVerseBox_Click,The following statement contains a magic number: keyList [8] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,backwardVerseBox_Click,The following statement contains a magic number: backwardVerseBox.Text = keyList [8].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,helpBox_Click,The following statement contains a magic number: keyList [9] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,helpBox_Click,The following statement contains a magic number: helpBox.Text = keyList [9].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,testBox_Click,The following statement contains a magic number: keyList [10] = keyChangeForm.newKey;  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,testBox_Click,The following statement contains a magic number: testBox.Text = keyList [10].ToString ();  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (!File.Exists (Path.Combine (Engine.DataDirectory' "backup.sll"))) {  	backupAgeLabel.Text = "Last backup saved: Never";  	restoreButton.Enabled = false;  	if (engine.Options.AutoBackup) {  		saveBackup ();  	}  }  else {  	restoreButton.Enabled = true;  	updateTimeLabel ();  	if (engine.Options.AutoBackup) {  		TimeSpan ts = DateTime.Now - lastUpdated;  		switch (intervalBox.SelectedIndex) {  		case 0:  			if (ts.Days > 0) {  				saveBackup ();  			}  			break;  		case 1:  			if (ts.Days > 6) {  				saveBackup ();  			}  			break;  		case 2:  			if (ts.Days > 30) {  				saveBackup ();  			}  			break;  		}  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (!File.Exists (Path.Combine (Engine.DataDirectory' "backup.sll"))) {  	backupAgeLabel.Text = "Last backup saved: Never";  	restoreButton.Enabled = false;  	if (engine.Options.AutoBackup) {  		saveBackup ();  	}  }  else {  	restoreButton.Enabled = true;  	updateTimeLabel ();  	if (engine.Options.AutoBackup) {  		TimeSpan ts = DateTime.Now - lastUpdated;  		switch (intervalBox.SelectedIndex) {  		case 0:  			if (ts.Days > 0) {  				saveBackup ();  			}  			break;  		case 1:  			if (ts.Days > 6) {  				saveBackup ();  			}  			break;  		case 2:  			if (ts.Days > 30) {  				saveBackup ();  			}  			break;  		}  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (!File.Exists (Path.Combine (Engine.DataDirectory' "backup.sll"))) {  	backupAgeLabel.Text = "Last backup saved: Never";  	restoreButton.Enabled = false;  	if (engine.Options.AutoBackup) {  		saveBackup ();  	}  }  else {  	restoreButton.Enabled = true;  	updateTimeLabel ();  	if (engine.Options.AutoBackup) {  		TimeSpan ts = DateTime.Now - lastUpdated;  		switch (intervalBox.SelectedIndex) {  		case 0:  			if (ts.Days > 0) {  				saveBackup ();  			}  			break;  		case 1:  			if (ts.Days > 6) {  				saveBackup ();  			}  			break;  		case 2:  			if (ts.Days > 30) {  				saveBackup ();  			}  			break;  		}  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (engine.Options.AutoBackup) {  	TimeSpan ts = DateTime.Now - lastUpdated;  	switch (intervalBox.SelectedIndex) {  	case 0:  		if (ts.Days > 0) {  			saveBackup ();  		}  		break;  	case 1:  		if (ts.Days > 6) {  			saveBackup ();  		}  		break;  	case 2:  		if (ts.Days > 30) {  			saveBackup ();  		}  		break;  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (engine.Options.AutoBackup) {  	TimeSpan ts = DateTime.Now - lastUpdated;  	switch (intervalBox.SelectedIndex) {  	case 0:  		if (ts.Days > 0) {  			saveBackup ();  		}  		break;  	case 1:  		if (ts.Days > 6) {  			saveBackup ();  		}  		break;  	case 2:  		if (ts.Days > 30) {  			saveBackup ();  		}  		break;  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (engine.Options.AutoBackup) {  	TimeSpan ts = DateTime.Now - lastUpdated;  	switch (intervalBox.SelectedIndex) {  	case 0:  		if (ts.Days > 0) {  			saveBackup ();  		}  		break;  	case 1:  		if (ts.Days > 6) {  			saveBackup ();  		}  		break;  	case 2:  		if (ts.Days > 30) {  			saveBackup ();  		}  		break;  	}  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: switch (intervalBox.SelectedIndex) {  case 0:  	if (ts.Days > 0) {  		saveBackup ();  	}  	break;  case 1:  	if (ts.Days > 6) {  		saveBackup ();  	}  	break;  case 2:  	if (ts.Days > 30) {  		saveBackup ();  	}  	break;  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: switch (intervalBox.SelectedIndex) {  case 0:  	if (ts.Days > 0) {  		saveBackup ();  	}  	break;  case 1:  	if (ts.Days > 6) {  		saveBackup ();  	}  	break;  case 2:  	if (ts.Days > 30) {  		saveBackup ();  	}  	break;  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: switch (intervalBox.SelectedIndex) {  case 0:  	if (ts.Days > 0) {  		saveBackup ();  	}  	break;  case 1:  	if (ts.Days > 6) {  		saveBackup ();  	}  	break;  case 2:  	if (ts.Days > 30) {  		saveBackup ();  	}  	break;  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (ts.Days > 6) {  	saveBackup ();  }  
Magic Number,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following statement contains a magic number: if (ts.Days > 30) {  	saveBackup ();  }  
Magic Number,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,WordSlideApplicationContext,The following statement contains a magic number: if (args.Options.ContainsKey ("selfUpdate") && args.Args.Count > 1) {  	this.SelfUpdate (args.Args [0]' args.Args [1]);  	ExitThread ();  }  else if (args.Options.ContainsKey ("selfUpdateFinish")) {  	DateTime startTime = DateTime.Now;  	while (Process.GetProcessesByName ("WordSlide").Length > 1 && (DateTime.Now - startTime) < TimeSpan.FromSeconds (20)) {  		System.Threading.Thread.Sleep (TimeSpan.FromSeconds (1));  	}  	if (Process.GetProcessesByName ("WordSlide").Length > 1) {  		MessageBox.Show ("Timed out waiting for previous instance to exit."' "WordSlide"' MessageBoxButtons.OK' MessageBoxIcon.Error);  	}  	else if (Directory.Exists (args.Options ["selfUpdateFinish"])) {  		Directory.Delete (args.Options ["selfUpdateFinish"]' true);  	}  }  
Magic Number,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,WordSlideApplicationContext,The following statement contains a magic number: if (args.Options.ContainsKey ("selfUpdateFinish")) {  	DateTime startTime = DateTime.Now;  	while (Process.GetProcessesByName ("WordSlide").Length > 1 && (DateTime.Now - startTime) < TimeSpan.FromSeconds (20)) {  		System.Threading.Thread.Sleep (TimeSpan.FromSeconds (1));  	}  	if (Process.GetProcessesByName ("WordSlide").Length > 1) {  		MessageBox.Show ("Timed out waiting for previous instance to exit."' "WordSlide"' MessageBoxButtons.OK' MessageBoxIcon.Error);  	}  	else if (Directory.Exists (args.Options ["selfUpdateFinish"])) {  		Directory.Delete (args.Options ["selfUpdateFinish"]' true);  	}  }  
Magic Number,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,WordSlideApplicationContext,The following statement contains a magic number: while (Process.GetProcessesByName ("WordSlide").Length > 1 && (DateTime.Now - startTime) < TimeSpan.FromSeconds (20)) {  	System.Threading.Thread.Sleep (TimeSpan.FromSeconds (1));  }  
Magic Number,WordSlide,WordSlideApplicationContext,C:\repos\Asky314159_wordslide\win32\WordSlide\WordSlideApplicationContext.cs,SelfUpdate,The following statement contains a magic number: while (Process.GetProcessesByName ("WordSlide").Length > 1 && (DateTime.Now - startTime) < TimeSpan.FromSeconds (20)) {  	System.Threading.Thread.Sleep (TimeSpan.FromSeconds (1));  }  
Missing Default,WordSlide,EditorForm,C:\repos\Asky314159_wordslide\win32\WordSlide\EditorForm.cs,EditorForm_Closing,The following switch statement is missing a default case: switch (MessageBox.Show ("Any unsaved changes will be lost. Do you want to save now?"' ""' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Warning)) {  case DialogResult.Yes:  	Save ();  	break;  case DialogResult.No:  	break;  case DialogResult.Cancel:  	e.Cancel = true;  	break;  }  
Missing Default,WordSlide,ImportForm,C:\repos\Asky314159_wordslide\win32\WordSlide\ImportForm.cs,okButton_Click,The following switch statement is missing a default case: switch (sourceBox.SelectedIndex) {  case 0:  	success = Importer.importRHO (textBox.Text);  	break;  case 1:  	success = Importer.importCH (textBox.Text);  	break;  case 2:  	success = Importer.importSLD (textBox.Text);  	break;  case 3:  	success = Importer.importPPT (textBox.Text);  	break;  }  
Missing Default,WordSlide,OptionsForm,C:\repos\Asky314159_wordslide\win32\WordSlide\OptionsForm.cs,checkExistingBackup,The following switch statement is missing a default case: switch (intervalBox.SelectedIndex) {  case 0:  	if (ts.Days > 0) {  		saveBackup ();  	}  	break;  case 1:  	if (ts.Days > 6) {  		saveBackup ();  	}  	break;  case 2:  	if (ts.Days > 30) {  		saveBackup ();  	}  	break;  }  
Missing Default,WordSlide,UpdaterForm,C:\repos\Asky314159_wordslide\win32\WordSlide\UpdaterForm.cs,SetNewVersion,The following switch statement is missing a default case: switch (Engine.Version.CompareTo (v)) {  case -1:  	caseNegOne ();  	break;  case 0:  	caseZero ();  	break;  case 1:  	caseOne ();  	break;  }  
