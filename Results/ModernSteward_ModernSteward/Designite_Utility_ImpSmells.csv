Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ModernSteward,TreeViewToGrammarBuilderAlgorithm,C:\repos\ModernSteward_ModernSteward\src\Utility\TreeViewToGrammarBuilderAlgorithm.cs,MakeGrammarBuilderRecursively,Cyclomatic complexity of the method is 8
Complex Method,ModernSteward,ZipManager,C:\repos\ModernSteward_ModernSteward\src\Utility\ZipManager.cs,AddFileToZip,Cyclomatic complexity of the method is 8
Long Statement,ModernSteward,Plugin,C:\repos\ModernSteward_ModernSteward\src\Utility\Plugin.cs,LoadPlugin,The length of the statement  "		(instanceOfMyType as PluginFunctionality).RequestGrammarUpdate += new EventHandler<GrammarUpdateRequestEventArgs> (GrammarUpdateRequestHandler); " is 144.
Long Statement,ModernSteward,Plugin,C:\repos\ModernSteward_ModernSteward\src\Utility\Plugin.cs,LoadPlugin,The length of the statement  "		(instanceOfMyType as PluginFunctionality).TryToEmulateCommand += new EventHandler<EmulateCommandEventArgs> (TryToEmulateCommandHandler); " is 136.
Long Statement,ModernSteward,TreeViewToGrammarBuilderAlgorithm,C:\repos\ModernSteward_ModernSteward\src\Utility\TreeViewToGrammarBuilderAlgorithm.cs,MakeGrammarBuilderRecursively,The length of the statement  "	if ((currentNode.Tag as GrammarTreeViewTag).Optional != true && (currentNode.Tag as GrammarTreeViewTag).IsDictation != true) { " is 126.
Long Statement,ModernSteward,TreeViewToGrammarBuilderAlgorithm,C:\repos\ModernSteward_ModernSteward\src\Utility\TreeViewToGrammarBuilderAlgorithm.cs,MakeGrammarBuilderRecursively,The length of the statement  "	else if ((currentNode.Tag as GrammarTreeViewTag).Optional && (currentNode.Tag as GrammarTreeViewTag).IsDictation != true) { " is 123.
Long Statement,ModernSteward,TreeViewToGrammarBuilderAlgorithm,C:\repos\ModernSteward_ModernSteward\src\Utility\TreeViewToGrammarBuilderAlgorithm.cs,MakeGrammarBuilderRecursively,The length of the statement  "		currentGrammar = new GrammarBuilder (new SemanticResultKey (currentNode.Text' new GrammarBuilder (currentNode.Text))' 0' 1); " is 124.
Empty Catch Block,ModernSteward,CrashReporter,C:\repos\ModernSteward_ModernSteward\src\Utility\CrashReporter.cs,Report,The method has an empty catch block.
Empty Catch Block,ModernSteward,Plugin,C:\repos\ModernSteward_ModernSteward\src\Utility\Plugin.cs,CurrentDomain_AssemblyResolve,The method has an empty catch block.
Empty Catch Block,ModernSteward,Plugin,C:\repos\ModernSteward_ModernSteward\src\Utility\Plugin.cs,TryToEmulateCommandHandler,The method has an empty catch block.
Empty Catch Block,ModernSteward,WebPlugin,C:\repos\ModernSteward_ModernSteward\src\Utility\WebPlugin.cs,Download,The method has an empty catch block.
Magic Number,ModernSteward,ZipManager,C:\repos\ModernSteward_ModernSteward\src\Utility\ZipManager.cs,DecompressAndWriteFile,The following statement contains a magic number: try {  	// create a stream to write the file to  	wstream = File.Create (destination);  	const int block = 2048;  	// number of bytes to decompress for each read from the source  	byte[] data = new byte[block];  	// location to decompress the file to  	// now decompress and write each block of data for the zip file entry  	while (true) {  		int size = source.Read (data' 0' data.Length);  		if (size > 0)  			wstream.Write (data' 0' size);  		else  			break;  		// no more data  	}  }  catch (Exception) {  	throw;  }  finally {  	if (wstream != null)  		wstream.Close ();  }  
