Implementation smell,Namespace,Class,File,Method,Description
Long Statement,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,GetData,The length of the statement  "            return Assembly.GetExecutingAssembly().GetManifestResourceStream("QuantumConcepts.Formats.StereoLithography.Test.Data.{0}".Interpolate(filename));" is 146.
Empty Catch Block,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,FromFile,The method has an empty catch block.
Empty Catch Block,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,SaveToFile,The method has an empty catch block.
Empty Catch Block,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,SaveToFile,The method has an empty catch block.
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteString,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteString"' new List<Facet>()             {                 new Facet(new Normal( 0.23f' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10.123f' -10' 0)'                     new Vertex(-10.123f' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteString,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteString"' new List<Facet>()             {                 new Facet(new Normal( 0.23f' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10.123f' -10' 0)'                     new Vertex(-10.123f' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteString,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteString"' new List<Facet>()             {                 new Facet(new Normal( 0.23f' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10.123f' -10' 0)'                     new Vertex(-10.123f' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteString,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteString"' new List<Facet>()             {                 new Facet(new Normal( 0.23f' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10.123f' -10' 0)'                     new Vertex(-10.123f' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteBinary,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteBinary"' new List<Facet>()             {                 new Facet(new Normal( 0' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10' -10' 0)'                     new Vertex(-10' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteBinary,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteBinary"' new List<Facet>()             {                 new Facet(new Normal( 0' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10' -10' 0)'                     new Vertex(-10' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,WriteBinary,The following statement contains a magic number: STLDocument stl1 = new STLDocument("WriteBinary"' new List<Facet>()             {                 new Facet(new Normal( 0' 0' 1)' new List<Vertex>()                 {                     new Vertex( 0' 0' 0)'                     new Vertex(-10' -10' 0)'                     new Vertex(-10' 0' 0)                 }' 0)             });
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,Equality,The following statement contains a magic number: STLDocument[] stls = new STLDocument[2];
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,ShiftFacets,The following statement contains a magic number: Vertex shift = new Vertex(100' -100' 50);
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,ShiftFacets,The following statement contains a magic number: Vertex shift = new Vertex(100' -100' 50);
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,ShiftFacets,The following statement contains a magic number: Vertex shift = new Vertex(100' -100' 50);
Magic Number,QuantumConcepts.Formats.StereoLithography.Test,STLTests,C:\research\architectureSmells\repos\QuantumConcepts_STLdotNET\Source\Test\STLTests.cs,ValidateSTL,The following statement contains a magic number: Assert.AreEqual(3' facet.Vertices.Count);
