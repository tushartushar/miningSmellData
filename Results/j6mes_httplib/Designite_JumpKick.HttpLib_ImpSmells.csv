Implementation smell,Namespace,Class,File,Method,Description
Long Statement,JumpKick.HttpLib.Provider,MultipartBodyProvider,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Provider\MultipartBodyProvider.cs,GetBody,The length of the statement  "                        writer.Write(string.Format("--{0}\ncontent-disposition: form-data; name=\"{1}\"\n\n{2}\n"' boundary' System.Uri.EscapeDataString(property.Name)' System.Uri.EscapeDataString(property.GetValue(parameters' null).ToString()))); " is 223.
Long Statement,JumpKick.HttpLib.Provider,MultipartBodyProvider,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Provider\MultipartBodyProvider.cs,GetBody,The length of the statement  "                string separator = string.Format("--{0}\ncontent-disposition: form-data; name=\"{1}\"; filename=\"{2}\"\nContent-Type: {3}\n\n"'boundary'file.Name'file.Filename'file.ContentType); " is 179.
Magic Number,JumpKick.HttpLib.Provider,MultipartBodyProvider,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Provider\MultipartBodyProvider.cs,MultipartBodyProvider,The following statement contains a magic number: boundary = RandomString(8);
Magic Number,JumpKick.HttpLib.Provider,MultipartBodyProvider,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Provider\MultipartBodyProvider.cs,GetBody,The following statement contains a magic number: foreach (NamedFileStream file in files)              {                  /*                   * Additional info that is prepended to the file                   */                  string separator = string.Format("--{0}\ncontent-disposition: form-data; name=\"{1}\"; filename=\"{2}\"\nContent-Type: {3}\n\n"'boundary'file.Name'file.Filename'file.ContentType);                  writer.Write(separator);                  writer.Flush();                        /*                   * Read the file into the output buffer                   */                                    StreamReader sr = new StreamReader(file.Stream);                               int bytesRead = 0;                  byte[] buffer = new byte[4096];                    while ((bytesRead = file.Stream.Read(buffer' 0' buffer.Length)) != 0)                  {                      contentstream.Write(buffer' 0' bytesRead);                  }    #if NETFX_CORE                  file.Stream.Dispose();  #else                  file.Stream.Close();  #endif                      /*                   * Write the delimiter to the output buffer                   */                  writer.Write(closing' 0' closing.Length);                  writer.Flush();              }
Magic Number,JumpKick.HttpLib.Streams,ProgressCallbackHelper,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Streams\ProgressCallbackHelper.cs,Go,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,JumpKick.HttpLib.Streams,ProgressCallbackHelper,C:\repos\j6mes_httplib\JumpKick.HttpLib\JumpKick.HttpLib\Streams\ProgressCallbackHelper.cs,Go,The following statement contains a magic number: while ((count = from.Read(buffer' 0' 4096)) != 0)              {                  length += count;                  to.Write(buffer' 0' count);                    if (DateTime.Now.AddSeconds(-1) > lastChangeNotification)                  {                      lastChangeNotification = DateTime.Now;                      this.OnProgressChange(length' totalBytes);                  }                  }
