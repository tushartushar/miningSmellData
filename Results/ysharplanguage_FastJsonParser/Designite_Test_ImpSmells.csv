Implementation smell,Namespace,Class,File,Method,Description
Long Method,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The method has 482 lines of code.
Long Method,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The method has 246 lines of code.
Long Parameter List,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTest,The method has 5 parameters. Parameters: input' parse' count' passed' errorCase
Long Parameter List,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,Test,The method has 6 parameters. Parameters: parserName' parseFunc' testFile' jsonPathExpression' jsonPathSelect' jsonPathAssert
Long Identifier,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,,The length of the parameter THE_BURNING_MONK_TEST_FILE_PATH is 31.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTest,The length of the statement  "            Console.WriteLine("\t... result: {0}{1}"' (obj != null) ? obj.GetType().FullName : "(null)"' (obj is Exception) ? " (" + ((Exception)obj).Message + ")" : String.Empty); " is 168.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "                    ? // This holds: (value as Type) == typeof(Func<string' T' IJsonPathContext' object>)' with T inferred by JsonPathSelection::SelectNodes(...) " is 141.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            scope = new JsonPathSelection(untyped' evaluator); // Cache the JsonPathSelection and its lambdas compiled on-demand (at run-time) by the evaluator. " is 148.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            nodes = scope.SelectNodes("$.store.book[?(@.ContainsKey(\"isbn\") && (string)@[\"isbn\"] == \"0-395-19395-8\")].title"); " is 120.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            scope = new JsonPathSelection(typed' evaluator); // Cache the JsonPathSelection and its lambdas compiled on-demand (at run-time) by the evaluator. " is 146.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            Assert(obj is IDictionary<string' object> && (((IDictionary<string' object>)obj)["a"] as string) == "123" && ((obj = ((IDictionary<string' object>)obj)["b"]) is bool) && (bool)obj); " is 181.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            obj = UnitTest("{\"Name\":\"Paul\"'\"Status\":\"Married\"}"' s => new JsonParser().Parse<Person>(s)' ref count' ref passed); " is 124.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            obj = UnitTest("{\"History\":[{\"key\":\"1801-06-30T00:00:00Z\"'\"value\":\"Birth date\"}]}"' s => new JsonParser().Parse<Person>(s)' ref count' ref passed); " is 157.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            obj = UnitTest(configTestInputVendors' s => new JsonParser().Parse<SampleConfigData<VendorID>>(s)' ref count' ref passed); " is 122.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            var nea = (Status?[])UnitTest(@"[1'""Married""'null'2]"' s => new JsonParser().Parse<Status?[]>(s)' ref count' ref passed); " is 123.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            Assert(nea[0].Value == Status.Married && nea[1].Value == nea[0].Value && !nea[2].HasValue && nea[3].Value == Status.Divorced); " is 126.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            string jsonNetString = JsonConvert.SerializeObject(jsonNetPerson' new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects }); " is 142.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            // => '{"$type":"Test.ParserTests+Person' Test"'"Id":123'"Name":"Foo"'"Status":0'"Address":null'"Scores":[100'200'300]'"Data":null'"History":null'"Abc":"#"}' " is 157.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The length of the statement  "            object restoredObject = UnitTest(jsonNetString' s => new JsonParser().Parse<object>(jsonNetString)' ref count' ref passed); " is 123.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,LoopTest,The length of the statement  "            Console.WriteLine("... Done' in {0} ms. Throughput: {1} characters / second."' tm.ToString("0'0")' (1000 * (decimal)(count * json.Length) / (tm > 0 ? tm : 1)).ToString("0'0.00")); " is 179.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,Test,The length of the statement  "            var jsonPathTest = !String.IsNullOrWhiteSpace(jsonPathExpression) && (jsonPathSelect != null) && (jsonPathAssert != null); " is 122.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,Test,The length of the statement  "            Console.WriteLine("... Done' in {0} ms. Throughput: {1} characters / second."' tm.ToString("0'0")' (1000 * (decimal)json.Length / (tm > 0 ? tm : 1)).ToString("0'0.00")); " is 169.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10); " is 154.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10); " is 162.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<TheBurningMonk.RootObject>().DeserializeFromString' THE_BURNING_MONK_TEST_FILE_PATH' 10); " is 133.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10); " is 164.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10); " is 154.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100); " is 155.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100); " is 163.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<TheBurningMonk.RootObject>().DeserializeFromString' THE_BURNING_MONK_TEST_FILE_PATH' 100); " is 134.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100); " is 165.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100); " is 155.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' OJ_TEST_FILE_PATH' 10000); " is 120.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' OJ_TEST_FILE_PATH' 10000); " is 124.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 10000); " is 128.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<HighlyNested>' OJ_TEST_FILE_PATH' 10000); " is 138.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 10000); " is 140.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<HighlyNested>' OJ_TEST_FILE_PATH' 10000); " is 130.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' OJ_TEST_FILE_PATH' 100000); " is 121.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' OJ_TEST_FILE_PATH' 100000); " is 125.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 100000); " is 129.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<HighlyNested>' OJ_TEST_FILE_PATH' 100000); " is 139.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 100000); " is 141.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<HighlyNested>' OJ_TEST_FILE_PATH' 100000); " is 131.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000); " is 135.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000); " is 145.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000); " is 137.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000); " is 136.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000); " is 146.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000); " is 138.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 10000); " is 124.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 10000); " is 134.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 10000); " is 126.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 100000); " is 125.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 100000); " is 135.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 100000); " is 127.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 1000000); " is 126.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 1000000); " is 136.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 1000000); " is 128.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 10000);//(Can't deserialize properly) " is 189.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 10000); " is 167.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 10000); " is 138.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 10000); " is 135.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 100000);//(Can't deserialize properly) " is 190.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 100000); " is 168.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 100000); " is 139.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 100000); " is 136.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 1000000);//(Can't deserialize properly) " is 191.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 1000000); " is 169.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 1000000); " is 140.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 1000000); " is 137.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' SMALL_TEST_FILE_PATH' 10000); " is 123.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' SMALL_TEST_FILE_PATH' 10000); " is 127.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' SMALL_TEST_FILE_PATH' 100000); " is 124.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' SMALL_TEST_FILE_PATH' 100000);//(Json.NET: OutOfMemoryException) " is 162.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse' SMALL_TEST_FILE_PATH' 100000); " is 120.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000); " is 146.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000); " is 156.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest("ServiceStack"' new JsonSerializer<TwitterSample.RootObject>().DeserializeFromString' TWITTER_TEST_FILE_PATH' 100000); " is 127.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000); " is 158.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000); " is 148.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            Test(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<FathersData>' FATHERS_TEST_FILE_PATH); " is 131.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            //Test(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<FathersData>' FATHERS_TEST_FILE_PATH); " is 135.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "            Test(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<FathersData>' FATHERS_TEST_FILE_PATH); " is 123.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "                    ? // This holds: (value as Type) == typeof(Func<string' T' IJsonPathContext' object>)' with T inferred by JsonPathSelection::SelectNodes(...) " is 141.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The length of the statement  "                Test(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' HUGE_TEST_FILE_PATH);//(Json.NET: OutOfMemoryException) " is 149.
Long Statement,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,GetVersionString,The length of the statement  "            return String.Format("{0} {1}.{2}.{3}.{4}"' assemblyName.Name' assemblyName.Version.Major' assemblyName.Version.MajorRevision' assemblyName.Version.Minor' assemblyName.Version.MinorRevision); " is 191.
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Console.ReadKey().KeyChar == 27
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  nodes != null &&                  nodes.Length == 1 &&                  nodes[0].Value is decimal &&                  nodes[0].As<decimal>() == 22.99m              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes("$.store.book[*].author")).Length == 4              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes("$.store..price")).Length == 5              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes("$..book[0'1]")).Length == scope.SelectNodes("$..book[:2]").Length && nodes.Length == 2              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes("$..book[?(@.isbn)]")).Length == 2              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes("$..book[?(@.price < 10m)]")).Length == 2              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(anonymous.country.people.Length == 3);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert                  (                      person.initials.Length == 2 &&                      person.DOB > new DateTime(1901' 1' 1)                  );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert                  (                      person.initials.Length == 2 &&                      person.DOB > new DateTime(1901' 1' 1)                  );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes(@"$..people[?(!@.citizen)]")).Length == 1 &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].initials == "CJ" &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].DOB == new DateTime(1970' 5' 10) &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].status == Status.Single              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes(@"$..people[?(!@.citizen)]")).Length == 1 &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].initials == "CJ" &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].DOB == new DateTime(1970' 5' 10) &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].status == Status.Single              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (nodes = scope.SelectNodes(@"$..people[?(!@.citizen)]")).Length == 1 &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].initials == "CJ" &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].DOB == new DateTime(1970' 5' 10) &&                  nodes.As(OBJECT_MODEL.country.people[0])[0].status == Status.Single              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is int && (int)obj == 123);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is int[] && ((int[])obj).Length == 5 && ((int[])obj)[4] == 5);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is int[] && ((int[])obj).Length == 5 && ((int[])obj)[4] == 5);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is int[] && ((int[])obj).Length == 5 && ((int[])obj)[4] == 5);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is decimal && (decimal)obj == 123.456m);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is Person && ((Person)obj).History[new DateTime(1801' 6' 30' 0' 0' 0' DateTimeKind.Utc)] == "Birth date");
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is Person && ((Person)obj).History[new DateTime(1801' 6' 30' 0' 0' 0' DateTimeKind.Utc)] == "Birth date");
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(obj is Person && ((Person)obj).History[new DateTime(1801' 6' 30' 0' 0' 0' DateTimeKind.Utc)] == "Birth date");
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is StuffHolder && ((StuffHolder)obj).Items.Count == 2 &&                  ((Stuff)((StuffHolder)obj).Items[1]).Name == "Bar" &&                  ((Stuff)((StuffHolder)obj).Items[1]).UniqueId.HasValue &&                  ((Stuff)((StuffHolder)obj).Items[1]).UniqueId.Value == new Guid("aad737f7-0caa-4574-9ca5-f39964d50f41") &&                  ((Stuff)((StuffHolder)obj).Items[1]).LargeUInt.HasValue &&                  ((Stuff)((StuffHolder)obj).Items[1]).LargeUInt.Value == ulong.MaxValue &&                  ((Stuff)((StuffHolder)obj).Items[1]).SmallInt1 == sbyte.MaxValue &&                  ((Stuff)((StuffHolder)obj).Items[1]).SmallInt2 == sbyte.MinValue              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is SampleConfigData<VendorID> &&                  ((SampleConfigData<VendorID>)obj).ConfigItems.ContainsKey(VendorID.Vendor3) &&                  ((SampleConfigData<VendorID>)obj).ConfigItems[VendorID.Vendor3] is SampleConfigItem &&                  ((SampleConfigItem)((SampleConfigData<VendorID>)obj).ConfigItems[VendorID.Vendor3]).Id == 300              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is SampleConfigData<int> &&                  ((SampleConfigData<int>)obj).ConfigItems.ContainsKey(456) &&                  ((SampleConfigData<int>)obj).ConfigItems[456] is SampleConfigItem &&                  ((SampleConfigItem)((SampleConfigData<int>)obj).ConfigItems[456]).Id == 456000              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is SampleConfigData<int> &&                  ((SampleConfigData<int>)obj).ConfigItems.ContainsKey(456) &&                  ((SampleConfigData<int>)obj).ConfigItems[456] is SampleConfigItem &&                  ((SampleConfigItem)((SampleConfigData<int>)obj).ConfigItems[456]).Id == 456000              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is SampleConfigData<int> &&                  ((SampleConfigData<int>)obj).ConfigItems.ContainsKey(456) &&                  ((SampleConfigData<int>)obj).ConfigItems[456] is SampleConfigItem &&                  ((SampleConfigItem)((SampleConfigData<int>)obj).ConfigItems[456]).Id == 456000              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  obj is SampleConfigData<int> &&                  ((SampleConfigData<int>)obj).ConfigItems.ContainsKey(456) &&                  ((SampleConfigData<int>)obj).ConfigItems[456] is SampleConfigItem &&                  ((SampleConfigItem)((SampleConfigData<int>)obj).ConfigItems[456]).Id == 456000              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  (obj is Owners) &&                  (peter = ((Owners)obj).WealthByOwner.Keys.                      Where(person => person.Name == "Peter").FirstOrDefault()                  ) != null &&                  (owner = ((Owners)obj).OwnerByWealth[15999.99m]) != null &&                  (owner.Name == peter.Name) &&                  (owner.Assets.Count == 1) &&                  (owner.Assets[0].Name == "Car")              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(nea[0].Value == Status.Married && nea[1].Value == nea[0].Value && !nea[2].HasValue && nea[3].Value == Status.Divorced);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert(nea[0].Value == Status.Married && nea[1].Value == nea[0].Value && !nea[2].HasValue && nea[3].Value == Status.Divorced);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Person jsonNetPerson = new Person { Id = 123' Abc = '#'' Name = "Foo"' Scores = new[] { 100' 200' 300 } };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Person jsonNetPerson = new Person { Id = 123' Abc = '#'' Name = "Foo"' Scores = new[] { 100' 200' 300 } };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Person jsonNetPerson = new Person { Id = 123' Abc = '#'' Name = "Foo"' Scores = new[] { 100' 200' 300 } };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Person jsonNetPerson = new Person { Id = 123' Abc = '#'' Name = "Foo"' Scores = new[] { 100' 200' 300 } };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  restoredObject is Person &&                  ((Person)restoredObject).Name == "Foo" &&                  ((Person)restoredObject).Abc == '#' &&                  ((IList<int>)((Person)restoredObject).Scores).Count == 3 &&                  ((IList<int>)((Person)restoredObject).Scores)[2] == 300              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  restoredObject is Person &&                  ((Person)restoredObject).Name == "Foo" &&                  ((Person)restoredObject).Abc == '#' &&                  ((IList<int>)((Person)restoredObject).Scores).Count == 3 &&                  ((IList<int>)((Person)restoredObject).Scores)[2] == 300              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,UnitTests,The following statement contains a magic number: Assert              (                  restoredObject is Person &&                  ((Person)restoredObject).Name == "Foo" &&                  ((Person)restoredObject).Abc == '#' &&                  ((IList<int>)((Person)restoredObject).Scores).Count == 3 &&                  ((IList<int>)((Person)restoredObject).Scores)[2] == 300              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,LoopTest,The following statement contains a magic number: Console.ReadKey().KeyChar == 27
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,LoopTest,The following statement contains a magic number: Console.WriteLine("... Done' in {0} ms. Throughput: {1} characters / second."' tm.ToString("0'0")' (1000 * (decimal)(count * json.Length) / (tm > 0 ? tm : 1)).ToString("0'0.00"));
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,Test,The following statement contains a magic number: Console.ReadKey().KeyChar == 27
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,Test,The following statement contains a magic number: Console.WriteLine("... Done' in {0} ms. Throughput: {1} characters / second."' tm.ToString("0'0")' (1000 * (decimal)json.Length / (tm > 0 ? tm : 1)).ToString("0'0.00"));
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<TheBurningMonk.RootObject>().DeserializeFromString' THE_BURNING_MONK_TEST_FILE_PATH' 10);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 10);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<TheBurningMonk.RootObject>().DeserializeFromString' THE_BURNING_MONK_TEST_FILE_PATH' 100);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TheBurningMonk.RootObject>' THE_BURNING_MONK_TEST_FILE_PATH' 100);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<HighlyNested>' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<HighlyNested>().DeserializeFromString' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<HighlyNested>' OJ_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<HighlyNested>' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<HighlyNested>().DeserializeFromString' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<HighlyNested>' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<HighlyNested>' OJ_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<BoonSmall>().DeserializeFromString' BOON_SMALL_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<BoonSmall>().DeserializeFromString' BOON_SMALL_TEST_FILE_PATH' 10000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<BoonSmall>' BOON_SMALL_TEST_FILE_PATH' 10000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<Person>().DeserializeFromString' TINY_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<Person>().DeserializeFromString' TINY_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<Person>' TINY_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<Person>' TINY_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<Person>().DeserializeFromString' TINY_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<Person>' TINY_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<DictionaryDataAdaptJsonNetServiceStack>' DICOS_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<DictionaryDataAdaptJsonNetServiceStack>().DeserializeFromString' DICOS_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<DictionaryData>' DICOS_TEST_FILE_PATH' 1000000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' SMALL_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' SMALL_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse' SMALL_TEST_FILE_PATH' 10000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().DeserializeObject' SMALL_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject' SMALL_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse' SMALL_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(typeof(JavaScriptSerializer).FullName' new JavaScriptSerializer().Deserialize<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonConvert).Assembly.GetName())' JsonConvert.DeserializeObject<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest("ServiceStack"' new JsonSerializer<TwitterSample.RootObject>().DeserializeFromString' TWITTER_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(NetJSON.NetJSON).Assembly.GetName())' NetJSON.NetJSON.Deserialize<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: LoopTest(GetVersionString(typeof(JsonParser).Assembly.GetName())' new JsonParser().Parse<TwitterSample.RootObject>' TWITTER_TEST_FILE_PATH' 100000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,SpeedTests,The following statement contains a magic number: StreamTest              (                  new Dictionary<Type' Func<Type' object' object' int' Func<object' object>>>                  {                      // We don't care about anything but these 2 properties:                      {                          typeof(Father)'                          (type' obj' key' index) =>                              ((key as string) == "id" || (key as string) == "name") ?                              mapperCallback :                              JsonParser.Skip                      }'                      // We want to pick only the last 5 fathers from the source:                      {                          typeof(Father[])'                          (type' obj' key' index) =>                              (index >= 29995) ?                              mapperCallback :                              JsonParser.Skip                      }                  }              );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,StreamTest,The following statement contains a magic number: Assert(o.fathers.Length == 30000);
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: var filters =                  new Dictionary<Type' Func<Type' object' object' int' Func<object' object>>>                  {                      // We don't care about anything but these 2 properties:                      {                          typeof(Father)' // Note the type                          (type' obj' key' index) =>                              ((key as string) == "id" || (key as string) == "name") ?                              filteredFatherStreamCallback :                              JsonParser.Skip                      }'                      // We want to pick only the last 5 fathers from the source:                      {                          typeof(Father[])' // Note the type                          (type' obj' key' index) =>                              (index >= 29995) ?                              filteredFatherStreamCallback :                              JsonParser.Skip                      }                  };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: Assert                  (                      (data != null) &&                      (data.fathers != null) &&                      (data.fathers.Length == 5)                  );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: Assert                      (                          (data.fathers[i - 29995].id == i) &&                          !String.IsNullOrEmpty(data.fathers[i - 29995].name)                      );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: Assert                      (                          (data.fathers[i - 29995].id == i) &&                          !String.IsNullOrEmpty(data.fathers[i - 29995].name)                      );
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: Enumerable.Range(29995' 5)
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestSimplified,The following statement contains a magic number: Enumerable.Range(29995' 5)
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestDaughterMaidenNamesFixup,The following statement contains a magic number: var filters =                  new Dictionary<Type' Func<Type' object' object' int' Func<object' object>>>                  {                      // Necessary to perform post-processing on the daughters (if any)                      // of each father we kept in "Father[]" via the 2nd filter below:                      {                          typeof(Father)' // Note the type                          (type' obj' key' index) => filteredFatherStreamCallback                      }'                      // We want to pick only the last 10 fathers from the source:                      {                          typeof(Father[])' // Note the type                          (type' obj' key' index) =>                              (index >= 29990) ?                              filteredFatherStreamCallback :                              JsonParser.Skip                      }                  };
Magic Number,Test,ParserTests,D:\research\architectureSmells\repos\ysharplanguage_FastJsonParser\JsonTest\ParserTests.cs,FilteredFatherStreamTestDaughterMaidenNamesFixup,The following statement contains a magic number: Assert                  (                      (data != null) &&                      (data.fathers != null) &&                      (data.fathers.Length == 10)                  );
