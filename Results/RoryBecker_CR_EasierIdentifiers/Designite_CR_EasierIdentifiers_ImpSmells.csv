Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CR_EasierIdentiers,PlugIn1,C:\repos\RoryBecker_CR_EasierIdentifiers\CR_EasierIdentifiers\PlugIn1.cs,PlugIn1_CommandExecuting,The following statement contains a magic number: if (_ConvertingSpacesToCamelCase && ea.CommandName == "Edit.Paste")  	if (Clipboard.ContainsText ()) {  		string text = Clipboard.GetText ();  		if (text.Length > 255)  			return;  		char[] punctuation =  {  			' ''  			'/''  			'@''  			':''  			'.'  		};  		string[] tokens = text.Split (punctuation' 255' StringSplitOptions.RemoveEmptyEntries);  		string newText = String.Empty;  		foreach (string token in tokens) {  			if (token.Length > 1)  				newText += char.ToUpper (token [0]).ToString () + token.Substring (1);  			else if (token.Length > 0)  				newText += char.ToUpper (token [0]).ToString ();  		}  		Clipboard.SetText (newText);  	}  
Magic Number,CR_EasierIdentiers,PlugIn1,C:\repos\RoryBecker_CR_EasierIdentifiers\CR_EasierIdentifiers\PlugIn1.cs,PlugIn1_CommandExecuting,The following statement contains a magic number: if (_ConvertingSpacesToCamelCase && ea.CommandName == "Edit.Paste")  	if (Clipboard.ContainsText ()) {  		string text = Clipboard.GetText ();  		if (text.Length > 255)  			return;  		char[] punctuation =  {  			' ''  			'/''  			'@''  			':''  			'.'  		};  		string[] tokens = text.Split (punctuation' 255' StringSplitOptions.RemoveEmptyEntries);  		string newText = String.Empty;  		foreach (string token in tokens) {  			if (token.Length > 1)  				newText += char.ToUpper (token [0]).ToString () + token.Substring (1);  			else if (token.Length > 0)  				newText += char.ToUpper (token [0]).ToString ();  		}  		Clipboard.SetText (newText);  	}  
Magic Number,CR_EasierIdentiers,PlugIn1,C:\repos\RoryBecker_CR_EasierIdentifiers\CR_EasierIdentifiers\PlugIn1.cs,PlugIn1_CommandExecuting,The following statement contains a magic number: if (Clipboard.ContainsText ()) {  	string text = Clipboard.GetText ();  	if (text.Length > 255)  		return;  	char[] punctuation =  {  		' ''  		'/''  		'@''  		':''  		'.'  	};  	string[] tokens = text.Split (punctuation' 255' StringSplitOptions.RemoveEmptyEntries);  	string newText = String.Empty;  	foreach (string token in tokens) {  		if (token.Length > 1)  			newText += char.ToUpper (token [0]).ToString () + token.Substring (1);  		else if (token.Length > 0)  			newText += char.ToUpper (token [0]).ToString ();  	}  	Clipboard.SetText (newText);  }  
Magic Number,CR_EasierIdentiers,PlugIn1,C:\repos\RoryBecker_CR_EasierIdentifiers\CR_EasierIdentifiers\PlugIn1.cs,PlugIn1_CommandExecuting,The following statement contains a magic number: if (Clipboard.ContainsText ()) {  	string text = Clipboard.GetText ();  	if (text.Length > 255)  		return;  	char[] punctuation =  {  		' ''  		'/''  		'@''  		':''  		'.'  	};  	string[] tokens = text.Split (punctuation' 255' StringSplitOptions.RemoveEmptyEntries);  	string newText = String.Empty;  	foreach (string token in tokens) {  		if (token.Length > 1)  			newText += char.ToUpper (token [0]).ToString () + token.Substring (1);  		else if (token.Length > 0)  			newText += char.ToUpper (token [0]).ToString ();  	}  	Clipboard.SetText (newText);  }  
Magic Number,CR_EasierIdentiers,PlugIn1,C:\repos\RoryBecker_CR_EasierIdentifiers\CR_EasierIdentifiers\PlugIn1.cs,PlugIn1_CommandExecuting,The following statement contains a magic number: if (text.Length > 255)  	return;  
