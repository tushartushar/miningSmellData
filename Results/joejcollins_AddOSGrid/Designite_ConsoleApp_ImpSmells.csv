Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,GetDateTaken,The following statement contains a magic number: try {  	//DateTimeOriginal  	PropertyItem propItem = image.GetPropertyItem (0x9003);  	// See also - DateTimeDigitized / CreateDate 0x9004  	// .. TimeZoneOffset 0x882a & ModifyDate (DateTime) 0x0132  	//Convert date taken metadata to a DateTime object  	string sdate = Encoding.UTF8.GetString (propItem.Value).Replace ("\0"' String.Empty).Trim ();  	string secondhalf = sdate.Substring (sdate.IndexOf (" ")' (sdate.Length - sdate.IndexOf (" ")));  	string firsthalf = sdate.Substring (0' 10);  	firsthalf = firsthalf.Replace (":"' "-");  	sdate = firsthalf + secondhalf;  	return DateTime.Parse (sdate);  }  catch {  	return null;  }  
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,GetGpsDateTimeStamp,The following statement contains a magic number: try {  	//GPSTimeStamp  	PropertyItem propTime = image.GetPropertyItem (0x0007);  	uint hours = GetExifSubValue (propTime' 0);  	uint mins = GetExifSubValue (propTime' 1);  	uint secs = GetExifSubValue (propTime' 2);  	string stime = string.Format ("{0:00}:{1:00}:{2:00}"' hours' mins' secs);  	//GPSDateStamp  	PropertyItem propDate = image.GetPropertyItem (0x001d);  	//Convert date taken metadata to a DateTime object  	string sdate = Encoding.UTF8.GetString (propDate.Value).Replace ("\0"' String.Empty).Trim ();  	sdate = sdate.Replace (":"' "-");  	return DateTime.Parse (sdate + " " + stime);  }  catch {  	return null;  }  
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,GetLatitude,The following statement contains a magic number: try {  	//PropertyTagGpsLatitudeRef - 'N' or 'S'  	PropertyItem propItemRef = image.GetPropertyItem (1);  	//PropertyTagGpsLatitude  	PropertyItem propItemLat = image.GetPropertyItem (2);  	return ExifGpsToFloat (propItemRef' propItemLat);  }  catch (ArgumentException) {  	return null;  }  
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,GetLongitude,The following statement contains a magic number: try {  	//PropertyTagGpsLongitudeRef - 'E' or 'W'  	PropertyItem propItemRef = image.GetPropertyItem (3);  	//PropertyTagGpsLongitude  	PropertyItem propItemLong = image.GetPropertyItem (4);  	return ExifGpsToFloat (propItemRef' propItemLong);  }  catch (ArgumentException) {  	return null;  }  
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,GetLongitude,The following statement contains a magic number: try {  	//PropertyTagGpsLongitudeRef - 'E' or 'W'  	PropertyItem propItemRef = image.GetPropertyItem (3);  	//PropertyTagGpsLongitude  	PropertyItem propItemLong = image.GetPropertyItem (4);  	return ExifGpsToFloat (propItemRef' propItemLong);  }  catch (ArgumentException) {  	return null;  }  
Magic Number,ConsoleApp,ImageExtensions,C:\repos\joejcollins_AddOSGrid\AddOsGrid\ConsoleApp\ImageExtensions.cs,SetExifProperty,The following statement contains a magic number: prop.Type = 2;  
