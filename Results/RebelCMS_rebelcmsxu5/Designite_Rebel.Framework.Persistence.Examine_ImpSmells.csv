Implementation smell,Namespace,Class,File,Method,Description
Long Method,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The method has 295 lines of code.
Complex Method,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitFieldPredicate,Cyclomatic complexity of the method is 10
Complex Method,Rebel.Framework.Persistence.Examine.Mapping,TypedEntityToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\TypedEntityToIndexFields.cs,StoreFieldValue,Cyclomatic complexity of the method is 9
Complex Method,Rebel.Framework.Persistence.Examine.Mapping,SearchResultToTypedEntity,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\SearchResultToTypedEntity.cs,PerformMap,Cyclomatic complexity of the method is 9
Complex Method,Rebel.Framework.Persistence.Examine.Mapping,SearchResultToTypedEntity,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\SearchResultToTypedEntity.cs,GetRealValueFromField,Cyclomatic complexity of the method is 9
Long Parameter List,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,EntityRepository,The method has 6 parameters. Parameters: providerMetadata' providerTransaction' frameworkContext' revisionRepository' schemaSession' helper
Long Parameter List,Rebel.Framework.Persistence.Examine.Hive,EntityRepositoryFactory,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepositoryFactory.cs,EntityRepositoryFactory,The method has 5 parameters. Parameters: providerMetadata' revisionRepositoryFactory' schemaRepositoryFactory' frameworkContext' helper
Long Parameter List,Rebel.Framework.Persistence.Examine.Hive,EntityRepositoryFactory,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepositoryFactory.cs,EntityRepositoryFactory,The method has 5 parameters. Parameters: providerMetadata' revisionRepositoryFactory' schemaRepositoryFactory' frameworkContext' dependencyHelper
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,PerformGetAncestorRelations,The length of the statement  "            return repo.GetParentRelations(descendentId' relationType).SelectRecursive(x => repo.GetParentRelations(x.SourceId' relationType)); " is 131.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,PerformDelete,The length of the statement  "            //now' check if the item being deleted is an attribute type' if it is we need to remove all AttributeDefinitions associated " is 123.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,PerformDelete,The length of the statement  "            //now that we have the attribute defintions related to the typed attribute being deleted' we need to actually create new revisions  " is 130.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,PerformDelete,The length of the statement  "                        l.Fields.RemoveAll(x => x.Key.StartsWith(FixedAttributeIndexFields.AttributePrefix + d1.Fields[FixedIndexedFields.Alias])); " is 123.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,PerformGetAllRevisions,The length of the statement  "                (typeof(TEntity).FullName + category + entityId.Value + (revisionStatusType == null ? "" : revisionStatusType.Alias)).ToMd5(); " is 126.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineHelper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineHelper.cs,GetMappedGroupsForSchema,The length of the statement  "                    .Compile()).Select(x => new Tuple<AttributeGroup' SearchResult>(_frameworkContext.TypeMappers.Map<AttributeGroup>(x)' x)) " is 121.
Long Statement,Rebel.Framework.Persistence.Examine,RebelExamineIndexer,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\RebelExamineIndexer.cs,GetPolicy,The length of the statement  "            //NOTE: We pretty much want all fields NOT_ANALYZED so the raw values are stored' then we can setup specific search fields that are analyzed. " is 141.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "            var configMain = builderContext.ConfigurationResolver.GetConfigSection(HiveConfigSection.ConfigXmlKey) as HiveConfigSection; " is 124.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "            var config2Rw = RegistryConfigElement ?? configMain.Providers.ReadWriters[ProviderKey] ?? configMain.Providers.Readers[ProviderKey]; " is 132.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "            _localConfig = DeepConfigManager.Default.GetFirstPluginSection<ProviderConfigurationSection>(config2Rw.ConfigSectionKey); " is 121.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "                LogHelper.Warn<ExamineDemandBuilder>("Could not load RebelInternalIndexer' the configuration section could not be read."); " is 122.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "                LogHelper.Warn<ExamineDemandBuilder>("Could not load RebelInternalSearcher' the configuration section could not be read."); " is 123.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Initialise,The length of the statement  "                LogHelper.Warn<ExamineDemandBuilder>("Could not load RebelInternalIndexSet' the configuration section could not be read."); " is 123.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Build,The length of the statement  "                .OnActivated((resolutionContext' indexProvider) => indexProvider.Initialize(_internalIndexer.Name' _internalIndexer.Parameters)) " is 128.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,Build,The length of the statement  "                .OnActivated((resolutionContext' indexSearcher) => indexSearcher.Initialize(_internalSearcher.Name' _internalSearcher.Parameters)) " is 130.
Long Statement,Rebel.Framework.Persistence.Examine,ExamineDemandBuilder,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\ExamineDemandBuilder.cs,GetProviderBootstrapperFactory,The length of the statement  "            return x => new ProviderBootstrapper(_localConfig' x.Resolve<ExamineManager>(ProviderKey)' x.Resolve<IFrameworkContext>()); " is 123.
Long Statement,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    return c.Must().EntityType<TypedEntity>().Must().Field(attributeFieldName' fieldValue.MultipleCharacterWildcard()).Compile();                     " is 125.
Long Statement,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    return c.Must().EntityType<TypedEntity>().Must().Field(attributeFieldName' fieldValue.MultipleCharacterWildcard()).Compile(); " is 125.
Long Statement,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    return c.Must().EntityType<TypedEntity>().Must().Field(attributeFieldName' fieldValue.MultipleCharacterWildcard()).Compile();                     " is 125.
Long Statement,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitBinary,The length of the statement  "            throw new InvalidOperationException("This provider only supports binary expressions with And' AndAlso' Or' OrElse expression types. ExpressionType was {0}".InvariantFormat(node.NodeType.ToString())); " is 199.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeDefinitionToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeDefinitionToIndexFields.cs,GetValue,The length of the statement  "            output.Add(FixedIndexedFields.AttributeTypeId' new Lazy<ItemField>(() => new ItemField(source.AttributeType.Id.Value))); " is 120.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeTypeToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeTypeToIndexFields.cs,GetValue,The length of the statement  "            ////TODO: This is purely a hack in order to get the installer working with Examine' its also a required hack until the underlying  " is 129.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeTypeToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeTypeToIndexFields.cs,GetValue,The length of the statement  "            //// issue is fixed: Currently we need to make sure that the properties of an Attribute type remain constant in the repository unless " is 133.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeTypeToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeTypeToIndexFields.cs,GetValue,The length of the statement  "            //// that property is explicitly changed. This is mostly to do with the RenderTypeProvider property as we don't want it to be overwritten " is 137.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeTypeToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeTypeToIndexFields.cs,GetValue,The length of the statement  "            //        //This copies across all changed (Dirty) properties from the source to the destination except for a few of the properties " is 131.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,AttributeTypeToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\AttributeTypeToIndexFields.cs,GetValue,The length of the statement  "            //        //now that all properties are updated that have changed' overwrite the 'source' object with the destination so it can be mapped " is 137.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,RelationToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\RelationToIndexFields.cs,GetValue,The length of the statement  "                    {FixedRelationIndexFields.DestinationId' new Lazy<ItemField>(() => new ItemField(source.DestinationId.Value.ToString()))}'  " is 122.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,TypedEntityToIndexFields,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\TypedEntityToIndexFields.cs,StoreFieldValue,The length of the statement  "                    //through the serialization type is string' we still need to detect the 'real' type to see how to convert it to a string. For example' " is 134.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                            var attributeTypeId = a.Fields.ContainsKey(FixedIndexedFields.AttributeTypeId) ? a.Fields[FixedIndexedFields.AttributeTypeId] : null; " is 133.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.RenderTypeProviderConfigOverride' opt => opt.MapFrom(y => y.Fields.GetValueAsString("RenderTypeProviderConfigOverride"))) " is 139.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                        var group = _helper.PerformGet<AttributeGroup>(true' LuceneIndexer.IndexNodeIdFieldName' new HiveId(s.Fields[FixedIndexedFields.GroupId])); " is 139.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                        var attType = _helper.PerformGet<AttributeType>(true' LuceneIndexer.IndexNodeIdFieldName' new HiveId(s.Fields[FixedIndexedFields.AttributeTypeId])); " is 148.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.RenderTypeProviderConfig' opt => opt.MapFrom(y => y.Fields.GetValueAsString("RenderTypeProviderConfig"))) " is 123.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.Id' opt => opt.MapFrom(y => new Lazy<string>(() => y.Id.Value.ToString()))) //need to lazy load as it might not be set " is 136.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                            //NOTE: we need to add this schema id to the fields otherwise we would just add this in the mapping operation for AttributeDefinition if it exposed the schema it belonged to " is 173.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                            op.Fields.Add(FixedIndexedFields.SchemaId' new Lazy<ItemField>(() => new ItemField(s.Id.Value.ToString()))); //need to add it as lazy since the id might not exist yet " is 166.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                        //map all of the properties... we don't have to explicitly declare a map for this' the engine will automatically just create one " is 128.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "            //create a map that supports inheritance as we don't want to create a map for all EntitySchemas... this would also be impossible " is 128.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.Id' opt => opt.MapFrom(y => new Lazy<string>(() => y.Id.Value.ToString()))) //need to lazy load as it might not be set " is 136.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "            //create a map that supports inheritance as we don't want to create a map for all EntitySchemas... this would also be impossible " is 128.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.Id' opt => opt.MapFrom(y => new Lazy<string>(() => y.Id.Value.ToString()))) //need to lazy load as it might not be set " is 136.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "            //create a map that supports inheritance as we don't want to create a map for all EntitySchemas... this would also be impossible " is 128.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,ExamineModelMapper,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\ExamineModelMapper.cs,ConfigureMappings,The length of the statement  "                .ForMember(x => x.Id' opt => opt.MapFrom(y => new Lazy<string>(() => y.Id.Value.ToString()))) //need to lazy load as it might not be set " is 136.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,SearchResultToTypedEntity,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\SearchResultToTypedEntity.cs,PerformMap,The length of the statement  "            var entitySchema = _helper.PerformGet<EntitySchema>(true' LuceneIndexer.IndexNodeIdFieldName' new HiveId(source.Fields[FixedIndexedFields.SchemaId])).ToArray(); " is 160.
Long Statement,Rebel.Framework.Persistence.Examine.Mapping,SearchResultToTypedEntity,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Mapping\SearchResultToTypedEntity.cs,PerformMap,The length of the statement  "                var ancestorSchemas = _helper.PerformGet<EntitySchema>(true' LuceneIndexer.IndexNodeIdFieldName' ancestorSchemaIds.Select(x => x.SourceId).ToArray()).ToArray(); " is 160.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,PerformExecuteMany,The length of the statement  "                finalQuery = (criteria.ToString() == "") ? revisionCriteria.Compile() : ((LuceneSearchCriteria)criteria).Join((LuceneSearchCriteria)revisionCriteria.Compile()' BooleanClause.Occur.MUST); ; " is 188.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,PerformExecuteSingle,The length of the statement  "                        throw new InvalidOperationException("Sequence contains {0} elements but query specified exactly 1 must be present.".InvariantFormat(count)); " is 140.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,EntityRepositoryFactory,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepositoryFactory.cs,GetRepository,The length of the statement  "            var transaction = new ExamineTransaction(ExamineDependencyHelper.ExamineHelper.ExamineManager' ProviderMetadata' FrameworkContext); " is 131.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,RemoveSchemaAssociations,The length of the statement  "            // look for any entity that is an AttributeGroup or AttributeDefinition that has a schema Id the same as the id of the schema passed in. " is 136.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,ExecuteCommit,The length of the statement  "            //we need to 'stagger' the operations as it will be much faster to send all of the "Adds" to Examine at once and then each "Delete" one at a time. " is 146.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,ExecuteCommit,The length of the statement  "            using (DisposableTimer.TraceDuration<ExamineTransaction>("Start adding indexes to Examine queue"' "End adding indexes to Examine queue")) " is 137.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,ExecuteCommit,The length of the statement  "                //  2: we need to update the status changed date if the status has in fact 'changed' since we need to reference in-memory objects as well " is 137.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureRelationEntities,The length of the statement  "                    if (sourceNode == null) extraMessage = "Source {0} cannot be found.\n".InvariantFormat(op.Fields[FixedRelationIndexFields.SourceId].FieldValue); " is 144.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureRelationEntities,The length of the statement  "                    if (destNode == null) extraMessage += "Destination {0} cannot be found.".InvariantFormat(op.Fields[FixedRelationIndexFields.DestinationId].FieldValue); " is 151.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureRelationEntities,The length of the statement  "                        "Before adding a relation between source {0} and destination {1}' you must call AddOrUpdate with those items or they must already exist in the datastore.\n{2}" " is 159.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureRelationEntities,The length of the statement  "                            .InvariantFormat(op.Fields[FixedRelationIndexFields.SourceId].FieldValue' op.Fields[FixedRelationIndexFields.DestinationId].FieldValue' extraMessage)); " is 151.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureCorrectStatusChangedDate,The length of the statement  "            if (previous == null && latestEntry != null && latestEntry.Fields.ContainsKey(FixedRevisionIndexFields.RevisionStatusId) && latestEntry.Fields[FixedRevisionIndexFields.RevisionStatusId] != rd.StatusType.Id.Value.ToString()) " is 223.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureCorrectStatusChangedDate,The length of the statement  "                op.Fields[FixedIndexedFields.UtcStatusChanged] = new ItemField(te.UtcStatusChanged.UtcDateTime) { DataType = FieldDataType.DateTime }; " is 134.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureCorrectStatusChangedDate,The length of the statement  "                op.Fields[FixedIndexedFields.UtcStatusChanged] = new ItemField(te.UtcStatusChanged.UtcDateTime) { DataType = FieldDataType.DateTime }; " is 134.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureCorrectStatusChangedDate,The length of the statement  "                op.Fields[FixedIndexedFields.UtcStatusChanged] = new ItemField(te.UtcStatusChanged.UtcDateTime) { DataType = FieldDataType.DateTime }; " is 134.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,RevisionRepositoryFactory,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\RevisionRepositoryFactory.cs,GetRepository,The length of the statement  "            var transaction = new ExamineTransaction(ExamineDependencyHelper.ExamineHelper.ExamineManager' ProviderMetadata' FrameworkContext); " is 131.
Long Statement,Rebel.Framework.Persistence.Examine.Hive,SchemaRepositoryFactory,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\SchemaRepositoryFactory.cs,GetRepository,The length of the statement  "            var transaction = new ExamineTransaction(ExamineDependencyHelper.ExamineHelper.ExamineManager' ProviderMetadata' FrameworkContext); " is 131.
Complex Conditional,Rebel.Framework.Persistence.Examine.Hive,ExamineTransaction,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\ExamineTransaction.cs,EnsureCorrectStatusChangedDate,The conditional expression  "previous == null && latestEntry != null && latestEntry.Fields.ContainsKey(FixedRevisionIndexFields.RevisionStatusId) && latestEntry.Fields[FixedRevisionIndexFields.RevisionStatusId] != rd.StatusType.Id.Value.ToString()"  is complex.
Missing Default,Rebel.Framework.Persistence.Examine.Linq,ExamineQueryVisitor,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Linq\ExamineQueryVisitor.cs,VisitBinary,The following switch statement is missing a default case: switch (node.NodeType)              {                  case ExpressionType.And:                  case ExpressionType.AndAlso:                      return left.Join(right' BooleanClause.Occur.MUST);                  case ExpressionType.Or:                  case ExpressionType.OrElse:                      return left.Join(right' BooleanClause.Occur.SHOULD);              }
Missing Default,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,PerformExecuteMany,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                      case ResultFilterType.Any:                      return new[] { maxByDate.Count() != 0 }.Cast<T>();                  case ResultFilterType.Count:                      //this is weird but returns an integer                      return new[] { maxByDate.Count() }.Cast<T>();                  case ResultFilterType.Take:                      maxByDate = maxByDate.Take(query.ResultFilter.SelectorArgument);                      break;              }
Missing Default,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,PerformExecuteScalar,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Count:                      //this is weird but returns an integer                      return ExecuteMany<T>(query' objectBinder).Single();              }
Missing Default,Rebel.Framework.Persistence.Examine.Hive,EntityRepository,C:\research\architectureSmells\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.Examine\Hive\EntityRepository.cs,PerformExecuteSingle,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Single:                  case ResultFilterType.SingleOrDefault:                      if (!results.Any())                      {                          if (query.ResultFilter.ResultFilterType == ResultFilterType.SingleOrDefault)                          {                              return default(T);                          }                          throw new InvalidOperationException("Sequence contains 0 elements but query specified exactly 1 must be present");                      }                      var count = results.Count();                      if (count > 1)                      {                          throw new InvalidOperationException("Sequence contains {0} elements but query specified exactly 1 must be present.".InvariantFormat(count));                      }                      return results.Single();              }
