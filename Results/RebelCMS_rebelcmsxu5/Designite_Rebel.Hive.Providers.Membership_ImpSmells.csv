Implementation smell,Namespace,Class,File,Method,Description
Long Method,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The method has 112 lines of code.
Long Parameter List,Rebel.Hive.Providers.Membership.Hive,EntityRepositoryFactory,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepositoryFactory.cs,EntityRepositoryFactory,The method has 6 parameters. Parameters: providerMetadata' revisionRepositoryFactory' schemaRepositoryFactory' frameworkContext' membershipProviders' configuredProviders
Long Parameter List,Rebel.Hive.Providers.Membership.Hive,EntityRepositoryFactory,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepositoryFactory.cs,EntityRepositoryFactory,The method has 5 parameters. Parameters: providerMetadata' revisionRepositoryFactory' schemaRepositoryFactory' frameworkContext' dependencyHelper
Long Statement,Rebel.Hive.Providers.Membership.Hive,EntityRepository,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepository.cs,PerformExecuteSingle,The length of the statement  "                        throw new InvalidOperationException("Sequence contains {0} elements but query specified exactly 1 must be present.".InvariantFormat(result.Count())); " is 149.
Long Statement,Rebel.Hive.Providers.Membership.Hive,EntityRepository,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepository.cs,ValidateEntityForMembership,The length of the statement  "                throw new InvalidOperationException("The TypedEntity object does not contain the required attributes to be used to add or update a member"); " is 140.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                            Func<IEnumerable<MembershipUser>' IEnumerable<MembershipUser>> filter = x => x.Where(m => m.ProviderUserKey != idValue); " is 120.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    throw new NotSupportedException("The Membership wrapper Hive provider does not support querying fields other than Email and Username"); " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    throw new NotSupportedException("The Membership wrapper Hive provider does not support querying fields other than Email and Username");                                 " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    throw new NotSupportedException("The Membership wrapper Hive provider does not support querying fields other than Email and Username");      " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    throw new NotSupportedException("The Membership wrapper Hive provider does not support querying fields other than Email and Username");      " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Linq,MembershipQueryVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Linq\MembershipQueryVisitor.cs,VisitFieldPredicate,The length of the statement  "                    throw new NotSupportedException("The Membership wrapper Hive provider does not support querying fields other than Email and Username");                " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        //TODO: We need to store our own version of the name as seperate data than what the underlying membership provider can store " is 124.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.PasswordQuestionAlias' "Password Question") " is 134.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.IsApprovedAlias' "Is Approved") " is 122.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.IsLockedOutAlias' "Is Locked Out") " is 125.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.LastLockoutDateAlias' "Last Lockout Date") " is 133.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.LastLoginDateAlias' "Last Login Date") " is 129.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.LastActivityDateAlias' "Last Activity Date") " is 135.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                        t.Attributes.SetValueOrAdd(new TypedAttribute(new AttributeDefinition(MembershipUserSchema.LastPasswordChangeDateAlias' "Last Password Changed Date") " is 149.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                //TODO: We need to store our own version of the name as seperate data than what the underlying membership provider can store " is 124.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                .MapMemberFrom(x => x.LastLoginDate' x => x.Attribute<DateTimeOffset>(MembershipUserSchema.LastLoginDateAlias).UtcDateTime) " is 123.
Long Statement,Rebel.Hive.Providers.Membership.Mapping,MembershipWrapperModelMapper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Mapping\MembershipWrapperModelMapper.cs,ConfigureMappings,The length of the statement  "                .MapMemberFrom(x => x.LastActivityDate' x => x.Attribute<DateTimeOffset>(MembershipUserSchema.LastActivityDateAlias).UtcDateTime); " is 130.
Long Statement,Rebel.Hive.Providers.Membership,MembershipDemandBuilder,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipDemandBuilder.cs,Initialise,The length of the statement  "            var configMain = builderContext.ConfigurationResolver.GetConfigSection(HiveConfigSection.ConfigXmlKey) as HiveConfigSection; " is 124.
Long Statement,Rebel.Hive.Providers.Membership,MembershipDemandBuilder,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipDemandBuilder.cs,Initialise,The length of the statement  "            _localConfig = DeepConfigManager.Default.GetFirstPluginSection<ProviderConfigurationSection>(config2Rw.ConfigSectionKey); " is 121.
Magic Number,Rebel.Hive.Providers.Membership,MembershipWrapperHelper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipWrapperHelper.cs,PerformGetByQuery,The following statement contains a magic number: switch (criteria.Type)              {                  case MembershipQueryType.ByUsername:                      results = PerformGetByUsername<T>((string)criteria.SearchValue' criteria.SearchTermPredicateType);                      break;                  case MembershipQueryType.ById:                      results = PerformGet<T>(true' new[] { HiveId.Parse(criteria.SearchValue.ToString()) });                      break;                  case MembershipQueryType.ByEmail:                      results = PerformGetByEmail<T>((string)criteria.SearchValue' criteria.SearchTermPredicateType);                      break;                  case MembershipQueryType.Custom:                      return criteria.QueryFilter(GetAllPagedData((m' i) =>                          {                              int totalUsers;                              var result = m.GetAllUsers(i' 1000' out totalUsers);                              return new Tuple<MembershipUserCollection' int>(result' totalUsers);                          }))                          .Select(x => _frameworkContext.TypeMappers.Map<T>(x));                  case MembershipQueryType.None:                      results = Enumerable.Empty<T>();                      break;                  default:                      throw new ArgumentOutOfRangeException();              }
Magic Number,Rebel.Hive.Providers.Membership,MembershipWrapperHelper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipWrapperHelper.cs,PerformGetAll,The following statement contains a magic number: return GetAllPagedData<T>((m' i) =>                  {                      int totalUsers;                      var result = m.GetAllUsers(i' 1000' out totalUsers);                      return new Tuple<MembershipUserCollection' int>(result' totalUsers);                  });
Magic Number,Rebel.Hive.Providers.Membership,MembershipWrapperHelper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipWrapperHelper.cs,PerformGetByEmail,The following statement contains a magic number: return GetAllPagedData<T>((m'i) =>                  {                      int totalUsers;                      var result = m.FindUsersByEmail(FormatSearchTerm(email' m' predicateType)' i' 1000' out totalUsers);                      return new Tuple<MembershipUserCollection' int>(result' totalUsers);                  });
Magic Number,Rebel.Hive.Providers.Membership,MembershipWrapperHelper,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\MembershipWrapperHelper.cs,PerformGetByUsername,The following statement contains a magic number: return GetAllPagedData<T>((m' i) =>                  {                      int totalUsers;                        var result = m.FindUsersByName(FormatSearchTerm(username' m' predicateType)' i' 1000' out totalUsers);                      return new Tuple<MembershipUserCollection' int>(result' totalUsers);                  });
Missing Default,Rebel.Hive.Providers.Membership.Hive,EntityRepository,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepository.cs,PerformExecuteMany,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Count:                      //this is weird but returns an integer                      return new[] { results.Count() }.Cast<T>();                  case ResultFilterType.Take:                      results = results.Take(query.ResultFilter.SelectorArgument);                      break;              }
Missing Default,Rebel.Hive.Providers.Membership.Hive,EntityRepository,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepository.cs,PerformExecuteScalar,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Count:                      //this is weird but returns an integer                      return ExecuteMany<T>(query' objectBinder).Single();              }
Missing Default,Rebel.Hive.Providers.Membership.Hive,EntityRepository,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Hive.Providers.Membership\Hive\EntityRepository.cs,PerformExecuteSingle,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Single:                  case ResultFilterType.SingleOrDefault:                      var result = Helper.PerformGetByQuery<T>(query' objectBinder);                      if (!result.Any())                      {                          if (query.ResultFilter.ResultFilterType == ResultFilterType.SingleOrDefault)                          {                              return default(T);                          }                          throw new InvalidOperationException("Sequence contains 0 elements but query specified exactly 1 must be present");                      }                      if (result.Count() > 1)                      {                          throw new InvalidOperationException("Sequence contains {0} elements but query specified exactly 1 must be present.".InvariantFormat(result.Count()));                      }                      return FrameworkContext.TypeMappers.Map<T>(result.Single());              }
