Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement,DataContext,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\DataContext.cs,Flush,The length of the statement  "            XmlDoc.Save(_path); // The XmlStore transaction method is to backup at the start of a transaction' and rollback overwrites from the backup' so just save to normal path " is 167.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement,DataContext,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\DataContext.cs,IdMatches,The length of the statement  "            return xElement.Attributes("id").Any() && string.Equals((string)xElement.Attribute("id")' id' StringComparison.InvariantCultureIgnoreCase); " is 139.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XDocumentQueryableDataSource,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XDocumentQueryableDataSource.cs,IdMatches,The length of the statement  "            return xElement.Attributes("Id").Any() && string.Equals((string)xElement.Attribute("Id")' id' StringComparison.InvariantCultureIgnoreCase); " is 139.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementCriteriaVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementCriteriaVisitor.cs,VisitFieldPredicate,The length of the statement  "                            return x => x.Attributes(fieldName).Any() && string.Equals((string)x.Attribute(fieldName)' value' StringComparison.InvariantCultureIgnoreCase); " is 143.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementCriteriaVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementCriteriaVisitor.cs,VisitFieldPredicate,The length of the statement  "                            return x => x.Attributes(fieldName).Any() && !string.Equals((string)x.Attribute(fieldName)' value' StringComparison.InvariantCultureIgnoreCase); " is 144.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementCriteriaVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementCriteriaVisitor.cs,VisitFieldPredicate,The length of the statement  "                    return x => x.Attributes(fieldName).Any() && string.Equals((string)x.Attribute(fieldName)' fieldValue' StringComparison.InvariantCultureIgnoreCase); " is 148.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementCriteriaVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementCriteriaVisitor.cs,VisitFieldPredicate,The length of the statement  "                    return x => x.Attributes(fieldName).Any() && ((string)x.Attribute(fieldName)).EndsWith(fieldValue'StringComparison.InvariantCultureIgnoreCase); " is 143.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementSourceFieldBinder,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementSourceFieldBinder.cs,New,The length of the statement  "            throw new NotSupportedException(string.Format("Type of source object for field binding ({0}) isn't supported by this binder ({1})"' source.GetType()' " is 149.
Long Statement,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementSourceFieldBinder,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementSourceFieldBinder.cs,GetFieldNames,The length of the statement  "            var childAttributes = _source.Elements().Where(x=>x.Attribute("isDoc") == null).Select(xChild => xChild.Name.LocalName); " is 120.
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement,DataContext,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\DataContext.cs,ExecuteMany,The following switch statement is missing a default case: switch (direction)              {                  case HierarchyScope.AllOrNone:                      results = _xmlDoc.Descendants().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Ancestors:                      results = sourceElement.Ancestors().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.AncestorsOrSelf:                      results = sourceElement.AncestorsAndSelf().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Descendents:                      results = sourceElement.Descendants().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.DescendentsOrSelf:                      results = sourceElement.DescendantsAndSelf().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Parent:                      results = new[] { sourceElement.Ancestors().Where(x => allMatches.Contains(x)).Last() };                      break;                  case HierarchyScope.Children:                      results = sourceElement.Elements().Where(x => allMatches.Contains(x));                      break;              }
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement,DataContext,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\DataContext.cs,ExecuteMany,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Take:                      results = results.Take(query.ResultFilter.SelectorArgument);                      break;              }
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XDocumentQueryableDataSource,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XDocumentQueryableDataSource.cs,ExecuteMany,The following switch statement is missing a default case: switch (direction)              {                  case HierarchyScope.AllOrNone:                      results = _store.Descendants().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Ancestors:                      results = sourceElement.Ancestors().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.AncestorsOrSelf:                      results = sourceElement.AncestorsAndSelf().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Descendents:                      results = sourceElement.Descendants().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.DescendentsOrSelf:                      results = sourceElement.DescendantsAndSelf().Where(x => allMatches.Contains(x));                      break;                  case HierarchyScope.Parent:                      results = new[] { sourceElement.Ancestors().Where(x => allMatches.Contains(x)).Last() };                      break;                  case HierarchyScope.Children:                      results = sourceElement.Elements().Where(x => allMatches.Contains(x));                      break;              }
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XDocumentQueryableDataSource,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XDocumentQueryableDataSource.cs,ExecuteMany,The following switch statement is missing a default case: switch (query.ResultFilter.ResultFilterType)              {                  case ResultFilterType.Take:                      results = results.Take(query.ResultFilter.SelectorArgument);                      break;              }
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementCriteriaVisitor,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementCriteriaVisitor.cs,VisitFieldPredicate,The following switch statement is missing a default case: switch (node.ValueExpression.ClauseType)              {                  case ValuePredicateType.Equal:                      return x => x.Attributes(fieldName).Any() && string.Equals((string)x.Attribute(fieldName)' fieldValue' StringComparison.InvariantCultureIgnoreCase);                  case ValuePredicateType.EndsWith:                      return x => x.Attributes(fieldName).Any() && ((string)x.Attribute(fieldName)).EndsWith(fieldValue'StringComparison.InvariantCultureIgnoreCase);              }
Missing Default,Rebel.Framework.Persistence.XmlStore.DataManagement.Linq,XElementSourceFieldBinder,C:\repos\RebelCMS_rebelcmsxu5\Source\Libraries\Rebel.Framework.Persistence.XmlStore\DataManagement\Linq\XElementSourceFieldBinder.cs,GetFieldValue,The following switch statement is missing a default case: switch (fieldName.ToLowerInvariant())              {                  case "id":                      var value = (string) _source.Attribute(fieldName);                      return new HiveId(Convert.ToInt32(value));                  case "schema-name":                      return (string) _source.Name.LocalName;                }
