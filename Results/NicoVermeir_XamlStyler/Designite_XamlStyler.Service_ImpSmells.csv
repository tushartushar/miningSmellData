Implementation smell,Namespace,Class,File,Method,Description
Long Method,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The method has 111 lines of code.
Complex Method,XamlStyler.Core.DocumentManipulation,NodeReorderService,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentManipulation\NodeReorderService.cs,ReorderChildNodes,Cyclomatic complexity of the method is 8
Complex Method,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,Cyclomatic complexity of the method is 8
Long Parameter List,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The method has 5 parameters. Parameters: xmlReader' output' elementProcessContext' isNoLineBreakElement' attributeIndentationString
Long Identifier,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The length of the parameter attributeCountInCurrentLineBuffer is 33.
Long Statement,XamlStyler.Core.DocumentManipulation,DocumentManipulationService,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentManipulation\DocumentManipulationService.cs,GetReorderSettersService,The length of the statement  "            reorderService.ChildNodeNames.Add(new NameSelector("Setter"' "http://schemas.microsoft.com/winfx/2006/xaml/presentation")); " is 123.
Long Statement,XamlStyler.Core.DocumentManipulation,NodeReorderService,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentManipulation\NodeReorderService.cs,ReorderChildNodes,The length of the statement  "            // This value changes each time a non matching ChildNodeName is reached ensuring that only sortable elements are reordered  " is 122.
Long Statement,XamlStyler.Core.DocumentProcessors,CDATADocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\CDATADocumentProcessor.cs,Process,The length of the statement  "            // If there is linefeed(s) between element and CDATA then treat CDATA as element and indent accordingly' otherwise treat as single line text " is 140.
Long Statement,XamlStyler.Core.DocumentProcessors,CDATADocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\CDATADocumentProcessor.cs,Process,The length of the statement  "                // All newlines are returned by XmlReader as \n due to requirements in the XML Specification (http://www.w3.org/TR/2008/REC-xml-20081126/#sec-line-ends) " is 152.
Long Statement,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,Process,The length of the statement  "            bool putEndingBracketOnNewLine = (_options.PutEndingBracketOnNewLine && elementProcessContext.Current.IsMultlineStartTag); " is 122.
Long Statement,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The length of the statement  "                        if (currentLineBuffer.Length > 0 && (forceLineBreakInAttributes || isAttributeCharLengthExceeded || isAttributeCountExceeded || isAttributeRuleGroupChanged)) " is 157.
Long Statement,XamlStyler.Core.DocumentProcessors,EndElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\EndElementDocumentProcessor.cs,Process,The length of the statement  "            else if (elementProcessContext.Current.ContentType == ContentTypeEnum.SINGLE_LINE_TEXT_ONLY && elementProcessContext.Current.IsMultlineStartTag == false) " is 153.
Long Statement,XamlStyler.Core.DocumentProcessors,SignificantWhitespaceDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\SignificantWhitespaceDocumentProcessor.cs,Process,The length of the statement  "            // All newlines are returned by XmlReader as \n due to requirements in the XML Specification (http://www.w3.org/TR/2008/REC-xml-20081126/#sec-line-ends) " is 152.
Complex Conditional,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The conditional expression  "currentLineBuffer.Length > 0 && (forceLineBreakInAttributes || isAttributeCharLengthExceeded || isAttributeCountExceeded || isAttributeRuleGroupChanged)"  is complex.
Magic Number,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,ProcessAttributes,The following statement contains a magic number: if (elementProcessContext.Count == 2)              {                  switch (_options.RootElementLineBreakRule)                  {                      case LineBreakRule.Default:                          break;                      case LineBreakRule.Always:                          noLineBreakInAttributes = false;                          forceLineBreakInAttributes = true;                          break;                      case LineBreakRule.Never:                          noLineBreakInAttributes = true;                          break;                      default:                          throw new ArgumentOutOfRangeException();                  }              }
Magic Number,XamlStyler.Core.DocumentProcessors,ElementDocumentProcessor,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentProcessors\ElementDocumentProcessor.cs,GetAttributeIndetationString,The following statement contains a magic number: if (_options.AttributeIndentation == 0)              {                  if (_options.KeepFirstAttributeOnSameLine)                      return _indentService.GetIndentString(xmlReader.Depth' xmlReader.Name.Length + 2);                  else                      return _indentService.GetIndentString(xmlReader.Depth + 1);              }              else              {                  return _indentService.GetIndentString(xmlReader.Depth' _options.AttributeIndentation);              }
Magic Number,XamlStyler.Core.MarkupExtensions.Formatter,AttributeInfoFormatter,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\MarkupExtensions\Formatter\AttributeInfoFormatter.cs,ToMultiLineString,The following statement contains a magic number: if (attrInfo.IsMarkupExtension)              {                  string currentIndentationString = baseIndentationString + string.Empty.PadLeft(attrInfo.Name.Length + 2' ' ');                  var lines = _formatter.Format(attrInfo.MarkupExtension);                    var buffer = new StringBuilder();                  buffer.AppendFormat("{0}=\"{1}"' attrInfo.Name' lines.First());                  foreach (var line in lines.Skip(1))                  {                      buffer.AppendLine();                      buffer.Append(_indentService.Normalize(currentIndentationString + line));                  }                    buffer.Append('"');                  return buffer.ToString();                }
Magic Number,XamlStyler.Core.Extensions,StringBuilderExtensions,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\Extensions\StringBuilderExtensions.cs,TrimUnescaped,The following statement contains a magic number: while (index > 0 && trimChars.Contains(sb[index-1]))              {                  if (index > 1 && sb[index - 2] == '\\')                      break;                  index--;              }
Magic Number,XamlStyler.Core.MarkupExtensions.Parser,NamedArgument,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\MarkupExtensions\Parser\NamedArgument.cs,Create,The following statement contains a magic number: if (node.ChildNodes.Count != 2)                  throw new Exception("Named argument count mismatch");
Magic Number,XamlStyler.Core.MarkupExtensions.Parser,MemberNameOrStringTerminal,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\MarkupExtensions\Parser\MemberNameOrStringTerminal.cs,MatchUnquoted,The following statement contains a magic number: if (source.PreviewChar == '{')              {                  // Member names can't start with {                  if (IsMemberName) return null;                  // Check for special {} at start of token indicating that this is a STRING token.                  if (source.NextPreviewChar != '}') return null;                  source.PreviewPosition +=2;              }
Missing Default,XamlStyler.Core.DocumentManipulation,DocumentManipulationService,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\DocumentManipulation\DocumentManipulationService.cs,HandleNode,The following switch statement is missing a default case: switch (node.NodeType)              {                  case XmlNodeType.Element:                      XElement element = node as XElement;                        if (element != null && element.Nodes().Any())                      {                          // handle children first                          foreach (var childNode in element.Nodes())                          {                              HandleNode(childNode);                          }                      }                        if (element != null)                      {                          foreach (var elementService in _processElementServices)                          {                              elementService.ProcessElement(element);                          }                      }                      break;              }
Missing Default,XamlStyler.Core.MarkupExtensions.Parser,TypeNameTerminal,C:\repos\NicoVermeir_XamlStyler\XamlStyler.Service\MarkupExtensions\Parser\TypeNameTerminal.cs,TryMatch,The following switch statement is missing a default case: switch (source.PreviewChar)                  {                      case '\n':                      case '\r':                      case ' ':                      case '}':                          if (source.PreviewPosition > source.Position)                              return source.CreateToken(this.OutputTerminal);                          return context.CreateErrorToken(Name + " was expected");                  }
