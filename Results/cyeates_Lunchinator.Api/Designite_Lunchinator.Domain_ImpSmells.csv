Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Lunchinator.Domain.BusinessApi,YelpBusinessToLunchinatorBusinessMapper,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpBusinessToLunchinatorBusinessMapper.cs,Map,The length of the statement  "	var mapper = Mapper.CreateMap<YelpSharp.Data.Business' Business> ().ForMember (m => m.ImageUrl' o => o.MapFrom (s => s.image_url)); " is 131.
Long Statement,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The length of the statement  "	//yelp limits each request to 20 results' which doesn't seem like enough' so i'm going to request the 2nd page.  surely 40 is enough. " is 133.
Long Statement,Lunchinator.Domain.Services,LunchService,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\Services\LunchService.cs,InviteUser,The length of the statement  "	email.Body = String.Format (ConfigurationManager.AppSettings ["AppBaseUrl"] + "#/ratings/{0}"' lunch.LunchId.ToString ()); " is 122.
Magic Number,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The following statement contains a magic number: if (results.total > 20) {  	options.GeneralOptions.offset = 20;  	var results2 = _yelp.Search (options).Result;  	foreach (var business in results2.businesses) {  		var mapper = new YelpBusinessToLunchinatorBusinessMapper ();  		lunchinatorBusinesses.Add (mapper.Map (business));  	}  }  
Magic Number,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The following statement contains a magic number: if (results.total > 20) {  	options.GeneralOptions.offset = 20;  	var results2 = _yelp.Search (options).Result;  	foreach (var business in results2.businesses) {  		var mapper = new YelpBusinessToLunchinatorBusinessMapper ();  		lunchinatorBusinesses.Add (mapper.Map (business));  	}  }  
Magic Number,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The following statement contains a magic number: options.GeneralOptions.offset = 20;  
Magic Number,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The following statement contains a magic number: return lunchinatorBusinesses.Randomize ().Where (b => b.Rating >= 3.0).Take (10).ToList ();  
Magic Number,Lunchinator.Domain.BusinessApi,YelpProvider,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\BusinessApi\YelpProvider.cs,GetBusinessesForEvent,The following statement contains a magic number: return lunchinatorBusinesses.Randomize ().Where (b => b.Rating >= 3.0).Take (10).ToList ();  
Magic Number,Lunchinator.Domain.Services,UserService,C:\repos\cyeates_Lunchinator.Api\Lunchinator.Domain\Services\UserService.cs,GetBusinessesToRateForEvent,The following statement contains a magic number: return lunch.Businesses.Take (5);  
