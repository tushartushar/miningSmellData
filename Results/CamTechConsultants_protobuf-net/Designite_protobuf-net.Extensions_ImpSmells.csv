Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,ResolveMethod,Cyclomatic complexity of the method is 8
Complex Method,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,TryEvaluate,Cyclomatic complexity of the method is 12
Long Statement,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,ResolveMethod,The length of the statement  "				throw new InvalidOperationException ("Cannot guarantee ref/out behaviour due to expression complexity; consider simplifying the expression."); " is 142.
Long Statement,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,TryResolveField,The length of the statement  "	if (operation.NodeType == ExpressionType.MemberAccess && (field = (me = (MemberExpression)operation).Member as FieldInfo) != null) { " is 132.
Long Statement,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,Evaluate,The length of the statement  "		                throw new NotSupportedException("The expression is too complicated to be evaluated on this framework; try simplifying the expression.");" is 136.
Magic Number,ProtoBuf.Caching,ByteSegmentComparer,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\ByteSegmentComparer.cs,GetHashCode,The following statement contains a magic number: while (offset < max) {  	result = (-1521134295 * result) + (int)buffer [offset++];  }  
Magic Number,ProtoBuf.Caching,ByteSegmentComparer,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\ByteSegmentComparer.cs,GetHashCode,The following statement contains a magic number: result = (-1521134295 * result) + (int)buffer [offset++];  
Magic Number,ProtoBuf.Caching.Enyim,NetTranscoder,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\Enyim\ProtoTranscoder.cs,ReadType,The following statement contains a magic number: if (count < 4)  	throw new EndOfStreamException ();  
Magic Number,ProtoBuf.Caching.Enyim,NetTranscoder,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\Enyim\ProtoTranscoder.cs,ReadType,The following statement contains a magic number: count -= 4;  
Magic Number,ProtoBuf.Caching.Enyim,NetTranscoder,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\Enyim\ProtoTranscoder.cs,WriteSegment,The following statement contains a magic number: dest.WriteByte ((byte)(len >> 8));  
Magic Number,ProtoBuf.Caching.Enyim,NetTranscoder,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\Enyim\ProtoTranscoder.cs,WriteSegment,The following statement contains a magic number: dest.WriteByte ((byte)(len >> 16));  
Magic Number,ProtoBuf.Caching.Enyim,NetTranscoder,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\Caching\Enyim\ProtoTranscoder.cs,WriteSegment,The following statement contains a magic number: dest.WriteByte ((byte)(len >> 24));  
Missing Default,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,TryEvaluate,The following switch statement is missing a default case: switch (operation.NodeType) {  case ExpressionType.Constant:  	value = ((ConstantExpression)operation).Value;  	return true;  case ExpressionType.MemberAccess:  	MemberExpression me = (MemberExpression)operation;  	object target;  	if (TryEvaluate (me.Expression' out target)) {  		// instance target  		switch (me.Member.MemberType) {  		case MemberTypes.Field:  			value = ((FieldInfo)me.Member).GetValue (target);  			return true;  		case MemberTypes.Property:  			value = ((PropertyInfo)me.Member).GetValue (target' null);  			return true;  		}  	}  	break;  }  
Missing Default,ProtoBuf.ServiceModel.Client,ProtoClientExtensions,C:\repos\CamTechConsultants_protobuf-net\protobuf-net.Extensions\ServiceModel\Client\ProtoClientExtensions.cs,TryEvaluate,The following switch statement is missing a default case: switch (me.Member.MemberType) {  case MemberTypes.Field:  	value = ((FieldInfo)me.Member).GetValue (target);  	return true;  case MemberTypes.Property:  	value = ((PropertyInfo)me.Member).GetValue (target' null);  	return true;  }  
