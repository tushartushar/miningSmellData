Implementation smell,Namespace,Class,File,Method,Description
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,ClientConnected,The following statement contains a magic number: try {  	TcpListener server = (TcpListener)result.AsyncState;  	using (TcpClient client = server.EndAcceptTcpClient (result))  		using (NetworkStream stream = client.GetStream ()) {  			Console.WriteLine ("SERVER: Client connected; reading customer");  			Customer cust = Serializer.DeserializeWithLengthPrefix<Customer> (stream' PrefixStyle.Base128);  			Console.WriteLine ("SERVER: Got customer:");  			cust.ShowCustomer ();  			cust.Name += " (from server)";  			cust.Contacts.Add (new Contact {  				Name = "Server"'  				ContactDetails = Environment.MachineName  			});  			Console.WriteLine ("SERVER: Returning updated customer:");  			Serializer.SerializeWithLengthPrefix (stream' cust' PrefixStyle.Base128);  			int final = stream.ReadByte ();  			if (final == 123) {  				Console.WriteLine ("SERVER: Got client-happy marker");  			}  			else {  				Console.WriteLine ("SERVER: OOPS! Something went wrong");  			}  			Console.WriteLine ("SERVER: Closing connection...");  			stream.Close ();  			client.Close ();  		}  }  finally {  	allDone.Set ();  }  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,ClientConnected,The following statement contains a magic number: using (TcpClient client = server.EndAcceptTcpClient (result))  	using (NetworkStream stream = client.GetStream ()) {  		Console.WriteLine ("SERVER: Client connected; reading customer");  		Customer cust = Serializer.DeserializeWithLengthPrefix<Customer> (stream' PrefixStyle.Base128);  		Console.WriteLine ("SERVER: Got customer:");  		cust.ShowCustomer ();  		cust.Name += " (from server)";  		cust.Contacts.Add (new Contact {  			Name = "Server"'  			ContactDetails = Environment.MachineName  		});  		Console.WriteLine ("SERVER: Returning updated customer:");  		Serializer.SerializeWithLengthPrefix (stream' cust' PrefixStyle.Base128);  		int final = stream.ReadByte ();  		if (final == 123) {  			Console.WriteLine ("SERVER: Got client-happy marker");  		}  		else {  			Console.WriteLine ("SERVER: OOPS! Something went wrong");  		}  		Console.WriteLine ("SERVER: Closing connection...");  		stream.Close ();  		client.Close ();  	}  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,ClientConnected,The following statement contains a magic number: using (NetworkStream stream = client.GetStream ()) {  	Console.WriteLine ("SERVER: Client connected; reading customer");  	Customer cust = Serializer.DeserializeWithLengthPrefix<Customer> (stream' PrefixStyle.Base128);  	Console.WriteLine ("SERVER: Got customer:");  	cust.ShowCustomer ();  	cust.Name += " (from server)";  	cust.Contacts.Add (new Contact {  		Name = "Server"'  		ContactDetails = Environment.MachineName  	});  	Console.WriteLine ("SERVER: Returning updated customer:");  	Serializer.SerializeWithLengthPrefix (stream' cust' PrefixStyle.Base128);  	int final = stream.ReadByte ();  	if (final == 123) {  		Console.WriteLine ("SERVER: Got client-happy marker");  	}  	else {  		Console.WriteLine ("SERVER: OOPS! Something went wrong");  	}  	Console.WriteLine ("SERVER: Closing connection...");  	stream.Close ();  	client.Close ();  }  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,ClientConnected,The following statement contains a magic number: if (final == 123) {  	Console.WriteLine ("SERVER: Got client-happy marker");  }  else {  	Console.WriteLine ("SERVER: OOPS! Something went wrong");  }  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,RunClient,The following statement contains a magic number: using (TcpClient client = new TcpClient ()) {  	client.Connect (new IPEndPoint (IPAddress.Loopback' PORT));  	using (NetworkStream stream = client.GetStream ()) {  		Console.WriteLine ("CLIENT: Got connection; sending data...");  		Serializer.SerializeWithLengthPrefix (stream' cust' PrefixStyle.Base128);  		Console.WriteLine ("CLIENT: Attempting to read data...");  		Customer newCust = Serializer.DeserializeWithLengthPrefix<Customer> (stream' PrefixStyle.Base128);  		Console.WriteLine ("CLIENT: Got customer:");  		newCust.ShowCustomer ();  		Console.WriteLine ("CLIENT: Sending happy...");  		stream.WriteByte (123);  		// just to show all bidirectional comms are OK  		Console.WriteLine ("CLIENT: Closing...");  		stream.Close ();  	}  	client.Close ();  }  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,RunClient,The following statement contains a magic number: using (NetworkStream stream = client.GetStream ()) {  	Console.WriteLine ("CLIENT: Got connection; sending data...");  	Serializer.SerializeWithLengthPrefix (stream' cust' PrefixStyle.Base128);  	Console.WriteLine ("CLIENT: Attempting to read data...");  	Customer newCust = Serializer.DeserializeWithLengthPrefix<Customer> (stream' PrefixStyle.Base128);  	Console.WriteLine ("CLIENT: Got customer:");  	newCust.ShowCustomer ();  	Console.WriteLine ("CLIENT: Sending happy...");  	stream.WriteByte (123);  	// just to show all bidirectional comms are OK  	Console.WriteLine ("CLIENT: Closing...");  	stream.Close ();  }  
Magic Number,QuickStart,Sockets,C:\repos\CamTechConsultants_protobuf-net\QuickStart\3 Sockets.cs,RunClient,The following statement contains a magic number: stream.WriteByte (123);  
