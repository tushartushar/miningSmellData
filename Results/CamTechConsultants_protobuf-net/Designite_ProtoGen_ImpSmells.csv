Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,ApplyTransform,Cyclomatic complexity of the method is 8
Long Statement,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Execute,The length of the statement  "				string body = (ex is ProtoParseException && errors.Length > 0) ? errors.ToString () : (ex.Message + Environment.NewLine + errors); " is 130.
Long Statement,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CombinePathFromAppRoot,The length of the statement  "	if (!string.IsNullOrEmpty (loaderPath) && loaderPath [loaderPath.Length - 1] != Path.DirectorySeparatorChar && loaderPath [loaderPath.Length - 1] != Path.AltDirectorySeparatorChar) { " is 182.
Long Statement,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,GetProtocPath,The length of the statement  "	using (Stream resStream = Assembly.GetExecutingAssembly ().GetManifestResourceStream (typeof(InputFileLoader).Namespace + "." + Name)) " is 134.
Long Statement,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CompileDescriptor,The length of the statement  "		ProcessStartInfo psi = new ProcessStartInfo (protocPath' string.Format (@"""--descriptor_set_out={0}"" ""--proto_path={1}"" ""--proto_path={2}"" --error_format=gcc ""{3}"" {4}"' tmp' // output file " is 197.
Long Statement,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CompileDescriptor,The length of the statement  "					stderr.WriteLine ("The input file should be UTF8 without a byte-order-mark (in Visual Studio use \"File\" -> \"Advanced Save Options...\" to rectify)"); " is 152.
Empty Catch Block,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CompileDescriptor,The method has an empty catch block.
Empty Catch Block,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CompileDescriptor,The method has an empty catch block.
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: for (int i = 0; i < args.Length; i++) {  	string arg = args [i].Trim ();  	if (arg.StartsWith ("-o:")) {  		if (!string.IsNullOrEmpty (options.OutPath))  			options.ShowHelp = true;  		options.OutPath = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-p:")) {  		Split (arg.Substring (3)' out key' out value);  		options.XsltOptions.AddParam (key' ""' value ?? "true");  	}  	else if (arg.StartsWith ("-t:")) {  		options.Template = arg.Substring (3).Trim ();  	}  	else if (arg.StartsWith ("-ns:")) {  		options.DefaultNamespace = arg.Substring (4).Trim ();  	}  	else if (arg == "/?" || arg == "-h") {  		options.ShowHelp = true;  	}  	else if (arg == "-q")// quiet  	 {  		options.ShowLogo = false;  	}  	else if (arg == "-d") {  		options.Arguments.Add ("--include_imports");  	}  	else if (arg.StartsWith ("-i:")) {  		options.InPaths.Add (arg.Substring (3).Trim ());  	}  	else if (arg == "-writeErrors") {  		options.WriteErrorsToFile = true;  	}  	else if (arg.StartsWith ("-w:")) {  		options.WorkingDirectory = arg.Substring (3).Trim ();  	}  	else {  		options.ShowHelp = true;  	}  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-o:")) {  	if (!string.IsNullOrEmpty (options.OutPath))  		options.ShowHelp = true;  	options.OutPath = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: options.OutPath = arg.Substring (3).Trim ();  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-p:")) {  	Split (arg.Substring (3)' out key' out value);  	options.XsltOptions.AddParam (key' ""' value ?? "true");  }  else if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: Split (arg.Substring (3)' out key' out value);  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-t:")) {  	options.Template = arg.Substring (3).Trim ();  }  else if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: options.Template = arg.Substring (3).Trim ();  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-ns:")) {  	options.DefaultNamespace = arg.Substring (4).Trim ();  }  else if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: options.DefaultNamespace = arg.Substring (4).Trim ();  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "/?" || arg == "-h") {  	options.ShowHelp = true;  }  else if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "-q")// quiet   {  	options.ShowLogo = false;  }  else if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "-d") {  	options.Arguments.Add ("--include_imports");  }  else if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-i:")) {  	options.InPaths.Add (arg.Substring (3).Trim ());  }  else if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: options.InPaths.Add (arg.Substring (3).Trim ());  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg == "-writeErrors") {  	options.WriteErrorsToFile = true;  }  else if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: if (arg.StartsWith ("-w:")) {  	options.WorkingDirectory = arg.Substring (3).Trim ();  }  else {  	options.ShowHelp = true;  }  
Magic Number,ProtoBuf.CodeGenerator,CommandLineOptions,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\CommandLineOptions.cs,Parse,The following statement contains a magic number: options.WorkingDirectory = arg.Substring (3).Trim ();  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CombinePathFromAppRoot,The following statement contains a magic number: if (loaderPath.StartsWith (@"file:\")) {  	loaderPath = loaderPath.Substring (6);  }  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,CombinePathFromAppRoot,The following statement contains a magic number: loaderPath = loaderPath.Substring (6);  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,GetProtocPath,The following statement contains a magic number: using (Stream resStream = Assembly.GetExecutingAssembly ().GetManifestResourceStream (typeof(InputFileLoader).Namespace + "." + Name))  	using (Stream outFile = File.OpenWrite (path)) {  		long len = 0;  		int bytesRead;  		byte[] buffer = new byte[4096];  		while ((bytesRead = resStream.Read (buffer' 0' buffer.Length)) > 0) {  			outFile.Write (buffer' 0' bytesRead);  			len += bytesRead;  		}  		outFile.SetLength (len);  	}  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,GetProtocPath,The following statement contains a magic number: using (Stream outFile = File.OpenWrite (path)) {  	long len = 0;  	int bytesRead;  	byte[] buffer = new byte[4096];  	while ((bytesRead = resStream.Read (buffer' 0' buffer.Length)) > 0) {  		outFile.Write (buffer' 0' bytesRead);  		len += bytesRead;  	}  	outFile.SetLength (len);  }  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,HasByteOrderMark,The following statement contains a magic number: try {  	using (Stream s = File.OpenRead (path)) {  		return s.ReadByte () > 127;  	}  }  catch (Exception ex) {  	Debug.WriteLine (ex);  	// log only  	return false;  }  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,HasByteOrderMark,The following statement contains a magic number: using (Stream s = File.OpenRead (path)) {  	return s.ReadByte () > 127;  }  
Magic Number,ProtoBuf.CodeGenerator,InputFileLoader,C:\repos\CamTechConsultants_protobuf-net\ProtoGen\InputFileLoader.cs,HasByteOrderMark,The following statement contains a magic number: return s.ReadByte () > 127;  
