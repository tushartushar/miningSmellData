Implementation smell,Namespace,Class,File,Method,Description
Long Method,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Create,The method has 104 lines of code.
Long Method,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The method has 228 lines of code.
Complex Method,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,AreEqual,Cyclomatic complexity of the method is 9
Complex Method,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,Cyclomatic complexity of the method is 10
Complex Method,Examples.Issues,SO14436606,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14436606.cs,ThreeApproachesAreCompatible,Cyclomatic complexity of the method is 9
Complex Method,Examples.Issues,SO7333233,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7333233.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,PistonThread,Cyclomatic complexity of the method is 8
Complex Method,TechnologyEvaluation.Protobuf.ArrayOfBaseClassTest,ArrayOfBaseClassTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7064824.cs,model_DynamicTypeFormatting,Cyclomatic complexity of the method is 11
Complex Method,Proto,ProtoBufModalSerializer,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111b.cs,init,Cyclomatic complexity of the method is 9
Complex Method,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,PerfTestArray,Cyclomatic complexity of the method is 8
Complex Method,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,Cyclomatic complexity of the method is 31
Long Parameter List,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The method has 6 parameters.
Long Parameter List,Examples.Issues,Issue176,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue176.cs,DbMetrics,The method has 7 parameters.
Long Parameter List,Examples.Issues,SO11317045,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11317045.cs,CheckClone,The method has 6 parameters.
Long Parameter List,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,Execute,The method has 5 parameters.
Long Parameter List,DAL,NWindTests,C:\repos\CamTechConsultants_protobuf-net\Examples\NWind\NWind.cs,DbMetrics,The method has 7 parameters.
Long Parameter List,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The method has 10 parameters.
Long Statement,Examples,Callbacks,C:\repos\CamTechConsultants_protobuf-net\Examples\Callbacks.cs,Test,The length of the statement  "			Assert.AreEqual (ctorExpected + ";OnSerializing;OnSerialized;OnSerializing;OnSerialized"' cs.History' "orig after" + mode); " is 123.
Long Statement,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The length of the statement  "		basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60)); " is 148.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0); " is 130.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32); " is 126.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32); " is 126.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32); " is 126.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3); " is 129.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3); " is 129.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3); " is 129.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0); " is 129.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0); " is 129.
Long Statement,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "	Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0); " is 129.
Long Statement,Examples,MultiTypesWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\MultiTypesWithLengthPrefix.cs,ReadNext,The length of the statement  "	if (Serializer.NonGeneric.TryDeserializeWithLengthPrefix (stream' PrefixStyle.Base128' field => typeLookup [field]' out obj)) { " is 127.
Long Statement,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The length of the statement  "	int orderCount = masterDb.Orders.Count' lineCount = masterDb.Orders.Sum (o => o.Lines.Count)' unitCount = masterDb.Orders.SelectMany (o => o.Lines).Sum (l => (int)l.Quantity); " is 175.
Long Statement,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The length of the statement  "	decimal freight = masterDb.Orders.Sum (order => order.Freight).GetValueOrDefault ()' value = masterDb.Orders.SelectMany (o => o.Lines).Sum (l => l.Quantity * l.UnitPrice); " is 171.
Long Statement,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestNonEmptyUriWithDefaultAllCompilationModes,The length of the statement  "	var compiled = model.Compile ("TestNonEmptyUriWithDefaultAllCompilationModes"' "TestNonEmptyUriWithDefaultAllCompilationModes.dll"); " is 132.
Long Statement,Examples,Program,C:\repos\CamTechConsultants_protobuf-net\Examples\Program.cs,Main2,The length of the statement  "	SimpleStreamDemo.LoadTestItem (compat' NWIND_COUNT' NWIND_COUNT' RUN_LEGACY' false' RUN_LEGACY' true' false' true' null); " is 121.
Long Statement,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,TimeModel,The length of the statement  "	Console.WriteLine (string.Format ("{0}: {1}ms/Compile' {2} types' {3}ms total' {4} iteratons"' typeof(T).Name' watch.ElapsedMilliseconds / count' typeCount' watch.ElapsedMilliseconds' count)); " is 192.
Long Statement,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The length of the statement  "	var clone = (Tuple<int' Tuple<int' int' int' int' int' int' int' Tuple<List<Tuple<float' float>>>>[]' bool>)model.DeepClone (obj); " is 130.
Long Statement,Examples.Issues,Issue176,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue176.cs,TestOrderLineGetDeserializedAndAttachedToOrder,The length of the statement  "	Assert.AreEqual (orders.SelectMany (o => o.Lines).Count ()' roundTrippedOrders.SelectMany (o => o.Lines).Count ()' "total count"); " is 130.
Long Statement,Examples.Issues,Issue48_MXP,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48.cs,ImportMxp,The length of the statement  "	if (!string.IsNullOrEmpty (dir) && dir [dir.Length - 1] != Path.DirectorySeparatorChar && dir [dir.Length - 1] != Path.AltDirectorySeparatorChar) { " is 147.
Long Statement,Examples.Issues,Issue48_MXP,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48.cs,ImportMxp,The length of the statement  "		s = Generator.GetCode (@"-i:MXP.Extentions.OpenMetaverseFragments.proto"' @"-o:MXP.Extentions.OpenMetaverseFragments.cs"' @"-p:import=MXP.Common;System.Xml;"); " is 159.
Long Statement,Examples.Issues,Issue48_MXP,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48.cs,ImportMxp,The length of the statement  "		s = Generator.GetCode (@"-i:MXP.Extentions.OpenMetaverseFragments.proto"' @"-o:MXP.Extentions.OpenMetaverseFragments.xml"' "-t:xml"); " is 133.
Long Statement,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The length of the statement  "	Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream.GetBuffer ()' 0' 5' ProtoBuf.PrefixStyle.Fixed32' out len32_1)' "len32 - buffer"); " is 149.
Long Statement,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The length of the statement  "	Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream' ProtoBuf.PrefixStyle.Fixed32' out len32_2)' "len32 - stream"); " is 130.
Long Statement,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The length of the statement  "	Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream.GetBuffer ()' 0' 5' ProtoBuf.PrefixStyle.Base128' out len128_1)' "len128 - buffer"); " is 151.
Long Statement,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The length of the statement  "	Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream' ProtoBuf.PrefixStyle.Base128' out len128_2)' "len128 - stream"); " is 132.
Long Statement,Examples.Issues,SO10115538,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO10115538.cs,GetService,The length of the statement  "	var endpoint = new ServiceEndpoint (ContractDescription.GetContract (typeof(IMyService))' new NetTcpBinding (SecurityMode.None)' new EndpointAddress ("net.tcp://localhost:89/MyService/svc")); " is 191.
Long Statement,Examples.Issues,SO10115538,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO10115538.cs,GetService,The length of the statement  "	//ChannelFactory<IMyService> factory = new ChannelFactory<IMyService>(new NetTcpBinding(SecurityMode.None)' "net.tcp://localhost:89/MyService/svc"); " is 148.
Long Statement,Examples.Issues,SO10115538,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO10115538.cs,StartServer,The length of the statement  "		host.AddServiceEndpoint (typeof(IMyService)' new NetTcpBinding (SecurityMode.None)' "net.tcp://localhost:89/MyService/svc").Behaviors.Add (new ProtoEndpointBehavior ()); " is 169.
Long Statement,Examples.Issues,SO10841807,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO10841807.cs,Execute,The length of the statement  "	Assert.IsTrue (Regex.IsMatch (aqn' @"ProtoBuf\.ServiceModel\.ProtoBehaviorExtension' protobuf\-net' Version=[0-9.]+' Culture=neutral' PublicKeyToken=257b51d87d2e4d67")); " is 169.
Long Statement,Examples.Issues,SO11641262,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11641262.cs,Execute,The length of the statement  "	model.Add (typeof(FooData)' true).AddSubType (1' typeof(FooData<string>)).AddSubType (2' typeof(FooData<int>)).AddSubType (3' typeof(FooData<SomeOtherType>)); " is 158.
Long Statement,Examples.Issues,SO14540862,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14540862.cs,Execute,The length of the statement  "	var reflectionGenericMethodInfo = reflectionMethods.First<MethodInfo> (method => method.Name == "SerializeWithLengthPrefix"); " is 125.
Long Statement,Examples.Issues,SO18277323,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18277323.cs,ExecuteSimple,The length of the statement  "		Assert.AreEqual ("1A-13-0A-11-0A-03-61-62-63-12-0A-0A-03-64-65-66-12-03-67-68-69-08-01-12-02-6F-6B"' BitConverter.ToString (ms.GetBuffer ()' 0' (int)ms.Length)); " is 161.
Long Statement,Examples.Issues,SO18277323,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18277323.cs,ExecuteCustom,The length of the statement  "		Assert.AreEqual ("1B-0B-0A-03-61-62-63-13-0A-03-64-65-66-12-03-67-68-69-14-0C-1C-08-01-12-02-6F-6B"' BitConverter.ToString (ms.GetBuffer ()' 0' (int)ms.Length)); " is 161.
Long Statement,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Execute,The length of the statement  "				Trace.WriteLine (string.Format ("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption)); " is 154.
Long Statement,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Execute,The length of the statement  "	Trace.WriteLine (string.Format ("{5}\tComplete {0}: avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' complete' 0' average / complete' min' max' caption)); " is 150.
Long Statement,Examples.Issues,SO6109616,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6109616.cs,Execute,The length of the statement  "		// in v1' comparable to Serializer.NonGeneric.SerializeWithLengthPrefix(ms' b' PrefixStyle.Base128' typeToTag[b.GetType()]); " is 124.
Long Statement,Examples.Issues,SO6109616,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6109616.cs,Execute,The length of the statement  "		// in v1' comparable to Serializer.NonGeneric.TryDeserializeWithLengthPrefix(ms' PrefixStyle.Base128' key => tagToType[key]' out b2); " is 133.
Long Statement,Examples.Issues,SO9151111,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111.cs,TestManualConstuctionClosedType,The length of the statement  "	// In runtime this class is build (with specific TDATA) and Serialized. When I'm adding this type to runtime modal : (error) " is 124.
Long Statement,TechnologyEvaluation.Protobuf.ArrayOfBaseClassTest,ArrayOfBaseClassTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7064824.cs,WrittenDataShouldBeConstant,The length of the statement  "	Assert.AreEqual ("ChkgAUIEQmFzZVIPCg1CYXNlQ2xhc3NUZXh0CjEgAkIHRGVyaXZlZFIkogYSChBEZXJpdmVkQ2xhc3NUZXh0Cg1CYXNlQ2xhc3NUZXh0"' s); " is 128.
Long Statement,DAL,Order,C:\repos\CamTechConsultants_protobuf-net\Examples\NWind\DataContext.cs,Initialize,The length of the statement  "	this._Lines = new EntitySet<OrderLine> (new Action<OrderLine> (this.attach_Lines)' new Action<OrderLine> (this.detach_Lines)); " is 126.
Long Statement,Examples.ProtoGen,Generator,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\Generator.cs,TestCompile,The length of the statement  "			throw new InvalidOperationException (string.Format ("{0} found {1} code errors errors"' typeof(T).Name' results.Errors.Count)); " is 127.
Long Statement,Examples.ProtoGen,InputLoader,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\InputLoader.cs,TestBinaryInput,The length of the statement  "	Process.Start ("protoc"' @"--descriptor_set_out=ProtoGen\descriptor.bin --include_imports ProtoGen\descriptor.proto").WaitForExit (); " is 133.
Long Statement,Examples.ProtoGen,OptionParser,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\OptionParser.cs,TestCompileDescriptorAndWriteMainDescriptorCS_Success,The length of the statement  "	Assert.AreEqual (0' CommandLineOptions.Main (@"-i:ProtoGen/descriptor.proto"' "-i:protobuf-net.proto"' "-o:descriptor.cs")); " is 124.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,PerfTestSimple,The length of the statement  "	Assert.IsTrue (LoadTestItem (t1' count' count' runLegacy' runLegacy' runLegacy' true' runLegacy' false' 0x08' 0x96' 0x01)); " is 123.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,PerfTestString,The length of the statement  "	Assert.IsTrue (LoadTestItem (t2' count' count' runLegacy' runLegacy' runLegacy' true' runLegacy' false' 0x12' 0x07' 0x74' 0x65' 0x73' 0x74' 0x69' 0x6e' 0x67)); " is 159.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,PerfTestEmbedded,The length of the statement  "	Assert.IsTrue (LoadTestItem (t3' count' count' runLegacy' runLegacy' runLegacy' true' runLegacy' false' 0x1a' 0x03' 0x08' 0x96' 0x01)); " is 135.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "		Console.WriteLine ("||protobuf-net||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 175.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "                    Console.WriteLine("||[http://code.google.com/p/protosharp/ proto#]||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"'" is 121.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "			Console.WriteLine ("||`BinaryFormatter`||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 180.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "			Console.WriteLine ("||`SoapFormatter`||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 178.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "			Console.WriteLine ("||`XmlSerializer`||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 178.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "			Console.WriteLine ("||`NetDataContractSerializer`||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 190.
Long Statement,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,LoadTestItem,The length of the statement  "			Console.WriteLine ("||`DataContractSerializer`||{0:###'###'###}||{1:###'###'###}||{2:###'###'###}||"' ms.Length' serializeWatch.ElapsedMilliseconds' deserializeWatch.ElapsedMilliseconds); " is 187.
Empty Catch Block,Examples.Issues,SO7219959,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7219959.cs,Test,The method has an empty catch block.
Empty Catch Block,Examples.ProtoGen,Generator,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\Generator.cs,TestCompile,The method has an empty catch block.
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,DeserializeBusyArray,The following statement contains a magic number: Assert.AreEqual (3' foo.Length);  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Overwrite.SequenceEqual (new[] {  	9'  	10  })' "Overwrite' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.IsTrue (clone.Append.SequenceEqual (new[] {  	1'  	2'  	3'  	7'  	8  })' "Append' Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "Runtime");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "CompileInPlace");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.IsTrue (clone.Values.SequenceEqual (new[] {  	4'  	5  })' "Compile");  
Magic Number,Examples,ArrayTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Arrays.cs,TestEmptyArrays,The following statement contains a magic number: t.ValInt = 128;  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (100' foo.D_public' "D: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (101' foo.E_private' "E: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (102' foo.F_ignoreDirect' "F: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (103' foo.G_ignoreIndirect' "G: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (104' foo.H_nonSerialized' "H: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (105' foo.X_explicitField' "X: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (106' foo.Z_explicitProperty' "Z: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (100' bar.D_public' "D: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (101' bar.E_private' "E: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (105' bar.X_explicitField' "X: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (106' bar.Z_explicitProperty' "Z: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (100' equiv.D' "D: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (101' equiv.E' "E: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (105' equiv.X' "X: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.AreEqual (106' equiv.Z' "Z: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (101' foo.ImplicitField' "ImplicitField: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (102' foo.ExplicitNonPublic' "ExplicitNonPublic: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (103' foo.IgnoreDirect' "IgnoreDirect: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (104' foo.IgnoreIndirect' "IgnoreIndirect: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (105' foo.ImplicitNonPublic' "ImplicitNonPublic: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (106' foo.ImplicitProperty' "ImplicitProperty: pre");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (101' bar.ImplicitField' "ImplicitField: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (102' bar.ExplicitNonPublic' "ExplicitNonPublic: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (106' bar.ImplicitProperty' "ImplicitProperty: post");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (101' equiv.ImplicitField' "ImplicitField: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (102' equiv.ExplicitNonPublic' "ExplicitNonPublic: equiv");  
Magic Number,Examples,TestAutoFields,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.AreEqual (106' equiv.ImplicitProperty' "ImplicitProperty: equiv");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.AreEqual (123' clone.Value.Foo' "runtime");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.AreEqual (123' clone.Value.Foo' "CompileInPlace");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.AreEqual (123' clone.Value.Foo' "Compile");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "runtime");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "CompileInPlace");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "Compile");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "runtime");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "CompileInPlace");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "Compile");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Item1' "runtime");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Item1' "CompileInPlace");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.AreEqual (123' clone.Item1' "Compile");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestAnonTypeAsTuple,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "runtime");  
Magic Number,Examples,AutoTuple,C:\repos\CamTechConsultants_protobuf-net\Examples\AutoTuple.cs,TestAnonTypeAsTuple,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' "CompileInPlace");  
Magic Number,Examples,Callbacks,C:\repos\CamTechConsultants_protobuf-net\Examples\Callbacks.cs,TestStructSimple,The following statement contains a magic number: Assert.AreEqual (6' CallbackStructSimple.BeforeSerializeCount - beforeSer);  
Magic Number,Examples,Callbacks,C:\repos\CamTechConsultants_protobuf-net\Examples\Callbacks.cs,TestStructSimple,The following statement contains a magic number: Assert.AreEqual (6' CallbackStructSimple.AfterSerializeCount - afterSer);  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: for (int i = 0; i < 300000; i++) {  	var basicDto = new BasicDto ();  	basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  	basicDto.Bar = (float)rand.NextDouble ();  	list.Add (basicDto);  }  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime (rand.Next (1980' 2020)' rand.Next (1' 13)' rand.Next (1' 29)' rand.Next (0' 24)' rand.Next (0' 60)' rand.Next (0' 60));  
Magic Number,Examples,ComparisonToNDCS,C:\repos\CamTechConsultants_protobuf-net\Examples\ComparisonToNDCS.cs,CompareBasicTypeForBandwidth,The following statement contains a magic number: Assert.That (pb' Is.LessThan (ndcs / 5));  
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,C:\repos\CamTechConsultants_protobuf-net\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo);  
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,C:\repos\CamTechConsultants_protobuf-net\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: Assert.AreEqual (456' clone.Bar);  
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,C:\repos\CamTechConsultants_protobuf-net\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseProtoOnly_ShouldSerializeFooOnly,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo);  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestDefaults,The following statement contains a magic number: Assert.AreEqual (5' dm.Foo);  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestSetValuesToDefaults,The following statement contains a magic number: dm.Foo = 5;  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestSetValuesToDefaults,The following statement contains a magic number: Assert.AreEqual (5' dm.Foo);  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestSetValuesToNewValues,The following statement contains a magic number: dm.Foo = 7;  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestSetValuesToNewValues,The following statement contains a magic number: Assert.AreEqual (7' dm.Foo);  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestSetSpecified,The following statement contains a magic number: Assert.AreEqual (5' dm.Foo);  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestResetSpecified,The following statement contains a magic number: dm.Foo = 27;  
Magic Number,Examples,TestDetectMissing,C:\repos\CamTechConsultants_protobuf-net\Examples\DetectMissing.cs,TestResetSpecified,The following statement contains a magic number: Assert.AreEqual (5' dm.Foo);  
Magic Number,Examples,TestDynamicFormatter,C:\repos\CamTechConsultants_protobuf-net\Examples\DynamicIFormatter.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	formatter.Serialize (ms' new Foo {  		Bar = 12345  	});  	ms.Position = 0;  	Foo clone = (Foo)formatter.Deserialize (ms);  	Assert.AreEqual (12345' clone.Bar);  }  
Magic Number,Examples,TestDynamicFormatter,C:\repos\CamTechConsultants_protobuf-net\Examples\DynamicIFormatter.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	formatter.Serialize (ms' new Foo {  		Bar = 12345  	});  	ms.Position = 0;  	Foo clone = (Foo)formatter.Deserialize (ms);  	Assert.AreEqual (12345' clone.Bar);  }  
Magic Number,Examples,TestDynamicFormatter,C:\repos\CamTechConsultants_protobuf-net\Examples\DynamicIFormatter.cs,Execute,The following statement contains a magic number: formatter.Serialize (ms' new Foo {  	Bar = 12345  });  
Magic Number,Examples,TestDynamicFormatter,C:\repos\CamTechConsultants_protobuf-net\Examples\DynamicIFormatter.cs,Execute,The following statement contains a magic number: Assert.AreEqual (12345' clone.Bar);  
Magic Number,Examples,ExtendedTimeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ExtendedTimeTests.cs,TestDateTimeTicks,The following statement contains a magic number: for (int i = 0; i < 500; i++) {  	DateTime dt = new DateTime (rand.Next (int.MaxValue));  }  
Magic Number,Examples,ExtendedTimeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ExtendedTimeTests.cs,TestDate,The following statement contains a magic number: bits [0] = 9;  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: model.Add (typeof(CanHazData)' true) [3].IsStrict = true;  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: try {  	Extensible.AppendValue (model' obj' 1' DataFormat.Default' "abc");  	Extensible.AppendValue (model' obj' 2' DataFormat.Default' 456.7F);  	Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  	CanHazData clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' obj);  		string s = Program.GetByteString (ms.ToArray ());  		Assert.AreEqual ("0A 03 61 62 63 15 9A 59 E4 43 1D 7B 00 00 00"' s' caption);  		ms.Position = 0;  		clone = (CanHazData)model.Deserialize (ms' null' typeof(CanHazData));  	}  	Assert.AreEqual ("abc"' clone.A' caption);  	Assert.AreEqual (456.7F' clone.B' caption);  	Assert.AreEqual (123' clone.C' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: try {  	Extensible.AppendValue (model' obj' 1' DataFormat.Default' "abc");  	Extensible.AppendValue (model' obj' 2' DataFormat.Default' 456.7F);  	Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  	CanHazData clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' obj);  		string s = Program.GetByteString (ms.ToArray ());  		Assert.AreEqual ("0A 03 61 62 63 15 9A 59 E4 43 1D 7B 00 00 00"' s' caption);  		ms.Position = 0;  		clone = (CanHazData)model.Deserialize (ms' null' typeof(CanHazData));  	}  	Assert.AreEqual ("abc"' clone.A' caption);  	Assert.AreEqual (456.7F' clone.B' caption);  	Assert.AreEqual (123' clone.C' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: try {  	Extensible.AppendValue (model' obj' 1' DataFormat.Default' "abc");  	Extensible.AppendValue (model' obj' 2' DataFormat.Default' 456.7F);  	Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  	CanHazData clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' obj);  		string s = Program.GetByteString (ms.ToArray ());  		Assert.AreEqual ("0A 03 61 62 63 15 9A 59 E4 43 1D 7B 00 00 00"' s' caption);  		ms.Position = 0;  		clone = (CanHazData)model.Deserialize (ms' null' typeof(CanHazData));  	}  	Assert.AreEqual ("abc"' clone.A' caption);  	Assert.AreEqual (456.7F' clone.B' caption);  	Assert.AreEqual (123' clone.C' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: try {  	Extensible.AppendValue (model' obj' 1' DataFormat.Default' "abc");  	Extensible.AppendValue (model' obj' 2' DataFormat.Default' 456.7F);  	Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  	CanHazData clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' obj);  		string s = Program.GetByteString (ms.ToArray ());  		Assert.AreEqual ("0A 03 61 62 63 15 9A 59 E4 43 1D 7B 00 00 00"' s' caption);  		ms.Position = 0;  		clone = (CanHazData)model.Deserialize (ms' null' typeof(CanHazData));  	}  	Assert.AreEqual ("abc"' clone.A' caption);  	Assert.AreEqual (456.7F' clone.B' caption);  	Assert.AreEqual (123' clone.C' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: Extensible.AppendValue (model' obj' 2' DataFormat.Default' 456.7F);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: Extensible.AppendValue (model' obj' 3' DataFormat.FixedSize' 123);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: Assert.AreEqual (123' clone.C' caption);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject {  	Bof = "BOF"'  	SomeBlob = new byte[] {  		0x01'  		0x02'  		0x03'  		0x04'  		0x05  	}'  	SomeDouble = double.MaxValue / 2'  	SomeFloat = float.MinValue / 2'  	SomeInt32 = (int.MaxValue / 3) * 2'  	SomeString = "abcdefghijklmnopqrstuvwxyz"'  	Eof = "EOF"  };  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject {  	Bof = "BOF"'  	SomeBlob = new byte[] {  		0x01'  		0x02'  		0x03'  		0x04'  		0x05  	}'  	SomeDouble = double.MaxValue / 2'  	SomeFloat = float.MinValue / 2'  	SomeInt32 = (int.MaxValue / 3) * 2'  	SomeString = "abcdefghijklmnopqrstuvwxyz"'  	Eof = "EOF"  };  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject {  	Bof = "BOF"'  	SomeBlob = new byte[] {  		0x01'  		0x02'  		0x03'  		0x04'  		0x05  	}'  	SomeDouble = double.MaxValue / 2'  	SomeFloat = float.MinValue / 2'  	SomeInt32 = (int.MaxValue / 3) * 2'  	SomeString = "abcdefghijklmnopqrstuvwxyz"'  	Eof = "EOF"  };  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject {  	Bof = "BOF"'  	SomeBlob = new byte[] {  		0x01'  		0x02'  		0x03'  		0x04'  		0x05  	}'  	SomeDouble = double.MaxValue / 2'  	SomeFloat = float.MinValue / 2'  	SomeInt32 = (int.MaxValue / 3) * 2'  	SomeString = "abcdefghijklmnopqrstuvwxyz"'  	Eof = "EOF"  };  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestReadExt,The following statement contains a magic number: hasValue = Extensible.TryGetValue<float> (small' 1000' out val);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Extensible.AppendValue<float> (obj' 3' SOME_VALUE);  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (5' raw.Length' "Extension Length");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual ((3 << 3) | 5' raw [0]' "Prefix (3 Fixed32)");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual ((3 << 3) | 5' raw [0]' "Prefix (3 Fixed32)");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual ((3 << 3) | 5' raw [0]' "Prefix (3 Fixed32)");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (tmp [1]' raw [2]' "Float32 Byte 1");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (tmp [2]' raw [3]' "Float32 Byte 2");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (tmp [2]' raw [3]' "Float32 Byte 2");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (tmp [3]' raw [4]' "Float32 Byte 3");  
Magic Number,Examples,Extensibility,C:\repos\CamTechConsultants_protobuf-net\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.AreEqual (tmp [3]' raw [4]' "Float32 Byte 3");  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestPartialWithGuid,The following statement contains a magic number: Assert.AreEqual (21' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestPartialWithGuid,The following statement contains a magic number: Assert.AreEqual (21' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.AreEqual (21' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.AreEqual (3' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.AreEqual (21' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.AreEqual (3' Measure (user));  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestNonEmptyGuid,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	Serializer.Serialize (ms' foo);  	Assert.AreEqual (20' ms.Length);  	ms.Position = 0;  	GuidData clone = Serializer.Deserialize<GuidData> (ms);  	Assert.AreEqual (foo.Bar' clone.Bar);  }  
Magic Number,Examples,GuidTests,C:\repos\CamTechConsultants_protobuf-net\Examples\GuidTests.cs,TestNonEmptyGuid,The following statement contains a magic number: Assert.AreEqual (20' ms.Length);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (4' clone.Dictionary.Count' caption);  	Assert.AreEqual ("a"' clone.Dictionary [1]' caption);  	Assert.AreEqual ("b"' clone.Dictionary [2]' caption);  	Assert.AreEqual ("c"' clone.Dictionary [3]' caption);  	Assert.AreEqual ("d"' clone.Dictionary [4]' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (4' clone.Dictionary.Count' caption);  	Assert.AreEqual ("a"' clone.Dictionary [1]' caption);  	Assert.AreEqual ("b"' clone.Dictionary [2]' caption);  	Assert.AreEqual ("c"' clone.Dictionary [3]' caption);  	Assert.AreEqual ("d"' clone.Dictionary [4]' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (4' clone.Dictionary.Count' caption);  	Assert.AreEqual ("a"' clone.Dictionary [1]' caption);  	Assert.AreEqual ("b"' clone.Dictionary [2]' caption);  	Assert.AreEqual ("c"' clone.Dictionary [3]' caption);  	Assert.AreEqual ("d"' clone.Dictionary [4]' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (4' clone.Dictionary.Count' caption);  	Assert.AreEqual ("a"' clone.Dictionary [1]' caption);  	Assert.AreEqual ("b"' clone.Dictionary [2]' caption);  	Assert.AreEqual ("c"' clone.Dictionary [3]' caption);  	Assert.AreEqual ("d"' clone.Dictionary [4]' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.AreEqual (4' clone.Dictionary.Count' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.AreEqual ("b"' clone.Dictionary [2]' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.AreEqual ("c"' clone.Dictionary [3]' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.AreEqual ("d"' clone.Dictionary [4]' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4  	}' clone.List' caption);  	ms.Position = 0;  	try {  		model.Deserialize (ms' clone' null);  		// this is append!  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3'  		4'  		1'  		2'  		3'  		4  	}' clone.List' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3'  	4'  	1'  	2'  	3'  	4  }' clone.List' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.HashSet.Count' caption);  	Assert.IsTrue (clone.HashSet.Contains (1)' caption);  	Assert.IsTrue (clone.HashSet.Contains (2)' caption);  	Assert.IsTrue (clone.HashSet.Contains (3)' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.HashSet.Count' caption);  	Assert.IsTrue (clone.HashSet.Contains (1)' caption);  	Assert.IsTrue (clone.HashSet.Contains (2)' caption);  	Assert.IsTrue (clone.HashSet.Contains (3)' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.HashSet.Count' caption);  	Assert.IsTrue (clone.HashSet.Contains (1)' caption);  	Assert.IsTrue (clone.HashSet.Contains (2)' caption);  	Assert.IsTrue (clone.HashSet.Contains (3)' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.AreEqual (3' clone.HashSet.Count' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.IsTrue (clone.HashSet.Contains (2)' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.IsTrue (clone.HashSet.Contains (3)' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedSet' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedSet' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3  }' clone.SortedSet' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3  }' clone.SortedSet' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  	Assert.AreEqual ("a"' clone.SortedDictionary [1]' caption);  	Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  	Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedDictionary.Keys' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  	Assert.AreEqual ("a"' clone.SortedDictionary [1]' caption);  	Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  	Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedDictionary.Keys' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  	Assert.AreEqual ("a"' clone.SortedDictionary [1]' caption);  	Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  	Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedDictionary.Keys' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  	Assert.AreEqual ("a"' clone.SortedDictionary [1]' caption);  	Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  	Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedDictionary.Keys' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	try {  		model.Serialize (ms' obj);  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":serialize"' ex);  	}  	ms.Position = 0;  	T clone;  	try {  		clone = (T)model.Deserialize (ms' null' typeof(T));  	}  	catch (Exception ex) {  		throw new ProtoException (caption + ":deserialize"' ex);  	}  	Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  	Assert.AreEqual ("a"' clone.SortedDictionary [1]' caption);  	Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  	Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  	AssertSequence (new[] {  		1'  		2'  		3  	}' clone.SortedDictionary.Keys' caption);  }  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.AreEqual (3' clone.SortedDictionary.Count' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.AreEqual ("b"' clone.SortedDictionary [2]' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.AreEqual ("c"' clone.SortedDictionary [3]' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3  }' clone.SortedDictionary.Keys' caption);  
Magic Number,Examples,ImmutableCollections,C:\repos\CamTechConsultants_protobuf-net\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: AssertSequence (new[] {  	1'  	2'  	3  }' clone.SortedDictionary.Keys' caption);  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild {  	ChildProperty = 123'  	ParentProperty = 456'  	RootProperty = 789  };  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild {  	ChildProperty = 123'  	ParentProperty = 456'  	RootProperty = 789  };  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild {  	ChildProperty = 123'  	ParentProperty = 456'  	RootProperty = 789  };  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild (789' 456' 123);  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild (789' 456' 123);  
Magic Number,Examples,InheritanceMidLevel,C:\repos\CamTechConsultants_protobuf-net\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild (789' 456' 123);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckIndividually (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.AreEqual (8' CheckStreaming (2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: InheritanceMidLevel.CheckParent (c' list [2]);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: InheritanceMidLevel.CheckParent (c' list [2]);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: InheritanceMidLevel.CheckParent (c' list [2]);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Fixed32);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: InheritanceMidLevel.CheckChild (c' list [2]);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 3);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: InheritanceMidLevel.CheckChild (c' list [2]);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' a = InheritanceMidLevel.CreateChild (123' 456' 789)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' b = InheritanceMidLevel.CreateChild (100' 200' 300)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild> (ms' c = InheritanceMidLevel.CreateChild (400' 500' 600)' PrefixStyle.Base128' 0);  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Assert.AreEqual (3' list.Count' "Count");  
Magic Number,Examples,ItemsWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: InheritanceMidLevel.CheckChild (c' list [2]);  
Magic Number,Examples,ListsWithInheritance,C:\repos\CamTechConsultants_protobuf-net\Examples\ListsWithInheritance.cs,TestBasicRoundtripViaDataClass,The following statement contains a magic number: Assert.AreEqual (3' clone.Parties.Count);  
Magic Number,Examples,ListsWithInheritance,C:\repos\CamTechConsultants_protobuf-net\Examples\ListsWithInheritance.cs,TestBasicRoundtripViaDataClass,The following statement contains a magic number: Assert.AreEqual (typeof(Creditor)' clone.Parties [2].GetType ());  
Magic Number,Examples,ListsWithInheritance,C:\repos\CamTechConsultants_protobuf-net\Examples\ListsWithInheritance.cs,TestBasicRoundtripOfNakedList,The following statement contains a magic number: Assert.AreEqual (3' clone.Count);  
Magic Number,Examples,ListsWithInheritance,C:\repos\CamTechConsultants_protobuf-net\Examples\ListsWithInheritance.cs,TestBasicRoundtripOfNakedList,The following statement contains a magic number: Assert.AreEqual (typeof(Creditor)' clone [2].GetType ());  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.AreEqual (4' clone.Count);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.IsTrue (data [2].SequenceEqual (clone [2]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.IsTrue (data [2].SequenceEqual (clone [2]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.IsTrue (data [3].SequenceEqual (clone [3]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.IsTrue (data [3].SequenceEqual (clone [3]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.AreEqual (3' clone.Length);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.IsTrue (data [2].SequenceEqual (clone [2]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.IsTrue (data [2].SequenceEqual (clone [2]));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (item' 0x22' 07' 01' 02' 03' 04' 05' 0xE8' 07));  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyListDeserializesAsNull,The following statement contains a magic number: item.ItemsNoDefault.Add (123);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyListDeserializesAsNull,The following statement contains a magic number: Assert.AreEqual (123' clone.ItemsNoDefault [0]);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyListDeserializesAsEmpty,The following statement contains a magic number: item.ListNoDefault.Add (123);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyListDeserializesAsEmpty,The following statement contains a magic number: Assert.AreEqual (123' clone.ListNoDefault [0]);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyArrayDeserializesAsNull,The following statement contains a magic number: item.ItemArray = new int[1] {  	123  };  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyArrayDeserializesAsNull,The following statement contains a magic number: Assert.AreEqual (123' clone.ItemArray [0]);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyArrayDeserializesAsEmpty,The following statement contains a magic number: item.ItemArray = new int[1] {  	123  };  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyArrayDeserializesAsEmpty,The following statement contains a magic number: Assert.AreEqual (123' clone.ItemArray [0]);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyCustomDeserializesAsNull,The following statement contains a magic number: item.Custom.Add (123);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,UnpackedNullOrEmptyCustomDeserializesAsNull,The following statement contains a magic number: Assert.AreEqual (123' item.Custom.Single ());  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyCustomDeserializesAsEmpty,The following statement contains a magic number: item.Custom.Add (123);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,PackedEmptyCustomDeserializesAsEmpty,The following statement contains a magic number: Assert.AreEqual (123' item.Custom.Single ());  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestNonEmtpyBasicListOfEntity,The following statement contains a magic number: Assert.AreEqual (2' clone.Count);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestNonEmptyMyListOfEntity,The following statement contains a magic number: Assert.AreEqual (2' clone.Count);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestCompositeDictionary,The following statement contains a magic number: Assert.AreEqual (3' clone.Stuff.Count);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,TestCompositeDictionary,The following statement contains a magic number: Assert.AreEqual (123' clone.Stuff ["abc"].Value);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,CheckNakedLinkedListCanRoundtrip,The following statement contains a magic number: Assert.AreEqual (2' clone.Count);  
Magic Number,Examples,ListTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ListTests.cs,CheckWrappedLinkedListCanRoundtrip,The following statement contains a magic number: Assert.AreEqual (2' clone.Items.Count);  
Magic Number,Examples,MultiTypesWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	WriteNext (ms' 123);  	WriteNext (ms' new Person {  		Name = "Fred"  	});  	WriteNext (ms' "abc");  	WriteNext (ms' new Address {  		Line1 = "12 Lamb Lane"  	});  	ms.Position = 0;  	Assert.AreEqual (123' ReadNext (ms));  	Assert.AreEqual ("Fred"' ((Person)ReadNext (ms)).Name);  	Assert.AreEqual ("abc"' ReadNext (ms));  	Assert.AreEqual ("12 Lamb Lane"' ((Address)ReadNext (ms)).Line1);  	Assert.IsNull (ReadNext (ms));  }  
Magic Number,Examples,MultiTypesWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	WriteNext (ms' 123);  	WriteNext (ms' new Person {  		Name = "Fred"  	});  	WriteNext (ms' "abc");  	WriteNext (ms' new Address {  		Line1 = "12 Lamb Lane"  	});  	ms.Position = 0;  	Assert.AreEqual (123' ReadNext (ms));  	Assert.AreEqual ("Fred"' ((Person)ReadNext (ms)).Name);  	Assert.AreEqual ("abc"' ReadNext (ms));  	Assert.AreEqual ("12 Lamb Lane"' ((Address)ReadNext (ms)).Line1);  	Assert.IsNull (ReadNext (ms));  }  
Magic Number,Examples,MultiTypesWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: WriteNext (ms' 123);  
Magic Number,Examples,MultiTypesWithLengthPrefix,C:\repos\CamTechConsultants_protobuf-net\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.AreEqual (123' ReadNext (ms));  
Magic Number,Examples,NetObjectOptions,C:\repos\CamTechConsultants_protobuf-net\Examples\NetObjectOptions.cs,GetString,The following statement contains a magic number: return new string ('a'' 5);  
Magic Number,Examples,NetObjectOptions,C:\repos\CamTechConsultants_protobuf-net\Examples\NetObjectOptions.cs,TestUnknownDerivedType,The following statement contains a magic number: Assert.AreEqual (123' d.Bar);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero> (5F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero> (5F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive> (0F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField> (0F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero> (0F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero> (5F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero> (0F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero> (5F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive> (0F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive> (3F' 5);  
Magic Number,Examples,OptionalData,C:\repos\CamTechConsultants_protobuf-net\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive> (5F' 5);  
Magic Number,Examples,PEVerify,C:\repos\CamTechConsultants_protobuf-net\Examples\PEVerify.cs,AssertValid,The following statement contains a magic number: using (Process proc = Process.Start (exePath' path)) {  	if (proc.WaitForExit (10000)) {  		Assert.AreEqual (0' proc.ExitCode' path);  		return proc.ExitCode == 0;  	}  	else {  		proc.Kill ();  		throw new TimeoutException ();  	}  }  
Magic Number,Examples,PEVerify,C:\repos\CamTechConsultants_protobuf-net\Examples\PEVerify.cs,AssertValid,The following statement contains a magic number: if (proc.WaitForExit (10000)) {  	Assert.AreEqual (0' proc.ExitCode' path);  	return proc.ExitCode == 0;  }  else {  	proc.Kill ();  	throw new TimeoutException ();  }  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.AreEqual (5' clone.SubData.Count' "clone Count");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.AreEqual (5' clone.Wrapper.SubData.Count' "clone Count");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableStandard,The following statement contains a magic number: Assert.AreEqual (5' clone.Wrapper.SubData.Count' "clone Count");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableStandard,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableStandard,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableStandard,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,TestEnumerableStandard,The following statement contains a magic number: Assert.AreEqual (1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum' "clone Sum");  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.AreEqual (830' orderCount);  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.AreEqual (2155' lineCount);  
Magic Number,Examples,Pipeline,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.AreEqual (51317' unitCount);  
Magic Number,Examples,EnumData,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 2;  
Magic Number,Examples,EnumData,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 3;  
Magic Number,Examples,EnumData,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 4;  
Magic Number,Examples,EnumData,C:\repos\CamTechConsultants_protobuf-net\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 5;  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.AreEqual (2' len' "0 len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.AreEqual (4' len' "+1 len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.AreEqual (4' len' "-1 len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestTimeSpan36Hours,The following statement contains a magic number: Assert.AreEqual (6' len' "+36 hour len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestTimeSpanMinus3Hours,The following statement contains a magic number: Assert.AreEqual (6' len' "-3 hour len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestTimeSpanMinValue,The following statement contains a magic number: Assert.AreEqual (6' len' "min len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestTimeSpanMaxValue,The following statement contains a magic number: Assert.AreEqual (6' len' "max len");  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestValueTimeUnit,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (4' 0' 0)' ts.HowLong);  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestByteTwos,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Assert.AreEqual (value' TestByteTwos (value));  	value <<= 1;  }  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestSByteTwos,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	Assert.AreEqual (value' TestSByteTwos (value));  	value <<= 1;  }  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestSByteTwos,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	Assert.AreEqual (value' TestSByteTwos (value));  	value <<= 1;  }  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestSByteZigZag,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	Assert.AreEqual (value' TestSByteZigZag (value));  	value <<= 1;  }  
Magic Number,Examples,PrimativeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,TestSByteZigZag,The following statement contains a magic number: for (int i = 0; i < 7; i++) {  	Assert.AreEqual (value' TestSByteZigZag (value));  	value <<= 1;  }  
Magic Number,Examples,Primatives,C:\repos\CamTechConsultants_protobuf-net\Examples\Primatives.cs,Primatives,The following statement contains a magic number: TestDateTime = new DateTime (2008' 1' 1);  
Magic Number,Examples,PrimativeSerializationTests,C:\repos\CamTechConsultants_protobuf-net\Examples\PrimativeSerializationTests.cs,TestInt32,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	int next = rand.Next (int.MinValue' int.MaxValue);  	Assert.AreEqual (next' Serializer.DeepClone (next)' next.ToString ());  }  
Magic Number,Examples,PrimativeSerializationTests,C:\repos\CamTechConsultants_protobuf-net\Examples\PrimativeSerializationTests.cs,TestString,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	string next = rand.Next (int.MinValue' int.MaxValue).ToString ();  	Assert.AreEqual (next' Serializer.DeepClone (next)' next.ToString ());  }  
Magic Number,Examples,PrimativeSerializationTests,C:\repos\CamTechConsultants_protobuf-net\Examples\PrimativeSerializationTests.cs,TestDouble,The following statement contains a magic number: for (int i = 0; i < 10000; i++) {  	double next = rand.NextDouble ();  	Assert.AreEqual (next' Serializer.DeepClone (next)' next.ToString ());  }  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetNoSetter (123);  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetSetterWeDontWantToInvoke (456);  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetterWithUnrelatedSet = 789;  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.AreEqual (123' clone.NoSetter);  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.AreEqual (456' clone.SetterWeDontWantToInvoke);  
Magic Number,Examples,ShadowSetters,C:\repos\CamTechConsultants_protobuf-net\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.AreEqual (789' clone.SetterWithUnrelatedSet);  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,TimeStupidlyComplexModel,The following statement contains a magic number: TimeModel<StupidlyComplexModel> (5' Test);  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,TimeSimpleModel,The following statement contains a magic number: TimeModel<SimpleModel> (100);  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (123' orig.Value500.Value' test + ":orig:Value500.Value");  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (123' clone.Value500.Value' test + ":clone:Value500.Value");  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (456' orig.Value501.Value' test + ":orig:Value501.Value");  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (456' clone.Value501.Value' test + ":clone:Value501.Value");  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (123' clone500.Value' test + ":clone500.Value");  
Magic Number,Examples,StupidlyComplexModel,C:\repos\CamTechConsultants_protobuf-net\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.AreEqual (456' clone501.Value' test + ":clone501.Value");  
Magic Number,Examples,TagInference,C:\repos\CamTechConsultants_protobuf-net\Examples\TagInference.cs,RoundTripWithImplicitFields,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples,TraceError,C:\repos\CamTechConsultants_protobuf-net\Examples\TraceError.cs,TestTrace,The following statement contains a magic number: Assert.AreEqual (30' ms.Length);  
Magic Number,Examples,TraceError,C:\repos\CamTechConsultants_protobuf-net\Examples\TraceError.cs,TestTrace,The following statement contains a magic number: ms2.Write (buffer' 0' (int)ms.Length - 5);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (123' clone.Item1);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (2' clone.Item2.Length);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (2' clone.Item2 [0].Item2);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (3' clone.Item2 [0].Item3);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (4' clone.Item2 [0].Item4);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (5' clone.Item2 [0].Item5);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (6' clone.Item2 [0].Item6);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (7' clone.Item2 [0].Item7);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (9' clone.Item2 [1].Item1);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (10' clone.Item2 [1].Item2);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (11' clone.Item2 [1].Item3);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (12' clone.Item2 [1].Item4);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (13' clone.Item2 [1].Item5);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (14' clone.Item2 [1].Item6);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.AreEqual (15' clone.Item2 [1].Item7);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.AreEqual (2' clone.Count);  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [1].SequenceEqual (new[] {  	2'  	3  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [1].SequenceEqual (new[] {  	2'  	3  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [4].SequenceEqual (new[] {  	5'  	6'  	7  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [4].SequenceEqual (new[] {  	5'  	6'  	7  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [4].SequenceEqual (new[] {  	5'  	6'  	7  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.IsTrue (clone [4].SequenceEqual (new[] {  	5'  	6'  	7  }));  
Magic Number,Examples,Tuples,C:\repos\CamTechConsultants_protobuf-net\Examples\Tuples.cs,TestMonoKeyValuePair,The following statement contains a magic number: Assert.AreEqual (123' clone.Value.Foo);  
Magic Number,Examples,TypeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Type.cs,ShouldRoundtripTypeWithoutEvent,The following statement contains a magic number: Encoding.UTF8.GetBytes (s' 0' s.Length' expected' 2);  
Magic Number,Examples,TypeTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Type.cs,ShouldRoundtripTypeWithEvent,The following statement contains a magic number: Encoding.UTF8.GetBytes (s' 0' s.Length' expected' 2);  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check (model' null' 42' "Runtime");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check (model' null' 42' "CompileInPlace");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check (model.Compile ()' null' 42' "Compile");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check (model' ctx' 12345' "Runtime");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check (model' ctx' 12345' "CompileInPlace");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check (model.Compile ()' ctx' 12345' "Compile");  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: try {  	CanHazFactory orig = new CanHazFactory {  		Foo = 123'  		Bar = 456  	}' clone;  	using (var ms = new MemoryStream ()) {  		model.Serialize (ms' orig' ctx);  		ms.Position = 0;  		clone = (CanHazFactory)model.Deserialize (ms' null' typeof(CanHazFactory)' ctx);  	}  	Assert.AreNotSame (orig' clone);  	Assert.AreEqual (123' orig.Foo' caption);  	Assert.AreEqual (456' orig.Bar' caption);  	Assert.AreEqual (0' orig.MagicNumber' caption);  	Assert.AreEqual (123' clone.Foo' caption);  	Assert.AreEqual (456' clone.Bar' caption);  	Assert.AreEqual (magicNumber' clone.MagicNumber' caption);  }  catch {  	Debug.WriteLine (caption);  	throw;  }  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.AreEqual (123' orig.Foo' caption);  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.AreEqual (456' orig.Bar' caption);  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.AreEqual (123' clone.Foo' caption);  
Magic Number,Examples,TypeFactory,C:\repos\CamTechConsultants_protobuf-net\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.AreEqual (456' clone.Bar' caption);  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldData {  	Value = 123  }' GetBytes (new Int32Simple {  	Value = 123  }))' "Int32");  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldData {  	Value = 123  }' GetBytes (new Int32Simple {  	Value = 123  }))' "Int32");  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (123' Serializer.DeepClone (new FieldData (123)).Value);  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (123' Serializer.DeepClone (new FieldData (123)).Value);  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldData {  	Value = 123.45  }' GetBytes (new DoubleSimple {  	Value = 123.45  }))' "Double");  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldData {  	Value = 123.45  }' GetBytes (new DoubleSimple {  	Value = 123.45  }))' "Double");  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.AreEqual (123.45' Serializer.DeepClone (new FieldData (123.45)).Value);  
Magic Number,Examples,ValueWrapperTests,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.AreEqual (123.45' Serializer.DeepClone (new FieldData (123.45)).Value);  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldDataViaNullable {  	Value = 123  }' GetBytes (new Int32Simple {  	Value = 123  }))' "Int32");  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldDataViaNullable {  	Value = 123  }' GetBytes (new Int32Simple {  	Value = 123  }))' "Int32");  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (123' Serializer.DeepClone (new FieldDataViaNullable (123)).Value);  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (123' Serializer.DeepClone (new FieldDataViaNullable (123)).Value);  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldDataViaNullable {  	Value = 123.45  }' GetBytes (new DoubleSimple {  	Value = 123.45  }))' "Double");  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new FieldDataViaNullable {  	Value = 123.45  }' GetBytes (new DoubleSimple {  	Value = 123.45  }))' "Double");  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.AreEqual (123.45' Serializer.DeepClone (new FieldDataViaNullable (123.45)).Value);  
Magic Number,Examples,ValueWrapperTestsViaNullable,C:\repos\CamTechConsultants_protobuf-net\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.AreEqual (123.45' Serializer.DeepClone (new FieldDataViaNullable (123.45)).Value);  
Magic Number,Examples,WcfProtoBridge,C:\repos\CamTechConsultants_protobuf-net\Examples\WcfProtoBridge.cs,TestBasicType,The following statement contains a magic number: Assert.AreEqual (123' clone.Bar);  
Magic Number,Examples,WcfProtoBridge,C:\repos\CamTechConsultants_protobuf-net\Examples\WcfProtoBridge.cs,TestListType,The following statement contains a magic number: Assert.AreEqual (123' clone [0].Bar);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithStrings,The following statement contains a magic number: obj.Data [4] = "def";  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithStrings,The following statement contains a magic number: obj.Data [7] = "abc";  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data [0] = new SimpleData (5);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data [4] = new SimpleData (72);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data [4] = new SimpleData (72);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data [7] = new SimpleData (72);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data [7] = new SimpleData (72);  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,RoundtripDictionary,The following statement contains a magic number: lookup [4] = "def";  
Magic Number,Examples.Dictionary,DictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,RoundtripDictionary,The following statement contains a magic number: lookup [7] = "abc";  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserialize,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var data = new Dictionary<string' int> {  		{  			"abc"'  			123  		}  	};  	Serializer.Serialize (ms' data);  	ms.Position = 0;  	var clone = Serializer.Deserialize<Dictionary<string' int>> (ms);  	Assert.IsNotNull (clone);  	Assert.AreEqual (1' clone.Count);  	Assert.AreEqual (123' clone ["abc"]);  }  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserialize,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var data = new Dictionary<string' int> {  		{  			"abc"'  			123  		}  	};  	Serializer.Serialize (ms' data);  	ms.Position = 0;  	var clone = Serializer.Deserialize<Dictionary<string' int>> (ms);  	Assert.IsNotNull (clone);  	Assert.AreEqual (1' clone.Count);  	Assert.AreEqual (123' clone ["abc"]);  }  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserialize,The following statement contains a magic number: Assert.AreEqual (123' clone ["abc"]);  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserializeViaInterface,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var data = new Dictionary<string' int> {  		{  			"abc"'  			123  		}  	};  	Serializer.Serialize (ms' data);  	ms.Position = 0;  	var clone = Serializer.Deserialize<IDictionary<string' int>> (ms);  	Assert.IsNotNull (clone);  	Assert.AreEqual (1' clone.Count);  	Assert.AreEqual (123' clone ["abc"]);  }  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserializeViaInterface,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var data = new Dictionary<string' int> {  		{  			"abc"'  			123  		}  	};  	Serializer.Serialize (ms' data);  	ms.Position = 0;  	var clone = Serializer.Deserialize<IDictionary<string' int>> (ms);  	Assert.IsNotNull (clone);  	Assert.AreEqual (1' clone.Count);  	Assert.AreEqual (123' clone ["abc"]);  }  
Magic Number,Examples.Dictionary,EmptyDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserializeViaInterface,The following statement contains a magic number: Assert.AreEqual (123' clone ["abc"]);  
Magic Number,Examples.Dictionary,NestedDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,CheckNested,The following statement contains a magic number: Assert.AreEqual (2' data.Keys.Count' message);  
Magic Number,Examples.Dictionary,NestedDictionaryTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DictionaryTests.cs,CheckNested,The following statement contains a magic number: Assert.AreEqual (2' inner.Keys.Count' message);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestEnumNameValueMapped,The following statement contains a magic number: CheckValue (SomeEnum.ChangeBoth' 0x08' 92);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestEnumNameMapped,The following statement contains a magic number: CheckValue (SomeEnum.ChangeName' 0x08' 03);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestEnumValueMapped,The following statement contains a magic number: CheckValue (SomeEnum.ChangeValue' 0x08' 19);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestEnumNoMap,The following statement contains a magic number: CheckValue (SomeEnum.LeaveAlone' 0x08' 22);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestNegEnumnotDefinedNeg,The following statement contains a magic number: TestNegEnum ((NegEnum)(-2));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,TestNegEnumnotDefinedPos,The following statement contains a magic number: TestNegEnum ((NegEnum)2);  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNullableContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNullableContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNoContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNoContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNullableNoContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,EnumTests,C:\repos\CamTechConsultants_protobuf-net\Examples\EnumTests.cs,RoundTripTopLevelNullableNoContract,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (value' 8' 3));  
Magic Number,Examples.DesignIdeas,InheritanceTests,C:\repos\CamTechConsultants_protobuf-net\Examples\DesignIdeas\Inheritance.cs,InheritanceCheckBytesWrongOrder,The following statement contains a magic number: Assert.AreEqual (12345' clone.Test);  
Magic Number,Examples.Issues,Issue217,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue217.cs,Execute,The following statement contains a magic number: Assert.AreEqual (clone.Strings [2]' "bar");  
Magic Number,Examples.Issues,Issue331,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue331.cs,CheckModel,The following statement contains a magic number: Assert.AreEqual (2' clone.RootNode.ChildNodes.Count);  
Magic Number,Examples.Issues,Issue331,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue331.cs,CheckModel,The following statement contains a magic number: Assert.AreEqual (2' clone.RootNode.ChildNodes [0].Id);  
Magic Number,Examples.Issues,Issue331,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue331.cs,CheckModel,The following statement contains a magic number: Assert.AreEqual (3' clone.RootNode.ChildNodes [1].Id);  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Queue.Enqueue (2);  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Dictionary.AddOrUpdate (2' "def"' (x' y) => y);  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Stack.Push (2);  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.AreEqual (2' data.Bag.Count' caption + ":Bag.Count");  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.AreEqual (2' data.Dictionary.Count' caption + ":Dictionary.Count");  
Magic Number,Examples.Issues,Issue354,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.IsTrue (data.Dictionary.TryGetValue (2' out s)' caption + ":Dictionary - try 2");  
Magic Number,Examples.Issues,Issue287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue287.cs,ExecuteNestedIgnoreList,The following statement contains a magic number: Assert.AreEqual (clone.Count' 2);  
Magic Number,Examples.Issues,Issue287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue287.cs,ExecuteNestedIgnoreListWithMember,The following statement contains a magic number: Assert.AreEqual (clone.Count' 2);  
Magic Number,Examples.Issues,Issue287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue287.cs,ExecuteNestedIgnoreListWithMember,The following statement contains a magic number: Assert.AreEqual (clone [0].Count' 2);  
Magic Number,Examples.Issues,Issue287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue287.cs,ExecuteNestedIgnoreListWithMember,The following statement contains a magic number: Assert.AreEqual (clone [1].Count' 2);  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: for (var i = 0; i < 50000; i++) {  	tasks.Add (Task.Factory.StartNew (() => serialize (new TestClass {  		Id = Guid.NewGuid ().ToString ()  	})));  }  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: Assert.LessOrEqual (1' 2' "because I always get this backwards");  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: Assert.LessOrEqual (model.LockCount' 50);  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: for (var i = 0; i < 50000; i++) {  	tasks.Add (Task.Factory.StartNew (() => serialize (Guid.NewGuid ().ToString ())));  }  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: Assert.LessOrEqual (1' 2' "because I always get this backwards");  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: Assert.LessOrEqual (model.LockCount' 50);  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: for (var i = 0; i < 50000; i++) {  	tasks.Add (Task.Factory.StartNew (state => serialize (state.ToString ())' d));  }  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Assert.LessOrEqual (1' 2' "because I always get this backwards");  
Magic Number,Examples.Issues,Issue367,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Assert.LessOrEqual (model.LockCount' 50);  
Magic Number,Examples.Issues,SO11896228,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11896228.cs,AnonymousTypesCanRoundTrip,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples.Issues,SO11896228,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11896228.cs,AnonymousTypesAreEquivalent_Auto,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples.Issues,SO11896228,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11896228.cs,TestAnonTypeEquiv,The following statement contains a magic number: Assert.AreEqual (123' clone.X' caption);  
Magic Number,Examples.Issues,Issue124,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.AreEqual (2' clone.Color.R);  
Magic Number,Examples.Issues,Issue124,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.AreEqual (3' clone.Color.G);  
Magic Number,Examples.Issues,Issue124,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.AreEqual (4' clone.Color.B);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: model.Add (typeof(IntArray)' true) [2].OverwriteList = true;  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: model.Add (typeof(IntArray)' true) [2].OverwriteList = false;  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Runtime:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue152,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence (clone.List' "Compile:List"' 3' 4' 8' 9' 10);  
Magic Number,Examples.Issues,Issue184,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue184.cs,CantSubclassLists,The following statement contains a magic number: model.Add (typeof(IList<int>)' false).AddSubType (5' typeof(List<int>));  
Magic Number,Examples.Issues,Issue184,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue184.cs,ListAsSubclass,The following statement contains a magic number: m.Add (typeof(IMobileObject)' false).AddSubType (1' typeof(A)).AddSubType (2' typeof(MobileList<int>));  
Magic Number,Examples.Issues,C,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue185.cs,PopulateRun,The following statement contains a magic number: Unknown = new O (43);  
Magic Number,Examples.Issues,Issue185,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue185.cs,Test,The following statement contains a magic number: Assert.AreEqual (43' c.Unknown.N' "braindead");  
Magic Number,Examples.Issues,Issue199,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue199.cs,Test,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	without.Serialize (ms' obj);  	Assert.AreEqual (2' ms.Length' message);  }  
Magic Number,Examples.Issues,Issue199,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue199.cs,Test,The following statement contains a magic number: Assert.AreEqual (2' ms.Length' message);  
Magic Number,Examples.Issues,Issue202,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue202.cs,Execute,The following statement contains a magic number: Assert.AreEqual (18' bpp.Length);  
Magic Number,Examples.Issues,Issue203,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue203.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	SerializeClass m = new SerializeClass ();  	var u = new SomeCollectionItem ("ABC");  	m.SomeList = new SomeCollection ();  	m.SomeList.Add (u);  	m.SomeList.Add (u);  	var clone = Serializer.DeepClone (m);  	Assert.AreNotSame (m' clone);  }  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32List = new List<int?> (new int?[] {  	2'  	3  });  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32List = new List<int?> (new int?[] {  	2'  	3  });  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32Array = new int?[] {  	4'  	5  };  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32Array = new int?[] {  	4'  	5  };  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32List = new List<int?> (new int?[] {  	2'  	null'  	3  });  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32List = new List<int?> (new int?[] {  	2'  	null'  	3  });  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32Array = new int?[] {  	4'  	null'  	5'  	null  };  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32Array = new int?[] {  	4'  	null'  	5'  	null  };  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,GetModelWithSupportForNulls,The following statement contains a magic number: metaType [2].SupportNull = true;  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,GetModelWithSupportForNulls,The following statement contains a magic number: metaType [3].SupportNull = true;  
Magic Number,Examples.Issues,Issue243,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue243.cs,GetModelWithSupportForNulls,The following statement contains a magic number: metaType [4].SupportNull = true;  
Magic Number,Examples.Issues,Issue26,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.AreEqual (2' clone.Stations.Count' "Count");  
Magic Number,Examples.Issues,Issue26,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.AreEqual (2' clone.Stations [0].Ticket);  
Magic Number,Examples.Issues,Issue26,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.AreEqual (3' clone.Stations [1].Number);  
Magic Number,Examples.Issues,Issue26,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.AreEqual (4' clone.Stations [1].Ticket);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: children.Add (new Node<int> ("abc/def"' 2));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: children.Add (new Node<int> ("abc/ghi"' 3));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (2' tree.getChildren ().Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (2' children.Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (2' children [0].Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.AreEqual (3' children [1].Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,Init,The following statement contains a magic number: RuntimeTypeModel.Default.Add (typeof(Node<int>)' true).AddSubType (4' typeof(Node<int>.RootNode));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,Init,The following statement contains a magic number: RuntimeTypeModel.Default.Add (typeof(Node<MyDto>)' true).AddSubType (4' typeof(Node<MyDto>.RootNode));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,Init,The following statement contains a magic number: RuntimeTypeModel.Default.Add (typeof(Node<SomeNewType>)' true).AddSubType (4' typeof(Node<SomeNewType>.RootNode));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: children.Add (new Node<MyDto> ("abc/def"' new MyDto {  	Value = 2  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: children.Add (new Node<MyDto> ("abc/ghi"' new MyDto {  	Value = 3  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.AreEqual (2' tree.getChildren ().Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.AreEqual (2' children.Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.AreEqual (2' children [0].Value.Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.AreEqual (3' children [1].Value.Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: children.Add (new Node<List<MyDto>> ("abc/def"' new List<MyDto> {  	new MyDto {  		Value = 2  	}  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: children.Add (new Node<List<MyDto>> ("abc/ghi"' new List<MyDto> {  	new MyDto {  		Value = 3  	}  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Assert.AreEqual (2' tree.getChildren ().Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Assert.AreEqual (2' children.Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Assert.AreEqual (2' children [0].Value.Single ().Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Assert.AreEqual (3' children [1].Value.Single ().Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: children.Add (new Node<SomeNewType> ("abc/def"' new SomeNewType {  	Items =  {  		new MyDto {  			Value = 2  		}  	}  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: children.Add (new Node<SomeNewType> ("abc/ghi"' new SomeNewType {  	Items =  {  		new MyDto {  			Value = 3  		}  	}  }));  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.AreEqual (2' tree.getChildren ().Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.AreEqual (2' children.Count);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.AreEqual (2' children [0].Value.Items.Single ().Value);  
Magic Number,Examples.Issues,Issue297,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.AreEqual (3' children [1].Value.Items.Single ().Value);  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	string key;  	CacheItem ci = new CacheItem {  		Id = rand.Next (10000)'  		AnotherNumber = rand.Next (10000)  	};  	while (htCacheItems.ContainsKey (key = NextString (rand))) {  	}  	htCacheItems.Add (key' ci);  	for (int j = 0; j < 100; j++) {  		while (ci.Data.ContainsKey (key = NextString (rand))) {  		}  		ci.Data.Add (key' new CacheItemValue {  			Key = key'  			Value = (float)rand.NextDouble ()  		});  		int tail = rand.Next (1' 50);  		ListNode node = null;  		while (tail-- > 0) {  			node = new ListNode {  				Tail = node'  				Head = rand.NextDouble ()  			};  		}  		ci.Nodes = node;  	}  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	string key;  	CacheItem ci = new CacheItem {  		Id = rand.Next (10000)'  		AnotherNumber = rand.Next (10000)  	};  	while (htCacheItems.ContainsKey (key = NextString (rand))) {  	}  	htCacheItems.Add (key' ci);  	for (int j = 0; j < 100; j++) {  		while (ci.Data.ContainsKey (key = NextString (rand))) {  		}  		ci.Data.Add (key' new CacheItemValue {  			Key = key'  			Value = (float)rand.NextDouble ()  		});  		int tail = rand.Next (1' 50);  		ListNode node = null;  		while (tail-- > 0) {  			node = new ListNode {  				Tail = node'  				Head = rand.NextDouble ()  			};  		}  		ci.Nodes = node;  	}  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	string key;  	CacheItem ci = new CacheItem {  		Id = rand.Next (10000)'  		AnotherNumber = rand.Next (10000)  	};  	while (htCacheItems.ContainsKey (key = NextString (rand))) {  	}  	htCacheItems.Add (key' ci);  	for (int j = 0; j < 100; j++) {  		while (ci.Data.ContainsKey (key = NextString (rand))) {  		}  		ci.Data.Add (key' new CacheItemValue {  			Key = key'  			Value = (float)rand.NextDouble ()  		});  		int tail = rand.Next (1' 50);  		ListNode node = null;  		while (tail-- > 0) {  			node = new ListNode {  				Tail = node'  				Head = rand.NextDouble ()  			};  		}  		ci.Nodes = node;  	}  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	string key;  	CacheItem ci = new CacheItem {  		Id = rand.Next (10000)'  		AnotherNumber = rand.Next (10000)  	};  	while (htCacheItems.ContainsKey (key = NextString (rand))) {  	}  	htCacheItems.Add (key' ci);  	for (int j = 0; j < 100; j++) {  		while (ci.Data.ContainsKey (key = NextString (rand))) {  		}  		ci.Data.Add (key' new CacheItemValue {  			Key = key'  			Value = (float)rand.NextDouble ()  		});  		int tail = rand.Next (1' 50);  		ListNode node = null;  		while (tail-- > 0) {  			node = new ListNode {  				Tail = node'  				Head = rand.NextDouble ()  			};  		}  		ci.Nodes = node;  	}  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	string key;  	CacheItem ci = new CacheItem {  		Id = rand.Next (10000)'  		AnotherNumber = rand.Next (10000)  	};  	while (htCacheItems.ContainsKey (key = NextString (rand))) {  	}  	htCacheItems.Add (key' ci);  	for (int j = 0; j < 100; j++) {  		while (ci.Data.ContainsKey (key = NextString (rand))) {  		}  		ci.Data.Add (key' new CacheItemValue {  			Key = key'  			Value = (float)rand.NextDouble ()  		});  		int tail = rand.Next (1' 50);  		ListNode node = null;  		while (tail-- > 0) {  			node = new ListNode {  				Tail = node'  				Head = rand.NextDouble ()  			};  		}  		ci.Nodes = node;  	}  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int j = 0; j < 100; j++) {  	while (ci.Data.ContainsKey (key = NextString (rand))) {  	}  	ci.Data.Add (key' new CacheItemValue {  		Key = key'  		Value = (float)rand.NextDouble ()  	});  	int tail = rand.Next (1' 50);  	ListNode node = null;  	while (tail-- > 0) {  		node = new ListNode {  			Tail = node'  			Head = rand.NextDouble ()  		};  	}  	ci.Nodes = node;  }  
Magic Number,Examples.Issues,Issue62,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: for (int j = 0; j < 100; j++) {  	while (ci.Data.ContainsKey (key = NextString (rand))) {  	}  	ci.Data.Add (key' new CacheItemValue {  		Key = key'  		Value = (float)rand.NextDouble ()  	});  	int tail = rand.Next (1' 50);  	ListNode node = null;  	while (tail-- > 0) {  		node = new ListNode {  			Tail = node'  			Head = rand.NextDouble ()  		};  	}  	ci.Nodes = node;  }  
Magic Number,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The following statement contains a magic number: Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream.GetBuffer ()' 0' 5' ProtoBuf.PrefixStyle.Fixed32' out len32_1)' "len32 - buffer");  
Magic Number,Examples.Issues,Issue80,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue80.cs,Execute,The following statement contains a magic number: Assert.IsTrue (ProtoBuf.Serializer.TryReadLengthPrefix (textStream.GetBuffer ()' 0' 5' ProtoBuf.PrefixStyle.Base128' out len128_1)' "len128 - buffer");  
Magic Number,Examples.Issues,SO11080108,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream (buffer)) {  	int len = ProtoReader.DirectReadVarintInt32 (ms);  	var resp = (Response)model.Deserialize (ms' null' typeof(Response)' len);  	Assert.AreEqual (5' resp.Type);  	Assert.AreEqual (1' resp.v3dDelta.Count);  	Assert.AreEqual (12654' resp.v3dDelta [0].ask);  	Assert.AreEqual (1' resp.v3dDelta [0].askSize);  }  
Magic Number,Examples.Issues,SO11080108,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream (buffer)) {  	int len = ProtoReader.DirectReadVarintInt32 (ms);  	var resp = (Response)model.Deserialize (ms' null' typeof(Response)' len);  	Assert.AreEqual (5' resp.Type);  	Assert.AreEqual (1' resp.v3dDelta.Count);  	Assert.AreEqual (12654' resp.v3dDelta [0].ask);  	Assert.AreEqual (1' resp.v3dDelta [0].askSize);  }  
Magic Number,Examples.Issues,SO11080108,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: Assert.AreEqual (5' resp.Type);  
Magic Number,Examples.Issues,SO11080108,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: Assert.AreEqual (12654' resp.v3dDelta [0].ask);  
Magic Number,Examples.Issues,SO11317045,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]> {  	Enumerable.Range (0' 1999).Select (v => (byte)v).ToArray ()'  	Enumerable.Range (2000' 3999).Select (v => (byte)v).ToArray ()'  };  
Magic Number,Examples.Issues,SO11317045,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]> {  	Enumerable.Range (0' 1999).Select (v => (byte)v).ToArray ()'  	Enumerable.Range (2000' 3999).Select (v => (byte)v).ToArray ()'  };  
Magic Number,Examples.Issues,SO11317045,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]> {  	Enumerable.Range (0' 1999).Select (v => (byte)v).ToArray ()'  	Enumerable.Range (2000' 3999).Select (v => (byte)v).ToArray ()'  };  
Magic Number,Examples.Issues,SO11641262,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11641262.cs,Execute,The following statement contains a magic number: model.Add (typeof(FooData)' true).AddSubType (1' typeof(FooData<string>)).AddSubType (2' typeof(FooData<int>)).AddSubType (3' typeof(FooData<SomeOtherType>));  
Magic Number,Examples.Issues,SO11641262,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11641262.cs,Execute,The following statement contains a magic number: model.Add (typeof(FooData)' true).AddSubType (1' typeof(FooData<string>)).AddSubType (2' typeof(FooData<int>)).AddSubType (3' typeof(FooData<SomeOtherType>));  
Magic Number,Examples.Issues,SO11656439,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11656439.cs,CheckContractSubclass,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' list);  	Assert.Greater (2' 0' "sanity check:" + caption);  	Assert.Greater (ms.Length' 0' "data should be written:" + caption);  	ms.Position = 0;  	var clone = (MyContractList)model.Deserialize (ms' null' typeof(MyContractList));  	Assert.AreEqual (1' clone.Count' "count:" + caption);  	Assert.AreEqual ("abc"' clone [0]' "payload:" + caption);  }  
Magic Number,Examples.Issues,SO11656439,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11656439.cs,CheckContractSubclass,The following statement contains a magic number: Assert.Greater (2' 0' "sanity check:" + caption);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow)resp.Rows [1]).Evil = 2;  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow)resp.Rows [2]).Evil = 3;  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow)resp.Rows [2]).Evil = 3;  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' clone.Rows.Count);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (456' clone.Rows [0].Value);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (131415' clone.Rows [2].SomeId);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (131415' clone.Rows [2].SomeId);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' ((IDataRow)resp.Rows [1]).Evil);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' ((IDataRow)resp.Rows [2]).Evil);  
Magic Number,Examples.Issues,SO11730610,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' ((IDataRow)resp.Rows [2]).Evil);  
Magic Number,Examples.Issues,SO13162642,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13162642.cs,Execute,The following statement contains a magic number: using (var f = File.Create ("Data.protobuf")) {  	Serializer.Serialize<IEnumerable<DTO>> (f' GenerateData (1000000));  }  
Magic Number,Examples.Issues,SO13162642,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13162642.cs,Execute,The following statement contains a magic number: Serializer.Serialize<IEnumerable<DTO>> (f' GenerateData (1000000));  
Magic Number,Examples.Issues,SO13162642,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13162642.cs,ExecuteWorkaround,The following statement contains a magic number: using (var f = File.Create ("Data.protobuf")) {  	foreach (var obj in GenerateData (1000000)) {  		Serializer.SerializeWithLengthPrefix<DTO> (f' obj' PrefixStyle.Base128' Serializer.ListItemTag);  	}  }  
Magic Number,Examples.Issues,SO13162642,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13162642.cs,ExecuteWorkaround,The following statement contains a magic number: foreach (var obj in GenerateData (1000000)) {  	Serializer.SerializeWithLengthPrefix<DTO> (f' obj' PrefixStyle.Base128' Serializer.ListItemTag);  }  
Magic Number,Examples.Issues,SO13162642,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13162642.cs,GenerateData,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	// reduce to 1100 to use much less memory  	var dto = new DTO {  		Data = new byte[1101]  	};  	for (int j = 0; j < dto.Data.Length; j++) {  		// fill with data  		dto.Data [j] = (byte)(i + j);  	}  	yield return dto;  }  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (3' clone.Points.Count' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (2' clone.Points [0].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (3' clone.Points [1].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (4' clone.Points [1].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (5' clone.Points [2].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (5' clone.Points [2].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (6' clone.Points [2].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.AreEqual (6' clone.Points [2].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (3' clone.Points.Count' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (2' clone.Points [0].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (3' clone.Points [1].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (4' clone.Points [1].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (5' clone.Points [2].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (5' clone.Points [2].X' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (6' clone.Points [2].Y' caption);  
Magic Number,Examples.Issues,SO13275299,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.AreEqual (6' clone.Points [2].Y' caption);  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' obj1);  	ms.Position = 0;  	var clone1 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	ms.SetLength (0);  	model.Serialize (ms' obj2);  	ms.Position = 0;  	var clone2 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	Assert.AreEqual (2' clone1.Value);  	Assert.AreEqual (3' clone2.Value);  }  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' obj1);  	ms.Position = 0;  	var clone1 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	ms.SetLength (0);  	model.Serialize (ms' obj2);  	ms.Position = 0;  	var clone2 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	Assert.AreEqual (2' clone1.Value);  	Assert.AreEqual (3' clone2.Value);  }  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: Assert.AreEqual (2' clone1.Value);  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: Assert.AreEqual (3' clone2.Value);  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: model.Add (typeof(MyEnum)' false).Add (1' "Default").Add (10' "Foo");  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' obj1);  	ms.Position = 0;  	var clone1 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	ms.SetLength (0);  	model.Serialize (ms' obj2);  	ms.Position = 0;  	var clone2 = (Test<int>)model.Deserialize (ms' null' typeof(Test<int>));  	Assert.AreEqual (1' clone1.Value);  	Assert.AreEqual (10' clone2.Value);  }  
Magic Number,Examples.Issues,SO13783894,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: Assert.AreEqual (10' clone2.Value);  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: try {  	var ms = new MemoryStream ();  	model.Serialize (ms' new EncapsulatedOuter {  		X = 123'  		Inner = new EncapsulatedInner {  			Y = 456  		}  	});  	ms.Position = 0;  	var obj = (InheritedChild)model.Deserialize (ms' null' typeof(InheritedBase));  	Assert.AreEqual (123' obj.X' caption);  	Assert.AreEqual (456' obj.Y' caption);  }  catch (Exception ex) {  	Assert.Fail (caption + ":" + ex.Message);  }  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: try {  	var ms = new MemoryStream ();  	model.Serialize (ms' new EncapsulatedOuter {  		X = 123'  		Inner = new EncapsulatedInner {  			Y = 456  		}  	});  	ms.Position = 0;  	var obj = (InheritedChild)model.Deserialize (ms' null' typeof(InheritedBase));  	Assert.AreEqual (123' obj.X' caption);  	Assert.AreEqual (456' obj.Y' caption);  }  catch (Exception ex) {  	Assert.Fail (caption + ":" + ex.Message);  }  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: try {  	var ms = new MemoryStream ();  	model.Serialize (ms' new EncapsulatedOuter {  		X = 123'  		Inner = new EncapsulatedInner {  			Y = 456  		}  	});  	ms.Position = 0;  	var obj = (InheritedChild)model.Deserialize (ms' null' typeof(InheritedBase));  	Assert.AreEqual (123' obj.X' caption);  	Assert.AreEqual (456' obj.Y' caption);  }  catch (Exception ex) {  	Assert.Fail (caption + ":" + ex.Message);  }  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: try {  	var ms = new MemoryStream ();  	model.Serialize (ms' new EncapsulatedOuter {  		X = 123'  		Inner = new EncapsulatedInner {  			Y = 456  		}  	});  	ms.Position = 0;  	var obj = (InheritedChild)model.Deserialize (ms' null' typeof(InheritedBase));  	Assert.AreEqual (123' obj.X' caption);  	Assert.AreEqual (456' obj.Y' caption);  }  catch (Exception ex) {  	Assert.Fail (caption + ":" + ex.Message);  }  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: model.Serialize (ms' new EncapsulatedOuter {  	X = 123'  	Inner = new EncapsulatedInner {  		Y = 456  	}  });  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: model.Serialize (ms' new EncapsulatedOuter {  	X = 123'  	Inner = new EncapsulatedInner {  		Y = 456  	}  });  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: Assert.AreEqual (123' obj.X' caption);  
Magic Number,Examples.Issues,SO14020284,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14020284.cs,Execute,The following statement contains a magic number: Assert.AreEqual (456' obj.Y' caption);  
Magic Number,Examples.Issues,SO14048958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14048958.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' obj);  	ms.Position = 0;  	Assert.AreEqual (3' ms.Length);  	var clone = (Foo)model.Deserialize (ms' null' typeof(Foo));  	Assert.AreEqual (Status.All' clone.Status);  }  
Magic Number,Examples.Issues,SO14048958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14048958.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' ms.Length);  
Magic Number,Examples.Issues,SO14436606,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14436606.cs,CreateFieldsModel,The following statement contains a magic number: type.AddField (2' "value").AsReference = true;  
Magic Number,Examples.Issues,SO14436606,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14436606.cs,CreateFieldsModel,The following statement contains a magic number: model [typeof(B)] [2].AsReference = false;  
Magic Number,Examples.Issues,SO14436606,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14436606.cs,CreateSurrogateModel,The following statement contains a magic number: model [typeof(B)] [2].AsReference = false;  
Magic Number,Examples.Issues,SO14532116,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14532116.cs,Execute,The following statement contains a magic number: Assert.AreEqual (oldCount + 3' newCount);  
Magic Number,Examples.Issues,SO14532116,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14532116.cs,Test,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples.Issues,SO14540862,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14540862.cs,Execute,The following statement contains a magic number: Assert.AreEqual (37' (int)reflectionStream.Length' "loaded dynamically");  
Magic Number,Examples.Issues,SO14540862,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO14540862.cs,Execute,The following statement contains a magic number: Assert.AreEqual (37' (int)getTypeStream.Length' "loaded statically");  
Magic Number,Examples.Issues,SO16797650,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType (10' typeof(Echo));  
Magic Number,Examples.Issues,SO16797650,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType (11' typeof(Foo));  
Magic Number,Examples.Issues,SO16797650,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType (12' typeof(Bar));  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Execute (model' 20' 0' 20' "Runtime");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Execute (model' 20' 0' 20' "Runtime");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Execute (model' 1' 0' 18' "Runtime");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Execute (model' 20' 0' 20' "CompileInPlace");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Execute (model' 20' 0' 20' "CompileInPlace");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Execute (model' 1' 0' 18' "CompileInPlace");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Execute (model.Compile ()' 20' 0' 20' "Compile");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Execute (model.Compile ()' 20' 0' 20' "Compile");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Execute (model.Compile ()' 1' 0' 18' "Compile");  
Magic Number,Examples.Issues,SO16838287,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO16838287.cs,Execute,The following statement contains a magic number: new Random (1234).NextBytes (data);  
Magic Number,Examples.Issues,SO17040488,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO17040488.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' clone.Length' caption + ":length");  
Magic Number,Examples.Issues,SO17040488,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO17040488.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' clone [1].Order' caption + ":order");  
Magic Number,Examples.Issues,SO17040488,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO17040488.cs,Execute,The following statement contains a magic number: Assert.AreEqual (123' ((Foo)clone [0].Value).A' caption + ":value");  
Magic Number,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Execute,The following statement contains a magic number: Parallel.For (0' count' i =>  {  	var classThree = Create ();  	var counter = Stopwatch.StartNew ();  	using (var ms = new MemoryStream ()) {  		for (int j = 0; j < InnerLoop; j++) {  			ms.SetLength (0);  			model.Serialize (ms' classThree);  			ms.Position = 0;  			var des = model.Deserialize (ms' null' typeof(ClassThree));  			var aaa = des;  		}  		counter.Stop ();  	}  	var elapsed = counter.Elapsed.TotalMilliseconds;  	double currentAverage;  	lock (lockObj) {  		complete++;  		average += elapsed;  		var oldMin = min;  		min = Math.Min (min' elapsed);  		max = Math.Max (max' elapsed);  		currentAverage = average / complete;  		if (min != oldMin || (complete % 500) == 0) {  			Trace.WriteLine (string.Format ("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption));  		}  	}  });  
Magic Number,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Execute,The following statement contains a magic number: lock (lockObj) {  	complete++;  	average += elapsed;  	var oldMin = min;  	min = Math.Min (min' elapsed);  	max = Math.Max (max' elapsed);  	currentAverage = average / complete;  	if (min != oldMin || (complete % 500) == 0) {  		Trace.WriteLine (string.Format ("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption));  	}  }  
Magic Number,Examples.Issues,SO18650486,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18650486.cs,Execute,The following statement contains a magic number: if (min != oldMin || (complete % 500) == 0) {  	Trace.WriteLine (string.Format ("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption));  }  
Magic Number,Examples.Issues,SO18663361,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18663361.cs,ExecuteDouble,The following statement contains a magic number: Assert.AreEqual (123.45' clone.EntryPrice);  
Magic Number,Examples.Issues,SO18663361,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18663361.cs,ExecuteDouble2,The following statement contains a magic number: Assert.AreEqual (123.45' clone.EntryPrice);  
Magic Number,Examples.Issues,SO18695728,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default [typeof(WebSyncedObject)].AddSubType (10' typeof(GPSReading));  
Magic Number,Examples.Issues,SO18695728,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default [typeof(WebSyncedObject)].AddSubType (11' typeof(TemperatureReading));  
Magic Number,Examples.Issues,SO18695728,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' clone.Count);  
Magic Number,Examples.Issues,SO19161823,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO19161823.cs,Execute,The following statement contains a magic number: using (var file = File.OpenRead ("test.bin")) {  	container = Serializer.Deserialize<Container> (file);  	Assert.AreEqual (3' container.Data.Positive);  }  
Magic Number,Examples.Issues,SO19161823,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO19161823.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' container.Data.Positive);  
Magic Number,Examples.Issues,SO1930209,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO1930209.cs,ExecuteDeeplyNestedShouldNotBuffer,The following statement contains a magic number: for (int i = 0; i < arr.Length; i++) {  	var arr2 = new C[20000];  	arr [i] = new B {  		Array2 = arr2'  		Field1 = GetString ()'  		Field2 = GetString ()  	};  	for (int j = 0; j < arr2.Length; j++) {  		arr2 [j] = new C {  			Field1 = GetString ()'  			Field2 = GetString ()  		};  	}  }  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.AreEqual (2' clone.Bar.Count' "Bar");  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.AreEqual (3' clone.YYY.Count' "YYY");  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (bar.ID == 123 && bar.Name == "abc" && bar.Value == 234);  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (bar.ID == 123 && bar.Name == "abc" && bar.Value == 234);  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (bar.ID == 345 && bar.Name == "bcd" && bar.Value == 456);  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (bar.ID == 345 && bar.Name == "bcd" && bar.Value == 456);  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (yyy.ID == 567 && yyy.Name == "cde" && yyy.Value == "def");  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (yyy.ID == 678 && yyy.Name == "efg" && yyy.Value == "fgh");  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: yyy = clone.YYY [2];  
Magic Number,Examples.Issues,SO3083847,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.IsTrue (yyy.ID == 789 && yyy.Name == "ghi" && yyy.Value == "hij");  
Magic Number,Examples.Issues,SO3261310,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3261310.cs,TestBasicRoundTrip,The following statement contains a magic number: Assert.AreEqual (2' clone.Keys.Count);  
Magic Number,Examples.Issues,SO3261310,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO3261310.cs,TestBasicRoundTrip,The following statement contains a magic number: Assert.AreEqual (2' list.Count);  
Magic Number,Examples.Issues,SO6109616,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var tagToType = new Dictionary<int' Type> {  		{  			1'  			typeof(B)  		}'  		{  			2'  			typeof(C)  		}  	};  	var typeToTag = tagToType.ToDictionary (pair => pair.Value' pair => pair.Key);  	object b = new B {  		Y = 2  	};  	object c = new C {  		Y = 4  	};  	// in v1' comparable to Serializer.NonGeneric.SerializeWithLengthPrefix(ms' b' PrefixStyle.Base128' typeToTag[b.GetType()]);  	model.SerializeWithLengthPrefix (ms' b' null' PrefixStyle.Base128' typeToTag [b.GetType ()]);  	model.SerializeWithLengthPrefix (ms' c' null' PrefixStyle.Base128' typeToTag [c.GetType ()]);  	ms.Position = 0;  	// in v1' comparable to Serializer.NonGeneric.TryDeserializeWithLengthPrefix(ms' PrefixStyle.Base128' key => tagToType[key]' out b2);  	object b2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	object c2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	Assert.AreEqual (((B)b).Y' ((B)b2).Y);  	Assert.AreEqual (((C)c).Y' ((C)c2).Y);  }  
Magic Number,Examples.Issues,SO6109616,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var tagToType = new Dictionary<int' Type> {  		{  			1'  			typeof(B)  		}'  		{  			2'  			typeof(C)  		}  	};  	var typeToTag = tagToType.ToDictionary (pair => pair.Value' pair => pair.Key);  	object b = new B {  		Y = 2  	};  	object c = new C {  		Y = 4  	};  	// in v1' comparable to Serializer.NonGeneric.SerializeWithLengthPrefix(ms' b' PrefixStyle.Base128' typeToTag[b.GetType()]);  	model.SerializeWithLengthPrefix (ms' b' null' PrefixStyle.Base128' typeToTag [b.GetType ()]);  	model.SerializeWithLengthPrefix (ms' c' null' PrefixStyle.Base128' typeToTag [c.GetType ()]);  	ms.Position = 0;  	// in v1' comparable to Serializer.NonGeneric.TryDeserializeWithLengthPrefix(ms' PrefixStyle.Base128' key => tagToType[key]' out b2);  	object b2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	object c2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	Assert.AreEqual (((B)b).Y' ((B)b2).Y);  	Assert.AreEqual (((C)c).Y' ((C)c2).Y);  }  
Magic Number,Examples.Issues,SO6109616,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var tagToType = new Dictionary<int' Type> {  		{  			1'  			typeof(B)  		}'  		{  			2'  			typeof(C)  		}  	};  	var typeToTag = tagToType.ToDictionary (pair => pair.Value' pair => pair.Key);  	object b = new B {  		Y = 2  	};  	object c = new C {  		Y = 4  	};  	// in v1' comparable to Serializer.NonGeneric.SerializeWithLengthPrefix(ms' b' PrefixStyle.Base128' typeToTag[b.GetType()]);  	model.SerializeWithLengthPrefix (ms' b' null' PrefixStyle.Base128' typeToTag [b.GetType ()]);  	model.SerializeWithLengthPrefix (ms' c' null' PrefixStyle.Base128' typeToTag [c.GetType ()]);  	ms.Position = 0;  	// in v1' comparable to Serializer.NonGeneric.TryDeserializeWithLengthPrefix(ms' PrefixStyle.Base128' key => tagToType[key]' out b2);  	object b2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	object c2 = model.DeserializeWithLengthPrefix (ms' null' null' PrefixStyle.Base128' 0' key => tagToType [key]);  	Assert.AreEqual (((B)b).Y' ((B)b2).Y);  	Assert.AreEqual (((C)c).Y' ((C)c2).Y);  }  
Magic Number,Examples.Issues,SO6115986,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: m.Add (typeof(IYObject)' false).AddSubType (1' typeof(YObject)).Add (2' "Z");  
Magic Number,Examples.Issues,SO6115986,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: d.Y.Z = 123;  
Magic Number,Examples.Issues,SO6115986,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	m.Serialize (ms' d);  	ms.Position = 0;  	var d2 = (D)m.Deserialize (ms' null' typeof(D));  	Assert.AreEqual ("a"' d2.Y.X);  	Assert.AreEqual (123' d2.Y.Z);  }  
Magic Number,Examples.Issues,SO6115986,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: Assert.AreEqual (123' d2.Y.Z);  
Magic Number,Examples.Issues,SO6115986_WithAttributes,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: d.Y.Z = 123;  
Magic Number,Examples.Issues,SO6115986_WithAttributes,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	m.Serialize (ms' d);  	ms.Position = 0;  	var d2 = (D)m.Deserialize (ms' null' typeof(D));  	Assert.AreEqual ("a"' d2.Y.X);  	Assert.AreEqual (123' d2.Y.Z);  }  
Magic Number,Examples.Issues,SO6115986_WithAttributes,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: Assert.AreEqual (123' d2.Y.Z);  
Magic Number,Examples.Issues,SO6127380,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6127380.cs,Execute,The following statement contains a magic number: for (int i = 1; i < 15; i++) {  	Node child = new Node {  		Data = i  	};  	n.AddChild (child);  	n = child;  }  
Magic Number,Examples.Issues,SO6127380,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6127380.cs,ExecuteRecursive,The following statement contains a magic number: for (int i = 1; i < 15; i++) {  	Node child = new Node {  		Data = i  	};  	n.AddChild (child);  	n = child;  }  
Magic Number,Examples.Issues,SO6174298,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6174298.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 13; ++i) {  	node.Left = new BinaryNode ();  	node = (BinaryNode)node.Left;  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	// write data with a length-prefix but no field number  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 1  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 2  	}' PrefixStyle.Base128' 0);  	Serializer.SerializeWithLengthPrefix (ms' new Foo {  		Bar = 3  	}' PrefixStyle.Base128' 0);  	ms.Position = 0;  	Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  	// read the length prefix and use that to limit each call  	TypeModel model = RuntimeTypeModel.Default;  	int len' fieldNumber' bytesRead;  	List<Foo> foos = new List<Foo> ();  	do {  		len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  		if (bytesRead <= 0)  			continue;  		foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  		Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  	}  	while (bytesRead > 0);  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  	// do it using DeserializeItems  	ms.Position = 0;  	foos.Clear ();  	foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  		foos.Add (obj);  		Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  	}  	Assert.AreEqual (3' foos.Count);  	Assert.AreEqual (1' foos [0].Bar);  	Assert.AreEqual (2' foos [1].Bar);  	Assert.AreEqual (3' foos [2].Bar);  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix (ms' new Foo {  	Bar = 2  }' PrefixStyle.Base128' 0);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix (ms' new Foo {  	Bar = 3  }' PrefixStyle.Base128' 0);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (9' ms.Length' "3 lengths' 3 headers' 3 values");  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: do {  	len = ProtoReader.ReadLengthPrefix (ms' false' PrefixStyle.Base128' out fieldNumber' out bytesRead);  	if (bytesRead <= 0)  		continue;  	foos.Add ((Foo)model.Deserialize (ms' null' typeof(Foo)' len));  	Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  }  while (bytesRead > 0);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.IsTrue (foos.Count <= 3' "too much data! (manual)");  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos.Count);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' foos [1].Bar);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos [2].Bar);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos [2].Bar);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: foreach (var obj in model.DeserializeItems<Foo> (ms' PrefixStyle.Base128' 0)) {  	foos.Add (obj);  	Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  }  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.IsTrue (foos.Count <= 3' "too much data! (foreach)");  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos.Count);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' foos [1].Bar);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos [2].Bar);  
Magic Number,Examples.Issues,SO6230449,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' foos [2].Bar);  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' b);  	Assert.AreEqual (12' ASurrogate.HackyFlags' caption);  	ms.Position = 0;  	ASurrogate.HackyFlags = 0;  	var b2 = (B)model.Deserialize (ms' null' typeof(B));  	Assert.AreEqual (3' ASurrogate.HackyFlags' caption);  	Assert.AreEqual (117' b2.A.X' caption);  }  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' b);  	Assert.AreEqual (12' ASurrogate.HackyFlags' caption);  	ms.Position = 0;  	ASurrogate.HackyFlags = 0;  	var b2 = (B)model.Deserialize (ms' null' typeof(B));  	Assert.AreEqual (3' ASurrogate.HackyFlags' caption);  	Assert.AreEqual (117' b2.A.X' caption);  }  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' b);  	Assert.AreEqual (12' ASurrogate.HackyFlags' caption);  	ms.Position = 0;  	ASurrogate.HackyFlags = 0;  	var b2 = (B)model.Deserialize (ms' null' typeof(B));  	Assert.AreEqual (3' ASurrogate.HackyFlags' caption);  	Assert.AreEqual (117' b2.A.X' caption);  }  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.AreEqual (12' ASurrogate.HackyFlags' caption);  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.AreEqual (3' ASurrogate.HackyFlags' caption);  
Magic Number,Examples.Issues,SO6407130,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.AreEqual (117' b2.A.X' caption);  
Magic Number,Examples.Issues,SO6476958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6476958.cs,TestBasicDuplicatedString,The following statement contains a magic number: foo.A = new string ('a'' 40);  
Magic Number,Examples.Issues,SO6476958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6476958.cs,TestBasicDuplicatedString,The following statement contains a magic number: foo.B = new string ('a'' 40);  
Magic Number,Examples.Issues,SO6476958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6476958.cs,TestBasicDuplicatedString,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	Serializer.Serialize (ms' foo);  	Assert.AreEqual (50' ms.Length);  	ms.Position = 0;  	clone = Serializer.Deserialize<BasicDuplicatedString> (ms);  }  
Magic Number,Examples.Issues,SO6476958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6476958.cs,TestBasicDuplicatedString,The following statement contains a magic number: Assert.AreEqual (50' ms.Length);  
Magic Number,Examples.Issues,SO6476958,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6476958.cs,Execute,The following statement contains a magic number: m.Add (typeof(object)' false).AddSubType (1' typeof(A)).AddSubType (2' typeof(B));  
Magic Number,Examples.Issues,SO7078615_NoAttribs,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7078615.cs,TestPerf,The following statement contains a magic number: Assert.Less (2' 3);  
Magic Number,Examples.Issues,SO7078615_NoAttribs,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7078615.cs,TestPerf,The following statement contains a magic number: Assert.Less (2' 3);  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeAsTuple (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeAsTuple> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeAsTuple (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeAsTuple> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeAsTuple (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeAsTuple> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeAsTuple (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeAsTuple> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: Assert.AreEqual (456' clone.Z);  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeViaFields (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeViaFields> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeViaFields (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeViaFields> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeViaFields (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeViaFields> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	var val = new MyValueTypeViaFields (123' 456);  	Serializer.Serialize (ms' val);  	ms.Position = 0;  	var clone = Serializer.Deserialize<MyValueTypeViaFields> (ms);  	Assert.AreEqual (123' clone.X);  	Assert.AreEqual (456' clone.Z);  }  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: Assert.AreEqual (123' clone.X);  
Magic Number,Examples.Issues,SO7120856,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: Assert.AreEqual (456' clone.Z);  
Magic Number,Examples.Issues,SO7218127,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7218127.cs,Test,The following statement contains a magic number: Assert.AreEqual (123' orig.Value.Foo);  
Magic Number,Examples.Issues,SO7333233,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7333233.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default [typeof(IRule<Ant>)].AddSubType (1' typeof(AntRule1)).AddSubType (2' typeof(AntRule2));  
Magic Number,Examples.Issues,SO7333233,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7333233.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default [typeof(IRule<Cat>)].AddSubType (1' typeof(CatRule1)).AddSubType (2' typeof(CatRule2));  
Magic Number,Examples.Issues,SO7347694,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7347694.cs,SerializeTheEasyWay,The following statement contains a magic number: using (var fs = File.OpenRead (@"things.bin")) {  	list = ProtoBuf.Serializer.Deserialize<MyDto> (fs);  	Assert.AreEqual (3' list.Things.Count);  	Assert.AreNotSame (list.Things [0]' list.Things [1]);  	Assert.AreSame (list.Things [0]' list.Things [2]);  	fs.Close ();  }  
Magic Number,Examples.Issues,SO7347694,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7347694.cs,SerializeTheEasyWay,The following statement contains a magic number: using (var fs = File.OpenRead (@"things.bin")) {  	list = ProtoBuf.Serializer.Deserialize<MyDto> (fs);  	Assert.AreEqual (3' list.Things.Count);  	Assert.AreNotSame (list.Things [0]' list.Things [1]);  	Assert.AreSame (list.Things [0]' list.Things [2]);  	fs.Close ();  }  
Magic Number,Examples.Issues,SO7347694,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7347694.cs,SerializeTheEasyWay,The following statement contains a magic number: Assert.AreEqual (3' list.Things.Count);  
Magic Number,Examples.Issues,SO7347694,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7347694.cs,SerializeTheEasyWay,The following statement contains a magic number: Assert.AreSame (list.Things [0]' list.Things [2]);  
Magic Number,Examples.Issues,SO7654066,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' clone.data.Length);  
Magic Number,Examples.Issues,SO7654066,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.AreEqual (2' clone.data [1]);  
Magic Number,Examples.Issues,SO7654066,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' clone.data [2]);  
Magic Number,Examples.Issues,SO7654066,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.AreEqual (3' clone.data [2]);  
Magic Number,Examples.Issues,SO7686734,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7686734.cs,protobuf_serialization_can_deserialized_guids,The following statement contains a magic number: RuntimeTypeModel.Default [typeof(GatewayPageEvent)].AddSubType (3' typeof(GatewayPageAddedToSite));  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: for (int test = 0; test < 1000; test++) {  	var model = RuntimeTypeModel.Create ();  	Thread[] threads = new Thread[20];  	Interlocked.Exchange (ref success' 0);  	Interlocked.Exchange (ref firstException' null);  	Interlocked.Exchange (ref waitingThreads' threads.Length);  	gate.Reset ();  	for (int i = 0; i < threads.Length; i++)  		threads [i] = new Thread (PistonThread);  	for (int i = 0; i < threads.Length; i++)  		threads [i].Start (model);  	for (int i = 0; i < threads.Length; i++)  		if (!threads [i].Join (5000))  			throw new TimeoutException ();  	Assert.AreEqual (20' Interlocked.CompareExchange (ref success' 0' 0));  	var exVal = Interlocked.CompareExchange (ref firstException' null' null);  	if (exVal != null)  		throw firstException;  }  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: for (int test = 0; test < 1000; test++) {  	var model = RuntimeTypeModel.Create ();  	Thread[] threads = new Thread[20];  	Interlocked.Exchange (ref success' 0);  	Interlocked.Exchange (ref firstException' null);  	Interlocked.Exchange (ref waitingThreads' threads.Length);  	gate.Reset ();  	for (int i = 0; i < threads.Length; i++)  		threads [i] = new Thread (PistonThread);  	for (int i = 0; i < threads.Length; i++)  		threads [i].Start (model);  	for (int i = 0; i < threads.Length; i++)  		if (!threads [i].Join (5000))  			throw new TimeoutException ();  	Assert.AreEqual (20' Interlocked.CompareExchange (ref success' 0' 0));  	var exVal = Interlocked.CompareExchange (ref firstException' null' null);  	if (exVal != null)  		throw firstException;  }  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: for (int test = 0; test < 1000; test++) {  	var model = RuntimeTypeModel.Create ();  	Thread[] threads = new Thread[20];  	Interlocked.Exchange (ref success' 0);  	Interlocked.Exchange (ref firstException' null);  	Interlocked.Exchange (ref waitingThreads' threads.Length);  	gate.Reset ();  	for (int i = 0; i < threads.Length; i++)  		threads [i] = new Thread (PistonThread);  	for (int i = 0; i < threads.Length; i++)  		threads [i].Start (model);  	for (int i = 0; i < threads.Length; i++)  		if (!threads [i].Join (5000))  			throw new TimeoutException ();  	Assert.AreEqual (20' Interlocked.CompareExchange (ref success' 0' 0));  	var exVal = Interlocked.CompareExchange (ref firstException' null' null);  	if (exVal != null)  		throw firstException;  }  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: for (int test = 0; test < 1000; test++) {  	var model = RuntimeTypeModel.Create ();  	Thread[] threads = new Thread[20];  	Interlocked.Exchange (ref success' 0);  	Interlocked.Exchange (ref firstException' null);  	Interlocked.Exchange (ref waitingThreads' threads.Length);  	gate.Reset ();  	for (int i = 0; i < threads.Length; i++)  		threads [i] = new Thread (PistonThread);  	for (int i = 0; i < threads.Length; i++)  		threads [i].Start (model);  	for (int i = 0; i < threads.Length; i++)  		if (!threads [i].Join (5000))  			throw new TimeoutException ();  	Assert.AreEqual (20' Interlocked.CompareExchange (ref success' 0' 0));  	var exVal = Interlocked.CompareExchange (ref firstException' null' null);  	if (exVal != null)  		throw firstException;  }  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: for (int i = 0; i < threads.Length; i++)  	if (!threads [i].Join (5000))  		throw new TimeoutException ();  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: if (!threads [i].Join (5000))  	throw new TimeoutException ();  
Magic Number,Examples.Issues,SO7727355,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: Assert.AreEqual (20' Interlocked.CompareExchange (ref success' 0' 0));  
Magic Number,Examples.Issues,SO7793527,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7793527.cs,DefaultToListT,The following statement contains a magic number: Assert.AreEqual (2' clone.Bars.Count);  
Magic Number,Examples.Issues,SO7793527,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7793527.cs,Verify,The following statement contains a magic number: Assert.AreEqual (23' clone.ProposedGoals [0].X' caption + ":X");  
Magic Number,Examples.Issues,SO7793527,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7793527.cs,Verify,The following statement contains a magic number: Assert.AreEqual (23' clone.ProposedGoals.Single ().X' caption + ":X");  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: using (var ms = new MemoryStream ()) {  	model.Serialize (ms' a);  	Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  		08'  		10'  		82'  		2'  		16'  		23  	})' message);  	ms.Position = 0;  	var clone = (A_generated)model.Deserialize (ms' null' typeof(A_generated));  	Assert.AreEqual (10' clone.Age' message);  	Assert.AreEqual (23' clone.b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.IsTrue (ms.ToArray ().SequenceEqual (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.AreEqual (10' clone.Age' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.AreEqual (23' clone.b.Balls' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using (var ms = new MemoryStream (new byte[] {  	08'  	10'  	82'  	2'  	16'  	23  })) {  	var clone = (A)model.Deserialize (ms' null' typeof(A));  	Assert.AreEqual (10' clone.Age' message);  	B b = (B)clone;  	Assert.AreEqual (23' b.Balls' message);  }  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: Assert.AreEqual (10' clone.Age' message);  
Magic Number,Examples.Issues,SO8093623,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: Assert.AreEqual (23' b.Balls' message);  
Magic Number,Examples.Issues,SO8466936,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: Assert.AreEqual (123' clone.BaseValue' caption);  
Magic Number,Examples.Issues,SO8466936,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: Assert.AreEqual (456' clone.Value' caption);  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Runtime Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Runtime Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Runtime Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Runtime Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "Runtime Bar");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "Runtime Bar");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "CompileInPlace Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "CompileInPlace Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "CompileInPlace Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "CompileInPlace Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "CompileInPlace Bar");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "CompileInPlace Bar");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Compile Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Compile Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Compile Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Foo.SequenceEqual (new byte[] {  	1'  	2'  	3'  	7'  	8  })' "Compile Foo");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "Compile Bar");  
Magic Number,Examples.Issues,SO9144967,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.IsTrue (clone.Bar.SequenceEqual (new byte[] {  	8'  	9  })' "Compile Bar");  
Magic Number,Examples.Issues,SO9398578,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9398578.cs,TestRandomDataWithString,The following statement contains a magic number: Assert.Greater (3' 0);  
Magic Number,Examples.Issues,SO9398578,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9398578.cs,TestRandomDataWithContractType,The following statement contains a magic number: Assert.Greater (3' 0);  
Magic Number,Examples.Issues,SO9398578,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9398578.cs,TestRandomDataWithReader,The following statement contains a magic number: Assert.Greater (3' 0);  
Magic Number,Examples.Issues,SurrogateForObjectUsage,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.AreEqual (2' data.Ranges.Length);  
Magic Number,Examples.Issues,SurrogateForObjectUsage,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.AreEqual (2' data.Values.Length);  
Magic Number,test,SimpleObject,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue356.cs,ToDefaults,The following statement contains a magic number: _value = 10.0;  
Magic Number,test,SimpleObject,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue356.cs,GetHashCode,The following statement contains a magic number: return _value.GetHashCode () * 17 + (_name == null ? 0 : _name.GetHashCode ());  
Magic Number,test,SimpleObject,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue356.cs,Equals,The following statement contains a magic number: return (Math.Abs (Value - other.Value) < 1e-12 && Name.Equals (other.Name' StringComparison.OrdinalIgnoreCase));  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: for (int i = 0; i < 1000000; i++) {  	Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  }  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: for (int i = 0; i < 1000000; i++) {  	Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  }  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: for (int i = 0; i < 1000000; i++) {  	Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  }  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: for (int i = 0; i < 1000000; i++) {  	Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  }  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  
Magic Number,test,Coordinates,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add (new CoOrd (r.Next (10000)' r.Next (10000)' r.Next (10000)));  
Magic Number,test,SO6478579,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO6478579.cs,TestMethod,The following statement contains a magic number: Assert.AreEqual (10960823' mStream.Length);  
Magic Number,Examples.Issues.DetectMissing,Test,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\DetectMissing\DetectMissing.cs,Execute,The following statement contains a magic number: Assert.Greater (2' 0' caption + ": I always get this wrong");  
Magic Number,Examples.Issues.Issue48,Issue202,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.AreEqual (2' a.flags.Count' test);  
Magic Number,Examples.Issues.Issue48,Issue202,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.AreEqual (2' b.flags.Count' test);  
Magic Number,Examples.Issues.Issue48,Issue202,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.AreEqual (2' c.flags.Count' test);  
Magic Number,TechnologyEvaluation.Protobuf.ArrayOfBaseClassTest,ArrayOfBaseClassTests,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO7064824.cs,CreateModel,The following statement contains a magic number: model [typeof(Base)].AddSubType (100' typeof(Derived));  
Magic Number,Proto,ProtoBufModalSerializer,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111b.cs,init,The following statement contains a magic number: foreach (var type in this.GetDCTypes ("Types")) {  	if (type.IsGenericTypeDefinition == false) {  		Console.WriteLine ("{0}: Processing: {1} ({2})"' label' type.Name' type.IsGenericTypeDefinition);  		var meta = this._modal.Add (type' false).Add (this.GetDMProperties (type).Select (p => p.Name).ToArray ());  		this.setCallbacks (meta);  		if (type.BaseType != null && type.BaseType != typeof(Object)) {  			List<Type> childs;  			if (!repo.TryGetValue (type.BaseType' out childs)) {  				childs = new List<Type> ();  				repo.Add (type.BaseType' childs);  			}  			childs.Add (type);  		}  		foreach (var parent in repo.Keys) {  			if (this._modal.IsDefined (parent)) {  				var metaType = _modal [parent];  				Assert.IsNotNull (metaType' "meta");  				int i = 500;  				foreach (var child in repo [parent].OrderBy (t => t.Name)) {  					Console.WriteLine ("{0}: Adding {1} => {2}"' label' parent.Name' child.Name);  					if (!metaType.GetSubtypes ().Any (x => x.DerivedType.Type == child)) {  						metaType.AddSubType (i++' child);  					}  				}  			}  		}  	}  }  
Magic Number,Proto,ProtoBufModalSerializer,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111b.cs,init,The following statement contains a magic number: if (type.IsGenericTypeDefinition == false) {  	Console.WriteLine ("{0}: Processing: {1} ({2})"' label' type.Name' type.IsGenericTypeDefinition);  	var meta = this._modal.Add (type' false).Add (this.GetDMProperties (type).Select (p => p.Name).ToArray ());  	this.setCallbacks (meta);  	if (type.BaseType != null && type.BaseType != typeof(Object)) {  		List<Type> childs;  		if (!repo.TryGetValue (type.BaseType' out childs)) {  			childs = new List<Type> ();  			repo.Add (type.BaseType' childs);  		}  		childs.Add (type);  	}  	foreach (var parent in repo.Keys) {  		if (this._modal.IsDefined (parent)) {  			var metaType = _modal [parent];  			Assert.IsNotNull (metaType' "meta");  			int i = 500;  			foreach (var child in repo [parent].OrderBy (t => t.Name)) {  				Console.WriteLine ("{0}: Adding {1} => {2}"' label' parent.Name' child.Name);  				if (!metaType.GetSubtypes ().Any (x => x.DerivedType.Type == child)) {  					metaType.AddSubType (i++' child);  				}  			}  		}  	}  }  
Magic Number,Proto,ProtoBufModalSerializer,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111b.cs,init,The following statement contains a magic number: foreach (var parent in repo.Keys) {  	if (this._modal.IsDefined (parent)) {  		var metaType = _modal [parent];  		Assert.IsNotNull (metaType' "meta");  		int i = 500;  		foreach (var child in repo [parent].OrderBy (t => t.Name)) {  			Console.WriteLine ("{0}: Adding {1} => {2}"' label' parent.Name' child.Name);  			if (!metaType.GetSubtypes ().Any (x => x.DerivedType.Type == child)) {  				metaType.AddSubType (i++' child);  			}  		}  	}  }  
Magic Number,Proto,ProtoBufModalSerializer,C:\repos\CamTechConsultants_protobuf-net\Examples\Issues\SO9151111b.cs,init,The following statement contains a magic number: if (this._modal.IsDefined (parent)) {  	var metaType = _modal [parent];  	Assert.IsNotNull (metaType' "meta");  	int i = 500;  	foreach (var child in repo [parent].OrderBy (t => t.Name)) {  		Console.WriteLine ("{0}: Adding {1} => {2}"' label' parent.Name' child.Name);  		if (!metaType.GetSubtypes ().Any (x => x.DerivedType.Type == child)) {  			metaType.AddSubType (i++' child);  		}  	}  }  
Magic Number,DAL,NWindTests,C:\repos\CamTechConsultants_protobuf-net\Examples\NWind\NWind.cs,PerfTestDb,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream (blob)) {  	var model = TypeModel.Create ();  	Type type = typeof(Database);  	model.Deserialize (ms' null' type);  	var compiled = model.Compile ();  	/*erializer.PrepareSerializer<Database>();                 Serializer.Deserialize<Database>(ms);*/Stopwatch watch = Stopwatch.StartNew ();  	for (int i = 0; i < 1000; i++) {  		ms.Position = 0;  		//Serializer.Deserialize<Database>(ms);  		compiled.Deserialize (ms' null' type);  	}  	watch.Stop ();  	Console.WriteLine (watch.ElapsedMilliseconds);  	if (Debugger.IsAttached) {  		Console.WriteLine ("(press any key)");  		Console.ReadKey ();  	}  }  
Magic Number,DAL,NWindTests,C:\repos\CamTechConsultants_protobuf-net\Examples\NWind\NWind.cs,PerfTestDb,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	ms.Position = 0;  	//Serializer.Deserialize<Database>(ms);  	compiled.Deserialize (ms' null' type);  }  
Magic Number,Examples.ProtoGen,OptionParser,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\OptionParser.cs,TestMultipleInputOnly,The following statement contains a magic number: Assert.AreEqual (3' opt.InPaths.Count);  
Magic Number,Examples.ProtoGen,OptionParser,C:\repos\CamTechConsultants_protobuf-net\Examples\ProtoGen\OptionParser.cs,TestMultipleInputOnly,The following statement contains a magic number: Assert.AreEqual ("blop"' opt.InPaths [2]);  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestGroup,The following statement contains a magic number: Assert.AreEqual (150' t3.C.A);  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestGroupAsExtension,The following statement contains a magic number: Assert.AreEqual (150' t1.A' "Value");  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestGroupIgnore,The following statement contains a magic number: Assert.AreEqual (150' no.Foo);  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.AreEqual (2' t3.C.Count);  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.AreEqual (150' t3.C [0].A);  
Magic Number,Examples.SimpleStream,GroupedData,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.AreEqual (130' t3.C [1].A);  
Magic Number,Examples.SimpleStream,SimplePerfTests,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: Console.WriteLine ("\tSerialized x{0} in {1}ms"' 500000' watch.ElapsedMilliseconds);  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8KnownProblemLength,The following statement contains a magic number: Assert.AreEqual (2' Encoding.UTF8.GetByteCount (new char[] {  	mb  })' "is multibyte");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8VariousLengths,The following statement contains a magic number: Assert.AreEqual (2' Encoding.UTF8.GetByteCount (new char[] {  	mb  })' "is multibyte");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8VariousLengths,The following statement contains a magic number: for (int i = 0; i < 1024 * 8; i += 3) {  	try {  		Test2 t2 = new Test2 {  			B = new string (mb' i)  		}' clone = Serializer.DeepClone (t2);  		Assert.AreEqual (i' t2.B.Length' "len");  		Assert.AreEqual (t2.B' clone.B' "Count: " + i.ToString ());  	}  	catch (Exception ex) {  		Debug.WriteLine (ex.StackTrace);  		Assert.Fail (i.ToString () + ": " + ex.Message);  	}  }  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8VariousLengths,The following statement contains a magic number: for (int i = 0; i < 1024 * 8; i += 3) {  	try {  		Test2 t2 = new Test2 {  			B = new string (mb' i)  		}' clone = Serializer.DeepClone (t2);  		Assert.AreEqual (i' t2.B.Length' "len");  		Assert.AreEqual (t2.B' clone.B' "Count: " + i.ToString ());  	}  	catch (Exception ex) {  		Debug.WriteLine (ex.StackTrace);  		Assert.Fail (i.ToString () + ": " + ex.Message);  	}  }  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8VariousLengths,The following statement contains a magic number: for (int i = 0; i < 1024 * 8; i += 3) {  	try {  		Test2 t2 = new Test2 {  			B = new string (mb' i)  		}' clone = Serializer.DeepClone (t2);  		Assert.AreEqual (i' t2.B.Length' "len");  		Assert.AreEqual (t2.B' clone.B' "Count: " + i.ToString ());  	}  	catch (Exception ex) {  		Debug.WriteLine (ex.StackTrace);  		Assert.Fail (i.ToString () + ": " + ex.Message);  	}  }  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultiByteUTF8VariousLengths,The following statement contains a magic number: i += 3
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,PerfTestArray,The following statement contains a magic number: for (int i = 0; i < 1000; i++)  	data [i] = i;  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,FieldsWrongOrder,The following statement contains a magic number: Assert.AreEqual (150' t1.Foo' "Foo' ascending");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,FieldsWrongOrder,The following statement contains a magic number: Assert.AreEqual (130' t1.Bar' "Bar' ascending");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,FieldsWrongOrder,The following statement contains a magic number: Assert.AreEqual (150' t1.Foo' "Foo' descending");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,FieldsWrongOrder,The following statement contains a magic number: Assert.AreEqual (130' t1.Bar' "Bar' descending");  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,MultipleSameField,The following statement contains a magic number: Assert.AreEqual (130' t1.A);  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,TestDeserializeUndefinedEnumWithoutDefault,The following statement contains a magic number: Assert.IsTrue (Extensible.TryGetValue<int> (see' 2' DataFormat.Default' true' out val));  
Magic Number,Examples.SimpleStream,SimpleStreamDemo,C:\repos\CamTechConsultants_protobuf-net\Examples\SimpleStream\SimpleStreamDemo.cs,TestDeserializeUndefinedEnumWithoutDefault,The following statement contains a magic number: Assert.AreEqual (9' val);  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_Default,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new TwosComplementInt32 {  	Foo = 123456  })' "123456");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_2,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new TwosComplementInt32 {  	Foo = 2  }' 0x08' 0x02)' "+2");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_m2,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new TwosComplementInt32 {  	Foo = -2  }' 0x08' 0xFE' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x01)' "-2");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_Default,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new ZigZagInt32 {  	Foo = 123456  })' "123456");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_2,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new ZigZagInt32 {  	Foo = 2  }' 0x08' 0x04)' "+2");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_m2,The following statement contains a magic number: Assert.IsTrue (Program.CheckBytes (new ZigZagInt32 {  	Foo = -2  }' 0x08' 0x03)' "-2");  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_2147483647,The following statement contains a magic number: Assert.AreEqual (4294967294' tc.Foo);  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_m2147483648,The following statement contains a magic number: Assert.AreEqual (4294967295' tc.Foo);  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,SweepBitsInt32,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	int bigBit = i == 0 ? 0 : (1 << i - 1);  	for (int j = 0; j <= i; j++) {  		int smallBit = 1 << j;  		int val = bigBit | smallBit;  		rig.Int32Default = rig.Int32FixedSize = rig.Int32TwosComplement = rig.Int32ZigZag = val;  		NumRig clone = Serializer.DeepClone (rig);  		Assert.AreEqual (val' rig.Int32Default);  		Assert.AreEqual (val' rig.Int32FixedSize);  		Assert.AreEqual (val' rig.Int32TwosComplement);  		Assert.AreEqual (val' rig.Int32ZigZag);  		Assert.AreEqual (SUCCESS' rig.Foo);  	}  }  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64KnownTricky,The following statement contains a magic number: try {  	int i = 31' j = 31;  	long bigBit = i == 0 ? 0 : (1 << i - 1);  	long smallBit = 1 << j;  	long val = bigBit | smallBit;  	NumRig rig = new NumRig ();  	rig.Int64Default // 9 => 72  	= rig.Int64FixedSize // 12 => 97?  	= rig.Int64TwosComplement // 11 => 88  	= rig.Int64ZigZag // 10 => 80  	= val;  	const string SUCCESS = "bar";  	rig.Foo = SUCCESS;  	// to help test stream ending prematurely  	MemoryStream ms = new MemoryStream ();  	Serializer.Serialize (ms' rig);  	byte[] raw = ms.ToArray ();  	ms.Position = 0;  	NumRig clone = Serializer.Deserialize<NumRig> (ms);  	Assert.AreEqual (val' clone.Int64Default' "Default");  	Assert.AreEqual (val' clone.Int64FixedSize' "FixedSize");  	Assert.AreEqual (val' clone.Int64ZigZag' "ZigZag");  	Assert.AreEqual (val' clone.Int64TwosComplement' "TwosComplement");  	Assert.AreEqual (SUCCESS' clone.Foo' "EOF check");  }  catch (Exception ex) {  	Debug.WriteLine (ex.StackTrace);  	Assert.Fail (ex.Message);  }  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64KnownTricky,The following statement contains a magic number: try {  	int i = 31' j = 31;  	long bigBit = i == 0 ? 0 : (1 << i - 1);  	long smallBit = 1 << j;  	long val = bigBit | smallBit;  	NumRig rig = new NumRig ();  	rig.Int64Default // 9 => 72  	= rig.Int64FixedSize // 12 => 97?  	= rig.Int64TwosComplement // 11 => 88  	= rig.Int64ZigZag // 10 => 80  	= val;  	const string SUCCESS = "bar";  	rig.Foo = SUCCESS;  	// to help test stream ending prematurely  	MemoryStream ms = new MemoryStream ();  	Serializer.Serialize (ms' rig);  	byte[] raw = ms.ToArray ();  	ms.Position = 0;  	NumRig clone = Serializer.Deserialize<NumRig> (ms);  	Assert.AreEqual (val' clone.Int64Default' "Default");  	Assert.AreEqual (val' clone.Int64FixedSize' "FixedSize");  	Assert.AreEqual (val' clone.Int64ZigZag' "ZigZag");  	Assert.AreEqual (val' clone.Int64TwosComplement' "TwosComplement");  	Assert.AreEqual (SUCCESS' clone.Foo' "EOF check");  }  catch (Exception ex) {  	Debug.WriteLine (ex.StackTrace);  	Assert.Fail (ex.Message);  }  
Magic Number,Examples.TestNumbers,SignTests,C:\repos\CamTechConsultants_protobuf-net\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	long bigBit = i == 0 ? 0 : (1 << i - 1);  	for (int j = 0; j <= i; j++) {  		long smallBit = 1 << j;  		long val = bigBit | smallBit;  		rig.Int64Default = rig.Int64FixedSize = rig.Int64TwosComplement = rig.Int64ZigZag = val;  		NumRig clone = Serializer.DeepClone (rig);  		Assert.AreEqual (val' clone.Int64Default' "Default");  		Assert.AreEqual (val' clone.Int64FixedSize' "FixedSize");  		Assert.AreEqual (val' clone.Int64ZigZag' "ZigZag");  		Assert.AreEqual (val' clone.Int64TwosComplement' "TwosComplement");  		Assert.AreEqual (SUCCESS' clone.Foo' "EOF check: " + val.ToString ());  	}  }  
