Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The length of the statement  "		e.Result = string.Format ("x{2} via {3} - Vanilla WCF: {0:###'##0}ms' protobuf-net: {1:###'##0}ms ({4:##.#}%)"' fooWatch.ElapsedMilliseconds' barWatch.ElapsedMilliseconds' count' config' pc); " is 191.
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: using (var client = new NWindServiceClient (config)) {  	OrderSet set = client.LoadFoo ()' copy;  	int count = cheekyCount;  	copy = set;  	string key = "Vanilla WCF via " + config;  	Stopwatch fooWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripFoo (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	fooWatch.Stop ();  	copy = set;  	key = "protobuf-net via " + config;  	Stopwatch barWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripBar (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	barWatch.Stop ();  	decimal pc = (barWatch.ElapsedMilliseconds * 100.0M) / fooWatch.ElapsedMilliseconds;  	e.Result = string.Format ("x{2} via {3} - Vanilla WCF: {0:###'##0}ms' protobuf-net: {1:###'##0}ms ({4:##.#}%)"' fooWatch.ElapsedMilliseconds' barWatch.ElapsedMilliseconds' count' config' pc);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: using (var client = new NWindServiceClient (config)) {  	OrderSet set = client.LoadFoo ()' copy;  	int count = cheekyCount;  	copy = set;  	string key = "Vanilla WCF via " + config;  	Stopwatch fooWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripFoo (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	fooWatch.Stop ();  	copy = set;  	key = "protobuf-net via " + config;  	Stopwatch barWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripBar (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	barWatch.Stop ();  	decimal pc = (barWatch.ElapsedMilliseconds * 100.0M) / fooWatch.ElapsedMilliseconds;  	e.Result = string.Format ("x{2} via {3} - Vanilla WCF: {0:###'##0}ms' protobuf-net: {1:###'##0}ms ({4:##.#}%)"' fooWatch.ElapsedMilliseconds' barWatch.ElapsedMilliseconds' count' config' pc);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: using (var client = new NWindServiceClient (config)) {  	OrderSet set = client.LoadFoo ()' copy;  	int count = cheekyCount;  	copy = set;  	string key = "Vanilla WCF via " + config;  	Stopwatch fooWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripFoo (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	fooWatch.Stop ();  	copy = set;  	key = "protobuf-net via " + config;  	Stopwatch barWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripBar (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	barWatch.Stop ();  	decimal pc = (barWatch.ElapsedMilliseconds * 100.0M) / fooWatch.ElapsedMilliseconds;  	e.Result = string.Format ("x{2} via {3} - Vanilla WCF: {0:###'##0}ms' protobuf-net: {1:###'##0}ms ({4:##.#}%)"' fooWatch.ElapsedMilliseconds' barWatch.ElapsedMilliseconds' count' config' pc);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: using (var client = new NWindServiceClient (config)) {  	OrderSet set = client.LoadFoo ()' copy;  	int count = cheekyCount;  	copy = set;  	string key = "Vanilla WCF via " + config;  	Stopwatch fooWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripFoo (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	fooWatch.Stop ();  	copy = set;  	key = "protobuf-net via " + config;  	Stopwatch barWatch = Stopwatch.StartNew ();  	for (int i = 0; i < count; i++) {  		copy = client.RoundTripBar (copy);  		if (i % 10 == 0) {  			backgroundWorker1.ReportProgress ((i * 100) / count' key);  		}  	}  	barWatch.Stop ();  	decimal pc = (barWatch.ElapsedMilliseconds * 100.0M) / fooWatch.ElapsedMilliseconds;  	e.Result = string.Format ("x{2} via {3} - Vanilla WCF: {0:###'##0}ms' protobuf-net: {1:###'##0}ms ({4:##.#}%)"' fooWatch.ElapsedMilliseconds' barWatch.ElapsedMilliseconds' count' config' pc);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	copy = client.RoundTripFoo (copy);  	if (i % 10 == 0) {  		backgroundWorker1.ReportProgress ((i * 100) / count' key);  	}  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	copy = client.RoundTripFoo (copy);  	if (i % 10 == 0) {  		backgroundWorker1.ReportProgress ((i * 100) / count' key);  	}  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: if (i % 10 == 0) {  	backgroundWorker1.ReportProgress ((i * 100) / count' key);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: if (i % 10 == 0) {  	backgroundWorker1.ReportProgress ((i * 100) / count' key);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: backgroundWorker1.ReportProgress ((i * 100) / count' key);  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	copy = client.RoundTripBar (copy);  	if (i % 10 == 0) {  		backgroundWorker1.ReportProgress ((i * 100) / count' key);  	}  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	copy = client.RoundTripBar (copy);  	if (i % 10 == 0) {  		backgroundWorker1.ReportProgress ((i * 100) / count' key);  	}  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: if (i % 10 == 0) {  	backgroundWorker1.ReportProgress ((i * 100) / count' key);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: if (i % 10 == 0) {  	backgroundWorker1.ReportProgress ((i * 100) / count' key);  }  
Magic Number,WcfClient,Form1,C:\repos\CamTechConsultants_protobuf-net\WcfPerfTest\WcfClient\Form1.cs,backgroundWorker1_DoWork,The following statement contains a magic number: backgroundWorker1.ReportProgress ((i * 100) / count' key);  
