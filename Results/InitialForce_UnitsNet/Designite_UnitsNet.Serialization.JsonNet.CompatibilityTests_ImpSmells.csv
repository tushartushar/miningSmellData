Implementation smell,Namespace,Class,File,Method,Description
Long Statement,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,OtherObjectWithUnitAndValue_ExpectCorrectResturnValues,The length of the statement  "                TestObjWithValueAndUnit deserializedTestObject = JsonConvert.DeserializeObject<TestObjWithValueAndUnit>(json' jsonSerializerSettings); " is 134.
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Information_CanSerializeVeryLargeValues,The following statement contains a magic number: Information i = Information.FromExabytes(1E+9);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Mass_ExpectConstructedValueAndUnit,The following statement contains a magic number: Mass mass = Mass.FromPounds(200);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Information_ExpectConstructedValueAndUnit,The following statement contains a magic number: Information quantity = Information.FromKilobytes(54);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValue_ExpectJsonUnaffected,The following statement contains a magic number: Mass? nullableMass = Mass.FromKilograms(10);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValueNestedInObject_ExpectJsonUnaffected,The following statement contains a magic number: var testObj = new TestObj                  {                      NullableFrequency = Frequency.FromHertz(10)'                      NonNullableFrequency = Frequency.FromHertz(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValueNestedInObject_ExpectJsonUnaffected,The following statement contains a magic number: var testObj = new TestObj                  {                      NullableFrequency = Frequency.FromHertz(10)'                      NonNullableFrequency = Frequency.FromHertz(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Ratio_ExpectDecimalFractionsUsedAsBaseValueAndUnit,The following statement contains a magic number: Ratio ratio = Ratio.FromPartsPerThousand(250);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ArrayValue_ExpectJsonArray,The following statement contains a magic number: Frequency[] testObj = new Frequency[] { Frequency.FromHertz(10)' Frequency.FromHertz(10) };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Serialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ArrayValue_ExpectJsonArray,The following statement contains a magic number: Frequency[] testObj = new Frequency[] { Frequency.FromHertz(10)' Frequency.FromHertz(10) };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Information_CanDeserializeVeryLargeValues,The following statement contains a magic number: Information original = Information.FromExabytes(1E+9);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,Mass_ExpectJsonCorrectlyDeserialized,The following statement contains a magic number: Mass originalMass = Mass.FromKilograms(33.33);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValue_ExpectValueDeserializedCorrectly,The following statement contains a magic number: Mass? nullableMass = Mass.FromKilograms(10);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValueNestedInObject_ExpectValueDeserializedCorrectly,The following statement contains a magic number: var testObj = new TestObj                  {                      NullableFrequency = Frequency.FromHertz(10)'                      NonNullableFrequency = Frequency.FromHertz(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NonNullNullableValueNestedInObject_ExpectValueDeserializedCorrectly,The following statement contains a magic number: var testObj = new TestObj                  {                      NullableFrequency = Frequency.FromHertz(10)'                      NonNullableFrequency = Frequency.FromHertz(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,NullValueNestedInObject_ExpectValueDeserializedToNullCorrectly,The following statement contains a magic number: var testObj = new TestObj                  {                      NullableFrequency = null'                      NonNullableFrequency = Frequency.FromHertz(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,UnitEnumChangedAfterSerialization_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: Mass originalMass = Mass.FromKilograms(33.33);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,UnitEnumChangedAfterSerialization_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(1000' deserializedMass.Grams);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,UnitInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: TestObjWithIComparable testObjWithIComparable = new TestObjWithIComparable()                  {                      Value = Power.FromWatts(10)                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,UnitInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(Power.FromWatts(10)' (Power)deserializedTestObject.Value);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,DoubleInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: TestObjWithIComparable testObjWithIComparable = new TestObjWithIComparable()                  {                      Value = 10.0                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,DoubleInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(10d' (double)deserializedTestObject.Value);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ClassInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: TestObjWithIComparable testObjWithIComparable = new TestObjWithIComparable()                  {                      Value = new ComparableClass() { Value = 10 }                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ClassInIComparable_ExpectUnitCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(10d' ((ComparableClass) deserializedTestObject.Value).Value);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,OtherObjectWithUnitAndValue_ExpectCorrectResturnValues,The following statement contains a magic number: TestObjWithValueAndUnit testObjWithValueAndUnit = new TestObjWithValueAndUnit()                  {                     Value = 5'                     Unit = "Test"'                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,OtherObjectWithUnitAndValue_ExpectCorrectResturnValues,The following statement contains a magic number: Assert.Equal(5d' deserializedTestObject.Value);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ThreeObjectsInIComparableWithDifferentValues_ExpectAllCorrectlyDeserialized,The following statement contains a magic number: TestObjWithThreeIComparable testObjWithIComparable = new TestObjWithThreeIComparable()                  {                      Value1 = 10.0'                      Value2 = Power.FromWatts(19)'                      Value3 = new ComparableClass() { Value = 10 }'                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ThreeObjectsInIComparableWithDifferentValues_ExpectAllCorrectlyDeserialized,The following statement contains a magic number: TestObjWithThreeIComparable testObjWithIComparable = new TestObjWithThreeIComparable()                  {                      Value1 = 10.0'                      Value2 = Power.FromWatts(19)'                      Value3 = new ComparableClass() { Value = 10 }'                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ThreeObjectsInIComparableWithDifferentValues_ExpectAllCorrectlyDeserialized,The following statement contains a magic number: TestObjWithThreeIComparable testObjWithIComparable = new TestObjWithThreeIComparable()                  {                      Value1 = 10.0'                      Value2 = Power.FromWatts(19)'                      Value3 = new ComparableClass() { Value = 10 }'                  };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ThreeObjectsInIComparableWithDifferentValues_ExpectAllCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(10d' deserializedTestObject.Value1);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ThreeObjectsInIComparableWithDifferentValues_ExpectAllCorrectlyDeserialized,The following statement contains a magic number: Assert.Equal(Power.FromWatts(19)' deserializedTestObject.Value2);
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ArrayOfUnits_ExpectCorrectlyDeserialized,The following statement contains a magic number: Frequency[] expected = new Frequency[] { Frequency.FromHertz(10)' Frequency.FromHertz(10) };
Magic Number,UnitsNet.Serialization.JsonNet.CompatibilityTests,Deserialize,D:\research\architectureSmells\repos\InitialForce_UnitsNet\UnitsNet.Serialization.JsonNet.CompatibilityTests\UnitsNetJsonConverterTests.cs,ArrayOfUnits_ExpectCorrectlyDeserialized,The following statement contains a magic number: Frequency[] expected = new Frequency[] { Frequency.FromHertz(10)' Frequency.FromHertz(10) };
