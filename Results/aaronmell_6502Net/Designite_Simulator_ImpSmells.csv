Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,Cyclomatic complexity of the method is 12
Long Statement,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,FileOpenedNotification,The length of the statement  "			Proc.LoadProgram(notificationMessage.Content.MemoryOffset' notificationMessage.Content.Program' notificationMessage.Content.InitialProgramCounter); " is 147.
Long Statement,Simulator.ViewModel,OpenFileViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\OpenFileViewModel.cs,TryLoadBinFile,The length of the statement  "				listing = File.ReadAllText(string.Format("{0}.lst"' Path.Combine(Path.GetDirectoryName(Filename)' Path.GetFileNameWithoutExtension(Filename)))); " is 144.
Long Statement,Simulator.ViewModel,OpenFileViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\OpenFileViewModel.cs,Select,The length of the statement  "			var dialog = new OpenFileDialog { DefaultExt = ".bin"' Filter = "All Files (*.bin' *.6502)|*.bin;*.6502|Binary Assembly (*.bin)|*.bin|6502 Simulator Save State (*.6502)|*.6502" }; " is 179.
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: var offset = ( _memoryPageOffset * 256 );
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: MemoryPage.Add(new MemoryRowModel  					               {  						               Offset = ((16 * multiplyer) + offset).ToString("X").PadLeft(4' '0')'  									   Location00 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2''0')'  									   Location01 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location02 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location03 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location04 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location05 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location06 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location07 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location08 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location09 = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0A = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0B = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0C = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0D = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0E = Proc.ReadMemoryValueWithoutCycle(i++).ToString("X").PadLeft(2' '0')'  									   Location0F = Proc.ReadMemoryValueWithoutCycle(i).ToString("X").PadLeft(2' '0')'  									});
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,UpdateMemoryPage,The following statement contains a magic number: i < 256 * (_memoryPageOffset + 1)
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetOutputLog,The following statement contains a magic number: return new OutputLog(Proc.CurrentDisassembly)  				                    {  					                    XRegister = Proc.XRegister.ToString("X").PadLeft(2''0')'  										YRegister = Proc.YRegister.ToString("X").PadLeft(2''0')'  										Accumulator =  Proc.Accumulator.ToString("X").PadLeft(2''0')'  										NumberOfCycles = NumberOfCycles'  										StackPointer = Proc.StackPointer.ToString("X").PadLeft(2' '0')'  										ProgramCounter = Proc.ProgramCounter.ToString("X").PadLeft(4' '0')'  										CurrentOpCode = Proc.CurrentOpCode.ToString("X").PadLeft(2' '0')  				                    };
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetLogModValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  				case 1:  				case 2:  				case 3:  				case 4:  				case 5:  					return 1;  				case 6:  					return 5;  				case 7:  					return 20;  				case 8:  					return 30;  				case 9:  					return 40;  				case 10:  					return 50;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,MainViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\MainViewModel.cs,GetSleepValue,The following statement contains a magic number: switch (CpuSpeed)  			{  				case 0:  					return 550;  				case 1:  					return 550;  				case 2:  					return 440;  				case 3:  					return 330;  				case 4:  					return 220;  				case 5:  					return 160;  				case 6:  					return 80;  				case 7:  					return 40;  				case 8:  					return 20;  				case 9:  					return 10;  				case 10:  					return 5;  				default:  					return 5;  			}
Magic Number,Simulator.ViewModel,OpenFileViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\OpenFileViewModel.cs,TryLoadBinFile,The following statement contains a magic number: programCounter = Convert.ToInt32(InitalProgramCounter' 16);
Magic Number,Simulator.ViewModel,OpenFileViewModel,D:\research\architectureSmells\repos\aaronmell_6502Net\Simulator\ViewModel\OpenFileViewModel.cs,TryLoadBinFile,The following statement contains a magic number: memoryOffset = Convert.ToInt32(MemoryOffset' 16);
