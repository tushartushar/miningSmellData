Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,AbsoluteX_Mode_Accumulator_Has_Correct_Result,The method has 5 parameters. Parameters: operation' accumulatorInitialValue' valueToTest' addressWraps' expectedValue
Long Parameter List,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,AbsoluteY_Mode_Accumulator_Has_Correct_Result,The method has 5 parameters. Parameters: operation' accumulatorInitialValue' valueToTest' addressWraps' expectedValue
Long Parameter List,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,Indexed_Indirect_Mode_Accumulator_Has_Correct_Result,The method has 5 parameters. Parameters: operation' accumulatorInitialValue' valueToTest' addressWraps' expectedValue
Long Parameter List,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,Indirect_Indexed_Mode_Accumulator_Has_Correct_Result,The method has 5 parameters. Parameters: operation' accumulatorInitialValue' valueToTest' addressWraps' expectedValue
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,BVS_Program_Counter_Correct,The length of the statement  "			processor.LoadProgram(programCounterInitalValue' new byte[] { 0xA9' 0x01' 0x69' 0x7F' 0x70' offset }' programCounterInitalValue); " is 129.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,ZeroPageX_Mode_Accumulator_Has_Correct_Result,The length of the statement  "			//Just remember that my value's for the STX and ADC were added to the end of the byte array. In a real program this would be invalid' as an opcode would be next and 0x03 would be somewhere else " is 193.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,ZeroPageX_Mode_Accumulator_Has_Correct_Result,The length of the statement  "			processor.LoadProgram(0' new byte[] { 0xA9' accumulatorInitialValue' 0xA2' 0x01' operation' 0x06' 0x00' valueToTest }' 0x00); " is 125.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,ZeroPage_Mode_Index_Has_Correct_Result_When_Wrapped,The length of the statement  "			processor.LoadProgram(0' new byte[] { testXRegister ? (byte)0xA0 : (byte)0xA2' 0xFF' operation' 0x06' 0x00' valueToLoad }' 0x00); " is 129.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,NumberOfCyclesRemaining_Correct_When_Relative_And_Branch_On_Carry_And_Wrap,The length of the statement  "			processor.LoadProgram(initialAddress' new byte[] { (byte)carryOperation' operation' (byte)amountToMove' 0x00 }' initialAddress); " is 128.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,NumberOfCyclesRemaining_Correct_When_Relative_And_Branch_On_Zero_And_Wrap,The length of the statement  "			processor.LoadProgram(initialAddress' new byte[] { 0xA9' (byte)newAccumulatorValue' operation' (byte)amountToMove' 0x00 }' initialAddress); " is 139.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,NumberOfCyclesRemaining_Correct_When_Relative_And_Branch_On_Negative_And_Wrap,The length of the statement  "			processor.LoadProgram(initialAddress' new byte[] { 0xA9' (byte)newAccumulatorValue' operation' (byte)amountToMove' 0x00 }' initialAddress); " is 139.
Long Statement,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,NumberOfCyclesRemaining_Correct_When_Relative_And_Branch_On_Overflow_And_Wrap,The length of the statement  "			processor.LoadProgram(initialAddress' new byte[] { 0xA9' (byte)newAccumulatorValue' 0x69' 0x01' operation' (byte)amountToMove' 0x00 }' initialAddress); " is 151.
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Klaus_Dorman_Functional_Test,The following statement contains a magic number: numberOfCycles > 40037912
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Klaus_Dorman_Interrupt_Test,The following statement contains a magic number: (interruptWatch & 2) != 0
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Klaus_Dorman_Interrupt_Test,The following statement contains a magic number: numberOfCycles > 100000
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Cycle_Test,The following statement contains a magic number: numberofLoops == 249
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Cycle_Test,The following statement contains a magic number: numberofLoops > 500
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,Cycle_Test,The following statement contains a magic number: Assert.AreEqual(1140' processor.GetCycleCount());
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: int.Parse(values[0]) % 2 != 0
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: string.IsNullOrEmpty(values[8])
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,FunctionalProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\FunctionalProcessorTests.cs,LoadCycleTestResults,The following statement contains a magic number: CycleTestDataResults.Add(new TestData                      {                          ProgramCounter = Int32.Parse(values[1]' System.Globalization.NumberStyles.HexNumber)'                          Accumulator = Int32.Parse(values[2]' System.Globalization.NumberStyles.HexNumber)'                          XRegister = Int32.Parse(values[3]' System.Globalization.NumberStyles.HexNumber)'                          YRegister = Int32.Parse(values[4]' System.Globalization.NumberStyles.HexNumber)'                          Flags = Int32.Parse(values[5]' System.Globalization.NumberStyles.HexNumber)'                          StackPointer = Int32.Parse(values[6]' System.Globalization.NumberStyles.HexNumber)'                          CycleCount = int.Parse(values[7])'                      });
Magic Number,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,BRK_Stack_Pointer_Correct,The following statement contains a magic number: Assert.That(processor.StackPointer' Is.EqualTo(stackLocation - 3));
Magic Number,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,BRK_Stack_Set_Flag_Operations_Correctly,The following statement contains a magic number: Assert.That(processor.ReadMemoryValue(stackLocation + 0x100 - 2)' Is.EqualTo(expectedValue));
Magic Number,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,BRK_Stack_Non_Set_Flag_Operations_Correctly,The following statement contains a magic number: Assert.That(processor.ReadMemoryValue(stackLocation + 0x100 - 2)' Is.EqualTo(expectedValue));
Magic Number,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,JSR_Stack_Pointer_Correct,The following statement contains a magic number: Assert.That(processor.StackPointer' Is.EqualTo(stackLocation - 2));
Magic Number,Processor.UnitTests,ProcessorTests,D:\research\architectureSmells\repos\aaronmell_6502Net\Processor.UnitTests\ProcessorTests.cs,RTS_Stack_Pointer_Has_Correct_Value,The following statement contains a magic number: Assert.That(processor.StackPointer' Is.EqualTo(stackLocation + 2));
