Implementation smell,Namespace,Class,File,Method,Description
Long Method,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The method has 106 lines of code.
Long Method,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Mangle,The method has 206 lines of code.
Complex Method,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,Cyclomatic complexity of the method is 10
Complex Method,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,Cyclomatic complexity of the method is 10
Complex Method,Confuser.Protections,AntiDebugPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiDebugProtection.cs,Execute,Cyclomatic complexity of the method is 15
Complex Method,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,Confuser.Protections.AntiTamper,JITMethodBodyWriter,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Write,Cyclomatic complexity of the method is 8
Complex Method,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,Cyclomatic complexity of the method is 15
Complex Method,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,Cyclomatic complexity of the method is 8
Complex Method,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,HandleInject,Cyclomatic complexity of the method is 10
Complex Method,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,Cyclomatic complexity of the method is 8
Complex Method,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertEmptyStateUpdate,Cyclomatic complexity of the method is 9
Complex Method,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,Cyclomatic complexity of the method is 9
Complex Method,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,ReplaceCFG,Cyclomatic complexity of the method is 11
Complex Method,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,Cyclomatic complexity of the method is 13
Complex Method,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,Cyclomatic complexity of the method is 31
Complex Method,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,Cyclomatic complexity of the method is 10
Complex Method,Confuser.Protections.ControlFlow,BlockParser,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\BlockParser.cs,ParseBody,Cyclomatic complexity of the method is 21
Complex Method,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,Cyclomatic complexity of the method is 10
Complex Method,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,SpiltStatements,Cyclomatic complexity of the method is 8
Complex Method,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,InverseBranch,Cyclomatic complexity of the method is 12
Complex Method,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Mangle,Cyclomatic complexity of the method is 26
Complex Method,Confuser.Protections.ControlFlow,Trace,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Trace,Cyclomatic complexity of the method is 17
Complex Method,Confuser.Protections.ReferenceProxy,MildMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\MildMode.cs,ProcessCall,Cyclomatic complexity of the method is 9
Complex Method,Confuser.Protections.ReferenceProxy,ReferenceProxyPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\ReferenceProxyPhase.cs,ProcessMethod,Cyclomatic complexity of the method is 12
Complex Method,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,Cyclomatic complexity of the method is 10
Long Parameter List,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The method has 5 parameters. Parameters: context' compCtx' stubModule' comp' random
Long Parameter List,Confuser.Protections.AntiTamper,JITMethodBodyWriter,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,JITMethodBodyWriter,The method has 5 parameters. Parameters: md' body' jitBody' mulSeed' keepMaxStack
Long Parameter List,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The method has 5 parameters. Parameters: ctx' index' type' currentState' targetState
Long Parameter List,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeConstant64,The method has 5 parameters. Parameters: moduleCtx' hi' lo' valueType' references
Long Parameter List,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,UpdateReference,The method has 5 parameters. Parameters: moduleCtx' valueType' references' buffIndex' typeID
Long Parameter List,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The method has 5 parameters. Parameters: context' parameters' moduleCtx' ldc' ldInit
Long Parameter List,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,ParseParameters,The method has 5 parameters. Parameters: method' context' parameters' random' disableOpti
Long Statement,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,GetId,The length of the statement  "			assembly.Version = new Version(assemblyRow.MajorVersion' assemblyRow.MinorVersion' assemblyRow.BuildNumber' assemblyRow.RevisionNumber); " is 136.
Long Statement,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The length of the statement  "			var rtType = rt.GetRuntimeType(compCtx.CompatMode ? "Confuser.Runtime.CompressorCompat" : "Confuser.Runtime.Compressor"); " is 121.
Long Statement,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The length of the statement  "						instrs.InsertRange(i - 2' compCtx.Deriver.EmitDerivation(decrypter' context' (Local)ldDst.Operand' (Local)ldSrc.Operand)); " is 122.
Long Statement,Confuser.Protections,KeyInjector,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,OnWriterEvent,The length of the statement  "						resTbl.Add(new RawManifestResourceRow(resource.Item1' resource.Item2' writer.MetaData.StringsHeap.Add(resource.Item3)' impl)); " is 126.
Long Statement,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The length of the statement  "				var bodyWriter = new JITMethodBodyWriter(writer.MetaData' method.Body' jitBody' random.NextUInt32()' writer.MetaData.KeepOldMaxStack || method.Body.KeepOldMaxStack); " is 165.
Long Statement,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,HandleInject,The length of the statement  "			IEnumerable<IDnlibDef> members = InjectHelper.Inject(initType' context.CurrentModule.GlobalType' context.CurrentModule); " is 120.
Long Statement,Confuser.Protections.Compress,ResourceRecorder,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\ExtractPhase.cs,OnWriterEvent,The length of the statement  "					Dictionary<uint' byte[]> stringDict = writer.MetaData.StringsHeap.GetAllRawData().ToDictionary(pair => pair.Key' pair => pair.Value); " is 133.
Long Statement,Confuser.Protections.Compress,ResourceRecorder,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\ExtractPhase.cs,OnWriterEvent,The length of the statement  "						ctx.ManifestResources.Add(Tuple.Create(resource.Offset' resource.Flags' Encoding.UTF8.GetString(stringDict[resource.Name]))); " is 125.
Long Statement,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The length of the statement  "				native = new MethodDefUser(""' MethodSig.CreateStatic(int32' int32)' MethodAttributes.PinvokeImpl | MethodAttributes.PrivateScope | MethodAttributes.Static); " is 157.
Long Statement,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The length of the statement  "				native.ImplAttributes = MethodImplAttributes.Native | MethodImplAttributes.Unmanaged | MethodImplAttributes.PreserveSig; " is 120.
Long Statement,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The length of the statement  "				//var suppressAttr = ctx.Method.Module.CorLibTypes.GetTypeRef("System.Security"' "SuppressUnmanagedCodeSecurityAttribute").ResolveThrow(); " is 138.
Long Statement,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The length of the statement  "				//native.CustomAttributes.Add(new CustomAttribute((MemberRef)ctx.Method.Module.Import(suppressAttr.FindDefaultConstructor()))); " is 127.
Long Statement,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The length of the statement  "					reg = codeGen.GenerateX86(inverse' (v' r) => { return new[] { x86Instruction.Create(x86OpCode.POP' new x86RegisterOperand(r)) }; }); " is 132.
Long Statement,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The length of the statement  "					EncodeConstant64(moduleCtx' (uint)((long)entry.Key >> 32)' (uint)(long)entry.Key' context.CurrentModule.CorLibTypes.Int64' entry.Value); " is 136.
Long Statement,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The length of the statement  "			IEnumerable<IDnlibDef> members = InjectHelper.Inject(rt.GetRuntimeType("Confuser.Runtime.Constant")' context.CurrentModule.GlobalType' context.CurrentModule); " is 158.
Long Statement,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The length of the statement  "			var dataType = new TypeDefUser(""' moduleCtx.Name.RandomName()' context.CurrentModule.CorLibTypes.GetTypeRef("System"' "ValueType")); " is 133.
Long Statement,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The length of the statement  "				do decoderDesc.NumberID = (byte)(moduleCtx.Random.NextByte() & 3); while (decoderDesc.NumberID == decoderDesc.StringID); " is 120.
Long Statement,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The length of the statement  "				do decoderDesc.InitializerID = (byte)(moduleCtx.Random.NextByte() & 3); while (decoderDesc.InitializerID == decoderDesc.StringID || decoderDesc.InitializerID == decoderDesc.NumberID); " is 183.
Long Statement,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,MutateInitializer,The length of the statement  "						instrs.InsertRange(i - 2' moduleCtx.ModeHandler.EmitDecrypt(moduleCtx.InitMethod' moduleCtx' (Local)ldBlock.Operand' (Local)ldKey.Operand)); " is 140.
Long Statement,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,DisabledOptimization,The length of the statement  "					disableOpti |= ((DebuggableAttribute.DebuggingModes)(int)debugAttr.ConstructorArguments[0].Value & DebuggableAttribute.DebuggingModes.DisableOptimizations) != 0; " is 161.
Long Statement,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,DisabledOptimization,The length of the statement  "					disableOpti |= ((DebuggableAttribute.DebuggingModes)(int)debugAttr.ConstructorArguments[0].Value & DebuggableAttribute.DebuggingModes.DisableOptimizations) != 0; " is 161.
Long Statement,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,Execute,The length of the statement  "			RandomGenerator random = context.Registry.GetService<IRandomService>().GetRandomGenerator(ControlFlowProtection._FullId); " is 121.
Long Statement,Confuser.Protections.ControlFlow,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\x86Predicate.cs,Compile,The length of the statement  "				native = new MethodDefUser(ctx.Context.Registry.GetService<INameService>().RandomName()' MethodSig.CreateStatic(int32' int32)' MethodAttributes.PinvokeImpl | MethodAttributes.PrivateScope | MethodAttributes.Static); " is 215.
Long Statement,Confuser.Protections.ControlFlow,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\x86Predicate.cs,Compile,The length of the statement  "				native.ImplAttributes = MethodImplAttributes.Native | MethodImplAttributes.Unmanaged | MethodImplAttributes.PreserveSig; " is 120.
Long Statement,Confuser.Protections.ControlFlow,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\x86Predicate.cs,Compile,The length of the statement  "				//var suppressAttr = ctx.Method.Module.CorLibTypes.GetTypeRef("System.Security"' "SuppressUnmanagedCodeSecurityAttribute").ResolveThrow(); " is 138.
Long Statement,Confuser.Protections.ControlFlow,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\x86Predicate.cs,Compile,The length of the statement  "				//native.CustomAttributes.Add(new CustomAttribute((MemberRef)ctx.Method.Module.Import(suppressAttr.FindDefaultConstructor()))); " is 127.
Long Statement,Confuser.Protections.ControlFlow,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\x86Predicate.cs,Compile,The length of the statement  "					reg = codeGen.GenerateX86(inverse' (v' r) => { return new[] { x86Instruction.Create(x86OpCode.POP' new x86RegisterOperand(r)) }; }); " is 132.
Long Statement,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Mangle,The length of the statement  "								Instruction nextKeyInstr = Instruction.CreateLdcI4(xorKey ^ (predicate != null ? predicate.GetSwitchKey(nextKey) : nextKey)); " is 125.
Long Statement,Confuser.Protections.ReferenceProxy,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\x86Encoding.cs,Compile,The length of the statement  "			native = new MethodDefUser(ctx.Context.Registry.GetService<INameService>().RandomName()' MethodSig.CreateStatic(int32' int32)' MethodAttributes.PinvokeImpl | MethodAttributes.PrivateScope | MethodAttributes.Static); " is 215.
Long Statement,Confuser.Protections.ReferenceProxy,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\x86Encoding.cs,Compile,The length of the statement  "			native.ImplAttributes = MethodImplAttributes.Native | MethodImplAttributes.Unmanaged | MethodImplAttributes.PreserveSig; " is 120.
Long Statement,Confuser.Protections.ReferenceProxy,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\x86Encoding.cs,Compile,The length of the statement  "				reg = codeGen.GenerateX86(inverse' (v' r) => { return new[] { x86Instruction.Create(x86OpCode.POP' new x86RegisterOperand(r)) }; }); " is 132.
Long Statement,Confuser.Protections.ReferenceProxy,RPMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\RPMode.cs,GetDelegateType,The length of the statement  "			ret = new TypeDefUser(ctx.Name.ObfuscateName(ctx.Method.DeclaringType.Namespace' RenameMode.Unicode)' ctx.Name.RandomName()' ctx.Module.CorLibTypes.GetTypeRef("System"' "MulticastDelegate")); " is 191.
Long Statement,Confuser.Protections.ReferenceProxy,RPMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\RPMode.cs,GetDelegateType,The length of the statement  "			var ctor = new MethodDefUser(".ctor"' MethodSig.CreateInstance(ctx.Module.CorLibTypes.Void' ctx.Module.CorLibTypes.Object' ctx.Module.CorLibTypes.IntPtr)); " is 155.
Long Statement,Confuser.Protections.ReferenceProxy,RPMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\RPMode.cs,GetDelegateType,The length of the statement  "			ctor.Attributes = MethodAttributes.Assembly | MethodAttributes.HideBySig | MethodAttributes.RTSpecialName | MethodAttributes.SpecialName; " is 137.
Long Statement,Confuser.Protections.ReferenceProxy,RPMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\RPMode.cs,GetDelegateType,The length of the statement  "			invoke.Attributes = MethodAttributes.Assembly | MethodAttributes.HideBySig | MethodAttributes.Virtual | MethodAttributes.NewSlot; " is 129.
Long Statement,Confuser.Protections.ReferenceProxy,ReferenceProxyPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\ReferenceProxyPhase.cs,Execute,The length of the statement  "			RandomGenerator random = context.Registry.GetService<IRandomService>().GetRandomGenerator(ReferenceProxyProtection._FullId); " is 124.
Long Statement,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,InjectHelpers,The length of the statement  "			IEnumerable<IDnlibDef> members = InjectHelper.Inject(rt.GetRuntimeType(rtName)' context.CurrentModule.GlobalType' context.CurrentModule); " is 137.
Long Statement,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,InjectHelpers,The length of the statement  "			var dataType = new TypeDefUser(""' moduleCtx.Name.RandomName()' context.CurrentModule.CorLibTypes.GetTypeRef("System"' "ValueType")); " is 133.
Long Statement,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,MutateInitializer,The length of the statement  "						instrs.InsertRange(i - 2' moduleCtx.ModeHandler.EmitDecrypt(moduleCtx.InitMethod' moduleCtx' (Local)ldBlock.Operand' (Local)ldKey.Operand)); " is 140.
Complex Conditional,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The conditional expression  "operand.DeclaringType.DefinitionAssembly.IsCorLib() &&  						    operand.DeclaringType.Namespace == "System.Runtime.CompilerServices" &&  						    operand.DeclaringType.Name == "RuntimeHelpers" &&  						    operand.Name == "InitializeArray""  is complex.
Complex Conditional,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The conditional expression  "(operand == -1 || operand == 0 || operand == 1) && (moduleCtx.Elements & EncodeElements.Primitive) == 0"  is complex.
Complex Conditional,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The conditional expression  "(operand == -1 || operand == 0 || operand == 1) && (moduleCtx.Elements & EncodeElements.Primitive) == 0"  is complex.
Complex Conditional,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJump,The conditional expression  "!Method.Module.IsClr40 && JunkCode &&  			    !Method.DeclaringType.HasGenericParameters && !Method.HasGenericParameters &&  			    (instrs[0].OpCode.FlowControl == FlowControl.Call || instrs[0].OpCode.FlowControl == FlowControl.Next)"  is complex.
Complex Conditional,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The conditional expression  "i + 2 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 1].OpCode.Code == Code.Ldvirtftn &&  				    block.Instructions[i + 2].OpCode.Code == Code.Newobj"  is complex.
Complex Conditional,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The conditional expression  "i + 4 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Ldc_I4 &&  				    block.Instructions[i + 1].OpCode.Code == Code.Newarr &&  				    block.Instructions[i + 2].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 3].OpCode.Code == Code.Ldtoken &&  				    block.Instructions[i + 4].OpCode.Code == Code.Call"  is complex.
Complex Conditional,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,SpiltStatements,The conditional expression  "(instr.OpCode.OpCodeType != OpCodeType.Prefix && trace.AfterStack[instr.Offset] == 0 &&  				     requiredInstr.Count == 0) &&  				    (shouldSpilt || ctx.Intensity > ctx.Random.NextDouble())"  is complex.
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: byte[] key = random.NextBytes(4 + maxLen);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: key[1] = (byte)(compCtx.EntryPointToken >> 8);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: key[2] = (byte)(compCtx.EntryPointToken >> 16);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: key[2] = (byte)(compCtx.EntryPointToken >> 16);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: key[3] = (byte)(compCtx.EntryPointToken >> 24);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: key[3] = (byte)(compCtx.EntryPointToken >> 24);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: name[i] *= key[i + 4];
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: byte[] encrypted = compCtx.Encrypt(comp' entry.Value' state' progress => {  					progress = (progress + moduleIndex) / modules.Count;  					context.Logger.Progress((int)(progress * 10000)' 10000);  				});
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,PackModules,The following statement contains a magic number: byte[] encrypted = compCtx.Encrypt(comp' entry.Value' state' progress => {  					progress = (progress + moduleIndex) / modules.Count;  					context.Logger.Progress((int)(progress * 10000)' 10000);  				});
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: byte[] encryptedModule = compCtx.Encrypt(comp' compCtx.OriginModule' seed'  			                                         progress => context.Logger.Progress((int)(progress * 10000)' 10000));
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: byte[] encryptedModule = compCtx.Encrypt(comp' compCtx.OriginModule' seed'  			                                         progress => context.Logger.Progress((int)(progress * 10000)' 10000));
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: MutationHelper.InjectKeys(entryPoint'  			                          new[] { 0' 1 }'  			                          new[] { encryptedModule.Length >> 2' (int)seed });
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: Instruction ldDst = instrs[i - 2];
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections,Compressor,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,InjectStub,The following statement contains a magic number: instrs.InsertRange(i - 2' compCtx.Deriver.EmitDerivation(decrypter' context' (Local)ldDst.Operand' (Local)ldSrc.Operand));
Magic Number,Confuser.Protections,KeyInjector,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\Compressor.cs,OnWriterEvent,The following statement contains a magic number: MutationHelper.InjectKey(writer.Module.EntryPoint' 2' (int)sigToken);
Magic Number,Confuser.Protections,InvalidMDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\InvalidMetadataProtection.cs,OnWriterEvent,The following statement contains a magic number: int r = random.NextInt32(8' 16);
Magic Number,Confuser.Protections,InvalidMDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\InvalidMetadataProtection.cs,OnWriterEvent,The following statement contains a magic number: int r = random.NextInt32(8' 16);
Magic Number,Confuser.Protections,InvalidMDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\InvalidMetadataProtection.cs,OnWriterEvent,The following statement contains a magic number: r = random.NextInt32(8' 16);
Magic Number,Confuser.Protections,InvalidMDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\InvalidMetadataProtection.cs,OnWriterEvent,The following statement contains a magic number: r = random.NextInt32(8' 16);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,GetFileLength,The following statement contains a magic number: return (uint)Body.Length + 4;
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,WriteTo,The following statement contains a magic number: writer.Write((uint)(Body.Length >> 2));
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: writer.WriteZeros(4 - ((int)ms.Length & 3));
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: writer.WriteZeros(4 - ((int)ms.Length & 3));
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Debug.Assert(Body.Length % 4 == 0);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: uint data = Body[i] | (uint)(Body[i + 1] << 8) | (uint)(Body[i + 2] << 16) | (uint)(Body[i + 3] << 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: uint data = Body[i] | (uint)(Body[i + 1] << 8) | (uint)(Body[i + 2] << 16) | (uint)(Body[i + 3] << 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: uint data = Body[i] | (uint)(Body[i + 1] << 8) | (uint)(Body[i + 2] << 16) | (uint)(Body[i + 3] << 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: uint data = Body[i] | (uint)(Body[i + 1] << 8) | (uint)(Body[i + 2] << 16) | (uint)(Body[i + 3] << 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: uint data = Body[i] | (uint)(Body[i + 1] << 8) | (uint)(Body[i + 2] << 16) | (uint)(Body[i + 3] << 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Body[i + 1] ^= (byte)(state >> 8);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Body[i + 2] ^= (byte)(state >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Body[i + 2] ^= (byte)(state >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Body[i + 3] ^= (byte)(state >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: Body[i + 3] ^= (byte)(state >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: counter ^= (state >> 5) | (state << 27);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following statement contains a magic number: counter ^= (state >> 5) | (state << 27);
Magic Number,Confuser.Protections.AntiTamper,JITMethodBodyWriter,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Write,The following statement contains a magic number: jitBody.Options |= 8;
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,GetFileLength,The following statement contains a magic number: return (uint)bodies.Count * 8 + 4;
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,GetFileLength,The following statement contains a magic number: return (uint)bodies.Count * 8 + 4;
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,WriteTo,The following statement contains a magic number: uint length = GetFileLength() - 4;
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,WriteTo,The following statement contains a magic number: Debug.Assert((length + entry.Value.Offset) % 4 == 0);
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,WriteTo,The following statement contains a magic number: writer.Write((length + entry.Value.Offset) >> 2);
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,PopulateSection,The following statement contains a magic number: section.Add(entry.Value' 4);
Magic Number,Confuser.Protections.AntiTamper,JITBodyIndex,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,PopulateSection,The following statement contains a magic number: Debug.Assert(entry.Value.GetFileLength() % 4 == 0);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: fieldLayout = new byte[6];
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: int index = random.NextInt32(0' 6);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: index = random.NextInt32(0' 6);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: i < 6
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,HandleInject,The following statement contains a magic number: j < 6
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: var nameBuffer = new byte[8];
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[1] = (byte)(name1 >> 8);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[2] = (byte)(name1 >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[2] = (byte)(name1 >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[3] = (byte)(name1 >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[3] = (byte)(name1 >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[4] = (byte)(name2 >> 0);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[5] = (byte)(name2 >> 8);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[5] = (byte)(name2 >> 8);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[6] = (byte)(name2 >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[6] = (byte)(name2 >> 16);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[7] = (byte)(name2 >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: nameBuffer[7] = (byte)(name2 >> 24);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: newSection.Add(new ByteArrayChunk(new byte[4])' 4);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,CreateSection,The following statement contains a magic number: newSection.Add(new ByteArrayChunk(new byte[4])' 4);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 6;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 2 + optSize;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Write(new byte[8]' 0' 8);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Write(new byte[8]' 0' 8);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 8;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 16;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: encSize >>= 2;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,EncryptSection,The following statement contains a magic number: var byteResult = new byte[encSize << 2];
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,Hash,The following statement contains a magic number: size >>= 2;
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: z = (x >> 5) | (x << 27);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: z = (x >> 5) | (x << 27);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: x = (c >> 3) | (c << 29);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: x = (c >> 3) | (c << 29);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: c = (v >> 7) | (v << 25);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: c = (v >> 7) | (v << 25);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: v = (z >> 11) | (z << 21);
Magic Number,Confuser.Protections.AntiTamper,JITMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITMode.cs,DeriveKey,The following statement contains a magic number: v = (z >> 11) | (z << 21);
Magic Number,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (i % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Magic Number,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (i % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Magic Number,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (i % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Magic Number,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (i % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,HandleInject,The following statement contains a magic number: MutationHelper.InjectKeys(initMethod'  			                          new[] { 0' 1' 2' 3' 4 }'  			                          new[] { (int)(name1 * name2)' (int)z' (int)x' (int)c' (int)v });
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: var nameBuffer = new byte[8];
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[1] = (byte)(name1 >> 8);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[2] = (byte)(name1 >> 16);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[2] = (byte)(name1 >> 16);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[3] = (byte)(name1 >> 24);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[3] = (byte)(name1 >> 24);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[4] = (byte)(name2 >> 0);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[5] = (byte)(name2 >> 8);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[5] = (byte)(name2 >> 8);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[6] = (byte)(name2 >> 16);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[6] = (byte)(name2 >> 16);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[7] = (byte)(name2 >> 24);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: nameBuffer[7] = (byte)(name2 >> 24);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: newSection.Add(encryptedChunk' 4);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: newSection.Add(new ByteArrayChunk(new byte[4])' 4);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,CreateSections,The following statement contains a magic number: newSection.Add(new ByteArrayChunk(new byte[4])' 4);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 6;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 2 + optSize;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Write(new byte[8]' 0' 8);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Write(new byte[8]' 0' 8);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 8;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: stream.Position += 16;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: encSize >>= 2;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,EncryptSection,The following statement contains a magic number: var byteResult = new byte[encSize << 2];
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,Hash,The following statement contains a magic number: size >>= 2;
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: z = (x >> 5) | (x << 27);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: z = (x >> 5) | (x << 27);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: x = (c >> 3) | (c << 29);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: x = (c >> 3) | (c << 29);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: c = (v >> 7) | (v << 25);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: c = (v >> 7) | (v << 25);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: v = (z >> 11) | (z << 21);
Magic Number,Confuser.Protections.AntiTamper,NormalMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalMode.cs,DeriveKey,The following statement contains a magic number: v = (z >> 11) | (z << 21);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: Array.Resize(ref data' (data.Length + 3) & ~3);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: Array.Resize(ref data' (data.Length + 3) & ~3);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: var datum = (uint)(data[i + 0] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24));
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: var datum = (uint)(data[i + 0] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24));
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: var datum = (uint)(data[i + 0] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24));
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: var datum = (uint)(data[i + 0] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24));
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: var datum = (uint)(data[i + 0] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24));
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: encryptedData[i + 1] = (byte)(encrypted >> 8);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: encryptedData[i + 2] = (byte)(encrypted >> 16);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: encryptedData[i + 2] = (byte)(encrypted >> 16);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: encryptedData[i + 3] = (byte)(encrypted >> 24);
Magic Number,Confuser.Protections.Compress,CompressorContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\CompressorContext.cs,Encrypt,The following statement contains a magic number: encryptedData[i + 3] = (byte)(encrypted >> 24);
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (state % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (state % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (state % 3) {  					case 0:  						ret[i] += k1;  						break;  					case 1:  						ret[i] ^= k2;  						break;  					case 2:  						ret[i] *= k3;  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following statement contains a magic number: switch (state % 3) {  					case 0:  						ret[i] += k1;  						break;  					case 1:  						ret[i] ^= k2;  						break;  					case 2:  						ret[i] *= k3;  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k1);  						yield return Instruction.Create(OpCodes.Add);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k2);  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k3);  						yield return Instruction.Create(OpCodes.Mul);  						break;  				}
Magic Number,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following statement contains a magic number: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k1);  						yield return Instruction.Create(OpCodes.Add);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k2);  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k3);  						yield return Instruction.Create(OpCodes.Mul);  						break;  				}
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertEmptyStateUpdate,The following statement contains a magic number: int updateId = ctx.Random.NextInt32(3);
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertEmptyStateUpdate,The following statement contains a magic number: int getId = ctx.Random.NextInt32(3);
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The following statement contains a magic number: int updateId = ctx.Random.NextInt32(3);
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The following statement contains a magic number: int getId = ctx.Random.NextInt32(3);
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The following statement contains a magic number: int[] stateIds = { 0' 1' 2' 3 };
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The following statement contains a magic number: int[] stateIds = { 0' 1' 2' 3 };
Magic Number,Confuser.Protections.Constants,ReferenceReplacer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,InsertStateGetAndUpdate,The following statement contains a magic number: int getId = ctx.Random.NextInt32(3);
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateExplicit,The following statement contains a magic number: switch (id) {  					case 0:  						A = value;  						break;  					case 1:  						B = value;  						break;  					case 2:  						C = value;  						break;  					case 3:  						D = value;  						break;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateExplicit,The following statement contains a magic number: switch (id) {  					case 0:  						A = value;  						break;  					case 1:  						B = value;  						break;  					case 2:  						C = value;  						break;  					case 3:  						D = value;  						break;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateIncremental,The following statement contains a magic number: switch (id) {  					case 0:  						A *= value;  						break;  					case 1:  						B += value;  						break;  					case 2:  						C ^= value;  						break;  					case 3:  						D -= value;  						break;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateIncremental,The following statement contains a magic number: switch (id) {  					case 0:  						A *= value;  						break;  					case 1:  						B += value;  						break;  					case 2:  						C ^= value;  						break;  					case 3:  						D -= value;  						break;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,GetIncrementalUpdate,The following statement contains a magic number: switch (id) {  					case 0:  						return A ^ target;  					case 1:  						return target - B;  					case 2:  						return C ^ target;  					case 3:  						return D - target;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,GetIncrementalUpdate,The following statement contains a magic number: switch (id) {  					case 0:  						return A ^ target;  					case 1:  						return target - B;  					case 2:  						return C ^ target;  					case 3:  						return D - target;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,Get,The following statement contains a magic number: switch (id) {  					case 0:  						return A;  					case 1:  						return B;  					case 2:  						return C;  					case 3:  						return D;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,Get,The following statement contains a magic number: switch (id) {  					case 0:  						return A;  					case 1:  						return B;  					case 2:  						return C;  					case 3:  						return D;  				}
Magic Number,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,EncodeFlag,The following statement contains a magic number: fl |= (byte)(getId << 2);
Magic Number,Confuser.Protections.Constants,x86Encoding,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\x86Mode.cs,Compile,The following statement contains a magic number: ctx.DynCipher.GenerateExpressionPair(  						ctx.Random'  						new VariableExpression { Variable = var }' new VariableExpression { Variable = result }'  						4' out expression' out inverse);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: var encodedBuff = new byte[moduleCtx.EncodedBuffer.Count * 4];
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: encodedBuff[buffIndex++] = (byte)((dat >> 8) & 0xff);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: encodedBuff[buffIndex++] = (byte)((dat >> 16) & 0xff);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: encodedBuff[buffIndex++] = (byte)((dat >> 24) & 0xff);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: uint compressedLen = (uint)(encodedBuff.Length + 3) / 4;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: uint compressedLen = (uint)(encodedBuff.Length + 3) / 4;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: state ^= state >> 12;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: state ^= state << 25;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: state ^= state >> 27;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: var encryptedBuffer = new byte[compressedBuff.Length * 4];
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: Buffer.BlockCopy(enc' 0' encryptedBuffer' buffIndex * 4' 0x40);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,Execute,The following statement contains a magic number: MutationHelper.InjectKeys(moduleCtx.InitMethod'  			                          new[] { 0' 1 }'  			                          new[] { encryptedBuffer.Length / 4' (int)keySeed });
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: uint id = (uint)buffIndex | (uint)(decoder.Item2.InitializerID << 30);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs[i - 4].Operand = (int)id;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs[i - 3].OpCode = OpCodes.Call;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: var arrType = new SZArraySig(((ITypeDefOrRef)instrs[i - 3].Operand).ToTypeSig());
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs[i - 3].Operand = new MethodSpecUser(decoder.Item1' new GenericInstMethodSig(arrType));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeInitializer,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: int integral = buff.Length / 4' remainder = buff.Length % 4;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: int integral = buff.Length / 4' remainder = buff.Length % 4;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: var data = (uint)(buff[i * 4] | (buff[i * 4 + 1] << 8) | (buff[i * 4 + 2] << 16) | (buff[i * 4 + 3] << 24));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: int baseIndex = integral * 4;
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,EncodeByteArray,The following statement contains a magic number: r |= (uint)(buff[baseIndex + i] << (i * 8));
Magic Number,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,UpdateReference,The following statement contains a magic number: uint id = (uint)buffIndex | (uint)(typeID(decoder.Item2) << 30);
Magic Number,Confuser.Protections.Constants,ByteArrayComparer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,GetHashCode,The following statement contains a magic number: int ret = 31;
Magic Number,Confuser.Protections.Constants,ByteArrayComparer,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,GetHashCode,The following statement contains a magic number: ret = ret * 17 + v;
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,Execute,The following statement contains a magic number: moduleCtx.DecoderCount = parameters.GetParameter(context' context.CurrentModule' "decoderCount"' 5);
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The following statement contains a magic number: decoderDesc.StringID = (byte)(moduleCtx.Random.NextByte() & 3);
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The following statement contains a magic number: decoderDesc.NumberID = (byte)(moduleCtx.Random.NextByte() & 3);
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The following statement contains a magic number: decoderDesc.InitializerID = (byte)(moduleCtx.Random.NextByte() & 3);
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,InjectHelpers,The following statement contains a magic number: MutationHelper.InjectKeys(decoderInst'  				                          new[] { 0' 1' 2 }'  				                          new int[] { decoderDesc.StringID' decoderDesc.NumberID' decoderDesc.InitializerID });
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: Instruction ldBlock = instrs[i - 2];
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections.Constants,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: instrs.InsertRange(i - 2' moduleCtx.ModeHandler.EmitDecrypt(moduleCtx.InitMethod' moduleCtx' (Local)ldBlock.Operand' (Local)ldKey.Operand));
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJump,The following statement contains a magic number: switch (Random.NextInt32(3)) {  					case 0:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_0));  						instrs.Add(Instruction.Create(OpCodes.Brtrue' instrs[0]));  						break;    					case 1:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_1));  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						break;    					case 2: // Take that' de4dot + ILSpy :)  						bool addDefOk = false;  						if (Random.NextBoolean()) {  							TypeDef randomType;  							randomType = Method.Module.Types[Random.NextInt32(Method.Module.Types.Count)];    							if (randomType.HasMethods) {  								instrs.Add(Instruction.Create(OpCodes.Ldtoken' randomType.Methods[Random.NextInt32(randomType.Methods.Count)]));  								instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.GetTypeRef("System"' "RuntimeMethodHandle")));  								addDefOk = true;  							}  						}    						if (!addDefOk) {  							instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  							instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.Int32.TypeDefOrRef));  						}  						Instruction pop = Instruction.Create(OpCodes.Pop);  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  						instrs.Add(pop);  						break;  				}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJump,The following statement contains a magic number: switch (Random.NextInt32(3)) {  					case 0:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_0));  						instrs.Add(Instruction.Create(OpCodes.Brtrue' instrs[0]));  						break;    					case 1:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_1));  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						break;    					case 2: // Take that' de4dot + ILSpy :)  						bool addDefOk = false;  						if (Random.NextBoolean()) {  							TypeDef randomType;  							randomType = Method.Module.Types[Random.NextInt32(Method.Module.Types.Count)];    							if (randomType.HasMethods) {  								instrs.Add(Instruction.Create(OpCodes.Ldtoken' randomType.Methods[Random.NextInt32(randomType.Methods.Count)]));  								instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.GetTypeRef("System"' "RuntimeMethodHandle")));  								addDefOk = true;  							}  						}    						if (!addDefOk) {  							instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  							instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.Int32.TypeDefOrRef));  						}  						Instruction pop = Instruction.Create(OpCodes.Pop);  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  						instrs.Add(pop);  						break;  				}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following statement contains a magic number: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following statement contains a magic number: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following statement contains a magic number: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following statement contains a magic number: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Magic Number,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following statement contains a magic number: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Magic Number,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,ParseParameters,The following statement contains a magic number: int rawIntensity = parameters.GetParameter(context' method' "intensity"' 60);
Magic Number,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,ParseParameters,The following statement contains a magic number: ret.Intensity = rawIntensity / 100.0;
Magic Number,Confuser.Protections.ControlFlow,ControlFlowPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\ControlFlowPhase.cs,ParseParameters,The following statement contains a magic number: ret.Depth = parameters.GetParameter(context' method' "depth"' 4);
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: skipCount = 2;
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 2 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 1].OpCode.Code == Code.Ldvirtftn &&  				    block.Instructions[i + 2].OpCode.Code == Code.Newobj
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 2 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 1].OpCode.Code == Code.Ldvirtftn &&  				    block.Instructions[i + 2].OpCode.Code == Code.Newobj
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: skipCount = 4;
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 4 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Ldc_I4 &&  				    block.Instructions[i + 1].OpCode.Code == Code.Newarr &&  				    block.Instructions[i + 2].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 3].OpCode.Code == Code.Ldtoken &&  				    block.Instructions[i + 4].OpCode.Code == Code.Call
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 4 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Ldc_I4 &&  				    block.Instructions[i + 1].OpCode.Code == Code.Newarr &&  				    block.Instructions[i + 2].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 3].OpCode.Code == Code.Ldtoken &&  				    block.Instructions[i + 4].OpCode.Code == Code.Call
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 4 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Ldc_I4 &&  				    block.Instructions[i + 1].OpCode.Code == Code.Newarr &&  				    block.Instructions[i + 2].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 3].OpCode.Code == Code.Ldtoken &&  				    block.Instructions[i + 4].OpCode.Code == Code.Call
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,SpiltFragments,The following statement contains a magic number: i + 4 < block.Instructions.Count &&  				    block.Instructions[i + 0].OpCode.Code == Code.Ldc_I4 &&  				    block.Instructions[i + 1].OpCode.Code == Code.Newarr &&  				    block.Instructions[i + 2].OpCode.Code == Code.Dup &&  				    block.Instructions[i + 3].OpCode.Code == Code.Ldtoken &&  				    block.Instructions[i + 4].OpCode.Code == Code.Call
Magic Number,Confuser.Protections.ControlFlow,JumpMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\JumpMangler.cs,Mangle,The following statement contains a magic number: fragments.Count < 4
Magic Number,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Mangle,The following statement contains a magic number: body.MaxStack += 2;
Magic Number,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,Mangle,The following statement contains a magic number: statements.Count < 3
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: int[] order = Enumerable.Range(0' 5).ToArray();
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: desc.OpCodeIndex = order[4];
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: desc.TokenNameOrder = new int[4];
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: Array.Copy(order' 0' desc.TokenNameOrder' 0' 4);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: desc.TokenByteOrder = Enumerable.Range(0' 4).Select(x => x * 8).ToArray();
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: desc.TokenByteOrder = Enumerable.Range(0' 4).Select(x => x * 8).ToArray();
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: var keyInjection = new int[9];
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: Array.Copy(desc.TokenNameOrder' 0' keyInjection' 0' 4);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: Array.Copy(desc.TokenByteOrder' 0' keyInjection' 4' 4);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: Array.Copy(desc.TokenByteOrder' 0' keyInjection' 4' 4);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: keyInjection[8] = desc.OpCodeIndex;
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,GetInitMethod,The following statement contains a magic number: MutationHelper.InjectKeys(injectedMethod' Enumerable.Range(0' 9).ToArray()' keyInjection);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: var name = new char[5];
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: byte[] nameKey = encodeCtx.Random.NextBytes(4);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: i < 4
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: var extra = new byte[8];
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[3] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[3]);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[3] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[3]);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[4] = 0xc0;
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[5] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[2]);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[5] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[2]);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[6] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[1]);
Magic Number,Confuser.Protections.ReferenceProxy,StrongMode,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\StrongMode.cs,EncodeField,The following statement contains a magic number: extra[7] = (byte)(encodedToken >> desc.InitDesc.TokenByteOrder[0]);
Magic Number,Confuser.Protections.ReferenceProxy,ReferenceProxyPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\ReferenceProxyPhase.cs,ParseParameters,The following statement contains a magic number: ret.Depth = parameters.GetParameter(context' method' "depth"' 3);
Magic Number,Confuser.Protections.ReferenceProxy,ReferenceProxyPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ReferenceProxy\ReferenceProxyPhase.cs,ParseParameters,The following statement contains a magic number: ret.Depth = parameters.GetParameter(context' module' "depth"' 3);
Magic Number,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: Instruction ldBlock = instrs[i - 2];
Magic Number,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: instrs.RemoveAt(i - 2);
Magic Number,Confuser.Protections.Resources,InjectPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\InjectPhase.cs,MutateInitializer,The following statement contains a magic number: instrs.InsertRange(i - 2' moduleCtx.ModeHandler.EmitDecrypt(moduleCtx.InitMethod' moduleCtx' (Local)ldBlock.Operand' (Local)ldKey.Operand));
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: moduleBuff = ctx.Context.Registry.GetService<ICompressionService>().Compress(  					moduleBuff'  					progress => ctx.Context.Logger.Progress((int)(progress * 10000)' 10000));
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: moduleBuff = ctx.Context.Registry.GetService<ICompressionService>().Compress(  					moduleBuff'  					progress => ctx.Context.Logger.Progress((int)(progress * 10000)' 10000));
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: uint compressedLen = (uint)(moduleBuff.Length + 3) / 4;
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: uint compressedLen = (uint)(moduleBuff.Length + 3) / 4;
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: state ^= state >> 13;
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: state ^= state << 25;
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: state ^= state >> 27;
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: var encryptedBuffer = new byte[compressedBuff.Length * 4];
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: Buffer.BlockCopy(enc' 0' encryptedBuffer' buffIndex * 4' 0x40);
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: encryptedResource = writer.Constants.Add(new ByteArrayChunk(encryptedBuffer)' 8);
Magic Number,Confuser.Protections.Resources,MDPhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Resources\MDPhase.cs,OnWriterEvent,The following statement contains a magic number: MutationHelper.InjectKeys(ctx.InitMethod'  				                          new[] { 0' 1 }'  				                          new[] { (int)(size / 4)' (int)(keySeed) });
Missing Default,Confuser.Protections.AntiTamper,JITMethodBody,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\JITBody.cs,Serialize,The following switch statement is missing a default case: switch (i) {  						case 0:  							writer.Write((uint)ILCode.Length);  							break;  						case 1:  							writer.Write(MaxStack);  							break;  						case 2:  							writer.Write((uint)EHs.Length);  							break;  						case 3:  							writer.Write((uint)LocalVars.Length);  							break;  						case 4:  							writer.Write(Options);  							break;  						case 5:  							writer.Write(MulSeed);  							break;  					}
Missing Default,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,DeriveKey,The following switch statement is missing a default case: switch (i % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Missing Default,Confuser.Protections.AntiTamper,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\AntiTamper\NormalDeriver.cs,EmitDerivation,The following switch statement is missing a default case: switch (i % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Missing Default,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following switch statement is missing a default case: switch (state % 3) {  					case 0:  						ret[i] = a[i] ^ b[i];  						break;  					case 1:  						ret[i] = a[i] * b[i];  						break;  					case 2:  						ret[i] = a[i] + b[i];  						break;  				}
Missing Default,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,DeriveKey,The following switch statement is missing a default case: switch (state % 3) {  					case 0:  						ret[i] += k1;  						break;  					case 1:  						ret[i] ^= k2;  						break;  					case 2:  						ret[i] *= k3;  						break;  				}
Missing Default,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following switch statement is missing a default case: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Mul);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Add);  						break;  				}
Missing Default,Confuser.Protections.Compress,NormalDeriver,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Compress\NormalDeriver.cs,EmitDerivation,The following switch statement is missing a default case: switch (state % 3) {  					case 0:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k1);  						yield return Instruction.Create(OpCodes.Add);  						break;  					case 1:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k2);  						yield return Instruction.Create(OpCodes.Xor);  						break;  					case 2:  						yield return Instruction.Create(OpCodes.Ldc_I4' (int)k3);  						yield return Instruction.Create(OpCodes.Mul);  						break;  				}
Missing Default,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateExplicit,The following switch statement is missing a default case: switch (id) {  					case 0:  						A = value;  						break;  					case 1:  						B = value;  						break;  					case 2:  						C = value;  						break;  					case 3:  						D = value;  						break;  				}
Missing Default,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,UpdateIncremental,The following switch statement is missing a default case: switch (id) {  					case 0:  						A *= value;  						break;  					case 1:  						B += value;  						break;  					case 2:  						C ^= value;  						break;  					case 3:  						D -= value;  						break;  				}
Missing Default,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,GetIncrementalUpdate,The following switch statement is missing a default case: switch (id) {  					case 0:  						return A ^ target;  					case 1:  						return target - B;  					case 2:  						return C ^ target;  					case 3:  						return D - target;  				}
Missing Default,Confuser.Protections.Constants,CFGState,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\ReferenceReplacer.cs,Get,The following switch statement is missing a default case: switch (id) {  					case 0:  						return A;  					case 1:  						return B;  					case 2:  						return C;  					case 3:  						return D;  				}
Missing Default,Confuser.Protections.Constants,EncodePhase,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\Constants\EncodePhase.cs,ExtractConstants,The following switch statement is missing a default case: switch (elem) {  						case 'S':  						case 's':  							moduleCtx.Elements |= EncodeElements.Strings;  							break;  						case 'N':  						case 'n':  							moduleCtx.Elements |= EncodeElements.Numbers;  							break;  						case 'P':  						case 'p':  							moduleCtx.Elements |= EncodeElements.Primitive;  							break;  						case 'I':  						case 'i':  							moduleCtx.Elements |= EncodeElements.Initializers;  							break;  					}
Missing Default,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJump,The following switch statement is missing a default case: switch (Random.NextInt32(3)) {  					case 0:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_0));  						instrs.Add(Instruction.Create(OpCodes.Brtrue' instrs[0]));  						break;    					case 1:  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4_1));  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						break;    					case 2: // Take that' de4dot + ILSpy :)  						bool addDefOk = false;  						if (Random.NextBoolean()) {  							TypeDef randomType;  							randomType = Method.Module.Types[Random.NextInt32(Method.Module.Types.Count)];    							if (randomType.HasMethods) {  								instrs.Add(Instruction.Create(OpCodes.Ldtoken' randomType.Methods[Random.NextInt32(randomType.Methods.Count)]));  								instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.GetTypeRef("System"' "RuntimeMethodHandle")));  								addDefOk = true;  							}  						}    						if (!addDefOk) {  							instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  							instrs.Add(Instruction.Create(OpCodes.Box' Method.Module.CorLibTypes.Int32.TypeDefOrRef));  						}  						Instruction pop = Instruction.Create(OpCodes.Pop);  						instrs.Add(Instruction.Create(OpCodes.Brfalse' instrs[0]));  						instrs.Add(Instruction.Create(OpCodes.Ldc_I4' Random.NextBoolean() ? 0 : 1));  						instrs.Add(pop);  						break;  				}
Missing Default,Confuser.Protections.ControlFlow,CFContext,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\CFContext.cs,AddJunk,The following switch statement is missing a default case: switch (Random.NextInt32(6)) {  				case 0:  					instrs.Add(Instruction.Create(OpCodes.Pop));  					break;  				case 1:  					instrs.Add(Instruction.Create(OpCodes.Dup));  					break;  				case 2:  					instrs.Add(Instruction.Create(OpCodes.Throw));  					break;  				case 3:  					instrs.Add(Instruction.Create(OpCodes.Ldarg' new Parameter(0xff)));  					break;  				case 4:  					instrs.Add(Instruction.Create(OpCodes.Ldloc' new Local(null) { Index = 0xff }));  					break;  				case 5:  					instrs.Add(Instruction.Create(OpCodes.Ldtoken' Method));  					break;  			}
Missing Default,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,SpiltStatements,The following switch statement is missing a default case: switch (instr.OpCode.FlowControl) {  					case FlowControl.Branch:  					case FlowControl.Cond_Branch:  					case FlowControl.Return:  					case FlowControl.Throw:  						shouldSpilt = true;  						if (trace.AfterStack[instr.Offset] != 0) {  							if (instr.Operand is Instruction)  								requiredInstr.Add((Instruction)instr.Operand);  							else if (instr.Operand is Instruction[]) {  								foreach (var target in (Instruction[])instr.Operand)  									requiredInstr.Add(target);  							}  						}  						break;  				}
Missing Default,Confuser.Protections.ControlFlow,SwitchMangler,D:\research\architectureSmells\repos\yck1509_ConfuserEx\Confuser.Protections\ControlFlow\SwitchMangler.cs,InverseBranch,The following switch statement is missing a default case: switch (opCode.Code) {  				case Code.Bge:  					return OpCodes.Blt;  				case Code.Bge_Un:  					return OpCodes.Blt_Un;  				case Code.Blt:  					return OpCodes.Bge;  				case Code.Blt_Un:  					return OpCodes.Bge_Un;  				case Code.Bgt:  					return OpCodes.Ble;  				case Code.Bgt_Un:  					return OpCodes.Ble_Un;  				case Code.Ble:  					return OpCodes.Bgt;  				case Code.Ble_Un:  					return OpCodes.Bgt_Un;  				case Code.Brfalse:  					return OpCodes.Brtrue;  				case Code.Brtrue:  					return OpCodes.Brfalse;  				case Code.Beq:  					return OpCodes.Bne_Un;  				case Code.Bne_Un:  					return OpCodes.Beq;  			}
