Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,Invalidate,Cyclomatic complexity of the method is 8
Complex Method,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,Cyclomatic complexity of the method is 13
Complex Method,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SlidingAdTimer_Completed,Cyclomatic complexity of the method is 12
Long Identifier,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideOutLRAdStoryboardAnimation is 31.
Long Identifier,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideInLRAdStoryboardAnimation is 30.
Long Identifier,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideOutUDAdStoryboardAnimation is 31.
Long Identifier,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideInUDAdStoryboardAnimation is 30.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,adRotatorControl_AdAvailable,The length of the statement  "	await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync (Windows.UI.Core.CoreDispatcherPriority.Normal' () => Invalidate (adProvider)); " is 171.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,AdRotatorControl_Loaded,The length of the statement  "		// clear all incase this control has been loaded before. Page load or navigation will tigger an "Loaded" event. Not sure i need a try catch' but it was done elsewhere in the code so best be safe.   " is 195.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	            Storyboard.SetTargetProperty(SlideOutLRAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateX)"));" is 143.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	Storyboard.SetTargetProperty (SlideOutLRAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"); " is 126.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	            Storyboard.SetTargetProperty(SlideInLRAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateX)"));" is 142.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	Storyboard.SetTargetProperty (SlideInLRAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"); " is 125.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	            Storyboard.SetTargetProperty(SlideOutUDAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateY)"));" is 143.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	Storyboard.SetTargetProperty (SlideOutUDAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateY)"); " is 126.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	            Storyboard.SetTargetProperty(SlideInUDAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateY)"));" is 142.
Long Statement,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "	Storyboard.SetTargetProperty (SlideInUDAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateY)"); " is 125.
Long Statement,AdRotator,FileHelpers,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\Utilities\FileHelpers.cs,FileOpen,The length of the statement  "				return FileOpen(filePath' (FileMode)Enum.Parse(typeof(FileMode)' fileMode' true)' (FileAccess)Enum.Parse(typeof(FileAccess)' fileAccess' false)' (FileShare)Enum.Parse(typeof(FileShare)' fileShare' false));" is 205.
Empty Catch Block,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,OnApplyTemplate,The method has an empty catch block.
Empty Catch Block,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,AdRotatorControl_Loaded,The method has an empty catch block.
Empty Catch Block,AdRotator,DefaultHouseAd,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\DefaultHouseAd.cs,GetRemoteHouseAdControl,The method has an empty catch block.
Empty Catch Block,AdRotator,FileHelpers,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\Utilities\FileHelpers.cs,SafeDeleteFile,The method has an empty catch block.
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: if (AdRotatorRoot != null) {  	((DoubleAnimation)SlideOutLRAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInLRAdStoryboard.Children [0]).From = 0;  	((DoubleAnimation)SlideOutUDAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInUDAdStoryboard.Children [0]).From = 0;  	#if WINDOWS_PHONE  	                var bounds = AdRotatorControl.DisplayResolution; #else  	var bounds = Window.Current.Bounds;  	#endif  	switch (adSlideDirection) {  	case AdSlideDirection.Left:  		displayOffsetX = -(bounds.Width * 2);  		break;  	case AdSlideDirection.Right:  		displayOffsetX = bounds.Width * 2;  		break;  	case AdSlideDirection.Bottom:  		displayOffsetY = bounds.Height * 2;  		break;  	case AdSlideDirection.Top:  		displayOffsetY = -(bounds.Height * 2);  		break;  	}  	AdRotatorRoot.RenderTransform = new CompositeTransform () {  		TranslateX = displayOffsetX'  		TranslateY = displayOffsetY  	};  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: if (AdRotatorRoot != null) {  	((DoubleAnimation)SlideOutLRAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInLRAdStoryboard.Children [0]).From = 0;  	((DoubleAnimation)SlideOutUDAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInUDAdStoryboard.Children [0]).From = 0;  	#if WINDOWS_PHONE  	                var bounds = AdRotatorControl.DisplayResolution; #else  	var bounds = Window.Current.Bounds;  	#endif  	switch (adSlideDirection) {  	case AdSlideDirection.Left:  		displayOffsetX = -(bounds.Width * 2);  		break;  	case AdSlideDirection.Right:  		displayOffsetX = bounds.Width * 2;  		break;  	case AdSlideDirection.Bottom:  		displayOffsetY = bounds.Height * 2;  		break;  	case AdSlideDirection.Top:  		displayOffsetY = -(bounds.Height * 2);  		break;  	}  	AdRotatorRoot.RenderTransform = new CompositeTransform () {  		TranslateX = displayOffsetX'  		TranslateY = displayOffsetY  	};  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: if (AdRotatorRoot != null) {  	((DoubleAnimation)SlideOutLRAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInLRAdStoryboard.Children [0]).From = 0;  	((DoubleAnimation)SlideOutUDAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInUDAdStoryboard.Children [0]).From = 0;  	#if WINDOWS_PHONE  	                var bounds = AdRotatorControl.DisplayResolution; #else  	var bounds = Window.Current.Bounds;  	#endif  	switch (adSlideDirection) {  	case AdSlideDirection.Left:  		displayOffsetX = -(bounds.Width * 2);  		break;  	case AdSlideDirection.Right:  		displayOffsetX = bounds.Width * 2;  		break;  	case AdSlideDirection.Bottom:  		displayOffsetY = bounds.Height * 2;  		break;  	case AdSlideDirection.Top:  		displayOffsetY = -(bounds.Height * 2);  		break;  	}  	AdRotatorRoot.RenderTransform = new CompositeTransform () {  		TranslateX = displayOffsetX'  		TranslateY = displayOffsetY  	};  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: if (AdRotatorRoot != null) {  	((DoubleAnimation)SlideOutLRAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInLRAdStoryboard.Children [0]).From = 0;  	((DoubleAnimation)SlideOutUDAdStoryboard.Children [0]).To = 0;  	((DoubleAnimation)SlideInUDAdStoryboard.Children [0]).From = 0;  	#if WINDOWS_PHONE  	                var bounds = AdRotatorControl.DisplayResolution; #else  	var bounds = Window.Current.Bounds;  	#endif  	switch (adSlideDirection) {  	case AdSlideDirection.Left:  		displayOffsetX = -(bounds.Width * 2);  		break;  	case AdSlideDirection.Right:  		displayOffsetX = bounds.Width * 2;  		break;  	case AdSlideDirection.Bottom:  		displayOffsetY = bounds.Height * 2;  		break;  	case AdSlideDirection.Top:  		displayOffsetY = -(bounds.Height * 2);  		break;  	}  	AdRotatorRoot.RenderTransform = new CompositeTransform () {  		TranslateX = displayOffsetX'  		TranslateY = displayOffsetY  	};  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection) {  case AdSlideDirection.Left:  	displayOffsetX = -(bounds.Width * 2);  	break;  case AdSlideDirection.Right:  	displayOffsetX = bounds.Width * 2;  	break;  case AdSlideDirection.Bottom:  	displayOffsetY = bounds.Height * 2;  	break;  case AdSlideDirection.Top:  	displayOffsetY = -(bounds.Height * 2);  	break;  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection) {  case AdSlideDirection.Left:  	displayOffsetX = -(bounds.Width * 2);  	break;  case AdSlideDirection.Right:  	displayOffsetX = bounds.Width * 2;  	break;  case AdSlideDirection.Bottom:  	displayOffsetY = bounds.Height * 2;  	break;  case AdSlideDirection.Top:  	displayOffsetY = -(bounds.Height * 2);  	break;  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection) {  case AdSlideDirection.Left:  	displayOffsetX = -(bounds.Width * 2);  	break;  case AdSlideDirection.Right:  	displayOffsetX = bounds.Width * 2;  	break;  case AdSlideDirection.Bottom:  	displayOffsetY = bounds.Height * 2;  	break;  case AdSlideDirection.Top:  	displayOffsetY = -(bounds.Height * 2);  	break;  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection) {  case AdSlideDirection.Left:  	displayOffsetX = -(bounds.Width * 2);  	break;  case AdSlideDirection.Right:  	displayOffsetX = bounds.Width * 2;  	break;  case AdSlideDirection.Bottom:  	displayOffsetY = bounds.Height * 2;  	break;  case AdSlideDirection.Top:  	displayOffsetY = -(bounds.Height * 2);  	break;  }  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: displayOffsetX = -(bounds.Width * 2);  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: displayOffsetX = bounds.Width * 2;  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: displayOffsetY = bounds.Height * 2;  
Magic Number,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: displayOffsetY = -(bounds.Height * 2);  
Missing Default,AdRotator,AdRotatorControl,F:\newReposMay17\Adrotator_adrotatorv2\AdRotator\Clients\WinPhone81\..\..\AdRotatorControl.cs,SetupAnimationBounds,The following switch statement is missing a default case: switch (adSlideDirection) {  case AdSlideDirection.Left:  	displayOffsetX = -(bounds.Width * 2);  	break;  case AdSlideDirection.Right:  	displayOffsetX = bounds.Width * 2;  	break;  case AdSlideDirection.Bottom:  	displayOffsetY = bounds.Height * 2;  	break;  case AdSlideDirection.Top:  	displayOffsetY = -(bounds.Height * 2);  	break;  }  
