Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideOutLRAdStoryboardAnimation is 31.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideInLRAdStoryboardAnimation is 30.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideOutUDAdStoryboardAnimation is 31.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the parameter SlideInUDAdStoryboardAnimation is 30.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,,The length of the parameter RemoteSettingsLocationProperty is 30.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,,The length of the parameter SlidingAdDisplaySecondsProperty is 31.
Long Identifier,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,,The length of the parameter SlidingAdHiddenSecondsProperty is 30.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,adRotatorControl_AdAvailable,The length of the statement  "            await Windows.ApplicationModel.Core.CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal' () => Invalidate(adProvider)); " is 169.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,AdRotatorControl_Loaded,The length of the statement  "                AdRotatorRoot.Child = new TextBlock() { Text = "AdRotator in design mode' No ads will be displayed"' VerticalAlignment = VerticalAlignment.Center }; " is 148.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,AdRotatorControl_Loaded,The length of the statement  "                // clear all incase this control has been loaded before. Page load or navigation will tigger an "Loaded" event. Not sure i need a try catch' but it was done elsewhere in the code so best be safe.   " is 195.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideOutLRAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateX)")); " is 143.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideOutLRAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"); " is 125.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideInLRAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateX)")); " is 142.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideInLRAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"); " is 124.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideOutUDAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateY)")); " is 143.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideOutUDAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateY)"); " is 125.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideInUDAdStoryboardAnimation' new PropertyPath("(UIElement.RenderTransform).(CompositeTransform.TranslateY)")); " is 142.
Long Statement,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,InitialiseSlidingAnimations,The length of the statement  "            Storyboard.SetTargetProperty(SlideInUDAdStoryboardAnimation' "(UIElement.RenderTransform).(CompositeTransform.TranslateY)"); " is 124.
Long Statement,AdRotator,FileHelpers,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\Utilities\FileHelpers.cs,FileOpen,The length of the statement  "			return FileOpen(filePath' (FileMode)Enum.Parse(typeof(FileMode)' fileMode' true)' (FileAccess)Enum.Parse(typeof(FileAccess)' fileAccess' false)' (FileShare)Enum.Parse(typeof(FileShare)' fileShare' false)); " is 205.
Empty Catch Block,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,OnApplyTemplate,The method has an empty catch block.
Empty Catch Block,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,AdRotatorControl_Loaded,The method has an empty catch block.
Empty Catch Block,AdRotator,DefaultHouseAd,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\DefaultHouseAd.cs,GetRemoteHouseAdControl,The method has an empty catch block.
Empty Catch Block,AdRotator,FileHelpers,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\Utilities\FileHelpers.cs,SafeDeleteFile,The method has an empty catch block.
Magic Number,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection)                  {                      case AdSlideDirection.Left:                          displayOffsetX = -(bounds.Width * 2);                          break;                      case AdSlideDirection.Right:                          displayOffsetX = bounds.Width * 2;                          break;                      case AdSlideDirection.Bottom:                          displayOffsetY = bounds.Height * 2;                          break;                      case AdSlideDirection.Top:                          displayOffsetY = -(bounds.Height * 2);                          break;                  }
Magic Number,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection)                  {                      case AdSlideDirection.Left:                          displayOffsetX = -(bounds.Width * 2);                          break;                      case AdSlideDirection.Right:                          displayOffsetX = bounds.Width * 2;                          break;                      case AdSlideDirection.Bottom:                          displayOffsetY = bounds.Height * 2;                          break;                      case AdSlideDirection.Top:                          displayOffsetY = -(bounds.Height * 2);                          break;                  }
Magic Number,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection)                  {                      case AdSlideDirection.Left:                          displayOffsetX = -(bounds.Width * 2);                          break;                      case AdSlideDirection.Right:                          displayOffsetX = bounds.Width * 2;                          break;                      case AdSlideDirection.Bottom:                          displayOffsetY = bounds.Height * 2;                          break;                      case AdSlideDirection.Top:                          displayOffsetY = -(bounds.Height * 2);                          break;                  }
Magic Number,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,SetupAnimationBounds,The following statement contains a magic number: switch (adSlideDirection)                  {                      case AdSlideDirection.Left:                          displayOffsetX = -(bounds.Width * 2);                          break;                      case AdSlideDirection.Right:                          displayOffsetX = bounds.Width * 2;                          break;                      case AdSlideDirection.Bottom:                          displayOffsetY = bounds.Height * 2;                          break;                      case AdSlideDirection.Top:                          displayOffsetY = -(bounds.Height * 2);                          break;                  }
Missing Default,AdRotator,AdRotatorControl,D:\research\architectureSmells\repos\Adrotator_adrotatorv2\AdRotator\AdRotatorControl.cs,SetupAnimationBounds,The following switch statement is missing a default case: switch (adSlideDirection)                  {                      case AdSlideDirection.Left:                          displayOffsetX = -(bounds.Width * 2);                          break;                      case AdSlideDirection.Right:                          displayOffsetX = bounds.Width * 2;                          break;                      case AdSlideDirection.Bottom:                          displayOffsetY = bounds.Height * 2;                          break;                      case AdSlideDirection.Top:                          displayOffsetY = -(bounds.Height * 2);                          break;                  }
