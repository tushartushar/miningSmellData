Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SuperSocket.ClientEngine,AsyncTcpSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\AsyncTcpSession.cs,SendInternal,Cyclomatic complexity of the method is 9
Complex Method,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,ProcessConnect,Cyclomatic complexity of the method is 9
Long Parameter List,System.Net,NetworkStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\NetworkStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,System.Net,NetworkStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\NetworkStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,BeginWrite,The method has 5 parameters.
Long Statement,SuperSocket.ClientEngine,SslStreamTcpSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStreamTcpSession.cs,OnGetSocket,The length of the statement  "                sslStream.BeginAuthenticateAsClient(HostName' securityOption.Certificates' securityOption.EnabledSslProtocols' false' OnAuthenticated' sslStream);" is 146.
Long Statement,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,EnsureSocketClosed,The length of the statement  "	if (prevClient != null && prevClient != client)//originalClient is previous disconnected socket' so we needn't fire event for it " is 128.
Long Statement,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,GetSendingQueue,The length of the statement  "		m_SendingQueue = new ConcurrentBatchQueue<ArraySegment<byte>> (Math.Max (SendingQueueSize' 1024)' t => t.Array == null || t.Count == 0); " is 136.
Complex Conditional,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,IsIgnorableSocketError,The conditional expression  "errorCode == 10058 || errorCode == 10053 || errorCode == 10054 || errorCode == 995"  is complex.
Empty Catch Block,SuperSocket.ClientEngine,ClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\ClientSession.cs,OnConnected,The method has an empty catch block.
Empty Catch Block,SuperSocket.ClientEngine,AsyncTcpSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\AsyncTcpSession.cs,SendInternal,The method has an empty catch block.
Empty Catch Block,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,ProcessConnect,The method has an empty catch block.
Empty Catch Block,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,EnsureSocketClosed,The method has an empty catch block.
Empty Catch Block,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,EnsureSocketClosed,The method has an empty catch block.
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,IsIgnorableSocketError,The following statement contains a magic number: if (errorCode == 10058 || errorCode == 10053 || errorCode == 10054 || errorCode == 995)  	return true;  
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,IsIgnorableSocketError,The following statement contains a magic number: if (errorCode == 10058 || errorCode == 10053 || errorCode == 10054 || errorCode == 995)  	return true;  
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,IsIgnorableSocketError,The following statement contains a magic number: if (errorCode == 10058 || errorCode == 10053 || errorCode == 10054 || errorCode == 995)  	return true;  
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,IsIgnorableSocketError,The following statement contains a magic number: if (errorCode == 10058 || errorCode == 10053 || errorCode == 10054 || errorCode == 995)  	return true;  
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,GetSendingQueue,The following statement contains a magic number: lock (this) {  	if (m_SendingQueue != null)  		return m_SendingQueue;  	//Sending queue size must be greater than 3  	m_SendingQueue = new ConcurrentBatchQueue<ArraySegment<byte>> (Math.Max (SendingQueueSize' 1024)' t => t.Array == null || t.Count == 0);  	return m_SendingQueue;  }  
Magic Number,SuperSocket.ClientEngine,TcpClientSession,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\TcpClientSession.cs,GetSendingQueue,The following statement contains a magic number: m_SendingQueue = new ConcurrentBatchQueue<ArraySegment<byte>> (Math.Max (SendingQueueSize' 1024)' t => t.Array == null || t.Count == 0);  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartAuthentication,The following statement contains a magic number: try {  	#pragma  	m_TlsHandler.Connect (new LegacyTlsClient (new AlwaysValidVerifyer ()));  	#pragma  	m_SecureStream = m_TlsHandler.Stream;  } catch (Exception e) {  	result.Exception = e;  } finally {  	result.IsCompleted = true;  	var callback = result.Callback;  	if (callback != null)  		callback (result);  }  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartAuthentication,The following statement contains a magic number: try {  	#pragma  	m_TlsHandler.Connect (new LegacyTlsClient (new AlwaysValidVerifyer ()));  	#pragma  	m_SecureStream = m_TlsHandler.Stream;  } catch (Exception e) {  	result.Exception = e;  } finally {  	result.IsCompleted = true;  	var callback = result.Callback;  	if (callback != null)  		callback (result);  }  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartAuthentication,The following statement contains a magic number: try {  	#pragma  	m_TlsHandler.Connect (new LegacyTlsClient (new AlwaysValidVerifyer ()));  	#pragma  	m_SecureStream = m_TlsHandler.Stream;  } catch (Exception e) {  	result.Exception = e;  } finally {  	result.IsCompleted = true;  	var callback = result.Callback;  	if (callback != null)  		callback (result);  }  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartAuthentication,The following statement contains a magic number: try {  	#pragma  	m_TlsHandler.Connect (new LegacyTlsClient (new AlwaysValidVerifyer ()));  	#pragma  	m_SecureStream = m_TlsHandler.Stream;  } catch (Exception e) {  	result.Exception = e;  } finally {  	result.IsCompleted = true;  	var callback = result.Callback;  	if (callback != null)  		callback (result);  }  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartSend,The following statement contains a magic number: try {  	m_SecureStream.Write ((byte[])stateArr [0]' (int)stateArr [1]' (int)stateArr [2]);  	m_SecureStream.Flush ();  	result.IsCompleted = true;  } catch (Exception e) {  	result.Exception = e;  } finally {  	if (result.Callback != null)  		result.Callback (result);  }  
Magic Number,System.Net.Security,SslStream,F:\newReposMay17\kerryjiang_SuperSocket.ClientEngine\Core\SslStream.cs,StartSend,The following statement contains a magic number: m_SecureStream.Write ((byte[])stateArr [0]' (int)stateArr [1]' (int)stateArr [2]);  
