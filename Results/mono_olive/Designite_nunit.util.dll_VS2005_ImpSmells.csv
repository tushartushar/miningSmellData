Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NUnit.Util,MultipleTestDomainRunner,C:\repos\mono_olive\nunit24\ClientUtilities\util\MultipleTestDomainRunner.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Util,NUnitProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\NUnitProject.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Util,PathUtils,C:\repos\mono_olive\nunit24\ClientUtilities\util\PathUtils.cs,RelativePath,Cyclomatic complexity of the method is 12
Complex Method,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,Cyclomatic complexity of the method is 8
Long Statement,NUnit.Util,ServiceManager,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\ServiceManager.cs,GetService,The length of the statement  "				NTrace.Info( string.Format( "Request for service {0} satisfied by {1}"' serviceType.Name' theService.GetType().Name ) ); " is 120.
Long Statement,NUnit.Util,TestAgency,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\TestAgency.cs,LaunchAgentProcess,The length of the statement  "			//ProcessStartInfo startInfo = new ProcessStartInfo( TestAgentExePath' ServerUtilities.MakeUrl( this.uri' this.port ) ); " is 120.
Long Statement,NUnit.Util,TestLoader,C:\repos\mono_olive\nunit24\ClientUtilities\util\TestLoader.cs,LoadTest,The length of the statement  "						lastException = new ApplicationException( string.Format( "Unable to load {0} because it is not located under the AppBase"' exception.FileName )' exception ); " is 157.
Long Statement,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,Load,The length of the statement  "							outputPath = outputPath.Replace( "$(SolutionDir)"' Path.GetFullPath( Path.GetDirectoryName( projectPath ) ) + Path.DirectorySeparatorChar ); " is 140.
Long Statement,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The length of the statement  "			XmlElement assemblyNameElement = (XmlElement)doc.SelectSingleNode("/msbuild:Project/msbuild:PropertyGroup/msbuild:AssemblyName"' namespaceManager); " is 147.
Long Statement,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The length of the statement  "			XmlElement outputTypeElement = (XmlElement)doc.SelectSingleNode("/msbuild:Project/msbuild:PropertyGroup/msbuild:OutputType"' namespaceManager); " is 143.
Complex Conditional,NUnit.Util,SettingsGroup,C:\repos\mono_olive\nunit24\ClientUtilities\util\SettingsGroup.cs,SaveSetting,The conditional expression  "oldValue is string && settingValue is string && (string)oldValue == (string)settingValue ||  					oldValue is int && settingValue is int && (int)oldValue == (int)settingValue ||  					oldValue is bool && settingValue is bool && (bool)oldValue == (bool)settingValue ||  					oldValue is Enum && settingValue is Enum && oldValue.Equals(settingValue)"  is complex.
Complex Conditional,NUnit.Util,XmlResultVisitor,C:\repos\mono_olive\nunit24\ClientUtilities\util\XmlResultVisitor.cs,CharacterSafeString,The conditional expression  "currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)"  is complex.
Complex Conditional,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The conditional expression  "(c[0] == '-' || c[0] == '/' && AllowForwardSlash) && IsOptionNameChar(c[1])"  is complex.
Virtual Method Call from Constructor,NUnit.Util,ResultSummarizer,C:\repos\mono_olive\nunit24\ClientUtilities\util\ResultSummarizer.cs,ResultSummarizer,The constructor "ResultSummarizer" calls a virtual method "Accept".
Virtual Method Call from Constructor,NUnit.Util,ResultSummarizer,C:\repos\mono_olive\nunit24\ClientUtilities\util\ResultSummarizer.cs,ResultSummarizer,The constructor "ResultSummarizer" calls a virtual method "Accept".
Empty Catch Block,NUnit.Util,RecentFileEntry,C:\repos\mono_olive\nunit24\ClientUtilities\util\RecentFileEntry.cs,Parse,The method has an empty catch block.
Empty Catch Block,NUnit.Util,ServerUtilities,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerUtilities.cs,SafeReleaseChannel,The method has an empty catch block.
Empty Catch Block,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,GetOption,The method has an empty catch block.
Magic Number,NUnit.Util,MultipleTestDomainRunner,C:\repos\mono_olive\nunit24\ClientUtilities\util\MultipleTestDomainRunner.cs,Load,The following statement contains a magic number: foreach( string assembly in package.Assemblies )  			{  				if ( targetAssemblyName == null || targetAssemblyName == assembly )  				{  					TestDomain runner = new TestDomain( this.runnerID * 100 + index + 1 );    					TestPackage p = new TestPackage( assembly );  					p.AutoBinPath = package.AutoBinPath;  					p.ConfigurationFile = package.ConfigurationFile;  					p.BasePath = package.BasePath;  					p.PrivateBinPath = package.PrivateBinPath;  					p.TestName = package.TestName;  					foreach( object key in package.Settings.Keys )  						p.Settings[key] = package.Settings[key];    					if ( package.TestName == null )  					{  						runners.Add( runner );  						if ( runner.Load( p ) )  							nfound++;  					}  					else if ( runner.Load( p ) )  					{  						runners.Add( runner );  						nfound++;  					}  				}  			}
Magic Number,NUnit.Util,MultipleTestDomainRunner,C:\repos\mono_olive\nunit24\ClientUtilities\util\MultipleTestDomainRunner.cs,CreateRunners,The following statement contains a magic number: for( int index = 0; index < count; index++ )  			{  				TestDomain runner = new TestDomain( this.runnerID * 100 + index + 1 );  				runners.Add( runner );  			}
Magic Number,NUnit.Util,NUnitProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\NUnitProject.cs,FromVSSolution,The following statement contains a magic number: using(StreamReader reader = new StreamReader( solutionPath ))  			{  				char[] delims = { '='' ''' };  				char[] trimchars = { ' '' '"' };    				string line = reader.ReadLine();  				while ( line != null )  				{  					if ( line.StartsWith( "Project" ) )  					{  						string[] parts = line.Split( delims );  						string vsProjectPath = parts[2].Trim(trimchars);  						  						if ( VSProject.IsProjectFile( vsProjectPath ) )  							project.Add( new VSProject( Path.Combine( solutionDirectory' vsProjectPath ) ) );  					}    					line = reader.ReadLine();  				}  			}
Magic Number,NUnit.Util,PathUtils,C:\repos\mono_olive\nunit24\ClientUtilities\util\PathUtils.cs,GetAssemblyPathFromFileUri,The following statement contains a magic number: if ( PathUtils.DirectorySeparatorChar == '\\' )  			{  				if ( uri[start] == '/' && uri[start+2] == ':' )  					++start;  			}  			else  			{  				if ( uri[start] != '/' )  					--start;  			}
Magic Number,NUnit.Util,ProcessRunner,C:\repos\mono_olive\nunit24\ClientUtilities\util\ProcessRunner.cs,Load,The following statement contains a magic number: if ( this.agent == null )  				this.agent = Services.TestAgency.GetAgent( AgentType.ProcessAgent' 5000 );
Magic Number,NUnit.Util,ServerBase,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerBase.cs,Start,The following statement contains a magic number: if ( uri != null && uri != string.Empty )  				lock( theLock )  				{  					this.channel = ServerUtilities.GetTcpChannel( uri + "Channel"' port' 100 );    					RemotingServices.Marshal( this' uri );  					this.isMarshalled = true;  				}
Magic Number,NUnit.Util,ServerUtilities,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: return GetTcpChannel( ""' 0' 2 );
Magic Number,NUnit.Util,ServerUtilities,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: return GetTcpChannel( name' port' 2 );
Magic Number,NUnit.Util,ServerUtilities,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: if ( channel == null )  			{  				// NOTE: Retries are normally only needed when rapidly creating  				// and destroying channels' as in running the NUnit tests.  				int retries = 10;  				while( --retries > 0 )  					try  					{  						channel = CreateTcpChannel( name' port' limit );  						ChannelServices.RegisterChannel( channel );  						break;  					}  					catch( Exception e )  					{                          Trace.WriteLine(e);  						System.Threading.Thread.Sleep(300);  					}  			}
Magic Number,NUnit.Util,ServerUtilities,C:\repos\mono_olive\nunit24\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: if ( channel == null )  			{  				// NOTE: Retries are normally only needed when rapidly creating  				// and destroying channels' as in running the NUnit tests.  				int retries = 10;  				while( --retries > 0 )  					try  					{  						channel = CreateTcpChannel( name' port' limit );  						ChannelServices.RegisterChannel( channel );  						break;  					}  					catch( Exception e )  					{                          Trace.WriteLine(e);  						System.Threading.Thread.Sleep(300);  					}  			}
Magic Number,NUnit.Util,DomainManager,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\DomainManager.cs,GetPrivateBinPath,The following statement contains a magic number: StringBuilder sb = new StringBuilder(200);
Magic Number,NUnit.Util,RecentFilesService,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\RecentFilesService.cs,LoadEntriesFromSettings,The following statement contains a magic number: string prefix = Environment.Version.Major >= 2  				? "RecentProjects.V2"  				: "RecentProjects.V1";
Magic Number,NUnit.Util,RecentFilesService,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\RecentFilesService.cs,SaveEntriesToSettings,The following statement contains a magic number: string prefix = Environment.Version.Major >= 2  				? "RecentProjects.V2"  				: "RecentProjects.V1";
Magic Number,NUnit.Util,LegacySettingsConverter,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\SettingsService.cs,Convert,The following statement contains a magic number: int maxFiles = this.GetSetting( "RecentProjects.MaxFiles"' 5 );
Magic Number,NUnit.Util,TestAgency,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\TestAgency.cs,GetAgent,The following statement contains a magic number: return GetAgent( AgentType.Default' 5000 );
Magic Number,NUnit.Util,TestAgency,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\TestAgency.cs,GetAgent,The following statement contains a magic number: return GetAgent( type' 5000 );
Magic Number,NUnit.Util,TestAgency,C:\repos\mono_olive\nunit24\ClientUtilities\util\Services\TestAgency.cs,CreateRemoteAgent,The following statement contains a magic number: while( waitTime > 0 )  			{  				int pollTime = Math.Min( 200' waitTime );  				Thread.Sleep( pollTime );  				waitTime -= pollTime;  				if ( agentData[pid].Agent != null )  				{  					NTrace.DebugFormat( "Returning new agent record {0}"' pid );   					return agentData[pid];  				}  			}
Magic Number,NUnit.Util,TestLoader,C:\repos\mono_olive\nunit24\ClientUtilities\util\TestLoader.cs,InstallWatcher,The following statement contains a magic number: watcher = new AssemblyWatcher( 1000' TestProject.ActiveConfig.Assemblies.ToArray() );
Magic Number,NUnit.Util,TestResultItem,C:\repos\mono_olive\nunit24\ClientUtilities\util\TestResultItem.cs,ToString,The following statement contains a magic number: if ( message.Length > 64000 )  				return string.Format( "{0}:{1}{2}"' testName' Environment.NewLine' message.Substring( 0' 64000 ) );
Magic Number,NUnit.Util,TestResultItem,C:\repos\mono_olive\nunit24\ClientUtilities\util\TestResultItem.cs,ToString,The following statement contains a magic number: if ( message.Length > 64000 )  				return string.Format( "{0}:{1}{2}"' testName' Environment.NewLine' message.Substring( 0' 64000 ) );
Magic Number,NUnit.Util,TestResultItem,C:\repos\mono_olive\nunit24\ClientUtilities\util\TestResultItem.cs,GetToolTipMessage,The following statement contains a magic number: return (ReplaceTabs(GetMessage()' 8));
Magic Number,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The following statement contains a magic number: foreach (XmlElement configNode in nodes)  			{                  if (configNode.Name != "PropertyGroup")                      continue;    				XmlAttribute conditionAttribute = configNode.Attributes["Condition"];  				if (conditionAttribute == null) continue;    				string condition = conditionAttribute.Value;  				int start = condition.IndexOf( "==" );  				if ( start < 0 ) continue;    				string configurationName = condition.Substring( start + 2 ).Trim(new char[] {' '' '\'' } );  				if ( configurationName.EndsWith( "|AnyCPU" ) )  					configurationName = configurationName.Substring( 0' configurationName.Length - 7 );    				XmlElement outputPathElement = (XmlElement)configNode.SelectSingleNode("msbuild:OutputPath"' namespaceManager);  				string outputPath = outputPathElement.InnerText;    				string outputDirectory = Path.Combine(projectDirectory' outputPath);  				string assemblyPath = Path.Combine(outputDirectory' assemblyName);    				VSProjectConfig config = new VSProjectConfig(configurationName);  				config.Assemblies.Add(assemblyPath);    				configs.Add(config);  			}
Magic Number,NUnit.Util,VSProject,C:\repos\mono_olive\nunit24\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The following statement contains a magic number: foreach (XmlElement configNode in nodes)  			{                  if (configNode.Name != "PropertyGroup")                      continue;    				XmlAttribute conditionAttribute = configNode.Attributes["Condition"];  				if (conditionAttribute == null) continue;    				string condition = conditionAttribute.Value;  				int start = condition.IndexOf( "==" );  				if ( start < 0 ) continue;    				string configurationName = condition.Substring( start + 2 ).Trim(new char[] {' '' '\'' } );  				if ( configurationName.EndsWith( "|AnyCPU" ) )  					configurationName = configurationName.Substring( 0' configurationName.Length - 7 );    				XmlElement outputPathElement = (XmlElement)configNode.SelectSingleNode("msbuild:OutputPath"' namespaceManager);  				string outputPath = outputPathElement.InnerText;    				string outputDirectory = Path.Combine(projectDirectory' outputPath);  				string assemblyPath = Path.Combine(outputDirectory' assemblyName);    				VSProjectConfig config = new VSProjectConfig(configurationName);  				config.Assemblies.Add(assemblyPath);    				configs.Add(config);  			}
Magic Number,NUnit.Util,XmlResultVisitor,C:\repos\mono_olive\nunit24\ClientUtilities\util\XmlResultVisitor.cs,CharacterSafeString,The following statement contains a magic number: for(int x = 0 ; x < encodedChars.Length ; x++)  			{  				char currentChar = encodedChars[x];  				//unprintable characters are below 0x20 in Unicode tables  				//some control characters are acceptable. (carriage return 0x0D' line feed 0x0A' horizontal tab 0x09)  				if(currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13))  				{  					//save the array index for later replacement.  					pos.Add(x);  				}  			}
Magic Number,NUnit.Util,XmlResultVisitor,C:\repos\mono_olive\nunit24\ClientUtilities\util\XmlResultVisitor.cs,CharacterSafeString,The following statement contains a magic number: for(int x = 0 ; x < encodedChars.Length ; x++)  			{  				char currentChar = encodedChars[x];  				//unprintable characters are below 0x20 in Unicode tables  				//some control characters are acceptable. (carriage return 0x0D' line feed 0x0A' horizontal tab 0x09)  				if(currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13))  				{  					//save the array index for later replacement.  					pos.Add(x);  				}  			}
Magic Number,NUnit.Util,XmlResultVisitor,C:\repos\mono_olive\nunit24\ClientUtilities\util\XmlResultVisitor.cs,CharacterSafeString,The following statement contains a magic number: for(int x = 0 ; x < encodedChars.Length ; x++)  			{  				char currentChar = encodedChars[x];  				//unprintable characters are below 0x20 in Unicode tables  				//some control characters are acceptable. (carriage return 0x0D' line feed 0x0A' horizontal tab 0x09)  				if(currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13))  				{  					//save the array index for later replacement.  					pos.Add(x);  				}  			}
Magic Number,NUnit.Util,XmlResultVisitor,C:\repos\mono_olive\nunit24\ClientUtilities\util\XmlResultVisitor.cs,CharacterSafeString,The following statement contains a magic number: for(int x = 0 ; x < encodedChars.Length ; x++)  			{  				char currentChar = encodedChars[x];  				//unprintable characters are below 0x20 in Unicode tables  				//some control characters are acceptable. (carriage return 0x0D' line feed 0x0A' horizontal tab 0x09)  				if(currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13))  				{  					//save the array index for later replacement.  					pos.Add(x);  				}  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
Magic Number,Codeblast,CommandLineOptions,C:\repos\mono_olive\nunit24\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: if (opt.Length < 2)   			{  				return 0;  			}  			else if (opt.Length > 2)  			{  				c = opt.ToCharArray(0' 3);  				if (c[0] == '-' && c[1] == '-' && IsOptionNameChar(c[2])) return 2;  			}  			else  			{  				c = opt.ToCharArray(0' 2);  			}
