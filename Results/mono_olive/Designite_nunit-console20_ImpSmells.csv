Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Execute,Cyclomatic complexity of the method is 8
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Main,The following statement contains a magic number: if(!options.Validate())  			{  				Console.Error.WriteLine("fatal error: invalid arguments");  				options.Help();  				return 2;  			}
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Main,The following statement contains a magic number: try  			{  				ConsoleUi consoleUi = new ConsoleUi();  				return consoleUi.Execute( options );  			}  			catch( FileNotFoundException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( BadImageFormatException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( Exception ex )  			{  				Console.WriteLine( "Unhandled Exception:\n{0}"' ex.ToString() );  				return 2;  			}  			finally  			{  				if(options.wait)  				{  					Console.Out.WriteLine("\nHit <enter> key to continue");  					Console.ReadLine();  				}  			}
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Main,The following statement contains a magic number: try  			{  				ConsoleUi consoleUi = new ConsoleUi();  				return consoleUi.Execute( options );  			}  			catch( FileNotFoundException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( BadImageFormatException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( Exception ex )  			{  				Console.WriteLine( "Unhandled Exception:\n{0}"' ex.ToString() );  				return 2;  			}  			finally  			{  				if(options.wait)  				{  					Console.Out.WriteLine("\nHit <enter> key to continue");  					Console.ReadLine();  				}  			}
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Main,The following statement contains a magic number: try  			{  				ConsoleUi consoleUi = new ConsoleUi();  				return consoleUi.Execute( options );  			}  			catch( FileNotFoundException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( BadImageFormatException ex )  			{  				Console.WriteLine( ex.Message );  				return 2;  			}  			catch( Exception ex )  			{  				Console.WriteLine( "Unhandled Exception:\n{0}"' ex.ToString() );  				return 2;  			}  			finally  			{  				if(options.wait)  				{  					Console.Out.WriteLine("\nHit <enter> key to continue");  					Console.ReadLine();  				}  			}
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,WriteCopyright,The following statement contains a magic number: Console.WriteLine(String.Format("{0} version {1}"' productAttr.Product' version.ToString(3)));
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Execute,The following statement contains a magic number: if(transformReader == null) return 3;
Magic Number,NUnit.Console,ConsoleUi,C:\repos\mono_olive\nunit20\nunit-console\ConsoleUi.cs,Execute,The following statement contains a magic number: if(test == null)  			{  				Console.Error.WriteLine("Unable to locate fixture {0}"' options.fixture);  				return 2;  			}
