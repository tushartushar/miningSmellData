Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,OnPushResponseCallback,Cyclomatic complexity of the method is 18
Complex Method,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,Cyclomatic complexity of the method is 13
Complex Method,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,AppendText,Cyclomatic complexity of the method is 25
Complex Method,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ToInternalStatus,Cyclomatic complexity of the method is 8
Complex Method,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ToPublicStatus,Cyclomatic complexity of the method is 18
Long Parameter List,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessSetStatus,The method has 5 parameters.
Long Parameter List,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessSendMessage,The method has 5 parameters.
Long Parameter List,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,AppendText,The method has 7 parameters.
Long Statement,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,RequestToken,The length of the statement  "	Uri requestUri = new Uri (Container.BOTAPI_BOTMASTER_MAIN_SERVER + Container.BOTAPI_BOTMASTER_RESOURCE_GET_TOKEN + _botUin); " is 124.
Long Statement,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,RequestToken,The length of the statement  "	string auth = Convert.ToBase64String (Encoding.ASCII.GetBytes (_botApiCredentials.UserName + ":" + _botApiCredentials.Password)); " is 129.
Long Statement,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,OnRequestTokenCallback,The length of the statement  "	//catch { OnTokenRequestErrorOccurred(new PushRequestResultEventArgs() { BotmasterMessage = "Nieznany błąd"' BotmasterErrorCode = PushErrorCode.Unknown }); } " is 157.
Long Statement,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,DequeuePushRequest,The length of the statement  "	UriBuilder uriBuilder = new UriBuilder ((item.UseMainServer ? Container.BOTAPI_BOTMASTER_MAIN_SERVER : "http://" + _currentTokenServer) + item.Uri); " is 148.
Long Statement,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessSendMessage,The length of the statement  "		builder.Append (string.Format ("&msg{0}={1}"' id.ToString ()' /*WebUtility.UrlEncode(keyValue.Value)*/System.Web.HttpUtility.UrlEncode (keyValue.Value))); " is 154.
Long Statement,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,AppendText,The length of the statement  "		_htmlMessage += string.Format ("<span style=\"color:#{0}{1}{2}; font-family:'{3}'; font-size:{4}; \">"' redColor.ToString ("X2")' greenColor.ToString ("X2")' blueColor.ToString ("X2")' fontFamily' fontSize); " is 207.
Long Statement,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,AppendText,The length of the statement  "			writer.Write ((byte)((formatting.HasFlag (MessageFormatting.Bold) ? Container.BOTAPI_ATTRIBUTES_BOLD : 0) | (formatting.HasFlag (MessageFormatting.Italic) ? Container.BOTAPI_ATTRIBUTES_ITALIC : 0) | (formatting.HasFlag (MessageFormatting.Underline) ? Container.BOTAPI_ATTRIBUTES_UNDERLINE : 0) | (haveColor ? Container.BOTAPI_ATTRIBUTES_COLOR : 0))); " is 350.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,Stop,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,RequestToken,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,OnRequestTokenCallback,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessSendImageResponse,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessExistsImageResponse,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessIsBotResponse,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,ProcessErrorResponse,The method has an empty catch block.
Empty Catch Block,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The method has an empty catch block.
Magic Number,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The following statement contains a magic number: try {  	#region ParseQuery  	string queryString = request.URI;  	while (queryString.Length > 0 && (queryString [0] == '/' || queryString [0] == '?'))  		queryString = queryString.Remove (0' 1);  	string[] nameValues = queryString.Split ('&');  	Dictionary<string' string> getData = new Dictionary<string' string> ();  	foreach (string nameValue in nameValues) {  		string[] buff = nameValue.Split ('=');  		if (buff.Length >= 2)  			getData.Add (buff [0]' buff [1]);  	}  	#endregion  	MessageEventArgs evArgs = new MessageEventArgs ();  	if (getData.ContainsKey ("from")) {  		uint uin;  		uint.TryParse (getData ["from"]' out uin);  		evArgs.Uin = uin;  	}  	if (request.ContentLength > 32768)//32 KB  	 {  		response.StatusAndReason = HTTPServerResponse.HTTPStatus.HTTP_BAD_REQUEST;  		response.Send ();  	}  	Stream bodyStream = request.GetRequestStream ();  	byte[] data = new byte[request.ContentLength];  	bodyStream.Read (data' 0' (int)request.ContentLength);  	bodyStream.Close ();  	evArgs.Message = Encoding.UTF8.GetString (data);  	ResponseMessage responseMsg = new ResponseMessage ();  	responseMsg.HttpResponse = response;  	evArgs.Response = responseMsg;  	OnMessageReceived (evArgs);  }  catch {  }  
Magic Number,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The following statement contains a magic number: try {  	#region ParseQuery  	string queryString = request.URI;  	while (queryString.Length > 0 && (queryString [0] == '/' || queryString [0] == '?'))  		queryString = queryString.Remove (0' 1);  	string[] nameValues = queryString.Split ('&');  	Dictionary<string' string> getData = new Dictionary<string' string> ();  	foreach (string nameValue in nameValues) {  		string[] buff = nameValue.Split ('=');  		if (buff.Length >= 2)  			getData.Add (buff [0]' buff [1]);  	}  	#endregion  	MessageEventArgs evArgs = new MessageEventArgs ();  	if (getData.ContainsKey ("from")) {  		uint uin;  		uint.TryParse (getData ["from"]' out uin);  		evArgs.Uin = uin;  	}  	if (request.ContentLength > 32768)//32 KB  	 {  		response.StatusAndReason = HTTPServerResponse.HTTPStatus.HTTP_BAD_REQUEST;  		response.Send ();  	}  	Stream bodyStream = request.GetRequestStream ();  	byte[] data = new byte[request.ContentLength];  	bodyStream.Read (data' 0' (int)request.ContentLength);  	bodyStream.Close ();  	evArgs.Message = Encoding.UTF8.GetString (data);  	ResponseMessage responseMsg = new ResponseMessage ();  	responseMsg.HttpResponse = response;  	evArgs.Response = responseMsg;  	OnMessageReceived (evArgs);  }  catch {  }  
Magic Number,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The following statement contains a magic number: foreach (string nameValue in nameValues) {  	string[] buff = nameValue.Split ('=');  	if (buff.Length >= 2)  		getData.Add (buff [0]' buff [1]);  }  
Magic Number,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The following statement contains a magic number: if (buff.Length >= 2)  	getData.Add (buff [0]' buff [1]);  
Magic Number,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,HandleRequest,The following statement contains a magic number: if (request.ContentLength > 32768)//32 KB   {  	response.StatusAndReason = HTTPServerResponse.HTTPStatus.HTTP_BAD_REQUEST;  	response.Send ();  }  
Magic Number,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,Send,The following statement contains a magic number: bodyStream.Write (BitConverter.GetBytes (htmlMsg.Length)' 0' 4);  
Magic Number,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,Send,The following statement contains a magic number: bodyStream.Write (BitConverter.GetBytes (plainMsg.Length)' 0' 4);  
Magic Number,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,Send,The following statement contains a magic number: bodyStream.Write (BitConverter.GetBytes ((int)0)' 0' 4);  
Magic Number,SharpGGBotAPI,ResponseMessage,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\ResponseMessage.cs,Send,The following statement contains a magic number: bodyStream.Write (BitConverter.GetBytes ((_attributes == null ? 0 : _attributes.Length))' 0' 4);  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: try {  	if (hash.Length != 16)  		throw new InvalidOperationException ("Bad hash length");  	crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  	length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  }  catch {  	throw new InvalidOperationException ("Bad hash");  }  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: try {  	if (hash.Length != 16)  		throw new InvalidOperationException ("Bad hash length");  	crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  	length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  }  catch {  	throw new InvalidOperationException ("Bad hash");  }  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: try {  	if (hash.Length != 16)  		throw new InvalidOperationException ("Bad hash length");  	crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  	length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  }  catch {  	throw new InvalidOperationException ("Bad hash");  }  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: try {  	if (hash.Length != 16)  		throw new InvalidOperationException ("Bad hash length");  	crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  	length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  }  catch {  	throw new InvalidOperationException ("Bad hash");  }  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: try {  	if (hash.Length != 16)  		throw new InvalidOperationException ("Bad hash length");  	crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  	length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  }  catch {  	throw new InvalidOperationException ("Bad hash");  }  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: if (hash.Length != 16)  	throw new InvalidOperationException ("Bad hash length");  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: crc32 = Convert.ToUInt32 (hash.Remove (8)' 16);  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  
Magic Number,SharpGGBotAPI,Utils,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\Utils.cs,ParseImageHash,The following statement contains a magic number: length = Convert.ToUInt32 (hash.Remove (0' 8)' 16);  
Missing Default,SharpGGBotAPI,GaduGaduBot,C:\repos\Symeg_SharpGGBotAPI\SharpGGBotAPI\GaduGaduBot.cs,OnPushResponseCallback,The following switch statement is missing a default case: switch (item.OperationType) {  case PushOperation.ImageSend:  	ProcessSendImageResponse (bodyStream' evArgs);  	break;  case PushOperation.ImageExists:  	ProcessExistsImageResponse (bodyStream' evArgs);  	break;  case PushOperation.ImageDownload:  	ProcessDownloadImageResponse (bodyStream' evArgs);  	break;  case PushOperation.IsBot:  	ProcessIsBotResponse (bodyStream' evArgs);  	break;  }  
