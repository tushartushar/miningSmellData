Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EasyHttp.Codecs.JsonFXExtensions,RegExBasedDataWriterProvider,C:\repos\hhariri_EasyHttp\src\EasyHttp\Codecs\JsonFXExtensions\RegExBasedDataWriterProvider.cs,RegExBasedDataWriterProvider,Cyclomatic complexity of the method is 8
Complex Method,EasyHttp.Http,HttpRequest,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpRequest.cs,SetupHeader,Cyclomatic complexity of the method is 10
Long Statement,EasyHttp.Configuration,DefaultEncoderDecoderConfiguration,C:\repos\hhariri_EasyHttp\src\EasyHttp\Configuration\DefaultEncoderDecoderConfiguration.cs,GetDecoder,The length of the statement  "            var jsonReader = new JsonReader(new DataReaderSettings(CombinedResolverStrategy()' new Iso8601DateFilter())' new[] { "application/.*json"' "text/.*json" }); " is 156.
Magic Number,EasyHttp.Http,HttpClient,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpClient.cs,IsHttpError,The following statement contains a magic number: var num = (int) Response.StatusCode / 100;
Magic Number,EasyHttp.Http,HttpClient,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpClient.cs,IsHttpError,The following statement contains a magic number: return (num == 4 || num == 5);
Magic Number,EasyHttp.Http,HttpClient,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpClient.cs,IsHttpError,The following statement contains a magic number: return (num == 4 || num == 5);
Magic Number,EasyHttp.Http,HttpRequest,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpRequest.cs,HttpRequest,The following statement contains a magic number: Timeout = 100000;
Magic Number,EasyHttp.Http,HttpRequest,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpRequest.cs,SetupPutFilename,The following statement contains a magic number: using (var fileStream = new FileStream(PutFilename' FileMode.Open))              {                  httpWebRequest.ContentLength = fileStream.Length;                    var requestStream = httpWebRequest.GetRequestStream();                    var buffer = new byte[81982];                    int bytesRead = fileStream.Read(buffer' 0' buffer.Length);                  while (bytesRead > 0)                  {                      requestStream.Write(buffer' 0' bytesRead);                      bytesRead = fileStream.Read(buffer' 0' buffer.Length);                  }                  requestStream.Close();              }
Magic Number,EasyHttp.Http,HttpResponse,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\HttpResponse.cs,GetResponse,The following statement contains a magic number: using (var stream = _response.GetResponseStream())  	        {  		        if (stream == null) return;    		        if (!string.IsNullOrEmpty(filename))  		        {  			        using (var filestream = new FileStream(filename' FileMode.CreateNew))  			        {  				        int count;  				        var buffer = new byte[8192];    				        while ((count = stream.Read(buffer' 0' buffer.Length)) > 0)  				        {  					        filestream.Write(buffer' 0' count);  				        }  			        }  		        }  		        else  		        {                      var encoding = string.IsNullOrEmpty(CharacterSet) ? Encoding.UTF8 : Encoding.GetEncoding(CharacterSet);                      using (var reader = new StreamReader(stream' encoding))  			        {  				        RawText = reader.ReadToEnd();  			        }  		        }  	        }
Magic Number,EasyHttp.Http,MultiPartStreamer,C:\repos\hhariri_EasyHttp\src\EasyHttp\Http\MultipartStreamer.cs,StreamFileContents,The following statement contains a magic number: var buffer = new byte[8192];
