Implementation smell,Namespace,Class,File,Method,Description
Long Statement,EasyHttp.Specs.BugRepros,when_decoding_fields_with_underscores,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,BecauseOf,The length of the statement  "                    "{\"html_attributions\": []'\"result\": {\"address_components\": [{\"long_name\": \"Church Street\"'\"short_name\": \"Church Street\"'\"types\": [\"route\"]}'{\"long_name\": \"Wilmslow\"'\"short_name\": \"Wilmslow\"'\"types\": [\"locality\"'\"political\"]}'{\"long_name\": \"GB\"'\"short_name\": \"GB\"'\"types\": [\"country\"'\"political\"]}'{\"long_name\": \"SK9 1\"'\"short_name\": \"SK9 1\"'\"types\": [\"postal_code\"]}]'\"formatted_address\": \"Church Street' Wilmslow' SK9 1' United Kingdom\"'\"formatted_phone_number\": \"01625 538831\"'\"geometry\": {\"location\": {\"lat\": 53.328908'\"lng\": -2.229191}}'\"icon\": \"http://maps.gstatic.com/mapfiles/place_api/icons/generic_business-71.png\"'\"id\": \"51155a69bc03041b926e44f03a5bbe9feafb5035\"'\"international_phone_number\": \"+44 1625 538831\"'\"name\": \"Waitrose\"'\"reference\": \"CmRfAAAAUZ4dYk9VpNJd1mFxa970TxVGgp9QTGeEa1BaU_wTWdTHNLCcB-9YyNu5LjgIewxo_oOna0KI9f_Z-Xff4CxvTf9wFHTHgE1wRGyCLLJo2BPjkGHo5Qem-Z-2_FKiY3gmEhA_Qs0jcQyFgVEs1BZAt_bdGhRerV30JziD2x7ZOMgxQTKlnH0yAQ\"'\"types\": [\"grocery_or_supermarket\"'\"food\"'\"store\"'\"establishment\"]'\"url\": \"http://maps.google.com/maps/place?cid=14979720525476796445\"'\"vicinity\": \"Church Street' Wilmslow\"'\"website\": \"http://www.waitrose.com/wilmslow\"}'\"status\": \"OK\"}"; " is 1303.
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.BugRepros,when_decoding_date_in_iso8601_format,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\BugRepros\DecodingIssues.cs,should_decode_correctly_to_static_body,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 11' 06' 19' 50' 14' 137)' outputStatic.LockedOutUntil);
Magic Number,EasyHttp.Specs.Helpers,FilesService,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\Helpers\ServiceStackHost.cs,OnPost,The following statement contains a magic number: if (base.Request.Files.Length == 2) return new HttpResult() { StatusCode = HttpStatusCode.OK };
Magic Number,EasyHttp.Specs,TestRunContext,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\TestRunContext.cs,OneTimeSetUp,The following statement contains a magic number: _port = 16000;
Magic Number,EasyHttp.Specs.Specs,when_making_a_GET_with_stream_response_true,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\Specs\StreamRequestSpecs.cs,should_allow_access_to_response_stream,The following statement contains a magic number: using (var stream = httpClient.Response.ResponseStream)              {                  int count;                  int total = 0;                  var buffer = new byte[8192];                    while ((count = stream.Read(buffer' 0' buffer.Length)) > 0)                  {                      total += count;                  }                  Assert.IsTrue(total > 0);              }
Magic Number,EasyHttp.Specs.Specs,when_mocking_a_GET_request_with_valid_uri_to_inject_a_specific_response,C:\repos\hhariri_EasyHttp\src\EasyHttp.Specs\Specs\HttpRequestSpecs.cs,should_return_the_injected_body_content_for_the_Post,The following statement contains a magic number: Assert.AreEqual(3' characterNames.Length);
