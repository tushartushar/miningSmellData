Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The length of the statement  "            var animals = animalCollection.FindAll().Fields(new { Age = true }).Sort("Age"' IndexOrder.Ascending).Documents.ToList(); " is 121.
Long Statement,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The length of the statement  "            var animals = animalCollection.FindAll().Fields(new { Age = true }).Sort("Age"' IndexOrder.Ascending).Documents.ToList(); " is 121.
Long Statement,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The length of the statement  "            personCollection.Insert(new Person { FirstName = "Bob"' LastName = "McBob"' Age = 42' Address = new Address { City = "London" }' Aliases = new[]{"Blub"} }' true); " is 162.
Long Statement,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The length of the statement  "            personCollection.Insert(new Person { FirstName = "Jane"' LastName = "McJane"' Age = 35' Address = new Address { City = "Paris" } }' true); " is 138.
Long Statement,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The length of the statement  "            personCollection.Insert(new Person { FirstName = "Joe"' LastName = "McJoe"' Age = 21' Address = new Address { City = "Chicago" } }' true); " is 138.
Long Statement,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The length of the statement  "            orgCollection.Insert(new Organization { Name = "The Muffler Shanty"' Address = new Address { City = "London" } }' true); " is 120.
Long Statement,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Boolean_In_Conjunction,The length of the statement  "            Assert.AreEqual(new Document("PrimaryAddress.IsInternational"' true).Add("Age"' Op.GreaterThan(21))' queryObject.Query); " is 120.
Long Statement,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConjuctionConstraint,The length of the statement  "            Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query); " is 121.
Long Statement,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,NestedQueryable_Any,The length of the statement  "            Assert.AreEqual(new Document("Addresses"' new Document("$elemMatch"' new Document("City"' "London")))' queryObject.Query); " is 122.
Long Statement,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The length of the statement  "            Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query); " is 121.
Long Statement,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadDocWithDocs,The length of the statement  "            //            Document doc = new Document().Append("a"' new Document().Append("b"' new Document().Append("c"'new Document()))); " is 127.
Long Statement,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadUtcTimeToLocalTime,The length of the statement  "            var localtzoffset =TimeZoneInfo.Local.BaseUtcOffset.Hours - 1; //gmt offset the local date was saved in along with the local offset. " is 132.
Long Statement,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteNetRegex,The length of the statement  "            var regex = new Regex("expression"' RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline); " is 125.
Long Statement,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The length of the statement  "            var builder = new MongoConnectionStringBuilder { MinimumPoolSize = 3' ConnectionLifetime = TimeSpan.FromMilliseconds(200)}; " is 123.
Long Statement,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestExceptionIfMaximumPoolSizeAndConnectionTimeoutAreReached,The length of the statement  "            var builder = new MongoConnectionStringBuilder { MaximumPoolSize = 1' ConnectionTimeout = TimeSpan.FromMilliseconds(500)}; " is 122.
Long Statement,MongoDB.UnitTests.Serialization.Descriptors,ExtendedPropertiesTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\ExtendedPropertiesTests.cs,CanSerializeUsingIDictionary,The length of the statement  "            var bson = Serialize<IDictionaryProperty>(new IDictionaryProperty() { ExtendedProperties = new Dictionary<string' object> { { "A"' new Document("B"' "b") } } }); " is 161.
Long Statement,MongoDB.UnitTests.Serialization.Descriptors,ExtendedPropertiesTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\ExtendedPropertiesTests.cs,CanSerializeUsingDictionary,The length of the statement  "            var bson = Serialize<DictionaryProperty>(new DictionaryProperty() { ExtendedProperties = new Dictionary<string' object> { { "A"' new Document("B"' "b") } } }); " is 159.
Long Statement,MongoDB.UnitTests.Serialization.Descriptors,ExtendedPropertiesTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\ExtendedPropertiesTests.cs,CanSerializeUsingDocument,The length of the statement  "            var bson = Serialize<DocumentProperty>(new DocumentProperty() { ExtendedProperties = new Document("A"' new Document("B"' "b")) }); " is 130.
Long Statement,MongoDB.UnitTests.Serialization.Descriptors,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\GenericListPropertyTests.cs,CanSerializeAGenericListOfObjects,The length of the statement  "            var bson = Serialize<GenericListOfObjectsProperty>(new GenericListOfObjectsProperty() { A = new List<object> { 1' 2 } }); " is 121.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeStringGenericDictionaryWithComplexType,The length of the statement  "            var expectedBson = Serialize<Document>(new Document("Dict"' new Document { { "key1"' new Document("Name"' "a") }' { "key2"' new Document("Name"' "b") } })); " is 156.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeStringGenericDictionaryWithComplexType,The length of the statement  "            var obj = new GenericStringDictionaryWithComplexType { Dict = new Dictionary<string' GenericDictionaryComplexType> { { "key1"' new GenericDictionaryComplexType { Name = "a" } }' { "key2"' new GenericDictionaryComplexType { Name = "b" } } } }; " is 242.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeStringGenericDictionaryWithComplexType,The length of the statement  "            var bson = Serialize<Document>(new Document("Dict"' new Document { { "key1"' new Document("Name"' "a") }' { "key2"' new Document("Name"' "b") } })); " is 148.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeIntGenericDictionaryWithComplexType,The length of the statement  "            var expectedBson = Serialize<Document>(new Document("Dict"' new Document { { "1"' new Document("Name"' "a") }' { "2"' new Document("Name"' "b") } })); " is 150.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeIntGenericDictionaryWithComplexType,The length of the statement  "            var obj = new GenericIntDictionaryWithComplexType { Dict = new Dictionary<int' GenericDictionaryComplexType> { { 1' new GenericDictionaryComplexType { Name = "a" } }' { 2' new GenericDictionaryComplexType { Name = "b" } } } }; " is 226.
Long Statement,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeIntGenericDictionaryWithComplexType,The length of the statement  "            var bson = Serialize<Document>(new Document("Dict"' new Document { { "1"' new Document("Name"' "a") }' { "2"' new Document("Name"' "b") } })); " is 142.
Long Statement,MongoDB.UnitTests.IO,TestQueryMessage,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\IO\TestQueryMessage.cs,TestAllBytesWritten,The length of the statement  "            Assert.AreEqual("3A-00-00-00-00-00-00-00-00-00-00-00-D4-07-00-00-00-00-00-00-54-65-73-74-44-42-2E-54-65-73-74-43-6F-6C-00-00-00-00-00-00-00-00-00-0F-00-00-00-10-63-6F-6C-31-00-01-00-00-00-00"' " is 192.
Long Statement,MongoDB.UnitTests.IO,TestQueryMessage,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\IO\TestQueryMessage.cs,TestWriteMessageTwice,The length of the statement  "            const string expectedHex = "3A-00-00-00-00-00-00-00-00-00-00-00-D4-07-00-00-00-00-00-00-54-65-73-74-44-42-2E-54-65-73-74-43-6F-6C-00-00-00-00-00-00-00-00-00-0F-00-00-00-10-63-6F-6C-31-00-01-00-00-00-00"; " is 203.
Long Statement,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestUpdatePartial,The length of the statement  "            Assert.AreEqual(coolness++' Convert.ToInt32(updates.FindOne(selector)["Coolness"])' "Coolness field not incremented"' true); " is 124.
Long Statement,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestUpdatePartial,The length of the statement  "            Assert.AreEqual(coolness++' Convert.ToInt32(updates.FindOne(selector).Coolness)' "Coolness field not incremented"' true); " is 121.
Long Statement,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestConnectionStringParsing,The length of the statement  "                    "Username=testuser;Password=testpassword;Server=testserver:555;ConnectionLifetime=50;MaximumPoolSize=101;MinimumPoolSize=202;Pooled=false;Database=testdatabase"); " is 162.
Long Statement,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The length of the statement  "                "Username=testusername;Password=testpassword;Server=testserver1:555'testserver2;MaximumPoolSize=101;MinimumPoolSize=202;ConnectionTimeout=60;ConnectionLifetime=50"' " is 164.
Long Statement,MongoDB.UnitTests,TestMongoRegex,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoRegex.cs,CanBeConstructedWithMongoRegexOption,The length of the statement  "            var regex = new MongoRegex("expression"' MongoRegexOption.IgnoreCase | MongoRegexOption.IgnorePatternWhitespace | MongoRegexOption.Multiline); " is 142.
Long Statement,MongoDB.UnitTests,TestMongoRegex,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoRegex.cs,CanReadOptions,The length of the statement  "            Assert.AreEqual(MongoRegexOption.IgnoreCase | MongoRegexOption.IgnorePatternWhitespace | MongoRegexOption.Multiline' regex.Options); " is 132.
Long Statement,MongoDB.UnitTests,TestMongoRegex,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoRegex.cs,CanBuildNetRegex,The length of the statement  "            var regex = new MongoRegex("expression"' MongoRegexOption.IgnoreCase|MongoRegexOption.IgnorePatternWhitespace|MongoRegexOption.Multiline); " is 138.
Long Statement,MongoDB.UnitTests,TestMongoRegex,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoRegex.cs,CanBuildNetRegex,The length of the statement  "            Assert.AreEqual(RegexOptions.IgnorePatternWhitespace | RegexOptions.IgnoreCase | RegexOptions.Multiline' netRegex.Options); " is 123.
Empty Catch Block,MongoDB.IntegrationTests.Connections,TestConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestConnectionFactory.cs,TestExceptionWhenMinimumPoolSizeIsGreaterThenMaximumPoolSize,The method has an empty catch block.
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_persist_discriminator_using_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_persist_discriminator_using_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_persist_discriminator_using_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Lion() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_persist_discriminator_using_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_fetch_with_inherited_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collection,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_support_projections_with_inherited_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animalCollection.Count());
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: Assert.AreEqual(2' animalCollection.Linq().Count());
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_inherited_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_inherited_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Animal() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithConcreteBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithConcreteBaseClass.cs,Should_get_correct_count_with_inherited_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_persist_discriminator_using_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_persist_discriminator_using_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_persist_discriminator_using_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Lion() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_persist_discriminator_using_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_base_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(2' animals.Count);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_base_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(20' animals[1].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collection,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collections_with_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_support_projections_with_concrete_class_collections_with_linq,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection,The following statement contains a magic number: Assert.AreEqual(19' cats[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection_through_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_fetch_with_concrete_class_collection_through_linq,The following statement contains a magic number: Assert.AreEqual(19' animals[0].Age);
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection,The following statement contains a magic number: Assert.AreEqual(2' animalCollection.Count());
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_base_class_collection_using_linq,The following statement contains a magic number: Assert.AreEqual(2' animalCollection.Linq().Count());
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_concrete_class_collection,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19 });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_concrete_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Bear() { Age = 20' Name = "Jim" });
Magic Number,MongoDB.IntegrationTests.Inheritance,TestInheritanceWithAbstractBaseClass,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Inheritance\TestInheritanceWithAbstractBaseClass.cs,Should_get_correct_count_with_concrete_class_collection_using_linq,The following statement contains a magic number: animalCollection.Save(new Tiger() { Age = 19' Name = "Bob" });
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: builder.AddServer("localhost"' 27017);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: builder.AddServer("localhost"' 27018);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: Assert.AreEqual(27017' connection1.EndPoint.Port);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: Assert.AreEqual(27018' connection2.EndPoint.Port);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: Assert.AreEqual(27017' connection3.EndPoint.Port);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: Assert.AreEqual(27018' connection4.EndPoint.Port);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestPooledConnectionFactory.cs,TestServerCirculationWorks,The following statement contains a magic number: Assert.AreEqual(27017' connection5.EndPoint.Port);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestAuthentication,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestAuthentication.cs,TryUnautenticatedInsertWithoutSendingACommand,The following statement contains a magic number: collection.Insert(new Document().Add("value"' 84)' false);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestAuthentication,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestAuthentication.cs,TryInsertData,The following statement contains a magic number: collection.Insert(new Document().Add("value"' 84)'true);
Magic Number,MongoDB.IntegrationTests.SecondServer,TestAuthentication,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestAuthentication.cs,TryInsertData,The following statement contains a magic number: var value = collection.FindOne(new Document().Add("value"' 84));
Magic Number,MongoDB.IntegrationTests.SecondServer,TestAuthentication,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\SecondServer\TestAuthentication.cs,TryInsertData,The following statement contains a magic number: Assert.AreEqual(84' value["value"]);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Bob"'                      LastName = "McBob"'                      Age = 42'                      PrimaryAddress = new Address { City = "London" }'                      Addresses = new List<Address>                       {                          new Address { City = "London" }'                          new Address { City = "Tokyo" }'                           new Address { City = "Seattle" }                       }'                      EmployerIds = new[] { 1' 2 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Bob"'                      LastName = "McBob"'                      Age = 42'                      PrimaryAddress = new Address { City = "London" }'                      Addresses = new List<Address>                       {                          new Address { City = "London" }'                          new Address { City = "Tokyo" }'                           new Address { City = "Seattle" }                       }'                      EmployerIds = new[] { 1' 2 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Jane"'                      LastName = "McJane"'                      Age = 35'                      PrimaryAddress = new Address { City = "Paris" }'                      Addresses = new List<Address>                       {                          new Address { City = "Paris" }                      }'                      EmployerIds = new[] { 1 }                    }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Joe"'                      LastName = "McJoe"'                      Age = 21'                      PrimaryAddress = new Address { City = "Chicago" }'                      Addresses = new List<Address>                       {                          new Address { City = "Chicago" }'                          new Address { City = "London" }                      }'                      EmployerIds = new[] { 3 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Joe"'                      LastName = "McJoe"'                      Age = 21'                      PrimaryAddress = new Address { City = "Chicago" }'                      Addresses = new List<Address>                       {                          new Address { City = "Chicago" }'                          new Address { City = "London" }                      }'                      EmployerIds = new[] { 3 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Off_of_select,The following statement contains a magic number: Assert.AreEqual(21' minAge);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Off_of_root,The following statement contains a magic number: Assert.AreEqual(21' minAge);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: var grouping = Enumerable.ToList(from p in Collection.Linq()                                               where p.Age > 21                                               group p by 1 into g                                               select new                                               {                                                   Average = g.Average(x => x.Age)'                                                   Min = g.Min(x => x.Age)'                                                   Max = g.Max(x => x.Age)'                                                   Count = g.Count()'                                                   Sum = g.Sum(x => x.Age)                                               });
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: Assert.AreEqual(38.5' grouping.Single().Average);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: Assert.AreEqual(35' grouping.Single().Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: Assert.AreEqual(42' grouping.Single().Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: Assert.AreEqual(2' grouping.Single().Count);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,NoGrouping,The following statement contains a magic number: Assert.AreEqual(77' grouping.Single().Sum);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: var grouping = Enumerable.ToList(from p in Collection.Linq()                                               group p by p.Age % 2 into g                                               select new                                               {                                                   IsEven = g.Key == 0'                                                   Min = g.Min(x => x.Age)'                                                   Max = g.Max(x => x.Age)'                                                   Count = g.Count()'                                                   Sum = g.Sum(x => x.Age)                                               });
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(2' grouping.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(42' grouping[0].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(42' grouping[0].Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(42' grouping[0].Sum);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(2' grouping[1].Count);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(35' grouping[1].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(21' grouping[1].Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping,The following statement contains a magic number: Assert.AreEqual(56' grouping[1].Sum);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping2,The following statement contains a magic number: Assert.AreEqual(2' grouping.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping2,The following statement contains a magic number: Assert.AreEqual(42' grouping[0].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping2,The following statement contains a magic number: Assert.AreEqual(42' grouping[0].Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping2,The following statement contains a magic number: Assert.AreEqual(35' grouping[1].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Expression_Grouping2,The following statement contains a magic number: Assert.AreEqual(21' grouping[1].Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: var grouping = Enumerable.ToList(from p in Collection.Linq()                                               where p.Age > 21                                               group p by new { FirstName = p.FirstName' LastName = p.LastName } into g                                               select new                                               {                                                   Name = g.Key.FirstName + " " + g.Key.LastName'                                                   Min = g.Min(x => x.Age) + 100'                                                   Max = g.Max(x => x.Age) + 100                                               });
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: var grouping = Enumerable.ToList(from p in Collection.Linq()                                               where p.Age > 21                                               group p by new { FirstName = p.FirstName' LastName = p.LastName } into g                                               select new                                               {                                                   Name = g.Key.FirstName + " " + g.Key.LastName'                                                   Min = g.Min(x => x.Age) + 100'                                                   Max = g.Max(x => x.Age) + 100                                               });
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: var grouping = Enumerable.ToList(from p in Collection.Linq()                                               where p.Age > 21                                               group p by new { FirstName = p.FirstName' LastName = p.LastName } into g                                               select new                                               {                                                   Name = g.Key.FirstName + " " + g.Key.LastName'                                                   Min = g.Min(x => x.Age) + 100'                                                   Max = g.Max(x => x.Age) + 100                                               });
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: Assert.AreEqual(2' grouping.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: Assert.AreEqual(142' grouping[0].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: Assert.AreEqual(142' grouping[0].Min);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: Assert.AreEqual(135' grouping[1].Max);
Magic Number,MongoDB.IntegrationTests.Linq,MapReduceTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MapReduceTests.cs,Complex,The following statement contains a magic number: Assert.AreEqual(135' grouping[1].Min);
Magic Number,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The following statement contains a magic number: personCollection.Insert(new Person { FirstName = "Bob"' LastName = "McBob"' Age = 42' Address = new Address { City = "London" }' Aliases = new[]{"Blub"} }' true);
Magic Number,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The following statement contains a magic number: personCollection.Insert(new Person { FirstName = "Jane"' LastName = "McJane"' Age = 35' Address = new Address { City = "Paris" } }' true);
Magic Number,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,TestSetup,The following statement contains a magic number: personCollection.Insert(new Person { FirstName = "Joe"' LastName = "McJoe"' Age = 21' Address = new Address { City = "Chicago" } }' true);
Magic Number,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,Find,The following statement contains a magic number: var people = personCollection.Find(x => x.Age > 21).Documents;
Magic Number,MongoDB.IntegrationTests.Linq,LinqExtensionsTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\LinqExtensionsTests.cs,Find,The following statement contains a magic number: Assert.AreEqual(2' people.Count());
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Bob"'                      MidName = "Bart"'                      LastName = "McBob"'                      Age = 42'                      PrimaryAddress = new Address {City = "London"' IsInternational = true' AddressType = AddressType.Company}'                      Addresses = new List<Address>                      {                          new Address { City = "London"' IsInternational = true' AddressType = AddressType.Company }'                          new Address { City = "Tokyo"' IsInternational = true' AddressType = AddressType.Private }'                           new Address { City = "Seattle"' IsInternational = false' AddressType = AddressType.Private }                       }'                      EmployerIds = new[] { 1' 2 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Bob"'                      MidName = "Bart"'                      LastName = "McBob"'                      Age = 42'                      PrimaryAddress = new Address {City = "London"' IsInternational = true' AddressType = AddressType.Company}'                      Addresses = new List<Address>                      {                          new Address { City = "London"' IsInternational = true' AddressType = AddressType.Company }'                          new Address { City = "Tokyo"' IsInternational = true' AddressType = AddressType.Private }'                           new Address { City = "Seattle"' IsInternational = false' AddressType = AddressType.Private }                       }'                      EmployerIds = new[] { 1' 2 }                  }' true);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Jane"'                      LastName = "McJane"'                      Age = 35'                      PrimaryAddress = new Address { City = "Paris"' IsInternational = false' AddressType = AddressType.Private }'                      Addresses = new List<Address>                       {                          new Address { City = "Paris"' AddressType = AddressType.Private }                      }'                      EmployerIds = new[] {1}                  }'                  true);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Joe"'                      LastName = "McJoe"'                      Age = 21'                      PrimaryAddress = new Address { City = "Chicago"' IsInternational = true' AddressType = AddressType.Private }'                      Addresses = new List<Address>                       {                          new Address { City = "Chicago"' AddressType = AddressType.Private }'                          new Address { City = "London"' AddressType = AddressType.Company }                      }'                      EmployerIds = new[] {3}                  }'                  true);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,TestSetup,The following statement contains a magic number: Collection.Insert(                  new Person                  {                      FirstName = "Joe"'                      LastName = "McJoe"'                      Age = 21'                      PrimaryAddress = new Address { City = "Chicago"' IsInternational = true' AddressType = AddressType.Private }'                      Addresses = new List<Address>                       {                          new Address { City = "Chicago"' AddressType = AddressType.Private }'                          new Address { City = "London"' AddressType = AddressType.Company }                      }'                      EmployerIds = new[] {3}                  }'                  true);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Any,The following statement contains a magic number: var anyone = Collection.Linq().Any(x => x.Age <= 21);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Boolean,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Boolean_In_Conjunction,The following statement contains a magic number: var people = Enumerable.ToList(Collection.Linq().Where(x => x.PrimaryAddress.IsInternational && x.Age > 21));
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Chained,The following statement contains a magic number: var people = Collection.Linq()                  .Select(x => new { Name = x.FirstName + x.LastName' x.Age })                  .Where(x => x.Age > 21)                  .Select(x => x.Name).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Chained,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Complex_Addition,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age + 23 < 50).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Complex_Addition,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age + 23 < 50).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Complex_Disjunction,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age == 21 || x.Age == 35).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Complex_Disjunction,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age == 21 || x.Age == 35).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Complex_Disjunction,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConjuctionConstraint,The following statement contains a magic number: var people = Collection.Linq().Where(p => p.Age > 21 && p.Age < 42).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConjuctionConstraint,The following statement contains a magic number: var people = Collection.Linq().Where(p => p.Age > 21 && p.Age < 42).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConstraintsAgainstLocalReferenceMember,The following statement contains a magic number: var local = new { Test = new { Age = 21 } };
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConstraintsAgainstLocalReferenceMember,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConstraintsAgainstLocalVariable,The following statement contains a magic number: var age = 21;
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ConstraintsAgainstLocalVariable,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Count,The following statement contains a magic number: Assert.AreEqual(3' count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Count_with_predicate,The following statement contains a magic number: var count = Collection.Linq().Count(x => x.Age > 21);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Count_with_predicate,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Count_without_predicate,The following statement contains a magic number: var count = Collection.Linq().Where(x => x.Age > 21).Count();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Count_without_predicate,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,DocumentQuery,The following statement contains a magic number: var people = (from p in DocumentCollection.Linq()                            where p.Key("age") > 21                            select (string)p["fn"]).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,DocumentQuery,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,LocalEnumerable_Contains,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,LocalList_Contains,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NestedArray_Length,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NestedArray_indexer,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NestedQueryable_Any,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NestedQueryable_Contains,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NullCheck,The following statement contains a magic number: Assert.AreEqual(2' people.Length);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,NullCheckOnClassTypes,The following statement contains a magic number: Assert.AreEqual(3' people.Length);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,OrderBy,The following statement contains a magic number: Assert.AreEqual("Bob"' people[2].FirstName);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Projection,The following statement contains a magic number: Assert.AreEqual(3' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ProjectionWithConstraints,The following statement contains a magic number: var people = (from p in Collection.Linq()                            where p.Age > 21 && p.Age < 42                            select new { Name = p.FirstName + p.LastName }).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,ProjectionWithConstraints,The following statement contains a magic number: var people = (from p in Collection.Linq()                            where p.Age > 21 && p.Age < 42                            select new { Name = p.FirstName + p.LastName }).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,Single,The following statement contains a magic number: var person = Collection.Linq().Where(x => x.Age == 21).Single();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,SkipAndTake,The following statement contains a magic number: var people = Collection.Linq().OrderBy(x => x.Age).Skip(2).Take(1).ToList();
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,String_Contains,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,String_EndsWith,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,String_StartsWith,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryTests.cs,WithoutConstraints,The following statement contains a magic number: Assert.AreEqual(3' people.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Boolean_In_Conjunction,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.PrimaryAddress.IsInternational && x.Age > 21);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Boolean_In_Conjunction,The following statement contains a magic number: Assert.AreEqual(new Document("PrimaryAddress.IsInternational"' true).Add("Age"' Op.GreaterThan(21))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Chained,The following statement contains a magic number: var people = Collection.Linq()                  .Select(x => new {Name = x.FirstName + x.LastName' x.Age})                  .Where(x => x.Age > 21)                  .Select(x => x.Name);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Chained,The following statement contains a magic number: Assert.AreEqual(2' queryObject.Fields.Count);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Chained,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' Op.GreaterThan(21))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConjuctionConstraint,The following statement contains a magic number: var people = Collection.Linq().Where(p => p.Age > 21 && p.Age < 42);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConjuctionConstraint,The following statement contains a magic number: var people = Collection.Linq().Where(p => p.Age > 21 && p.Age < 42);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConjuctionConstraint,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConjuctionConstraint,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConstraintsAgainstLocalReferenceMember,The following statement contains a magic number: var local = new {Test = new {Age = 21}};
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ConstraintsAgainstLocalVariable,The following statement contains a magic number: var age = 21;
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Disjunction,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age == 21 || x.Age == 35);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Disjunction,The following statement contains a magic number: var people = Collection.Linq().Where(x => x.Age == 21 || x.Age == 35);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,DocumentQuery,The following statement contains a magic number: var people = from p in DocumentCollection.Linq()                           where p.Key("Age") > 21                           select (string)p["FirstName"];
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,DocumentQuery,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' Op.GreaterThan(21))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,Projection,The following statement contains a magic number: Assert.AreEqual(2' queryObject.Fields.Count());
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The following statement contains a magic number: var people = from p in Collection.Linq()                           where p.Age > 21 && p.Age < 42                           select new {Name = p.FirstName + p.LastName};
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The following statement contains a magic number: var people = from p in Collection.Linq()                           where p.Age > 21 && p.Age < 42                           select new {Name = p.FirstName + p.LastName};
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The following statement contains a magic number: Assert.AreEqual(2' queryObject.Fields.Count());
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,ProjectionWithConstraints,The following statement contains a magic number: Assert.AreEqual(new Document("Age"' new Document().Merge(Op.GreaterThan(21)).Merge(Op.LessThan(42)))' queryObject.Query);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,SkipAndTake,The following statement contains a magic number: var people = Collection.Linq().Skip(2).Take(1);
Magic Number,MongoDB.IntegrationTests.Linq,MongoQueryProviderTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Linq\MongoQueryProviderTests.cs,SkipAndTake,The following statement contains a magic number: Assert.AreEqual(2' queryObject.NumberToSkip);
Magic Number,MongoDB.UnitTests.Bson,BsonTestBase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\BsonTestBase.cs,HexToBytes,The following statement contains a magic number: hex.Length % 2 == 1
Magic Number,MongoDB.UnitTests.Bson,BsonTestBase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\BsonTestBase.cs,HexToBytes,The following statement contains a magic number: var bytes = new byte[numberChars / 2];
Magic Number,MongoDB.UnitTests.Bson,BsonTestBase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\BsonTestBase.cs,HexToBytes,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,BsonTestBase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\BsonTestBase.cs,HexToBytes,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,BsonTestBase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\BsonTestBase.cs,HexToBytes,The following statement contains a magic number: bytes[i / 2] = Convert.ToByte(hex.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,TestBsonBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonBinary.cs,DecodeHex,The following statement contains a magic number: var bytes = new byte[numberChars/2];
Magic Number,MongoDB.UnitTests.Bson,TestBsonBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonBinary.cs,DecodeHex,The following statement contains a magic number: bytes[i/2] = Convert.ToByte(val.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,TestBsonBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonBinary.cs,DecodeHex,The following statement contains a magic number: bytes[i/2] = Convert.ToByte(val.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,TestBsonBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonBinary.cs,DecodeHex,The following statement contains a magic number: bytes[i/2] = Convert.ToByte(val.Substring(i' 2)' 16);
Magic Number,MongoDB.UnitTests.Bson,TestBsonBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonBinary.cs,TestRoundTrip,The following statement contains a magic number: var idoc = new Document{{"b"' new Binary(new[]{(byte)1' (byte)2})}};
Magic Number,MongoDB.UnitTests.Bson,TestRoundTrips,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestRoundTrips.cs,TestMultibyteUnicode,The following statement contains a magic number: String euros = new StringBuilder().Append(euro'65).ToString();
Magic Number,MongoDB.UnitTests.Bson,TestRoundTrips,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestRoundTrips.cs,TestMultibyteUnicode,The following statement contains a magic number: String pounds = new StringBuilder().Append(pound'65).ToString();
Magic Number,MongoDB.UnitTests.Bson,TestRoundTrips,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestRoundTrips.cs,TestMultiDimensionalArray,The following statement contains a magic number: int[][] arr = new int[3][];
Magic Number,MongoDB.UnitTests.Bson,TestRoundTrips,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestRoundTrips.cs,TestMultiDimensionalArray,The following statement contains a magic number: arr[a] = new int[]{x * 1' x * 2' x * 3};
Magic Number,MongoDB.UnitTests.Bson,TestRoundTrips,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestRoundTrips.cs,TestMultiDimensionalArray,The following statement contains a magic number: arr[a] = new int[]{x * 1' x * 2' x * 3};
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringLong,The following statement contains a magic number: sb.Append('t'' 150);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 127);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append(euro' 5);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 126);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append(euro' 5);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 125);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append(euro' 5);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadLenStringTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadString,The following statement contains a magic number: Assert.AreEqual(4' Encoding.UTF8.GetByteCount(s));
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadBigDocument,The following statement contains a magic number: expected.Append("str"' "test")                  .Append("int"' 45)                  .Append("long"' (long)46)                  .Append("num"' 4.5)                  .Append("date"'DateTime.Today)                  .Append("_id"' new OidGenerator().Generate())                  .Append("code"' new Code("return 1;"))                  .Append("subdoc"' new Document().Append("a"'1).Append("b"'2))                                  .Append("array"' new String[]{"a"'"b"'"c"'"d"})                  .Append("codewscope"' new CodeWScope("return 2;"' new Document().Append("c"'1)))                  .Append("binary"' new Binary(new byte[]{0'1'2'3}))                  .Append("regex"' new MongoRegex("[A-Z]"))                  .Append("minkey"' MongoMinKey.Value)                  .Append("maxkey"' MongoMaxKey.Value)                  .Append("symbol"' new MongoSymbol("symbol"))              ;
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadStringBreakDblByteCharOverBuffer,The following statement contains a magic number: sb.Append('1'' 127);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadStringDblByteCharOnEndOfBufferBoundry,The following statement contains a magic number: sb.Append(pound' 66);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadStringLong,The following statement contains a magic number: sb.Append('t'' 256);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadStringTripleByteCharBufferBoundry,The following statement contains a magic number: sb.Append(euro' 66);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadUtcTimeByDefault,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadUtcTimeByDefault,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadUtcTimeToLocalTime,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 11' 0' 0' DateTimeKind.Local).AddHours(localtzoffset);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestReadUtcTimeToLocalTime,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 11' 0' 0' DateTimeKind.Local).AddHours(localtzoffset);
Magic Number,MongoDB.UnitTests.Bson,TestBsonReader,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonReader.cs,TestCanReadNagativeDates,The following statement contains a magic number: Assert.AreEqual(new DateTime(1960'1'1).ToUniversalTime()'document["date"]);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestCalculateSizeOfComplexDoc,The following statement contains a magic number: Assert.AreEqual(51' writer.CalculateSizeObject(doc));
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestCalculateSizeOfEmptyDoc,The following statement contains a magic number: Assert.AreEqual(5' writer.CalculateSizeObject(doc));
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestCalculateSizeOfSimpleDoc,The following statement contains a magic number: Assert.AreEqual(21' writer.CalculateSizeObject(doc));
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestLocalDateTimeIsWrittenAsUtcTime,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 11' 0' 0' DateTimeKind.Local);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestLocalDateTimeIsWrittenAsUtcTime,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 11' 0' 0' DateTimeKind.Local);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestLocalDateTimeIsWrittenAsUtcTime,The following statement contains a magic number: var utcTime = new DateTime(2010' 1' 1' 11 - localtzoffset' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestLocalDateTimeIsWrittenAsUtcTime,The following statement contains a magic number: var utcTime = new DateTime(2010' 1' 1' 11 - localtzoffset' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteMultibyteString,The following statement contains a magic number: var val = new StringBuilder().Append(euro' 3).ToString();
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteMultibyteStringLong,The following statement contains a magic number: var val = new StringBuilder().Append("ww").Append(euro' 180).ToString();
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteUtcTimeByDefault,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteUtcTimeByDefault,The following statement contains a magic number: var dateTime = new DateTime(2010' 1' 1' 10' 0' 0' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteBytesAsBinary,The following statement contains a magic number: var bson = Serialize(new Document("bytes"' new byte[] {10' 12}));
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteBytesAsBinary,The following statement contains a magic number: var bson = Serialize(new Document("bytes"' new byte[] {10' 12}));
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestWriteTimeSpanAsLong,The following statement contains a magic number: var span = TimeSpan.FromSeconds(123456);
Magic Number,MongoDB.UnitTests.Bson,TestBsonWriter,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Bson\TestBsonWriter.cs,TestCanWriteNagativeDates,The following statement contains a magic number: var bson = Serialize(new Document("date"' new DateTime(1960' 1' 1)));
Magic Number,MongoDB.UnitTests.Configuration,MongoConfigurationSectionTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Configuration\MongoConfigurationSectionTests.cs,CanReadLocalTimeFromConfig,The following statement contains a magic number: var section = ReadFromFile(2);
Magic Number,MongoDB.UnitTests.Configuration,MongoConfigurationSectionTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Configuration\MongoConfigurationSectionTests.cs,CanUpdateConfigurationFromReadLocalTime,The following statement contains a magic number: var section = ReadFromFile(2);
Magic Number,MongoDB.IntegrationTests.Connections,TestConnection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestConnection.cs,WriteBadMessage,The following statement contains a magic number: writer.Write(16 + msg.Length + 1);
Magic Number,MongoDB.IntegrationTests.Connections,TestConnection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestConnection.cs,WriteBadMessage,The following statement contains a magic number: writer.Write(1001);
Magic Number,MongoDB.IntegrationTests.Connections,TestConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestConnectionFactory.cs,TestCreatePoolForEachUniqeConnectionString,The following statement contains a magic number: Assert.AreEqual (3' ConnectionFactoryFactory.PoolCount);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtStartup,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder {MinimumPoolSize = 3};
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtStartup,The following statement contains a magic number: Assert.AreEqual(3' pool.PoolSize);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder { MinimumPoolSize = 3' ConnectionLifetime = TimeSpan.FromMilliseconds(200)};
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder { MinimumPoolSize = 3' ConnectionLifetime = TimeSpan.FromMilliseconds(200)};
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The following statement contains a magic number: Assert.AreEqual(3' pool.PoolSize);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMinimalPoolSizeIsEnsuredAtRuntime,The following statement contains a magic number: Assert.AreEqual(3' pool.PoolSize);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMaximumPoolSizeIsEnsured,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder { MaximumPoolSize = 2 };
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMaximumPoolSizeIsEnsured,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestMaximumPoolSizeIsEnsured,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestExceptionIfMaximumPoolSizeAndConnectionTimeoutAreReached,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder { MaximumPoolSize = 1' ConnectionTimeout = TimeSpan.FromMilliseconds(500)};
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestIfConnectionLifetimeIsReachedItDoesNotReturndToPool,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  ConnectionLifetime = TimeSpan.FromMilliseconds(100)              };
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestIfConnectionLifetimeIsReachedItDoesNotReturndToPool,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestCleanup,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  MinimumPoolSize = 0'                  ConnectionLifetime = TimeSpan.FromMilliseconds(100)              };
Magic Number,MongoDB.IntegrationTests.Connections,TestPooledConnectionFactory,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\Connections\TestPooledConnectionFactory.cs,TestCleanup,The following statement contains a magic number: Thread.Sleep(300);
Magic Number,MongoDB.UnitTests.Serialization.Builders,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerable,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,MongoDB.UnitTests.Serialization.Builders,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerable,The following statement contains a magic number: Assert.Contains(2' list);
Magic Number,MongoDB.UnitTests.Serialization.Builders,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerableOfInt,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,MongoDB.UnitTests.Serialization.Builders,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerableOfInt,The following statement contains a magic number: Assert.Contains(2' list);
Magic Number,MongoDB.UnitTests.Serialization.Builders,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\GenericListPropertyTests.cs,CanDeserializeGenericListOfObjects,The following statement contains a magic number: Assert.AreEqual(2' simpleArray.A.Count);
Magic Number,MongoDB.UnitTests.Serialization.Builders,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\GenericListPropertyTests.cs,CanDeserializeGenericListOfObjects,The following statement contains a magic number: Assert.Contains(2' simpleArray.A);
Magic Number,MongoDB.UnitTests.Serialization.Builders,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\GenericListPropertyTests.cs,CanDeserializeGenericListOfIntegers,The following statement contains a magic number: Assert.AreEqual(2' simpleArray.A.Count);
Magic Number,MongoDB.UnitTests.Serialization.Builders,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Builders\GenericListPropertyTests.cs,CanDeserializeGenericListOfIntegers,The following statement contains a magic number: Assert.Contains(2' simpleArray.A);
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,DotPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\DotPropertyTests.cs,CanSerializeWithChild,The following statement contains a magic number: var expected = Serialize(new Document("c.d"' 10));
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,DotPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\DotPropertyTests.cs,CanSerializeWithChild,The following statement contains a magic number: var bson = Serialize<DotClass>(new Document("C.D"' 10));
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,DotPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\DotPropertyTests.cs,CanSerializeWithChildIndexer,The following statement contains a magic number: var expected = Serialize(new Document("a.5.b"' 10));
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,DotPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\DotPropertyTests.cs,CanSerializeWithChildIndexer,The following statement contains a magic number: var bson = Serialize<DotClass>(new Document("A.5.B"' 10));
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,ModifierTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\ModifierTests.cs,CanSerializeSetUsingAnonymousType,The following statement contains a magic number: var expectedBson = Serialize(new Document("$set"' new Document("A"' 4)));
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerable,The following statement contains a magic number: e.A = new ArrayList {  1' 2 };
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerableUsingAnonymousType,The following statement contains a magic number: string bson = Serialize<Enumerable>(new { A = new[] { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerableOfInt,The following statement contains a magic number: e.A = new List<int> { 1' 2 };
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,EnumerablePropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\EnumerablePropertyTests.cs,CanDeserializeAnSimpleArrayAsIEnumerableOfIntUsingAnonymousType,The following statement contains a magic number: string bson = Serialize<EnumerableOfIntegers>(new { A = new[] { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\GenericListPropertyTests.cs,CanSerializeAGenericListOfObjects,The following statement contains a magic number: var bson = Serialize<GenericListOfObjectsProperty>(new GenericListOfObjectsProperty() { A = new List<object> { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\GenericListPropertyTests.cs,CanSerializeAGenericListOfObjectsUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<GenericListOfObjectsProperty>(new { A = new[] { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\GenericListPropertyTests.cs,CanSerializeAGenericListOfIntegers,The following statement contains a magic number: var bson = Serialize<GenericListOfIntegerProperty>(new GenericListOfIntegerProperty() { A = new List<int> { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,GenericListPropertyTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\GenericListPropertyTests.cs,CanSerializeAGenericListOfIntegersUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<GenericListOfIntegerProperty>(new { A = new[] { 1' 2 } });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,OperatorTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\OperatorTests.cs,CanSerializeWithStandardOperatorUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<OperatorProperty>(new { A = Op.GreaterThan(12) });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,OperatorTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\OperatorTests.cs,CanSerializeWithMetaOperatorUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<OperatorProperty>(new { A = !Op.GreaterThan(12) });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,OperatorTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\OperatorTests.cs,CanSerializeWithComplexOperatorsUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<OperatorProperty>(new { A = Op.GreaterThan(12) & !Op.GreaterThan(24) });
Magic Number,MongoDB.UnitTests.Serialization.Descriptors,OperatorTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\Descriptors\OperatorTests.cs,CanSerializeWithComplexOperatorsUsingAnonymousType,The following statement contains a magic number: var bson = Serialize<OperatorProperty>(new { A = Op.GreaterThan(12) & !Op.GreaterThan(24) });
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSetProtectedProperty,The following statement contains a magic number: var bson = Serialize(new Document("Property"' 4));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSetProtectedProperty,The following statement contains a magic number: Assert.AreEqual(4' prop.GetProperty());
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanNotSetPrivatePropertys,The following statement contains a magic number: var bson = Serialize(new Document("Property"' 4));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSetValueOnNullablPropertys,The following statement contains a magic number: var bson = Serialize(new Document("Value"' 10));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSetValueOnNullablPropertys,The following statement contains a magic number: Assert.AreEqual(10'obj.Value);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeGenericDictionary,The following statement contains a magic number: var expectedBson = Serialize<Document>(new Document("Property"' new Document() { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeGenericDictionary,The following statement contains a magic number: var expectedBson = Serialize<Document>(new Document("Property"' new Document() { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeGenericDictionary,The following statement contains a magic number: var obj = new GenericDictionary { Property = new Dictionary<string' int> { { "key1"' 10 }' { "key2"' 20 } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeGenericDictionary,The following statement contains a magic number: var obj = new GenericDictionary { Property = new Dictionary<string' int> { { "key1"' 10 }' { "key2"' 20 } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeGenericDictionary,The following statement contains a magic number: var bson = Serialize<Document>(new Document("Property"' new Document() { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeGenericDictionary,The following statement contains a magic number: var bson = Serialize<Document>(new Document("Property"' new Document() { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeGenericDictionary,The following statement contains a magic number: Assert.AreEqual(2'prop.Property.Count);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeGenericDictionary,The following statement contains a magic number: Assert.Contains(new KeyValuePair<string' int>("key1"' 10)' prop.Property);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeGenericDictionary,The following statement contains a magic number: Assert.Contains(new KeyValuePair<string' int>("key2"' 20)' prop.Property);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeStringGenericDictionaryWithComplexType,The following statement contains a magic number: Assert.AreEqual(2' prop.Dict.Count);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeIntGenericDictionaryWithComplexType,The following statement contains a magic number: var obj = new GenericIntDictionaryWithComplexType { Dict = new Dictionary<int' GenericDictionaryComplexType> { { 1' new GenericDictionaryComplexType { Name = "a" } }' { 2' new GenericDictionaryComplexType { Name = "b" } } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeIntGenericDictionaryWithComplexType,The following statement contains a magic number: Assert.AreEqual(2' prop.Dict.Count);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeIntGenericDictionaryWithComplexType,The following statement contains a magic number: Assert.IsTrue(prop.Dict[2].Name == "b");
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeSortedListDictionary,The following statement contains a magic number: var expectedBson = Serialize<Document>(new Document("Property"' new Document { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeSortedListDictionary,The following statement contains a magic number: var expectedBson = Serialize<Document>(new Document("Property"' new Document { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeSortedListDictionary,The following statement contains a magic number: var obj = new SortedListDictionary { Property = new SortedList<string' int> { { "key1"' 10 }' { "key2"' 20 } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeSortedListDictionary,The following statement contains a magic number: var obj = new SortedListDictionary { Property = new SortedList<string' int> { { "key1"' 10 }' { "key2"' 20 } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeSortedListDictionary,The following statement contains a magic number: var bson = Serialize<Document>(new Document("Property"' new Document { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeSortedListDictionary,The following statement contains a magic number: var bson = Serialize<Document>(new Document("Property"' new Document { { "key1"' 10 }' { "key2"' 20 } }));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeSortedListDictionary,The following statement contains a magic number: Assert.AreEqual(2' prop.Property.Count);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeSortedListDictionary,The following statement contains a magic number: Assert.Contains(new KeyValuePair<string' int>("key1"' 10)' prop.Property);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeSortedListDictionary,The following statement contains a magic number: Assert.Contains(new KeyValuePair<string' int>("key2"' 20)' prop.Property);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanSerializeAndDeserializeHashSet,The following statement contains a magic number: Assert.AreEqual(2' prop.Property.Count);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: var bson = Serialize(new Document("Property"' new Binary(new byte[] {1' 2' 3' 4})));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: var bson = Serialize(new Document("Property"' new Binary(new byte[] {1' 2' 3' 4})));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: var bson = Serialize(new Document("Property"' new Binary(new byte[] {1' 2' 3' 4})));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(4' helper.Property.Length);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(2' helper.Property[1]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(3' helper.Property[2]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(3' helper.Property[2]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(4' helper.Property[3]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanWriteByteArrayPropertyFromBinary,The following statement contains a magic number: Assert.AreEqual(4' helper.Property[3]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanReadEmbeddedDocument,The following statement contains a magic number: var bson = Serialize(new Document("Document"' new Document("Embedded"'new Document("value"' 10))));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanReadEmbeddedDocument,The following statement contains a magic number: Assert.AreEqual(10' embedded["value"]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,SerializesAnEnumAsIntWhenItsUsedAsDictionaryKey,The following statement contains a magic number: var obj = new DictionaryWithEnumAsKeyHelper { Dict = new Dictionary<DateTimeKind' int> { { DateTimeKind.Utc' 9 } } };
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,SerializesAnEnumAsIntWhenItsUsedAsDictionaryKey,The following statement contains a magic number: Assert.AreEqual(9' dict[Convert.ToString((int)DateTimeKind.Utc)]);
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeADictionaryWithEnumAsKey,The following statement contains a magic number: var bson = Serialize<Document>(new Document("Dict"' new Document(( (int)DateTimeKind.Utc ).ToString()' 9)));
Magic Number,MongoDB.UnitTests.Serialization,SerializationFactoryTests,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Serialization\SerializationFactoryTests.cs,CanDeserializeADictionaryWithEnumAsKey,The following statement contains a magic number: Assert.AreEqual(9'prop.Dict[DateTimeKind.Utc]);
Magic Number,MongoDB.UnitTests.IO,TestMsgMessage,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\IO\TestMsgMessage.cs,TestAllBytesWritten,The following statement contains a magic number: msg.Header.ResponseTo = 11;
Magic Number,MongoDB.UnitTests.IO,TestMsgMessage,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\IO\TestMsgMessage.cs,TestAllBytesWritten,The following statement contains a magic number: Assert.AreEqual(16'msg.Header.MessageLength);
Magic Number,MongoDB.UnitTests.IO,TestMsgMessage,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\IO\TestMsgMessage.cs,TestAllBytesWritten,The following statement contains a magic number: MemoryStream buffer = new MemoryStream(18);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,OnInit,The following statement contains a magic number: finds.Insert(new Document {{"x"' 4}' {"h"' "hi"}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,OnInit,The following statement contains a magic number: j < 100
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,OnInit,The following statement contains a magic number: finds.Insert(new Document {{"x"' 4}' {"n"' 1}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,OnInit,The following statement contains a magic number: j < 105
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestArrayInsert,The following statement contains a magic number: indoc1["year"] = 2006;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestArrayInsert,The following statement contains a magic number: indoc2["year"] = 2008;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestArrayInsert,The following statement contains a magic number: Assert.AreEqual(2006' result["year"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestArrayInsert,The following statement contains a magic number: Assert.AreEqual(2008' result["year"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestCount,The following statement contains a magic number: var top = 100;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestCountWithSpec,The following statement contains a magic number: counts.Insert(new Document().Add("Last"' "Cordr").Add("First"' "Sam").Add("cnt"' 2));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestCountWithSpec,The following statement contains a magic number: counts.Insert(new Document().Add("Last"' "Corder").Add("First"' "Sam").Add("cnt"' 3));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestCountWithSpec,The following statement contains a magic number: Assert.AreEqual(2' counts.Count(new Document().Add("Last"' "Cordr")));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestDelete,The following statement contains a magic number: doc["x"] = 2;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestDelete,The following statement contains a magic number: var selector = new Document().Add("x"' 2);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindAttributeLimit,The following statement contains a magic number: query["j"] = 10;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindAttributeLimit,The following statement contains a magic number: Assert.AreEqual(4' result["x"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindGTRange,The following statement contains a magic number: query["j"] = new Document().Add("$gt"' 20);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindGTRange,The following statement contains a magic number: Assert.IsTrue(Convert.ToDouble(j) > 20);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindNulls,The following statement contains a magic number: Assert.AreEqual(99' numnulls);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindOne,The following statement contains a magic number: query["j"] = 10;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindOne,The following statement contains a magic number: Assert.AreEqual(4' result["x"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindOne,The following statement contains a magic number: Assert.AreEqual(10' result["j"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindOneNotThere,The following statement contains a magic number: query["not_there"] = 10;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindWhereEquivalency,The following statement contains a magic number: var lt = new Document().Add("j"' new Document().Add("$lt"' 5));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' CountDocs(col.Find(lt))' "Basic find didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' CountDocs(col.Find(where))' "String where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' CountDocs(col.Find(explicitWhere))' "Explicit where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' CountDocs(col.Find(funcDoc))' "Function where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestFindAndModifySortsResults,The following statement contains a magic number: Document doc2 = new Document().Append("handled"' false).Append("priority"' 2).Append("value"' "Test 2");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var docs = new Document[10];
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertLargerThan4MBDocument,The following statement contains a magic number: var b = new Binary(new byte[1024*1024]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestInsertLargerThan4MBDocument,The following statement contains a magic number: var b = new Binary(new byte[1024*1024]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestManualWhere,The following statement contains a magic number: Assert.IsTrue(Convert.ToInt32(j)%2 == 0);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestReallySimpleInsert,The following statement contains a magic number: indoc["x"] = 2;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestReallySimpleInsert,The following statement contains a magic number: var result = inserts.FindOne(new Document().Add("x"' 2));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSave,The following statement contains a magic number: var count = 100;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSave,The following statement contains a magic number: Assert.AreEqual(count' saves.Count(new Document {{"y"' 2}}));
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSaveInsertDocumentIfExists,The following statement contains a magic number: Assert.AreEqual(2' array.Length);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSaveInsertDocumentIfNotExists,The following statement contains a magic number: Assert.AreEqual(2' array.Length);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSimpleInsert,The following statement contains a magic number: indoc["year"] = 1999;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestSimpleInsert,The following statement contains a magic number: Assert.AreEqual(1999' result["year"]);
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestUpdateMany,The following statement contains a magic number: Assert.AreEqual(3' updates.Count(selector)' "Didn't find all Documents inserted for TestUpdateMany with Selector");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestUpdateMany,The following statement contains a magic number: Assert.AreEqual(3' updates.Count(selector)' "Not all Cordr documents were updated");
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestUpdatePartial,The following statement contains a magic number: var coolness = 5;
Magic Number,MongoDB.IntegrationTests,TestCollection,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection.cs,TestWhere,The following statement contains a magic number: Assert.IsTrue(Convert.ToInt32(j)%2 == 0);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,OnInit,The following statement contains a magic number: finds.Insert(new Document {{"x"' 4}' {"h"' "hi"}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,OnInit,The following statement contains a magic number: j < 100
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,OnInit,The following statement contains a magic number: finds.Insert(new Document {{"x"' 4}' {"n"' 1}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,OnInit,The following statement contains a magic number: j < 105
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestArrayInsert,The following statement contains a magic number: var indoc1 = new {Song = "The Axe"' Artist = "Tinsley Ellis"' Year = 2006};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestArrayInsert,The following statement contains a magic number: var indoc2 = new {Song = "The Axe2"' Artist = "Tinsley Ellis2"' Year = 2008};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestArrayInsert,The following statement contains a magic number: Assert.AreEqual(2006' result.Year);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestArrayInsert,The following statement contains a magic number: Assert.AreEqual(2008' result.Year);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestCount,The following statement contains a magic number: var top = 100;
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestCountWithSpec,The following statement contains a magic number: counts.Insert(new CountsEntity {Last = "Cordr"' First = "Sam"' Coolness = 2});
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestCountWithSpec,The following statement contains a magic number: counts.Insert(new CountsEntity {Last = "Corder"' First = "Sam"' Coolness = 3});
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestCountWithSpec,The following statement contains a magic number: Assert.AreEqual(2' counts.Count(new {Last = "Cordr"}));
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestDelete,The following statement contains a magic number: deletes.Insert(new {x = 2' y = 1});
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestDelete,The following statement contains a magic number: var selector = new {x = 2};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindAttributeLimit,The following statement contains a magic number: var query = new {Index = 10};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindAttributeLimit,The following statement contains a magic number: Assert.AreEqual(4' result.x);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindGTRange,The following statement contains a magic number: var query = new {Index = Op.GreaterThan(20)};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindGTRange,The following statement contains a magic number: Assert.Greater(result.Index' 20);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindNulls,The following statement contains a magic number: Assert.AreEqual(5' numnulls);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindOne,The following statement contains a magic number: var query = new {Index = 10};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindOne,The following statement contains a magic number: Assert.AreEqual(4' result.x);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindOne,The following statement contains a magic number: Assert.AreEqual(10' result.Index);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindOneNotThere,The following statement contains a magic number: var query = new {not_there = 10};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindWhereEquivalency,The following statement contains a magic number: var lt = new {Index = Op.LessThan(5)};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' col.Find(lt).Documents.Count()' "Basic find didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' col.Find(where).Documents.Count()' "String where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' col.Find(explicitWhere).Documents.Count()' "Explicit where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestFindWhereEquivalency,The following statement contains a magic number: Assert.AreEqual(4' col.Find(funcDoc).Documents.Count()' "Function where didn't return 4 docs");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var b = new Binary(new byte[1024*1024*2]);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestInsertBulkLargerThan4MBOfDocuments,The following statement contains a magic number: var docs = from i in Enumerable.Range(1' 10)                             select new {Song = "Bulk"' bin = b' Year = i};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestSimpleInsert,The following statement contains a magic number: var indoc = new InsertsEntity {Artist = "Afroman"' Song = "Palmdale"' Year = 1999};
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestUpdateMany,The following statement contains a magic number: Assert.AreEqual(3' results.Documents.Count()' "Didn't find all Documents inserted for TestUpdateMany with Selector");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestUpdateMany,The following statement contains a magic number: Assert.AreEqual(3' count' "Didn't find all documents for updated.");
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,TestUpdatePartial,The following statement contains a magic number: var coolness = 5;
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,CanSaveNewDocumentWithId,The following statement contains a magic number: saves.Save(new Document("WithId"' 1.0).Add("_id"' 5));
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,CanSaveNewDocumentWithId,The following statement contains a magic number: var result = saves.FindOne(new Document("_id"' 5));
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,CanSaveNewDocumentWithId,The following statement contains a magic number: Assert.AreEqual(result.Id'5);
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,SaveUpdatesExistsingDocument,The following statement contains a magic number: updated["Existing"] = 2.0;
Magic Number,MongoDB.IntegrationTests,TestCollection_1,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollection_1.cs,SaveUpdatesExistsingDocument,The following statement contains a magic number: Assert.AreEqual(result["Existing"]' 2.0);
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: smallreads.Insert(new Document {{"x"' 4}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: j < 5
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: smallreads.Insert(new Document {{"x"' 4}' {"j"' 5}' {"n"' 1}});
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: smallreads.Insert(new Document {{"x"' 4}' {"j"' 5}' {"n"' 1}});
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: reads.Insert(new Document {{"x"' 4}' {"h"' "hi"}' {"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,OnInit,The following statement contains a magic number: j < 10000
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestCanLimit,The following statement contains a magic number: var c = DB["reads"].FindAll().Limit(5);
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestCanLimit,The following statement contains a magic number: Assert.AreEqual(5' reads);
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestCanReadMore,The following statement contains a magic number: Assert.AreEqual(9999' reads' "Not all documents returned.");
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestCanReadSmall,The following statement contains a magic number: Assert.AreEqual(5' reads' "More than 5 documents in the small reads dataset");
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestExplain,The following statement contains a magic number: var exp = DB["reads"].FindAll().Limit(5).Skip(5).Sort("x").Explain();
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestExplain,The following statement contains a magic number: var exp = DB["reads"].FindAll().Limit(5).Skip(5).Sort("x").Explain();
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: var randoms = new[] {4' 6' 8' 9' 1' 3' 2' 5' 7' 0};
Magic Number,MongoDB.IntegrationTests,TestCursor,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCursor.cs,TestSort,The following statement contains a magic number: exp = 9;
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestEvalNoScope,The following statement contains a magic number: Assert.AreEqual(3' result["retval"]);
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestEvalWithScope,The following statement contains a magic number: var val = 3;
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestEvalWithScopeAsFunctionParameters,The following statement contains a magic number: var x = 3;
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestEvalWithScopeAsFunctionParameters,The following statement contains a magic number: var y = 4;
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestGetLastError,The following statement contains a magic number: var dup = new Document {{"x"' 1}' {"y"' 2}};
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestGetLastErrorNoError,The following statement contains a magic number: DB["noerror"].Insert(new Document {{"a"' 1}' {"b"' 2}});
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestGetPrevError,The following statement contains a magic number: docs.Add(new Document {{"x"' x}' {"y"' 2}});
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestGetPrevError,The following statement contains a magic number: x < 10
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestGetPrevError,The following statement contains a magic number: docs.Add(new Document {{"x"' 1}' {"y"' 4}});
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestReferenceNonOid,The following statement contains a magic number: var doc = new Document().Add("_id"' 123).Add("msg"' "this has a non oid key");
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestReferenceNonOid,The following statement contains a magic number: var rf = new DBRef("refs"' 123);
Magic Number,MongoDB.IntegrationTests,TestDatabase,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabase.cs,TestReferenceNonOid,The following statement contains a magic number: Assert.AreEqual(recv["_id"]' (long)123);
Magic Number,MongoDB.IntegrationTests,TestDatabaseMetaData,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseMetaData.cs,TestCreateCollectionWithOptions,The following statement contains a magic number: Document options = new Document().Add("capped"' true).Add("size"' 10000);
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,OnInit,The following statement contains a magic number: j < 10
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,TestCopyTo,The following statement contains a magic number: const int count = 5;
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,TestCopyTo,The following statement contains a magic number: Assert.IsNotNull(functions[4]);
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,TestExec,The following statement contains a magic number: Assert.AreEqual(3' cnt);
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,TestExecWithScope,The following statement contains a magic number: var scope = new Document().Add("limit"' 5);
Magic Number,MongoDB.IntegrationTests,TestDatabaseJavascript,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestDatabaseJavascript.cs,TestExecWithScope,The following statement contains a magic number: Assert.AreEqual(4' cnt);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,OnInit,The following statement contains a magic number: _collection.Insert(new Document().Add("_id"' 2).Add("tags"' new[] {"dog"}));
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,OnInit,The following statement contains a magic number: _collection.Insert(new Document().Add("_id"' 3).Add("tags"' new[] {"mouse"' "cat"' "dog"}));
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,OnInit,The following statement contains a magic number: _collection.Insert(new Document().Add("_id"' 4).Add("tags"' new String[] {}));
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestBuilderSetsAllProperties,The following statement contains a magic number: var scope = new Document().Add("y"' 2);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestBuilderSetsAllProperties,The following statement contains a magic number: var sort = new Document().Add("z"' 3);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestBuilderSetsAllProperties,The following statement contains a magic number: mrb.Map(MapFunc)                  .Reduce(ReduceFunc)                  .KeepTemp(true)                  .Limit(5)                  .Out("outtest")                  .Query(query)                  .Scope(scope)                  .Sort(sort)                  .Verbose(false);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestBuilderSetsAllProperties,The following statement contains a magic number: Assert.AreEqual(5' mr.Limit);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestExecuteSimple,The following statement contains a magic number: Assert.AreEqual(4' mr.Result.InputCount);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestExecuteSimple,The following statement contains a magic number: Assert.AreEqual(6' mr.Result.EmitCount);
Magic Number,MongoDB.IntegrationTests,TestMapReduce,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestMapReduce.cs,TestExecuteSimple,The following statement contains a magic number: Assert.AreEqual(3' mr.Result.OutputCount);
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,OnInit,The following statement contains a magic number: col.Insert(new Document(){{"x"' 4}'{"j"' j}});
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,OnInit,The following statement contains a magic number: j < 4
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,TestMultiThreadedWrites,The following statement contains a magic number: int iterations = 100;
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,TestMultiThreadedReads,The following statement contains a magic number: int iterations = 50;
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,TestMultiThreadedReadsAndWrites,The following statement contains a magic number: int writeiterations = 100;
Magic Number,MongoDB.IntegrationTests,TestConcurrency,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestConcurrency.cs,TestMultiThreadedReadsAndWrites,The following statement contains a magic number: int readiterations = 50;
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,TestBadInsert,The following statement contains a magic number: col.Insert(new Document {{"x"'1}'{"y"'2}}'true);
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,TestBadUpdate,The following statement contains a magic number: col.Update(new Document {{"x"' 1}}' new Document{{"x"'2}}'true);
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,TestMultiUpdate,The following statement contains a magic number: Document newy = new Document(){{"y"' 2}};
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,TestMultiUpdate,The following statement contains a magic number: Assert.AreEqual(5' col.Count(newy));
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,TestMultiUpdate,The following statement contains a magic number: col.UpdateAll(new Document{{"x"'1}}' new Document{{"y"'2}}'true);
Magic Number,MongoDB.IntegrationTests,TestCollectionSafeMode,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\IntegrationTests\TestCollectionSafeMode.cs,InitCollection,The following statement contains a magic number: x < 5
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestConnectionStringParsing,The following statement contains a magic number: Assert.AreEqual(101' builder.MaximumPoolSize);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestConnectionStringParsing,The following statement contains a magic number: Assert.AreEqual(202' builder.MinimumPoolSize);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestConnectionStringParsing,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromSeconds(50)' builder.ConnectionLifetime);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestConnectionStringParsing,The following statement contains a magic number: Assert.AreEqual(555' servers[0].Port);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  Password = "testpassword"'                  Username = "testusername"'                  ConnectionLifetime = TimeSpan.FromSeconds(50)'                  MaximumPoolSize = 101'                  MinimumPoolSize = 202'                  ConnectionTimeout = TimeSpan.FromSeconds(60)              };
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  Password = "testpassword"'                  Username = "testusername"'                  ConnectionLifetime = TimeSpan.FromSeconds(50)'                  MaximumPoolSize = 101'                  MinimumPoolSize = 202'                  ConnectionTimeout = TimeSpan.FromSeconds(60)              };
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  Password = "testpassword"'                  Username = "testusername"'                  ConnectionLifetime = TimeSpan.FromSeconds(50)'                  MaximumPoolSize = 101'                  MinimumPoolSize = 202'                  ConnectionTimeout = TimeSpan.FromSeconds(60)              };
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The following statement contains a magic number: var builder = new MongoConnectionStringBuilder              {                  Password = "testpassword"'                  Username = "testusername"'                  ConnectionLifetime = TimeSpan.FromSeconds(50)'                  MaximumPoolSize = 101'                  MinimumPoolSize = 202'                  ConnectionTimeout = TimeSpan.FromSeconds(60)              };
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutput,The following statement contains a magic number: builder.AddServer("testserver1"' 555);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestToStringOutputWithoutUsernameAndPassword,The following statement contains a magic number: builder.AddServer("testserver"' 555);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestUriWithMultipleServers,The following statement contains a magic number: Assert.AreEqual(3' builder.Servers.Length);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestUriWithMultipleServers,The following statement contains a magic number: Assert.AreEqual(1234' builder.Servers[1].Port);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestUriWithMultipleServers,The following statement contains a magic number: Assert.AreEqual("server3"' builder.Servers[2].Host);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestUriWithMultipleServers,The following statement contains a magic number: Assert.AreEqual(MongoServerEndPoint.DefaultPort' builder.Servers[2].Port);
Magic Number,MongoDB.UnitTests,TestConnectionStringBuilder,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestConnectionStringBuilder.cs,TestUriWithPropertys,The following statement contains a magic number: Assert.AreEqual(10.0' builder.ConnectionLifetime.TotalSeconds);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestClearRemovesAll,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestClearRemovesAll,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestClearRemovesAll,The following statement contains a magic number: Assert.AreEqual(3' d.Count);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndOverwritesKeys,The following statement contains a magic number: dest["two"] = 200;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndOverwritesKeys,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndOverwritesKeys,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndOverwritesKeys,The following statement contains a magic number: Assert.AreEqual(2' dest["two"]);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndPreservesKeyOrderToEmptyDoc,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestCopyToCopiesAndPreservesKeyOrderToEmptyDoc,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestDocumentCanCreatedFromDictionary,The following statement contains a magic number: var dictionary = new Dictionary<string' object> {{"value1"' "test"}' {"value2"' 10}};
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestDocumentCanCreatedFromDictionary,The following statement contains a magic number: Assert.AreEqual(2' document.Count);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestDocumentCanCreatedFromDictionary,The following statement contains a magic number: Assert.AreEqual(10' document["value2"]);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestDocumentIsSerializable,The following statement contains a magic number: var src = new Document().Add("test"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestIdSets_IdField,The following statement contains a magic number: var document = new Document {Id = 10};
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestIdSets_IdField,The following statement contains a magic number: Assert.AreEqual(10' document.Id);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderIsPreserved,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderIsPreserved,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderPreservedOnRemove,The following statement contains a magic number: d["onepointfive"] = 1.5;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderPreservedOnRemove,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderPreservedOnRemove,The following statement contains a magic number: d.Add("two.5"' 2.5);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestKeyOrderPreservedOnRemove,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestUseOfIComparerForKeys,The following statement contains a magic number: doc.Append("a"' 3);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestUseOfIComparerForKeys,The following statement contains a magic number: doc.Append("b"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestValues,The following statement contains a magic number: d.Add("two"' 2);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestValues,The following statement contains a magic number: d["three"] = 3;
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,TestValues,The following statement contains a magic number: Assert.AreEqual(3' vals.Count);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,CanBeBinarySerialized,The following statement contains a magic number: var source = new Document("key1"' "value1").Add("key2"' 10);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,CanBeBinarySerialized,The following statement contains a magic number: Assert.AreEqual(2'dest.Count);
Magic Number,MongoDB.UnitTests,TestDocument,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestDocument.cs,CanBeXmlSerialized,The following statement contains a magic number: Assert.AreEqual(2' dest.Count);
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestInc,The following statement contains a magic number: var mo = Mo.Inc("A"' 10);
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestInc,The following statement contains a magic number: var expected = new Document("$inc"' new Document("A"' 10));
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestSet,The following statement contains a magic number: var mo = Mo.Set("A"' 10);
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestSet,The following statement contains a magic number: var expected = new Document("$set"' new Document("A"' 10));
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestMultipleModifiers,The following statement contains a magic number: var mo = Mo.Inc("A"' 1) & Mo.Inc("B"' 2) & Mo.Set("C"'3);
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestMultipleModifiers,The following statement contains a magic number: var mo = Mo.Inc("A"' 1) & Mo.Inc("B"' 2) & Mo.Set("C"'3);
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestMultipleModifiers,The following statement contains a magic number: var expected = new Document("$inc"' new Document("A"' 1).Add("B"' 2))                  .Add("$set"'new Document("C"'3));
Magic Number,MongoDB.UnitTests,TestMo,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMo.cs,TestMultipleModifiers,The following statement contains a magic number: var expected = new Document("$inc"' new Document("A"' 1).Add("B"' 2))                  .Add("$set"'new Document("C"'3));
Magic Number,MongoDB.UnitTests,TestMongoServerEndPoint,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoServerEndPoint.cs,CanBeBinarySerialized,The following statement contains a magic number: var source = new MongoServerEndPoint("myserver"' 12345);
Magic Number,MongoDB.UnitTests,TestMongoServerEndPoint,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestMongoServerEndPoint.cs,CanBeXmlSerialized,The following statement contains a magic number: var source = new MongoServerEndPoint("myserver"' 12345);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestDate,The following statement contains a magic number: var expected = new DateTime(2010' 1' 7' 7' 21' 57' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestDate,The following statement contains a magic number: var expected = new DateTime(2010' 1' 7' 7' 21' 57' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestDate,The following statement contains a magic number: var expected = new DateTime(2010' 1' 7' 7' 21' 57' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestDate,The following statement contains a magic number: var expected = new DateTime(2010' 1' 7' 7' 21' 57' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestDate,The following statement contains a magic number: var expected = new DateTime(2010' 1' 7' 7' 21' 57' DateTimeKind.Utc);
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestOidFromBytes,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: var bytes = new byte[] {1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12};
Magic Number,MongoDB.UnitTests,TestOid,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOid.cs,TestToByteArray,The following statement contains a magic number: Assert.AreEqual(12' bytes2.Length);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanCreateBinaryFromBytes,The following statement contains a magic number: var bytes = new byte[] { 10 };
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanCreateBinaryFromBytesAndSubtype,The following statement contains a magic number: var bytes = new byte[] {10};
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanImplicitConvertedToBytes,The following statement contains a magic number: var bytes = new byte[]{10'12};
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanImplicitConvertedToBytes,The following statement contains a magic number: var bytes = new byte[]{10'12};
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanImplicitConvertedFromBytes,The following statement contains a magic number: var bytes = new byte[] {10' 12};
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanImplicitConvertedFromBytes,The following statement contains a magic number: var bytes = new byte[] {10' 12};
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeCloned,The following statement contains a magic number: var binarySource = new Binary(new byte[] {10' 20}' BinarySubtype.UserDefined);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeCloned,The following statement contains a magic number: var binarySource = new Binary(new byte[] {10' 20}' BinarySubtype.UserDefined);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEnumerated,The following statement contains a magic number: var binary = new Binary(new byte[] { 10' 20 });
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEnumerated,The following statement contains a magic number: var binary = new Binary(new byte[] { 10' 20 });
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEnumerated,The following statement contains a magic number: Assert.AreEqual(2'array.Length);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEnumerated,The following statement contains a magic number: Assert.AreEqual(10' array[0]);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEnumerated,The following statement contains a magic number: Assert.AreEqual(20' array[1]);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeBinarySerialized,The following statement contains a magic number: var source = new Binary(new byte[] {10' 20}' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeBinarySerialized,The following statement contains a magic number: var source = new Binary(new byte[] {10' 20}' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEqual,The following statement contains a magic number: var binary1 = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEqual,The following statement contains a magic number: var binary1 = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEqual,The following statement contains a magic number: var binary2 = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeEqual,The following statement contains a magic number: var binary2 = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeXmlSerialized,The following statement contains a magic number: var source = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestBinary,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestBinary.cs,CanBeXmlSerialized,The following statement contains a magic number: var source = new Binary(new byte[] { 10' 20 }' BinarySubtype.Md5);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith2Operators,The following statement contains a magic number: var op = Op.GreaterThan(10) & Op.LessThan(20);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith2Operators,The following statement contains a magic number: var op = Op.GreaterThan(10) & Op.LessThan(20);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith2Operators,The following statement contains a magic number: Assert.AreEqual(10' op["$gt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith2Operators,The following statement contains a magic number: Assert.AreEqual(20' op["$lt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: var op = Op.GreaterThan(10) & Op.LessThan(20) & Op.Mod(3' 1);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: var op = Op.GreaterThan(10) & Op.LessThan(20) & Op.Mod(3' 1);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: var op = Op.GreaterThan(10) & Op.LessThan(20) & Op.Mod(3' 1);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: Assert.AreEqual(10' op["$gt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: Assert.AreEqual(20' op["$lt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,ConjunctionsWith3Operators,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 1 }' op["$mod"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Negation,The following statement contains a magic number: var op = !Op.GreaterThan(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Negation,The following statement contains a magic number: Assert.AreEqual(10' negated["$gt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,GreaterThan,The following statement contains a magic number: var op = Op.GreaterThan(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,GreaterThan,The following statement contains a magic number: Assert.AreEqual(10' op["$gt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,GreaterThanOrEqual,The following statement contains a magic number: var op = Op.GreaterThanOrEqual(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,GreaterThanOrEqual,The following statement contains a magic number: Assert.AreEqual(10' op["$gte"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,LessThan,The following statement contains a magic number: var op = Op.LessThan(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,LessThan,The following statement contains a magic number: Assert.AreEqual(10' op["$lt"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,LessThanOrEqual,The following statement contains a magic number: var op = Op.LessThanOrEqual(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,LessThanOrEqual,The following statement contains a magic number: Assert.AreEqual(10' op["$lte"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotEqual,The following statement contains a magic number: var op = Op.NotEqual(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotEqual,The following statement contains a magic number: Assert.AreEqual(10' op["$ne"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: var op = Op.In(10'11'12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: var op = Op.In(10'11'12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: var op = Op.In(10'11'12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$in"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$in"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,In,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$in"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: var op = Op.NotIn(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: var op = Op.NotIn(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: var op = Op.NotIn(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$nin"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$nin"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,NotIn,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$nin"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: var op = Op.All(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: var op = Op.All(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: var op = Op.All(10' 11' 12);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$all"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$all"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,All,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 11' 12 }' op["$all"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Mod,The following statement contains a magic number: var op = Op.Mod(10' 1);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Mod,The following statement contains a magic number: Assert.AreEqual(new[] { 10' 1 }' op["$mod"]);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Size,The following statement contains a magic number: var op = Op.Size(10);
Magic Number,MongoDB.UnitTests,TestOp,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\TestOp.cs,Size,The following statement contains a magic number: Assert.AreEqual(10' op["$size"]);
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithSingleIntField,The following statement contains a magic number: var doc = new Document().Add("foo"' 10);
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithSingleDoubleField,The following statement contains a magic number: var doc = new Document().Add("foo"' 10.1);
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeCultureInvariantNumbers,The following statement contains a magic number: var doc = new Document().Add("foo"' 10.1);
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithMultipleFields,The following statement contains a magic number: var doc = new Document().Add("foo"' "bar").Add("baz"' 42);
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithArrayOfInts,The following statement contains a magic number: var doc = new Document().Add("foo"' new[] { 1' 2' 3' 4 });
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithArrayOfInts,The following statement contains a magic number: var doc = new Document().Add("foo"' new[] { 1' 2' 3' 4 });
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithArrayOfInts,The following statement contains a magic number: var doc = new Document().Add("foo"' new[] { 1' 2' 3' 4 });
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithArrayOfDocs,The following statement contains a magic number: var doc = new Document().Add("foo"' new[] {                 new Document().Add("a"' 1)'                 new Document().Add("b"' 2)'                 new Document().Add("c"' 3)'             });
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithArrayOfDocs,The following statement contains a magic number: var doc = new Document().Add("foo"' new[] {                 new Document().Add("a"' 1)'                 new Document().Add("b"' 2)'                 new Document().Add("c"' 3)'             });
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithBinary,The following statement contains a magic number: var doc = new Document(){{"b"' new Binary(){Bytes = new byte[]{0'1'2'3'4}'                                                              Subtype = BinarySubtype.General}}};
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithBinary,The following statement contains a magic number: var doc = new Document(){{"b"' new Binary(){Bytes = new byte[]{0'1'2'3'4}'                                                              Subtype = BinarySubtype.General}}};
Magic Number,MongoDB.UnitTests.Util,TestJsonUtils,D:\research\architectureSmells\repos1\samus_mongodb-csharp\source\MongoDB.Tests\UnitTests\Util\TestJsonUtils.cs,TestSerializeDocWithBinary,The following statement contains a magic number: var doc = new Document(){{"b"' new Binary(){Bytes = new byte[]{0'1'2'3'4}'                                                              Subtype = BinarySubtype.General}}};
