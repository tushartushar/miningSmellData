Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,XaFacts,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFacts.cs,XaFacts,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,XaFacts,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFacts.cs,SetValues,Cyclomatic complexity of the method is 9
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,SetValues,Cyclomatic complexity of the method is 11
Complex Method,ExperienceExtractor.Components.Mapping.Splitting,PageConditionSplitter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\PageConditionSplitter.cs,GetSplits,Cyclomatic complexity of the method is 9
Complex Method,ExperienceExtractor.Components.Parsing.Fields,XaFactoryHelpers,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFactoryHelpers.cs,ParseDimension,Cyclomatic complexity of the method is 9
Complex Method,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,SelectFromName,Cyclomatic complexity of the method is 10
Complex Method,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,Cyclomatic complexity of the method is 12
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Validate,Cyclomatic complexity of the method is 13
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,Cyclomatic complexity of the method is 23
Long Parameter List,ExperienceExtractor.Components.Mapping.Sitecore,XaTableMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaTableMapper.cs,XaTableMapper,The method has 9 parameters.
Long Parameter List,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,SetValues,The method has 8 parameters.
Long Parameter List,ExperienceExtractor.Components.Mapping.Splitting,PageConditionSplitter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\PageConditionSplitter.cs,PageConditionSplitter,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.Fields,DateTimeFieldFactoryBase,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\DateTimeFieldFactoryBase.cs,Parse,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,CompileGetter,The method has 10 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,SelectFromName,The method has 14 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The method has 7 parameters.
Long Parameter List,ExperienceExtractor.Components.Parsing.Tables,MatrixFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\MatrixFactory.cs,Parse,The method has 6 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The method has 10 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SqlUpdateUtil,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlUpdateUtil.cs,GetUpdateCriteria,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,ProcessPartition,The method has 5 parameters.
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The method has 6 parameters.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,RulesFilter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\RulesFilter.cs,Include,The length of the statement  "			var include = !rulesContext.IsAborted && rulesContext.Parameters.TryGetValue ("addVisit"' out addToSegment) && (bool)addToSegment; " is 130.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaLabelProvider,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaLabelProvider.cs,GetLabel,The length of the statement  "			trans = string.Format ("{0}({1})"' string.IsNullOrEmpty (KeyTransformer.UnknownLabel) ? "" : KeyTransformer.UnknownLabel + " "' key); " is 133.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaLabelProvider,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaLabelProvider.cs,FromDimension,The length of the statement  "		var keyTransformer = dimension as IDimensionKeyTransformer ?? ApiContainer.Repositories.GetDimensionDefinitionService ().GetDimensionKeyTransformer (dimension.DimensionId); " is 172.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaLabelProvider,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaLabelProvider.cs,FromDimension,The length of the statement  "		Log.Error ("Error getting dimension key transformer for dimension " + dimension.DimensionId' ex' typeof(XaLabelProvider)); " is 122.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaFacts,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFacts.cs,SetValues,The length of the statement  "	var metrics = scope.Current<DimensionData> ().TryGet (data => data.MetricsValue) ?? scope.Current<IVisitAggregationContext> ().TryGet (XaHelpers.CalculateMetrics); " is 163.
Long Statement,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The length of the statement  "	var testPage = scope.Current<IVisitAggregationContext> ().TryGet (v => v.Visit.Pages.FirstOrDefault (p => p.MvTest != null && p.MvTest.Id == TestSet.Id)); " is 154.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,DateFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\DateFieldFactory.cs,Parse,The length of the statement  "	return new DateDimension (state.AffixName (state.TryGet ("Name"' defaultName))' selector' useDateForKey: state.TryGet ("DateKey"' true)' inlineFields: state.TryGet ("Inline"' false)' cultureInfo: parser.DefaultLanguage.CultureInfo' key: state.TryGet ("Key"' false)' detailLevel: state.TryGet ("Resolution"' DateDetailLevel.Date' true)); " is 336.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,DateTimeFieldFactoryBase,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\DateTimeFieldFactoryBase.cs,Parse,The length of the statement  "	Func<ProcessingScope' DateTime?> selector = scope => scope.Current<IVisitAggregationContext> ().TryGet (v => (DateTime?)v.Visit.StartDateTime); " is 143.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,DimensionFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\DimensionFactory.cs,Parse,The length of the statement  "	return new FieldMapperSet (tableName' inline' fieldState.SelectMany ("Fields").Select (parser.ParseFieldMapper)' state.AffixName' fieldNamePrefix: fieldPrefix) { " is 161.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,ContactIdFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\ContactIdFactory.cs,Parse,The length of the statement  "	return new SimpleFieldMapper (state.AffixName ("ContactId")' scope => scope.Current<IVisitAggregationContext> ().TryGet (ctx => ctx.Visit.ContactId)' typeof(Guid)' valueKind: "ContactId"' calculatedFields: new[] { " is 213.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,PartitionFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\PartitionFieldFactory.cs,Parse,The length of the statement  "	return new SimpleFieldMapper (s => SqlUpdateUtil.GetPartitionDate (s.Current<IVisitAggregationContext> ().Visit.SaveDateTime.ToUniversalTime ()' staleTime)' new PartitionField { " is 177.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,XaFactoryHelpers,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFactoryHelpers.cs,ParseDimension,The length of the statement  "				var rootItem = state.Parser.Database.GetItem (ExperienceExtractorApiContainer.ItemPaths.GetOrDefault ("experienceAnalyticsDimensions") ?? "/sitecore/system/Marketing Control Panel/Experience Analytics/Dimensions"' state.Parser.DefaultLanguage); " is 244.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,XaFactoryHelpers,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFactoryHelpers.cs,ParseDimension,The length of the statement  "					throw ParseException.AttributeError (state' string.Format ("Dimension '{0}' ({1}) is not registered"' dimensionId' path)); " is 122.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,XaFactsFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFactsFieldFactory.cs,ParseFactTypes,The length of the statement  "	return factTypes.Length == 0 ? FactTypes.All : (FactTypes)factTypes.Aggregate (0' (current' s) => current | (int)Enum.Parse (typeof(FactTypes)' s' true)); " is 154.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,XaFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFieldFactory.cs,Parse,The length of the statement  "	return new LabeledFieldMapper (new XaFieldMapper (dimension' false' keyName)' labelName' XaLabelProvider.FromDimension (dimension' parser.DefaultLanguage)' friendlyName: XaFieldMapper.SuggestFriendlyLabelName (labelName)); " is 222.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,MvTestFieldsFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\MvTestFieldsFactory.cs,Parse,The length of the statement  "		var splitter = new SplittingFieldMapper (new MvTestSplitter (testId)' postfix => state.Postfix (postfix).SelectMany ("Fields").Select (parser.ParseFieldMapper).ToArray ()); " is 172.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,SequenceFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\SequenceFieldMapper.cs,Parse,The length of the statement  "	return new SequenceFieldMapper (name' scope => items (scope).Select (item => getterInfo.Getter (item' scope))' (SequenceType)Enum.Parse (typeof(SequenceType)' state.TryGet ("Type"' "Path")' true)); " is 197.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,SplitMapperFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\SplitMapperFactory.cs,Parse,The length of the statement  "	return new SplittingFieldMapper (splitter' postfix => state.Postfix (postfix).SelectMany ("Fields").Select (parser.ParseFieldMapper).ToArray ()); " is 145.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,SplitMapperFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\SplitMapperFactory.cs,Parse,The length of the statement  "	return new SplittingTableMapper (splitter' name => parser.ParseTableMapper (state.Postfix (name).Select ("Table"' true))); " is 122.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,TimeFieldFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\TimeFieldFactory.cs,Parse,The length of the statement  "	return new TimeDimension (state.AffixName (state.TryGet ("Name"' defaultName + "Time"))' selector' inlineFields: state.TryGet<bool> ("Inline")' cultureInfo: parser.DefaultLanguage.CultureInfo' detailLevel: state.TryGet ("Resolution"' TimeDetailLevel.Hour' true)); " is 263.
Long Statement,ExperienceExtractor.Components.Parsing.Filters,RulesFilterFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Filters\RulesFilterFactory.cs,Parse,The length of the statement  "				var rootItem = state.Parser.Database.GetItem (ExperienceExtractorApiContainer.ItemPaths.GetOrDefault ("experienceAnalyticsFilters") ?? "/sitecore/system/Marketing Control Panel/Experience Analytics/Filters"); " is 208.
Long Statement,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,CompileGetter,The length of the statement  "		getter = (item' scope) => valueGetter (item).TryGet (id => scope.FieldLookup.TryGet (lu => lu.Lookup (id' scField' language))); " is 127.
Long Statement,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,SelectFromName,The length of the statement  "		}) ?? s.Current<IVisitAggregationContext> ().TryGet (v => v.Visit.Pages)).TryGet (ps => ps.SelectMany (p => p.PageEvents.TryGet (pes => pes.Where (filter)' Enumerable.Empty<PageEventData> ()))); " is 194.
Long Statement,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,CreateGetter,The length of the statement  "		current = Expression.Condition (Expression.Equal (current' Expression.Constant (null))' Expression.Default (prop.Type)' prop); " is 126.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "	var connectionString = state.TryGet ("Connection"' ConfigurationManager.ConnectionStrings ["ExperienceExtractorDump"].TryGet (c => c.ConnectionString) ?? ConfigurationManager.ConnectionStrings ["ExperienceExtractor.Sql"].TryGet (c => c.ConnectionString)); " is 255.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "		throw new ParseException (state' "A SQL Server connection string must be specified. Use the parameter 'Connection' or add a connection string with the name 'ExperienceExtractor.Sql'."); " is 185.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "	var ssasConnection = state.TryGet ("SsasConnection"' ConfigurationManager.ConnectionStrings ["ExperienceExtractor.SsasTabular"].TryGet (c => c.ConnectionString)); " is 162.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "	var exporter = new SqlExporter (connectionString' state.TryGet ("Database"' () => state.TryGet<string> ("CreateDatabase"))); " is 124.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "			throw new ParseException (state' "A connection string for SQL Server Analysis Services running in tabular mode must be specified. Use the parameter 'SsasConnection' or add a connection string with the name 'ExperienceExtractor.SsasTabular'."); " is 243.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlJobLoaderFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlJobLoaderFactory.cs,Parse,The length of the statement  "		var builder = new SqlConnectionStringBuilder (ConfigurationManager.ConnectionStrings ["ExperienceExtractor.Sql"].ConnectionString); " is 131.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlJobLoaderFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlJobLoaderFactory.cs,Parse,The length of the statement  "			throw new ParseException (state' "Database does not contain the job info table. Was it created with Experience Extractor?"); " is 124.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "	table.FieldMappers.Add (new SimpleFieldMapper (state.AffixName ("StepNumber")' scope => scope.Current<FunnelStep> ().Number' typeof(int))); " is 139.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "	table.FieldMappers.Add (new SimpleFieldMapper (state.AffixName ("Step")' scope => scope.Current<FunnelStep> ().Name' typeof(string)' sortBy: state.AffixName ("StepNumber"))); " is 174.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "	table.FieldMappers.Add (new SimpleFieldMapper (state.AffixName ("Continued")' scope => scope.Current<FunnelStep> ().Continued' typeof(int)' FieldType.Fact' calculatedFields: new[] { " is 181.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "			DaxPattern = String.Format ("IF(SUM([{0}])=0'Blank()'SUM([{1}])/SUM([{0}]))"' state.AffixName ("Potential")' state.AffixName ("Continued")) " is 139.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "	table.FieldMappers.Add (new SimpleFieldMapper (state.AffixName ("Fallout")' scope => scope.Current<FunnelStep> ().Fallout' typeof(int)' FieldType.Fact' calculatedFields: new[] { " is 177.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "			DaxPattern = String.Format ("IF(SUM([{0}])=0'Blank()'SUM([{1}])/SUM([{0}]))"' state.AffixName ("Potential")' state.AffixName ("Fallout")) " is 137.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "	table.FieldMappers.Add (new SimpleFieldMapper (state.AffixName ("Potential")' scope => scope.Current<FunnelStep> ().Fallout + scope.Current<FunnelStep> ().Continued' typeof(int)' FieldType.Fact)); " is 196.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelHelper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,GetSteps,The length of the statement  "		if (Steps [currentStep].Events.Contains (ev.Name) || Steps [currentStep].Events.Contains (ev.PageEventDefinitionId.ToString ("D"))) { " is 133.
Long Statement,ExperienceExtractor.Components.Parsing.Tables,SelectorTableFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\DefaultTableFactory.cs,Parse,The length of the statement  "		return new SimpleTableMapper (selector' new TableDefinition ("").Map (new SimpleTableMapper (scope => expandField.Selector (scope).TryGet (v => "" + v' "").Split (new[] { " is 170.
Long Statement,ExperienceExtractor.Components.Parsing.Tables,XaTableFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\XaTableFactory.cs,Parse,The length of the statement  "	return new XaTableMapper (dimension' state.AffixName (name)' state.TryGet<string> ("Name")' state.TryGet<bool> ("HashKey"' true)' keyName: state.TryGet<string> ("KeyName")' labelName: state.TryGet<string> ("LabelName")' additionalFields: extraFields' factTypes: XaFactsFieldFactory.ParseFactTypes (state.TryGet ("Facts"' new string[0]))' labelProvider: XaLabelProvider.FromDimension (dimension' parser.DefaultLanguage)); " is 420.
Long Statement,ExperienceExtractor.Components.Parsing.Tables,MatrixFactory,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\MatrixFactory.cs,Parse,The length of the statement  "	return new MatrixTableMapper (state.AffixName (name)' matrix' postfix => state.Postfix (postfix).SelectMany ("Fields"' true).Select (parser.ParseFieldMapper).ToArray ()' facts); " is 177.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "		using (var templateDb = typeof(AccessExporter).Assembly.GetManifestResourceStream ("ExperienceExtractor.Components.Resources.Empty.accdb")) { " is 141.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "			new OleDbCommand (string.Format (@"SELECT * INTO [{0}] FROM [Text;DATABASE={1}].{2}"' table.Name' csvFile.DirectoryName' csvFile.Name)' conn).ExecuteNonQuery (); " is 161.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "				new OleDbCommand (string.Format (@"ALTER TABLE [{0}] ADD PRIMARY KEY ({1})"' t.Name' FieldList (pks))' conn).ExecuteNonQuery (); " is 128.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "			foreach (var rel in table.Schema.RelatedTables.Where (r => r.RelationType == RelationType.Parent || r.RelationType == RelationType.Dimension)) { " is 144.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "				new OleDbCommand (string.Format (@"ALTER TABLE [{0}] ADD CONSTRAINT {4} FOREIGN KEY ({1}) REFERENCES [{2}] ({3})"' table.Name' FieldList (rel.Fields)' rel.RelatedTable.Name' FieldList (rel.RelatedFields)' "FK" + nextId++)' conn).ExecuteNonQuery (); " is 248.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The length of the statement  "					new SqlCommand (string.Format ("ALTER DATABASE [{0}] SET RECOVERY SIMPLE"' CreateDatabaseName)' conn).ExecuteNonQuery (); " is 121.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The length of the statement  "					new SqlCommand (@"CREATE TABLE Sitecore.JobInfo ( [Schema] nvarchar(max)' [Prototype] nvarchar(max)' [LockDate] datetime2 null' LastCutoff datetime2 null );"' conn).ExecuteNonQuery (); " is 184.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Validate,The length of the statement  "		_ssasExporter = new SsasExporter (SsasConnectionString' SsasDbName' "Provider=SQLOLEDB;" + connectionStringBuilder.ConnectionString); " is 133.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The length of the statement  "                    UPDATE Sitecore.JobInfo SET @LockDate = [LockDate] = GetDate() WHERE [LockDate] IS NULL OR DateDiff(ss' [LockDate]' GetDate()) > @LockTimeout;" is 142.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,ValidateSchema,The length of the statement  "	if (schema == null || !TableDataHelpers.FieldsAreEqual (tables.Select (t => t.Schema)' TableDataHelpers.Deserialize (schema))) { " is 128.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "				var sql = string.Format ("DELETE {0} FROM {0} {1}"' Escape (table.Name)' SqlUpdateUtil.GetUpdateCriteria (table.Schema' pfield' true' _cutoff)); " is 144.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "		sql.AppendFormat (@"MERGE [{0}] WITH (TABLOCK) AS Target USING {1} AS Source ON {2} "' table.Name' sourceTable ?? "@Data"' //Join criteria " is 138.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "		string.Join (" AND "' (table.Schema.Keys.Length > 0 ? table.Schema.Keys : table.Schema.Dimensions).Select (field => string.Format ("{0} = {1}"' Escape ("Target"' field.Value.Name)' Escape ("Source"' field.Value.Name))))); " is 221.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "			string.Join ("' "' table.Schema.Fields.Where (f => !table.Schema.IsKey (f)).Select (field => string.Format (field.FieldType == FieldType.Fact ? "{0} = [Target].{0} + {1}" : "{0} = {1}"' // <- Consider this. What if dimensions have measures? " is 240.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "		string.Join ("' "' table.Schema.Fields.Select (field => Escape (field.Name)))' string.Join ("' "' table.Schema.Fields.Select (field => Escape ("Source"' field.Name)))); " is 168.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "		cmd = new SqlCommand (string.Format ("INSERT {0} WITH (TABLOCK) SELECT * FROM {1}"' Escape (table.Name)' sourceTable ?? "@Data")' conn' tran); " is 142.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The length of the statement  "		writer.Write ("    [{0}] {1} {2}"' field.Name' GetColumnType (field.ValueType' field.FieldType == FieldType.Key ? 60 : (int?)null)' field.FieldType == FieldType.Key || (field.ValueType.IsValueType && Nullable.GetUnderlyingType (field.ValueType) == null) ? "NOT NULL" : "NULL"); " is 277.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The length of the statement  "		writer.Write ("    PRIMARY KEY CLUSTERED ({0}) WITH (IGNORE_DUP_KEY = ON)"' string.Join ("'"' table.Keys.Select (pos => string.Format ("[{0}]"' pos.Value.Name)))); " is 163.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteSchema,The length of the statement  "			writer.WriteLine ("CREATE INDEX {0} ON {1} ({2});"' Escape (table.Name + "_" + p.Name)' Escape (table.Name)' Escape (p.Name)); " is 126.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteSchema,The length of the statement  "		foreach (var rel in table.Schema.RelatedTables.Where (r => r.RelationType == RelationType.Parent || r.RelationType == RelationType.Dimension)) { " is 144.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteSchema,The length of the statement  "			writer.WriteLine (@"ALTER TABLE [{0}] ADD FOREIGN KEY ({1}) REFERENCES [{2}] ({3});"' table.Name' FieldList (rel.Fields)' rel.RelatedTable.Name' FieldList (rel.RelatedFields)); " is 176.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlRecordAdapter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlRecordAdapter.cs,GetEnumerator,The length of the statement  "		var sortOrder = sortIndices [i] != -1 ? (f.SortOrder == SortOrder.Descending ? System.Data.SqlClient.SortOrder.Descending : System.Data.SqlClient.SortOrder.Ascending) : System.Data.SqlClient.SortOrder.Unspecified; " is 213.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlUpdateUtil,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlUpdateUtil.cs,GetJoinToFactAncestor,The length of the statement  "			sb.AppendFormat ("[{0}].[{1}] = [{2}].[{3}]"' parent.RelatedTable.Name' parent.RelatedFields [i].Name' schema.Name' parent.Fields [i].Name); " is 140.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlUpdateUtil,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlUpdateUtil.cs,GetUpdateCriteria,The length of the statement  "	var refDate = GetPartitionDate (date ?? DateTime.UtcNow.Add (-partitionField.Item2.StaleTime)' partitionField.Item2.StaleTime); " is 127.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "		//server.CaptureXml = true; <- Doesn't work with QueryBinding and errors from empty partitions marked as never processed. " is 121.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "			var processingType = !Update && IncrementalUpdate.HasFlag (table.Schema.IsDimension () ? SqlClearOptions.Dimensions : SqlClearOptions.Facts) ? ProcessType.ProcessAdd : ProcessType.ProcessFull; " is 192.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "					ProcessPartition (db' table.Name' GetTransientPartitionName (table.Schema)' ProcessType.ProcessFull' string.Format ("SELECT [{0}].* FROM [{0}] {1}"' table.Name' SqlUpdateUtil.GetUpdateCriteria (table.Schema' partition' true' date: ReferenceDate))); " is 248.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "					ProcessPartition (db' table.Name' table.Name' processingType' string.Format ("SELECT [{0}].* FROM [{0}] {1}"' table.Name' SqlUpdateUtil.GetUpdateCriteria (table.Schema' partition' false' date: ReferenceDate' cutoff: CutOff))); " is 226.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "					AMO2Tabular.MeasureAdd (db' table.Name' measureName' "SUM([" + GetFieldName (table' field.Name) + "])"' updateInstance: false); " is 127.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "					AMO2Tabular.ColumnAlterSortByColumnName (db' table.Name' GetFieldFriendlyName (table' field.Name)' GetFieldFriendlyName (table' field.SortBy)' updateInstance: false); " is 166.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "				AMO2Tabular.PartitionAdd (db' table.Name' GetTransientPartitionName (table)' string.Format ("SELECT * FROM [{0}] WHERE 1=0"' table.Name)' false); " is 145.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "				((RegularMeasureGroupDimension)db.Cubes [0].MeasureGroups [dim.ID].Dimensions [dim.ID]).Attributes [attr.ID].KeyColumns [0].NullProcessing = NullProcessing.Error; " is 162.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "					AMO2Tabular.RelationshipAdd (db' relation.RelatedTable.Name' relation.RelatedFields.First ().Name' table.Name' relation.Fields.First ().Name' updateInstance: false); " is 165.
Empty Catch Block,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The method has an empty catch block.
Empty Catch Block,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The method has an empty catch block.
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: if (keyName.StartsWith ("By")) {  	keyName = keyName.Substring (2);  }  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: keyName = keyName.Substring (2);  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: if (keyName.EndsWith ("Key")) {  	keyName = keyName.Substring (0' keyName.Length - 3) + " ID";  }  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: keyName = keyName.Substring (0' keyName.Length - 3) + " ID";  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: if (keyName.StartsWith ("By")) {  	keyName = keyName.Substring (2);  }  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: keyName = keyName.Substring (2);  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: if (keyName.EndsWith ("Label")) {  	keyName = keyName.Substring (0' keyName.Length - 5);  }  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: keyName = keyName.Substring (0' keyName.Length - 5);  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaTableMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaTableMapper.cs,SuggestFriendlyTableName,The following statement contains a magic number: if (dimensionName.StartsWith ("By")) {  	return dimensionName.Substring (2);  }  
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaTableMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaTableMapper.cs,SuggestFriendlyTableName,The following statement contains a magic number: return dimensionName.Substring (2);  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: if (testPage != null) {  	var i = 0;  	foreach (var variable in TestSet.Variables) {  		var value = testPage.MvTest.Combination [i];  		target [i * 2] = value;  		target [i * 2 + 1] = variable.Values [value].Label;  		++i;  	}  	return true;  }  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: if (testPage != null) {  	var i = 0;  	foreach (var variable in TestSet.Variables) {  		var value = testPage.MvTest.Combination [i];  		target [i * 2] = value;  		target [i * 2 + 1] = variable.Values [value].Label;  		++i;  	}  	return true;  }  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: foreach (var variable in TestSet.Variables) {  	var value = testPage.MvTest.Combination [i];  	target [i * 2] = value;  	target [i * 2 + 1] = variable.Values [value].Label;  	++i;  }  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: foreach (var variable in TestSet.Variables) {  	var value = testPage.MvTest.Combination [i];  	target [i * 2] = value;  	target [i * 2 + 1] = variable.Values [value].Label;  	++i;  }  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: target [i * 2] = value;  
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: target [i * 2 + 1] = variable.Values [value].Label;  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,SqlExporter,The following statement contains a magic number: Timeout = 3600 * 6;  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,SqlExporter,The following statement contains a magic number: Timeout = 3600 * 6;  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The following statement contains a magic number: cmd.Parameters.AddWithValue ("@LockTimeout"' 60 * 30);  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The following statement contains a magic number: cmd.Parameters.AddWithValue ("@LockTimeout"' 60 * 30);  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,The following statement contains a magic number: using (var subConn = new SqlConnection (ConnectionString)) {  	subConn.Open ();  	if (!string.IsNullOrEmpty (CreateDatabaseName)) {  		subConn.ChangeDatabase (CreateDatabaseName);  	}  	new SqlCommand (string.Format ("TRUNCATE TABLE {0}"' GetStagingTableName (table))' subConn) {  		CommandTimeout = Timeout  	}.ExecuteNonQuery ();  	using (var tran = subConn.BeginTransaction ()) {  		using (var bcp = new SqlBulkCopy (subConn' SqlBulkCopyOptions.TableLock' tran)) {  			bcp.BatchSize = 5000;  			bcp.EnableStreaming = true;  			bcp.BulkCopyTimeout = Timeout;  			bcp.DestinationTableName = GetStagingTableName (table);  			bcp.WriteToServer (table.CreateReader ());  		}  		tran.Commit ();  	}  }  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,The following statement contains a magic number: using (var tran = subConn.BeginTransaction ()) {  	using (var bcp = new SqlBulkCopy (subConn' SqlBulkCopyOptions.TableLock' tran)) {  		bcp.BatchSize = 5000;  		bcp.EnableStreaming = true;  		bcp.BulkCopyTimeout = Timeout;  		bcp.DestinationTableName = GetStagingTableName (table);  		bcp.WriteToServer (table.CreateReader ());  	}  	tran.Commit ();  }  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,The following statement contains a magic number: using (var bcp = new SqlBulkCopy (subConn' SqlBulkCopyOptions.TableLock' tran)) {  	bcp.BatchSize = 5000;  	bcp.EnableStreaming = true;  	bcp.BulkCopyTimeout = Timeout;  	bcp.DestinationTableName = GetStagingTableName (table);  	bcp.WriteToServer (table.CreateReader ());  }  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,The following statement contains a magic number: bcp.BatchSize = 5000;  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The following statement contains a magic number: foreach (var field in table.Fields) {  	writer.WriteLine (i++ > 0 ? "'" : "");  	writer.Write ("    [{0}] {1} {2}"' field.Name' GetColumnType (field.ValueType' field.FieldType == FieldType.Key ? 60 : (int?)null)' field.FieldType == FieldType.Key || (field.ValueType.IsValueType && Nullable.GetUnderlyingType (field.ValueType) == null) ? "NOT NULL" : "NULL");  }  
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The following statement contains a magic number: writer.Write ("    [{0}] {1} {2}"' field.Name' GetColumnType (field.ValueType' field.FieldType == FieldType.Key ? 60 : (int?)null)' field.FieldType == FieldType.Key || (field.ValueType.IsValueType && Nullable.GetUnderlyingType (field.ValueType) == null) ? "NOT NULL" : "NULL");  
Missing Default,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,DefaultSelector,The following switch statement is missing a default case: switch (source) {  case "visits":  	return "InteractionId";  case "pages":  	return "Item.Id";  case "events":  case "goals":  	return "PageEventDefinitionId";  }  
Missing Default,ExperienceExtractor.Components.Parsing.Helpers,Selectors,C:\repos\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,SelectFromName,The following switch statement is missing a default case: switch (source) {  case "visits":  	itemType = typeof(VisitData);  	return s => s.Current<IVisitAggregationContext> ().TryGet (v => new[] {  		v.Visit  	}' Enumerable.Empty<VisitData> ());  case "pages":  	itemType = typeof(PageData);  	return s => s.Current<IVisitAggregationContext> ().TryGet (v => v.Visit.Pages' Enumerable.Empty<PageData> ());  case "events":  case "goals":  	itemType = typeof(PageEventData);  	Func<PageEventData' bool> filter = pe => true;  	if (source == "goals") {  		filter = pe => pe.IsGoal;  	}  	return s => (s.Current<PageData> ().TryGet (p => new List<PageData> {  		p  	}) ?? s.Current<IVisitAggregationContext> ().TryGet (v => v.Visit.Pages)).TryGet (ps => ps.SelectMany (p => p.PageEvents.TryGet (pes => pes.Where (filter)' Enumerable.Empty<PageEventData> ())));  }  
