Implementation smell,Namespace,Class,File,Method,Description
Long Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The method has 124 lines of code.
Long Method,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The method has 121 lines of code.
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,XaFacts,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFacts.cs,XaFacts,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,XaFacts,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFacts.cs,SetValues,Cyclomatic complexity of the method is 10
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,Cyclomatic complexity of the method is 8
Complex Method,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,SetValues,Cyclomatic complexity of the method is 12
Complex Method,ExperienceExtractor.Components.Mapping.Splitting,PageConditionSplitter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\PageConditionSplitter.cs,GetSplits,Cyclomatic complexity of the method is 9
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,Cyclomatic complexity of the method is 14
Complex Method,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Validate,Cyclomatic complexity of the method is 11
Complex Method,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,Cyclomatic complexity of the method is 21
Long Parameter List,ExperienceExtractor.Components.Mapping.Sitecore,XaTableMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaTableMapper.cs,XaTableMapper,The method has 9 parameters. Parameters: dimension' tableName' dimensionTableName' hashKey' keyName' labelName' labelProvider' additionalFields' factTypes
Long Parameter List,ExperienceExtractor.Components.Mapping.Splitting,PageConditionSplitter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\PageConditionSplitter.cs,PageConditionSplitter,The method has 5 parameters. Parameters: conditions' names' includeMatchBefore' emptyIfConditionNotMet' includeTotal
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SqlUpdateUtil,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlUpdateUtil.cs,GetUpdateCriteria,The method has 5 parameters. Parameters: table' partitionField' stale' date' cutoff
Long Parameter List,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,ProcessPartition,The method has 5 parameters. Parameters: db' tableName' partitionName' type' sql
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaLabelProvider,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaLabelProvider.cs,FromDimension,The length of the statement  "                var reader = (IDimensionKeyTransformerReader)service.GetType().GetField("dimensionDefinitionService"' BindingFlags.Instance | BindingFlags.NonPublic)? " is 150.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,XaLabelProvider,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaLabelProvider.cs,FromDimension,The length of the statement  "                Log.Error("Error getting dimension key transformer for dimension " + dimension.DimensionId' ex' typeof(XaLabelProvider)); " is 121.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.Visits)) yield return new Field { Name = NameFormatter("Visits")' ValueKind = "Visits"' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Visits"}; " is 198.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.Value)) yield return new Field { Name = NameFormatter("Value")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Value"}; " is 173.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.Bounces)) yield return new Field { Name = NameFormatter("Bounces")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Bounces"}; " is 179.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.Conversions)) yield return new Field { Name = NameFormatter("Conversions")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Conversions"}; " is 191.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.TimeOnSite)) yield return new Field { Name = NameFormatter("TimeOnSite")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Time on site"}; " is 190.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.PageViews)) yield return new Field { Name = NameFormatter("PageViews")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Page views" }; " is 187.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,CreateFields,The length of the statement  "            if (FactTypes.HasFlag(FactTypes.Count)) yield return new Field { Name = NameFormatter("Count")' ValueType = typeof(int)' FieldType = FieldType.Fact' FriendlyName = "Count" }; " is 174.
Long Statement,ExperienceExtractor.Components.Mapping.Sitecore,FactsMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\FactsMapper.cs,SetValues,The length of the statement  "            var es = ce != null ? new[] { ce } : cp != null ? cp.PageEvents.OrEmpty() : cv.Pages.OrEmpty().SelectMany(p => p.PageEvents.OrEmpty()); " is 135.
Long Statement,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The length of the statement  "            var testPage = scope.Current<IVisitAggregationContext>().TryGet(v => v.Visit.Pages.FirstOrDefault(p => p.MvTest != null && p.MvTest.Id == TestSet.Id)); " is 151.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,ContactIdFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\ContactIdFactory.cs,Parse,The length of the statement  "            return new SimpleFieldMapper(state.AffixName("ContactId")' scope => scope.Current<IVisitAggregationContext>().TryGet(ctx => ctx.Visit.ContactId)' typeof(Guid)' " is 159.
Long Statement,ExperienceExtractor.Components.Parsing.Fields,XaFieldFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Fields\XaFieldFactory.cs,Parse,The length of the statement  "                XaLabelProvider.FromDimension(dimension' parser.DefaultLanguage)' friendlyName: XaFieldMapper.SuggestFriendlyLabelName(labelName)); " is 131.
Long Statement,ExperienceExtractor.Components.Parsing.Helpers,Selectors,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,CompileGetter,The length of the statement  "            var path = (slash != -1 ? selector.Substring(0' slash) : selector).Split(new[] {"."}' StringSplitOptions.RemoveEmptyEntries); " is 125.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "                throw new ParseException(state' "A SQL Server connection string must be specified. Use the parameter 'Connection' or add a connection string with the name 'ExperienceExtractor.Sql'."); " is 184.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "            var ssasConnection = state.TryGet("SsasConnection"' ConfigurationManager.ConnectionStrings["ExperienceExtractor.SsasTabular"].TryGet(c => c.ConnectionString)); " is 159.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "                state.TryGet("Database"' () => state.TryGet<string>("CreateDatabase"))' state.TryGet<bool>("clearInsteadOfDropCreate")); " is 120.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlFactory.cs,Parse,The length of the statement  "                        "A connection string for SQL Server Analysis Services running in tabular mode must be specified. Use the parameter 'SsasConnection' or add a connection string with the name 'ExperienceExtractor.SsasTabular'.");  " is 210.
Long Statement,ExperienceExtractor.Components.Parsing.PostProcessors,MsSqlJobLoaderFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\PostProcessors\MsSqlJobLoaderFactory.cs,Parse,The length of the statement  "                    throw new ParseException(state' "Database does not contain the job info table. Was it created with Experience Extractor?"); " is 123.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                new SimpleFieldMapper(state.AffixName("Step")' scope => scope.Current<FunnelStep>().Name' typeof(string)' sortBy: state.AffixName("StepNumber"))); " is 146.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                new SimpleFieldMapper(state.AffixName("Continued")' scope => scope.Current<FunnelStep>().Continued' typeof(int)' FieldType.Fact' " is 128.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                            String.Format("IF(SUM([{0}])=0'Blank()'SUM([{1}])/SUM([{0}]))"' state.AffixName("Potential")' state.AffixName("Continued"))} " is 124.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                new SimpleFieldMapper(state.AffixName("Fallout")' scope => scope.Current<FunnelStep>().Fallout' typeof(int)' FieldType.Fact'  " is 124.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                            String.Format("IF(SUM([{0}])=0'Blank()'SUM([{1}])/SUM([{0}]))"' state.AffixName("Potential")' state.AffixName("Fallout"))} " is 122.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,Parse,The length of the statement  "                new SimpleFieldMapper(state.AffixName("Potential")' scope => scope.Current<FunnelStep>().Fallout + scope.Current<FunnelStep>().Continued' typeof(int)' FieldType.Fact)); " is 168.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,FunnelHelper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\FunnelFactory.cs,GetSteps,The length of the statement  "                if (Steps[currentStep].Events.Contains(ev.Name) || Steps[currentStep].Events.Contains(ev.PageEventDefinitionId.ToString("D"))) " is 126.
Long Statement,ExperienceExtractor.Components.Parsing.Splitters,PageEventSplitterFactory,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Splitters\PageConditionSplitterFactories.cs,Parse,The length of the statement  "                    return thisEventId.HasValue && page.PageEvents != null && page.PageEvents.Any(pe => pe.PageEventDefinitionId == thisEventId); " is 125.
Long Statement,ExperienceExtractor.Components.Parsing.Tables,RowRepeater,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\RowRepeater.cs,Parse,The length of the statement  "                new SimpleFieldMapper("Repeat"' scope => "Value" + repeatState.Level' typeof (string)' FieldType.Dimension)}).ToArray(); " is 120.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "            using (var templateDb = typeof(AccessExporter).Assembly.GetManifestResourceStream("ExperienceExtractor.Components.Resources.Empty.accdb")) " is 138.
Long Statement,ExperienceExtractor.Components.PostProcessors,AccessExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\AccessExporter.cs,Process,The length of the statement  "                                table.Name' FieldList(rel.Fields)' rel.RelatedTable.Name' FieldList(rel.RelatedFields)' "FK" + nextId++)' conn).ExecuteNonQuery(); " is 130.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The length of the statement  "                                @"CREATE TABLE Sitecore.JobInfo ( [Schema] nvarchar(max)' [Prototype] nvarchar(max)' [LockDate] datetime2 null' LastCutoff datetime2 null );"' " is 142.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The length of the statement  "                    UPDATE Sitecore.JobInfo SET @LockDate = [LockDate] = GetDate() WHERE [LockDate] IS NULL OR DateDiff(ss' [LockDate]' GetDate()) > @LockTimeout; " is 142.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The length of the statement  "                                field.FieldType == FieldType.Fact ? "{0} = [Target].{0} + {1}" : "{0} = {1}"' // <- Consider this. What if dimensions have measures? " is 132.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The length of the statement  "                    field.FieldType == FieldType.Key || (field.ValueType.IsValueType && Nullable.GetUnderlyingType(field.ValueType) == null) ? "NOT NULL" : "NULL"); " is 144.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The length of the statement  "                writer.Write("    PRIMARY KEY CLUSTERED ({0}) WITH (IGNORE_DUP_KEY = ON)"' string.Join("'"' table.Keys.Select(pos => string.Format("[{0}]"' pos.Value.Name)))); " is 159.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteSchema,The length of the statement  "                    writer.WriteLine("CREATE INDEX {0} ON {1} ({2});"' Escape(table.Name + "_" + p.Name)' Escape(table.Name)' Escape(p.Name)); " is 122.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,DropAllConstraints,The length of the statement  "                        "SELECT CONCAT(OBJECT_SCHEMA_NAME(PARENT_OBJECT_ID)' '.'' OBJECT_NAME(PARENT_OBJECT_ID))' OBJECT_NAME(OBJECT_ID) FROM SYS.OBJECTS WHERE TYPE_DESC LIKE '%CONSTRAINT' AND NOT OBJECT_NAME(PARENT_OBJECT_ID) like 'TT_%' ORDER BY OBJECT_NAME(OBJECT_ID)"' " is 248.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,DropAllUserDefinedTypes,The length of the statement  "            using (SqlDataReader sqlDataReader = new SqlCommand("SELECT name FROM SYS.types WHERE is_user_defined = 1"' conn).ExecuteReader()) " is 130.
Long Statement,ExperienceExtractor.Components.PostProcessors,SqlUpdateUtil,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlUpdateUtil.cs,GetUpdateCriteria,The length of the statement  "            var refDate = GetPartitionDate(date ?? DateTime.UtcNow.Add(-partitionField.Item2.StaleTime)' partitionField.Item2.StaleTime); " is 125.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "                //server.CaptureXml = true; <- Doesn't work with QueryBinding and errors from empty partitions marked as never processed. " is 121.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "                                string.Format("SELECT [{0}].* FROM [{0}] {1}"' table.Name' SqlUpdateUtil.GetUpdateCriteria(table.Schema' partition' true' date: ReferenceDate))); " is 145.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,Process,The length of the statement  "                                string.Format("SELECT [{0}].* FROM [{0}] {1}"' table.Name' SqlUpdateUtil.GetUpdateCriteria(table.Schema' partition' false' date: ReferenceDate' cutoff: CutOff))); " is 162.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "                            AMO2Tabular.ColumnAlterSortByColumnName(db' table.Name' GetFieldFriendlyName(table' field.Name)' GetFieldFriendlyName(table' field.SortBy)' " is 139.
Long Statement,ExperienceExtractor.Components.PostProcessors,SsasExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SsasExporter.cs,CreateSchema,The length of the statement  "                        AMO2Tabular.PartitionAdd(db' table.Name' GetTransientPartitionName(table)' string.Format("SELECT * FROM [{0}] WHERE 1=0"' table.Name)' false); " is 142.
Empty Catch Block,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,Process,The method has an empty catch block.
Empty Catch Block,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,InsertOrUpdateData,The method has an empty catch block.
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: keyName = keyName.Substring(2);
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyKeyName,The following statement contains a magic number: keyName = keyName.Substring(0' keyName.Length - 3) + " ID";
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: keyName = keyName.Substring(2);
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaFieldMapper.cs,SuggestFriendlyLabelName,The following statement contains a magic number: keyName = keyName.Substring(0' keyName.Length - 5);
Magic Number,ExperienceExtractor.Components.Mapping.Sitecore,XaTableMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Sitecore\XaTableMapper.cs,SuggestFriendlyTableName,The following statement contains a magic number: return dimensionName.Substring(2);
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: target[i * 2] = value;
Magic Number,ExperienceExtractor.Components.Mapping.Splitting,MvTestFieldMapper,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Mapping\Splitting\MvTestFieldMapper.cs,SetValues,The following statement contains a magic number: target[i * 2 + 1] = variable.Values[value].Label;
Magic Number,ExperienceExtractor.Components.Parsing.Tables,RowRepeater,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Tables\RowRepeater.cs,Parse,The following statement contains a magic number: var repeats = state.TryGet("Repeats"' 10);
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,SqlExporter,The following statement contains a magic number: Timeout = 3600 * 6;
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,SqlExporter,The following statement contains a magic number: Timeout = 3600 * 6;
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The following statement contains a magic number: cmd.Parameters.AddWithValue("@LockTimeout"' 60 * 30);
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,AcquireLock,The following statement contains a magic number: cmd.Parameters.AddWithValue("@LockTimeout"' 60 * 30);
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,UploadData,The following statement contains a magic number: bcp.BatchSize = 5000;
Magic Number,ExperienceExtractor.Components.PostProcessors,SqlExporter,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\PostProcessors\SqlExporter.cs,WriteCreateTable,The following statement contains a magic number: writer.Write("    [{0}] {1} {2}"' field.Name'                      GetColumnType(field.ValueType' field.FieldType == FieldType.Key ? 60 : (int?)null)'                      field.FieldType == FieldType.Key || (field.ValueType.IsValueType && Nullable.GetUnderlyingType(field.ValueType) == null) ? "NOT NULL" : "NULL");
Missing Default,ExperienceExtractor.Components.Parsing.Helpers,Selectors,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,DefaultSelector,The following switch statement is missing a default case: switch (source)              {                  case "visits":                      return "InteractionId";                  case "pages":                      return "Item.Id";                  case "events":                  case "goals":                      return "PageEventDefinitionId";              }
Missing Default,ExperienceExtractor.Components.Parsing.Helpers,Selectors,D:\research\architectureSmells\repos1\Sitecore_experience-extractor\src\ExperienceExtractor.Components\Parsing\Helpers\Selectors.cs,SelectFromName,The following switch statement is missing a default case: switch (source)              {                  case "visits":                      itemType = typeof (VisitData);                      return s => s.Current<IVisitAggregationContext>().TryGet(v => new[] {v.Visit}' Enumerable.Empty<VisitData>());                    case "pages":                      itemType = typeof(PageData);                      return s => s.Current<IVisitAggregationContext>().TryGet(v => v.Visit.Pages' Enumerable.Empty<PageData>());                  case "events":                  case "goals":                      itemType = typeof(PageEventData);                      Func<PageEventData' bool> filter = pe => true;                      if (source == "goals")                      {                          filter = pe => pe.IsGoal;                      }                        return s =>                          (s.Current<PageData>().TryGet(p => new List<PageData> { p }) ??                           s.Current<IVisitAggregationContext>().TryGet(v => v.Visit.Pages))                              .TryGet(                                  ps =>                                      ps.SelectMany(                                          p =>                                              p.PageEvents.TryGet(pes => pes.Where(filter)'                                                  Enumerable.Empty<PageEventData>())));                }
