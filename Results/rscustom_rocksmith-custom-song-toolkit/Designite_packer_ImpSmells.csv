Implementation smell,Namespace,Class,File,Method,Description
Long Method,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The method has 218 lines of code.
Complex Method,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,Cyclomatic complexity of the method is 29
Complex Method,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,UpdateTones,Cyclomatic complexity of the method is 8
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "b|build"' "Build a song package from 'Rocksmith DLC template' (*.dlc.xml)"' v => outputArguments.Build = v != null }'" is 120.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "i|input="' "The input file or directory (multiple allowed' use ; to split paths)"' v => outputArguments.Input = v.Split( new[]{';'}' 2) }'" is 141.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "d|decodeogg"' "Decode ogg file when unpack a song (default is true)"' v => { if (v != null) outputArguments.DecodeOGG = true; }}'" is 132.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "s|updatesng"' "Recreate SNG files when pack a song (default is false)"' v => { if (v != null) outputArguments.UpdateSng = true; }}'" is 134.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "j|updatejsn"' "Updates manifest files when pack a song (default is false)"' v => { if (v != null) outputArguments.UpdateManifest = true; }}'" is 143.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "x|overwritexml"' "Overwrite EOF XML files with XML from SNG files (default is false)"' v => { if (v != null) outputArguments.OverwriteSongXml = true; }}'" is 156.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The length of the statement  "                { "c|createtemplate"' "Create Template XML file (default is false"' v => { if (v != null) outputArguments.CreateTemplateXml = true; }}'" is 135.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                        ShowHelpfulError("'platform' argument require 'version' and vice-versa to define platform. Use this option only if you have problem with platform auto identifier");" is 164.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                        Console.WriteLine("Warning: You should load and save XML with 'RocksmithToolkitGUI 2.3.0.0' or above to make sure it is still valid and compatible with this feature!");" is 168.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                            DLCPackageCreator.Generate(Path.Combine(Path.GetDirectoryName(arguments.Output)' Path.GetFileNameWithoutExtension(arguments.Output))' info' new Platform(GamePlatform.XBox360' gameVersion));" is 189.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                            DLCPackageCreator.Generate(Path.Combine(Path.GetDirectoryName(arguments.Output)' Path.GetFileNameWithoutExtension(arguments.Output))' info' new Platform(GamePlatform.PS3' gameVersion));" is 185.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                                Packer.Pack(Path.GetFullPath(srcFileName)' Path.GetFullPath(arguments.Output)' arguments.Platform' arguments.UpdateSng' arguments.UpdateManifest);" is 146.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                                Packer.Pack(Path.GetFullPath(srcFileName)' Path.GetFullPath(arguments.Output)' null' arguments.UpdateSng' arguments.UpdateManifest);" is 132.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The length of the statement  "                            var unpackedDir = Packer.Unpack(Path.GetFullPath(srcFileName)' Path.GetFullPath(arguments.Output)' null' arguments.DecodeOGG' arguments.OverwriteSongXml);" is 154.
Long Statement,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,UpdateTones,The length of the statement  "                        throw new InvalidDataException(String.Format("Invalid tone definition detected in {0}' ToneA (ID 0) is expected to be same as ToneBase."' arrangement.SongXml.File));" is 165.
Complex Conditional,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The conditional expression  "arguments.Build && arguments.Pack ||                     arguments.Build && arguments.Unpack ||                     arguments.Pack && arguments.Unpack"  is complex.
Complex Conditional,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The conditional expression  "(arguments.Platform.platform == GamePlatform.None && arguments.Platform.version != GameVersion.None) ||                         (arguments.Platform.platform != GamePlatform.None && arguments.Platform.version == GameVersion.None)"  is complex.
Empty Catch Block,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The method has an empty catch block.
Magic Number,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,GetOptions,The following statement contains a magic number: return new OptionSet             {                 { "h|?|help"' "Show this help message and exit"' v => outputArguments.ShowHelp = v != null }'                 { "p|pack"' "Pack a song"' v => { if (v != null) outputArguments.Pack = true; }}'                 { "u|unpack"' "Unpack a song"' v => { if (v != null) outputArguments.Unpack = true; }}'                 { "b|build"' "Build a song package from 'Rocksmith DLC template' (*.dlc.xml)"' v => outputArguments.Build = v != null }'                 { "i|input="' "The input file or directory (multiple allowed' use ; to split paths)"' v => outputArguments.Input = v.Split( new[]{';'}' 2) }'                 { "o|output="' "The output file or directory"' v => outputArguments.Output = v }'                 { "t|loadtemplate="' "The template file for building package"' v => outputArguments.Template = v }'                 { "f|platform="' "Platform to pack package [Pc' Mac' XBox360' PS3]"' v => outputArguments.SetPlatform(v) }'                 { "v|version="' "Version of the Rocksmith Game [RS2012 or RS2014]"' v => outputArguments.SetVersion(v) }'                 { "d|decodeogg"' "Decode ogg file when unpack a song (default is true)"' v => { if (v != null) outputArguments.DecodeOGG = true; }}'                 { "s|updatesng"' "Recreate SNG files when pack a song (default is false)"' v => { if (v != null) outputArguments.UpdateSng = true; }}'                 { "j|updatejsn"' "Updates manifest files when pack a song (default is false)"' v => { if (v != null) outputArguments.UpdateManifest = true; }}'                 { "x|overwritexml"' "Overwrite EOF XML files with XML from SNG files (default is false)"' v => { if (v != null) outputArguments.OverwriteSongXml = true; }}'                 { "c|createtemplate"' "Create Template XML file (default is false"' v => { if (v != null) outputArguments.CreateTemplateXml = true; }}'             };
Magic Number,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The following statement contains a magic number: Console.SetWindowSize(85' 40);
Magic Number,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,Main,The following statement contains a magic number: Console.SetWindowSize(85' 40);
Missing Default,packer,Program,C:\research\architectureSmells\repos\rscustom_rocksmith-custom-song-toolkit\RocksmithToolkitCLI\packer\Program.cs,CreateTemplate,The following switch statement is missing a default case: switch (platform.platform)                 {                     case GamePlatform.Pc:                         info.Pc = true;                         break;                     case GamePlatform.Mac:                         info.Mac = true;                         break;                     case GamePlatform.XBox360:                         info.XBox360 = true;                         break;                     case GamePlatform.PS3:                         info.PS3 = true;                         break;                 }
