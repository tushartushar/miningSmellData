Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following statement contains a magic number: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,GetColorFramePixcel,The following statement contains a magic number: using (ColorImageFrame colorFrame = _kinect.ColorStream.OpenNextFrame(100))              {                  if (colorFrame == null) return false;                    // RGBカメラのピクセルデータを取得する                  _colorPixel = new byte[colorFrame.PixelDataLength];                  colorFrame.CopyPixelDataTo(_colorPixel);                  return true;              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following statement contains a magic number: try              {                  _depthframe_callback = depthframe_callback;                  _kinect.ColorStream.Enable(Microsoft.Kinect.ColorImageFormat.RgbResolution640x480Fps30);                  _kinect.DepthStream.Enable((Microsoft.Kinect.DepthImageFormat)format);                  _kinect.DepthFrameReady += DepthFrameReady_OneFrame;                    //画像サイズ設定                  switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }                    return "ready";              }              catch (Exception ex)              {                  _kinect.Stop();                  _kinect.Dispose();                  throw new Exception(ex.Message);              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Magic Number,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ConvertDepthColor,The following statement contains a magic number: for (int index = 0; index < depthPixel.Length; index++)              {                  // 距離カメラのデータから、距離を取得する                  int distance = depthPixel[index] >> DepthImageFrame.PlayerIndexBitmaskWidth;                    // 変換した結果が、フレームサイズを超えることがあるため、小さいほうを使う                  int x = Math.Min(colorPoint[index].X' colorStream.FrameWidth - 1);                  int y = Math.Min(colorPoint[index].Y' colorStream.FrameHeight - 1);                    int colorIndex = ((y * depthFrame.Width) + x) * Bgr32BytesPerPixel;                    // サポート外 0-40cm                  if (distance == depthStream.UnknownDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 255;                  }                  // 近すぎ 40cm-80cm(default mode)                  else if (distance == depthStream.TooNearDepth)                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 0;                  }                  // 遠すぎ 3m(Near)'4m(Default)-8m                  else if (distance == depthStream.TooFarDepth)                  {                      depthColor[colorIndex] = 255;                      depthColor[colorIndex + 1] = 0;                      depthColor[colorIndex + 2] = 0;                  }                  // 有効な距離データ                  else                  {                      depthColor[colorIndex] = 0;                      depthColor[colorIndex + 1] = 255;                      depthColor[colorIndex + 2] = 255;                  }              }
Missing Default,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,ColorStream_Enable,The following switch statement is missing a default case: switch (format)              {                  case ColorImageFormat.RgbResolution640x480Fps30:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.RgbResolution1280x960Fps12:                      _width = 1280;                      _height = 960;                      break;                  case ColorImageFormat.RawYuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;                  case ColorImageFormat.YuvResolution640x480Fps15:                      _width = 640;                      _height = 480;                      break;              }
Missing Default,Microsoft.Kinect.Wrapper,KinectWrapper,C:\repos\geis_KinectSDKBook4CS\sandbox\VBA\Microsoft.Kinect.Wrapper\Microsoft.Kinect.Wrapper\KinectWrapper.cs,DepthFrame_OneFrame,The following switch statement is missing a default case: switch (format)                  {                      case DepthImageFormat.Resolution80x60Fps30:                          _width = 80;                          _height = 60;                          break;                      case DepthImageFormat.Resolution320x240Fps30:                          _width = 320;                          _height = 240;                          break;                      case DepthImageFormat.Resolution640x480Fps30:                          _width = 320;                          _height = 240;                          break;                  }
