Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,Cyclomatic complexity of the method is 9
Long Statement,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The length of the statement  "            this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged); " is 133.
Long Statement,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The length of the statement  "            this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged); " is 133.
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,StartKinect,The following statement contains a magic number: Thread thread = new Thread( new ThreadStart( () =>        {          // ストリーミングプレイヤー          StreamingWavePlayer player = new StreamingWavePlayer( 16000' 16' 1' 100 );          // 音声入力用のバッファ          byte[] buffer = new byte[1024];            // エコーのキャンセルと抑制を有効にする          kinect.AudioSource.EchoCancellationMode =            EchoCancellationMode.CancellationAndSuppression;            // 音声の入力を開始する          using ( Stream stream = kinect.AudioSource.Start() ) {            while ( isContinue ) {              // 音声を入力し、スピーカーに出力する              stream.Read( buffer' 0' buffer.Length );              player.Output( buffer );            }          }        } ) );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,StartKinect,The following statement contains a magic number: Thread thread = new Thread( new ThreadStart( () =>        {          // ストリーミングプレイヤー          StreamingWavePlayer player = new StreamingWavePlayer( 16000' 16' 1' 100 );          // 音声入力用のバッファ          byte[] buffer = new byte[1024];            // エコーのキャンセルと抑制を有効にする          kinect.AudioSource.EchoCancellationMode =            EchoCancellationMode.CancellationAndSuppression;            // 音声の入力を開始する          using ( Stream stream = kinect.AudioSource.Start() ) {            while ( isContinue ) {              // 音声を入力し、スピーカーに出力する              stream.Read( buffer' 0' buffer.Length );              player.Output( buffer );            }          }        } ) );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,StartKinect,The following statement contains a magic number: Thread thread = new Thread( new ThreadStart( () =>        {          // ストリーミングプレイヤー          StreamingWavePlayer player = new StreamingWavePlayer( 16000' 16' 1' 100 );          // 音声入力用のバッファ          byte[] buffer = new byte[1024];            // エコーのキャンセルと抑制を有効にする          kinect.AudioSource.EchoCancellationMode =            EchoCancellationMode.CancellationAndSuppression;            // 音声の入力を開始する          using ( Stream stream = kinect.AudioSource.Start() ) {            while ( isContinue ) {              // 音声を入力し、スピーカーに出力する              stream.Read( buffer' 0' buffer.Length );              player.Output( buffer );            }          }        } ) );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,StartKinect,The following statement contains a magic number: Thread thread = new Thread( new ThreadStart( () =>        {          // ストリーミングプレイヤー          StreamingWavePlayer player = new StreamingWavePlayer( 16000' 16' 1' 100 );          // 音声入力用のバッファ          byte[] buffer = new byte[1024];            // エコーのキャンセルと抑制を有効にする          kinect.AudioSource.EchoCancellationMode =            EchoCancellationMode.CancellationAndSuppression;            // 音声の入力を開始する          using ( Stream stream = kinect.AudioSource.Start() ) {            while ( isContinue ) {              // 音声を入力し、スピーカーに出力する              stream.Read( buffer' 0' buffer.Length );              player.Output( buffer );            }          }        } ) );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create( colorFrame.Width'                colorFrame.Height' 96' 96' PixelFormats.Bgr32' null'                colorPixel' colorFrame.Width * colorFrame.BytesPerPixel );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create( colorFrame.Width'                colorFrame.Height' 96' 96' PixelFormats.Bgr32' null'                colorPixel' colorFrame.Width * colorFrame.BytesPerPixel );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,kinect_DepthFrameReady,The following statement contains a magic number: imageDepth.Source = BitmapSource.Create( depthFrame.Width'                depthFrame.Height' 96' 96' PixelFormats.Bgr32' null'                ConvertDepthColor( kinect' depthFrame )'                depthFrame.Width * Bgr32BytesPerPixel );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,kinect_DepthFrameReady,The following statement contains a magic number: imageDepth.Source = BitmapSource.Create( depthFrame.Width'                depthFrame.Height' 96' 96' PixelFormats.Bgr32' null'                ConvertDepthColor( kinect' depthFrame )'                depthFrame.Width * Bgr32BytesPerPixel );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,DrawEllipse,The following statement contains a magic number: const int R = 5;
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,DrawEllipse,The following statement contains a magic number: canvasSkeleton.Children.Add( new Ellipse()        {          Fill = new SolidColorBrush( Colors.Red )'          Margin = new Thickness( point.X - R' point.Y - R' 0' 0 )'          Width = R * 2'          Height = R * 2'        } );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,DrawEllipse,The following statement contains a magic number: canvasSkeleton.Children.Add( new Ellipse()        {          Fill = new SolidColorBrush( Colors.Red )'          Margin = new Thickness( point.X - R' point.Y - R' 0' 0 )'          Width = R * 2'          Height = R * 2'        } );
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,ConvertDepthColor,The following statement contains a magic number: depthColor[colorIndex] = 255;
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,ConvertDepthColor,The following statement contains a magic number: depthColor[colorIndex + 1] = 255;
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,ConvertDepthColor,The following statement contains a magic number: depthColor[colorIndex + 2] = 255;
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,ConvertDepthColor,The following statement contains a magic number: depthColor[colorIndex + 2] = 255;
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,KinectInOut,MainWindow,D:\research\architectureSmells\repos\geis_KinectSDKBook4CS\1_basic\KinectInOut\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 5 "..\..\..\MainWindow.xaml"              ((KinectInOut.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.imageDepth = ((System.Windows.Controls.Image)(target));              return;              case 4:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 5:              this.comboBoxRange = ((System.Windows.Controls.ComboBox)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.comboBoxRange.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(this.comboBoxRange_SelectionChanged);                            #line default              #line hidden              return;              case 6:              this.soundSource = ((System.Windows.Media.RotateTransform)(target));              return;              case 7:              this.beam = ((System.Windows.Media.RotateTransform)(target));              return;              case 8:              this.sliderTiltAngle = ((System.Windows.Controls.Slider)(target));                            #line 29 "..\..\..\MainWindow.xaml"              this.sliderTiltAngle.ValueChanged += new System.Windows.RoutedPropertyChangedEventHandler<double>(this.sliderTiltAngle_ValueChanged);                            #line default              #line hidden              return;              case 9:              this.label1 = ((System.Windows.Controls.Label)(target));              return;              }
