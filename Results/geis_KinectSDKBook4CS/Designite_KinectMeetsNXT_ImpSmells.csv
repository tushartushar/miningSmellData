Implementation smell,Namespace,Class,File,Method,Description
Long Statement,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The length of the statement  "				imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel); " is 167.
Long Statement,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Power,The length of the statement  "	if ((rightHand.TrackingState != JointTrackingState.Tracked) || (rightElbow.TrackingState != JointTrackingState.Tracked) || (leftHand.TrackingState != JointTrackingState.Tracked) || (leftElbow.TrackingState != JointTrackingState.Tracked)) { " is 239.
Complex Conditional,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Power,The conditional expression  "(rightHand.TrackingState != JointTrackingState.Tracked) || (rightElbow.TrackingState != JointTrackingState.Tracked) || (leftHand.TrackingState != JointTrackingState.Tracked) || (leftElbow.TrackingState != JointTrackingState.Tracked)"  is complex.
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {  	// RGBカメラのフレームデータを取得する  	using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  		if (colorFrame != null) {  			// RGBカメラのピクセルデータを取得する  			byte[] colorPixel = new byte[colorFrame.PixelDataLength];  			colorFrame.CopyPixelDataTo (colorPixel);  			// ピクセルデータをビットマップに変換する  			imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {  	// RGBカメラのフレームデータを取得する  	using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  		if (colorFrame != null) {  			// RGBカメラのピクセルデータを取得する  			byte[] colorPixel = new byte[colorFrame.PixelDataLength];  			colorFrame.CopyPixelDataTo (colorPixel);  			// ピクセルデータをビットマップに変換する  			imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  	if (colorFrame != null) {  		// RGBカメラのピクセルデータを取得する  		byte[] colorPixel = new byte[colorFrame.PixelDataLength];  		colorFrame.CopyPixelDataTo (colorPixel);  		// ピクセルデータをビットマップに変換する  		imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  	}  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  	if (colorFrame != null) {  		// RGBカメラのピクセルデータを取得する  		byte[] colorPixel = new byte[colorFrame.PixelDataLength];  		colorFrame.CopyPixelDataTo (colorPixel);  		// ピクセルデータをビットマップに変換する  		imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  	}  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: if (colorFrame != null) {  	// RGBカメラのピクセルデータを取得する  	byte[] colorPixel = new byte[colorFrame.PixelDataLength];  	colorFrame.CopyPixelDataTo (colorPixel);  	// ピクセルデータをビットマップに変換する  	imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: if (colorFrame != null) {  	// RGBカメラのピクセルデータを取得する  	byte[] colorPixel = new byte[colorFrame.PixelDataLength];  	colorFrame.CopyPixelDataTo (colorPixel);  	// ピクセルデータをビットマップに変換する  	imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: foreach (Joint joint in joints) {  	// ジョイントがトラッキングされていなければ次へ  	if (joint.TrackingState != JointTrackingState.Tracked) {  		continue;  	}  	// スケルトンの座標を、RGBカメラの座標に変換して円を書く  	ColorImagePoint point = kinect.MapSkeletonPointToColor (joint.Position' kinect.ColorStream.Format);  	canvasSkeleton.Children.Add (new Ellipse () {  		Fill = new SolidColorBrush (Colors.Red)'  		Margin = new Thickness (point.X - R' point.Y - R' 0' 0)'  		Width = R * 2'  		Height = R * 2'  	});  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: foreach (Joint joint in joints) {  	// ジョイントがトラッキングされていなければ次へ  	if (joint.TrackingState != JointTrackingState.Tracked) {  		continue;  	}  	// スケルトンの座標を、RGBカメラの座標に変換して円を書く  	ColorImagePoint point = kinect.MapSkeletonPointToColor (joint.Position' kinect.ColorStream.Format);  	canvasSkeleton.Children.Add (new Ellipse () {  		Fill = new SolidColorBrush (Colors.Red)'  		Margin = new Thickness (point.X - R' point.Y - R' 0' 0)'  		Width = R * 2'  		Height = R * 2'  	});  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: canvasSkeleton.Children.Add (new Ellipse () {  	Fill = new SolidColorBrush (Colors.Red)'  	Margin = new Thickness (point.X - R' point.Y - R' 0' 0)'  	Width = R * 2'  	Height = R * 2'  });  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: canvasSkeleton.Children.Add (new Ellipse () {  	Fill = new SolidColorBrush (Colors.Red)'  	Margin = new Thickness (point.X - R' point.Y - R' 0' 0)'  	Width = R * 2'  	Height = R * 2'  });  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: if (isConneted) {  	nxt.SetOutputState (MotorPort.PortA' right' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  	nxt.SetOutputState (MotorPort.PortB' left' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: if (isConneted) {  	nxt.SetOutputState (MotorPort.PortA' right' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  	nxt.SetOutputState (MotorPort.PortB' left' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: nxt.SetOutputState (MotorPort.PortA' right' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: nxt.SetOutputState (MotorPort.PortB' left' MotorModes.On' MotorRegulationMode.Idle' 100' MotorRunState.Running' 0);  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: theta *= 2;  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: if (theta >= 100) {  	theta = 100;  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: if (theta >= 100) {  	theta = 100;  }  
Magic Number,KinectMeetsNXT,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: theta = 100;  
