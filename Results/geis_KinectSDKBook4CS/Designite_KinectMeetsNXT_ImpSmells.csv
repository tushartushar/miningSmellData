Implementation smell,Namespace,Class,File,Method,Description
Complex Conditional,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Power,The conditional expression  "(rightHand.TrackingState != JointTrackingState.Tracked) ||            (rightElbow.TrackingState != JointTrackingState.Tracked) ||            (leftHand.TrackingState != JointTrackingState.Tracked) ||            (leftElbow.TrackingState != JointTrackingState.Tracked)"  is complex.
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {          // RGBカメラのフレームデータを取得する          using ( ColorImageFrame colorFrame = e.OpenColorImageFrame() ) {            if ( colorFrame != null ) {              // RGBカメラのピクセルデータを取得する              byte[] colorPixel = new byte[colorFrame.PixelDataLength];              colorFrame.CopyPixelDataTo( colorPixel );                // ピクセルデータをビットマップに変換する              imageRgb.Source = BitmapSource.Create( colorFrame.Width' colorFrame.Height' 96' 96'                  PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel );            }          }        }        catch ( Exception ex ) {          MessageBox.Show( ex.Message );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {          // RGBカメラのフレームデータを取得する          using ( ColorImageFrame colorFrame = e.OpenColorImageFrame() ) {            if ( colorFrame != null ) {              // RGBカメラのピクセルデータを取得する              byte[] colorPixel = new byte[colorFrame.PixelDataLength];              colorFrame.CopyPixelDataTo( colorPixel );                // ピクセルデータをビットマップに変換する              imageRgb.Source = BitmapSource.Create( colorFrame.Width' colorFrame.Height' 96' 96'                  PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel );            }          }        }        catch ( Exception ex ) {          MessageBox.Show( ex.Message );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: const int R = 5;
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: foreach ( Joint joint in joints ) {          // ジョイントがトラッキングされていなければ次へ          if ( joint.TrackingState != JointTrackingState.Tracked ) {            continue;          }            // スケルトンの座標を、RGBカメラの座標に変換して円を書く          ColorImagePoint point = kinect.MapSkeletonPointToColor( joint.Position'            kinect.ColorStream.Format );            canvasSkeleton.Children.Add( new Ellipse()          {            Fill = new SolidColorBrush( Colors.Red )'            Margin = new Thickness( point.X - R' point.Y - R' 0' 0 )'            Width = R * 2'            Height = R * 2'          } );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,DrawSkeleton,The following statement contains a magic number: foreach ( Joint joint in joints ) {          // ジョイントがトラッキングされていなければ次へ          if ( joint.TrackingState != JointTrackingState.Tracked ) {            continue;          }            // スケルトンの座標を、RGBカメラの座標に変換して円を書く          ColorImagePoint point = kinect.MapSkeletonPointToColor( joint.Position'            kinect.ColorStream.Format );            canvasSkeleton.Children.Add( new Ellipse()          {            Fill = new SolidColorBrush( Colors.Red )'            Margin = new Thickness( point.X - R' point.Y - R' 0' 0 )'            Width = R * 2'            Height = R * 2'          } );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: if ( isConneted ) {          nxt.SetOutputState( MotorPort.PortA' right' MotorModes.On'            MotorRegulationMode.Idle' 100' MotorRunState.Running' 0 );          nxt.SetOutputState( MotorPort.PortB' left' MotorModes.On'            MotorRegulationMode.Idle' 100' MotorRunState.Running' 0 );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,SetMotorPower,The following statement contains a magic number: if ( isConneted ) {          nxt.SetOutputState( MotorPort.PortA' right' MotorModes.On'            MotorRegulationMode.Idle' 100' MotorRunState.Running' 0 );          nxt.SetOutputState( MotorPort.PortB' left' MotorModes.On'            MotorRegulationMode.Idle' 100' MotorRunState.Running' 0 );        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: var c = Math.Sqrt( Math.Pow( a' 2 ) + Math.Pow( b' 2 ) );
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: var c = Math.Sqrt( Math.Pow( a' 2 ) + Math.Pow( b' 2 ) );
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: var theta = (sbyte)(Math.Acos( a / c ) * 180 / Math.PI);
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: theta *= 2;
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: if ( theta >= 100 ) {          theta = 100;        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,GetPower,The following statement contains a magic number: if ( theta >= 100 ) {          theta = 100;        }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
Magic Number,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
Missing Default,KinectMeetsNXT,MainWindow,C:\repos\geis_KinectSDKBook4CS\2_apply\KinectMeetsNXT\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\MainWindow.xaml"              ((KinectMeetsNXT.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.Window_Closing);                            #line default              #line hidden              return;              case 2:              this.imageRgb = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.canvasSkeleton = ((System.Windows.Controls.Canvas)(target));              return;              case 4:              this.comboBoxPort = ((System.Windows.Controls.ComboBox)(target));              return;              case 5:              this.buttonConnect = ((System.Windows.Controls.Button)(target));                            #line 12 "..\..\..\MainWindow.xaml"              this.buttonConnect.Click += new System.Windows.RoutedEventHandler(this.buttonConnect_Click);                            #line default              #line hidden              return;              case 6:              this.buttonDisconnect = ((System.Windows.Controls.Button)(target));                            #line 14 "..\..\..\MainWindow.xaml"              this.buttonDisconnect.Click += new System.Windows.RoutedEventHandler(this.buttonDisconnect_Click);                            #line default              #line hidden              return;              }
