Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The length of the statement  "				imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel); " is 167.
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {  	// RGBカメラのフレームデータを取得する  	using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  		if (colorFrame != null) {  			// RGBカメラのピクセルデータを取得する  			byte[] colorPixel = new byte[colorFrame.PixelDataLength];  			colorFrame.CopyPixelDataTo (colorPixel);  			// ピクセルデータをビットマップに変換する  			imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: try {  	// RGBカメラのフレームデータを取得する  	using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  		if (colorFrame != null) {  			// RGBカメラのピクセルデータを取得する  			byte[] colorPixel = new byte[colorFrame.PixelDataLength];  			colorFrame.CopyPixelDataTo (colorPixel);  			// ピクセルデータをビットマップに変換する  			imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  		}  	}  } catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  	if (colorFrame != null) {  		// RGBカメラのピクセルデータを取得する  		byte[] colorPixel = new byte[colorFrame.PixelDataLength];  		colorFrame.CopyPixelDataTo (colorPixel);  		// ピクセルデータをビットマップに変換する  		imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  	}  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: using (ColorImageFrame colorFrame = e.OpenColorImageFrame ()) {  	if (colorFrame != null) {  		// RGBカメラのピクセルデータを取得する  		byte[] colorPixel = new byte[colorFrame.PixelDataLength];  		colorFrame.CopyPixelDataTo (colorPixel);  		// ピクセルデータをビットマップに変換する  		imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  	}  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: if (colorFrame != null) {  	// RGBカメラのピクセルデータを取得する  	byte[] colorPixel = new byte[colorFrame.PixelDataLength];  	colorFrame.CopyPixelDataTo (colorPixel);  	// ピクセルデータをビットマップに変換する  	imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: if (colorFrame != null) {  	// RGBカメラのピクセルデータを取得する  	byte[] colorPixel = new byte[colorFrame.PixelDataLength];  	colorFrame.CopyPixelDataTo (colorPixel);  	// ピクセルデータをビットマップに変換する  	imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  }  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  
Magic Number,RgbCamera,MainWindow,F:\newReposMay17\geis_KinectSDKBook4CS\1_basic\RgbCamera\MainWindow.xaml.cs,kinect_ColorFrameReady,The following statement contains a magic number: imageRgb.Source = BitmapSource.Create (colorFrame.Width' colorFrame.Height' 96' 96' PixelFormats.Bgr32' null' colorPixel' colorFrame.Width * colorFrame.BytesPerPixel);  
