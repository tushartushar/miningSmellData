Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VVVV.Nodes.Ximea,VideoInDX11Node,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Nodes\VideoInDX11.cs,Evaluate,Cyclomatic complexity of the method is 9
Long Parameter List,VVVV.Nodes.Ximea,Specification,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Specification,The method has 5 parameters. Parameters: Width' Height' Name' Type' Serial
Empty Catch Block,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Update,The method has an empty catch block.
Empty Catch Block,VVVV.Nodes.Ximea,DoubleBuffer,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Swap,The method has an empty catch block.
Magic Number,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Update,The following statement contains a magic number: FDoubleBuffer.LockFront.AcquireReaderLock(100);
Magic Number,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,SetParameter,The following statement contains a magic number: FThread.Perform(() =>  				{  					switch (Parameter)  					{  						case IntParameter.AEAG:  							FDevice.SetParam(PRM.AEAG' Value);  							break;  						case IntParameter.Exposure:  							FDevice.SetParam(PRM.EXPOSURE' Value);  							break;  						case IntParameter.Gain:  							FDevice.SetParam(PRM.GAIN' (float)Value);  							break;  						case IntParameter.RegionHeight:  							int value = Value;  							value /= 4;  							value *= 4;  							if (value < 4)  								value = 4;    							FDevice.SetParam(PRM.HEIGHT' value);  							break;  						case IntParameter.RegionWidth:  							FDevice.SetParam(PRM.WIDTH' Value);  							break;  						case IntParameter.RegionX:  							FDevice.SetParam(PRM.OFFSET_X' Value);  							break;  						case IntParameter.RegionY:  							FDevice.SetParam(PRM.OFFSET_Y' Value);  							break;  					}  				});
Magic Number,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,SetParameter,The following statement contains a magic number: FThread.Perform(() =>  				{  					switch (Parameter)  					{  						case IntParameter.AEAG:  							FDevice.SetParam(PRM.AEAG' Value);  							break;  						case IntParameter.Exposure:  							FDevice.SetParam(PRM.EXPOSURE' Value);  							break;  						case IntParameter.Gain:  							FDevice.SetParam(PRM.GAIN' (float)Value);  							break;  						case IntParameter.RegionHeight:  							int value = Value;  							value /= 4;  							value *= 4;  							if (value < 4)  								value = 4;    							FDevice.SetParam(PRM.HEIGHT' value);  							break;  						case IntParameter.RegionWidth:  							FDevice.SetParam(PRM.WIDTH' Value);  							break;  						case IntParameter.RegionX:  							FDevice.SetParam(PRM.OFFSET_X' Value);  							break;  						case IntParameter.RegionY:  							FDevice.SetParam(PRM.OFFSET_Y' Value);  							break;  					}  				});
Magic Number,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,SetParameter,The following statement contains a magic number: FThread.Perform(() =>  				{  					switch (Parameter)  					{  						case IntParameter.AEAG:  							FDevice.SetParam(PRM.AEAG' Value);  							break;  						case IntParameter.Exposure:  							FDevice.SetParam(PRM.EXPOSURE' Value);  							break;  						case IntParameter.Gain:  							FDevice.SetParam(PRM.GAIN' (float)Value);  							break;  						case IntParameter.RegionHeight:  							int value = Value;  							value /= 4;  							value *= 4;  							if (value < 4)  								value = 4;    							FDevice.SetParam(PRM.HEIGHT' value);  							break;  						case IntParameter.RegionWidth:  							FDevice.SetParam(PRM.WIDTH' Value);  							break;  						case IntParameter.RegionX:  							FDevice.SetParam(PRM.OFFSET_X' Value);  							break;  						case IntParameter.RegionY:  							FDevice.SetParam(PRM.OFFSET_Y' Value);  							break;  					}  				});
Magic Number,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,SetParameter,The following statement contains a magic number: FThread.Perform(() =>  				{  					switch (Parameter)  					{  						case IntParameter.AEAG:  							FDevice.SetParam(PRM.AEAG' Value);  							break;  						case IntParameter.Exposure:  							FDevice.SetParam(PRM.EXPOSURE' Value);  							break;  						case IntParameter.Gain:  							FDevice.SetParam(PRM.GAIN' (float)Value);  							break;  						case IntParameter.RegionHeight:  							int value = Value;  							value /= 4;  							value *= 4;  							if (value < 4)  								value = 4;    							FDevice.SetParam(PRM.HEIGHT' value);  							break;  						case IntParameter.RegionWidth:  							FDevice.SetParam(PRM.WIDTH' Value);  							break;  						case IntParameter.RegionX:  							FDevice.SetParam(PRM.OFFSET_X' Value);  							break;  						case IntParameter.RegionY:  							FDevice.SetParam(PRM.OFFSET_Y' Value);  							break;  					}  				});
Magic Number,VVVV.Nodes.Ximea,DoubleBuffer,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Swap,The following statement contains a magic number: LockFront.AcquireWriterLock(1000);
Magic Number,VVVV.Nodes.Ximea,ManageDependencies,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\ManageDependencies.cs,Start,The following statement contains a magic number: bool isx64 = IntPtr.Size == 8;
Magic Number,VVVV.Nodes.Ximea,SoftwareLFO,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Nodes\SoftwareLFO.cs,ThreadedFunction,The following statement contains a magic number: var time = FTimer.ElapsedTicks * 1000L * 1000L / (Stopwatch.Frequency);
Magic Number,VVVV.Nodes.Ximea,SoftwareLFO,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Nodes\SoftwareLFO.cs,ThreadedFunction,The following statement contains a magic number: var time = FTimer.ElapsedTicks * 1000L * 1000L / (Stopwatch.Frequency);
Magic Number,VVVV.Nodes.Ximea,SoftwareLFO,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Nodes\SoftwareLFO.cs,ThreadedFunction,The following statement contains a magic number: FNextTrigger = time + TriggerOffset + (long)(Interval * 1e6);
Magic Number,VVVV.Nodes.Ximea,VideoInDX11Node,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Nodes\VideoInDX11.cs,MainLoop_OnPresent,The following statement contains a magic number: TimeSpan sleepTime = new TimeSpan(100);
Missing Default,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,Start,The following switch statement is missing a default case: switch(hardwareTrigger.Source)  							{  								case HardwareTrigger.HardwareEvent.RisingEdge:  									FDevice.SetParam(PRM.TRG_SOURCE' TRG_SOURCE.EDGE_RISING);  									break;  								case HardwareTrigger.HardwareEvent.FallingEdge:  									FDevice.SetParam(PRM.TRG_SOURCE' TRG_SOURCE.EDGE_FALLING);  									break;  								case HardwareTrigger.HardwareEvent.WhilstHigh:  									throw(new Exception("WhilstHigh is not implemented"));  							}
Missing Default,VVVV.Nodes.Ximea,Device,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\DX11\Ximea\Lib\Device.cs,SetParameter,The following switch statement is missing a default case: switch (Parameter)  					{  						case IntParameter.AEAG:  							FDevice.SetParam(PRM.AEAG' Value);  							break;  						case IntParameter.Exposure:  							FDevice.SetParam(PRM.EXPOSURE' Value);  							break;  						case IntParameter.Gain:  							FDevice.SetParam(PRM.GAIN' (float)Value);  							break;  						case IntParameter.RegionHeight:  							int value = Value;  							value /= 4;  							value *= 4;  							if (value < 4)  								value = 4;    							FDevice.SetParam(PRM.HEIGHT' value);  							break;  						case IntParameter.RegionWidth:  							FDevice.SetParam(PRM.WIDTH' Value);  							break;  						case IntParameter.RegionX:  							FDevice.SetParam(PRM.OFFSET_X' Value);  							break;  						case IntParameter.RegionY:  							FDevice.SetParam(PRM.OFFSET_Y' Value);  							break;  					}
