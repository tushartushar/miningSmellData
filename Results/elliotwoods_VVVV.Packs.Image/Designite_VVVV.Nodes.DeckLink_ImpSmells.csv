Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VVVV.Nodes.DeckLink,Template,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\VideoInTexture.cs,Evaluate,Cyclomatic complexity of the method is 8
Long Parameter List,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,ReadTexture,The method has 5 parameters. Parameters: width' height' handle' formatEnum' usageEnum
Long Parameter List,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,ReadTexture,The method has 5 parameters. Parameters: width' height' handle' format' usage
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,Initialise,The length of the statement  "			var flags = CreateFlags.HardwareVertexProcessing | CreateFlags.Multithreaded | CreateFlags.PureDevice | CreateFlags.FpuPreserve; " is 128.
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,Initialise,The length of the statement  "			this.FDevice = new DeviceEx(FContext' 0' DeviceType.Hardware' this.FHiddenControl.Handle' flags' new PresentParameters() " is 120.
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,Initialise,The length of the statement  "			this.FTextureShared = new Texture(this.FDevice' this.FWidth' this.FHeight' 1' FUsage' FFormat' Pool.Default' ref this.FHandle); " is 127.
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,Initialise,The length of the statement  "			this.FTextureCopied = new Texture(this.FDevice' this.FWidth' this.FHeight' 1' Usage.RenderTarget' FFormat' Pool.Default); " is 121.
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,Initialise,The length of the statement  "			this.FSurfaceOffscreen = Surface.CreateOffscreenPlainEx(FDevice' FWidth' FHeight' description.Format' Pool.SystemMemory' Usage.None); " is 133.
Long Statement,VVVV.Nodes.DeckLink,ReadTexture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ReadTexture.cs,ReadBack,The length of the statement  "				FDevice.StretchRectangle(this.FTextureShared.GetSurfaceLevel(0)' this.FTextureCopied.GetSurfaceLevel(0)' TextureFilter.None); " is 125.
Long Statement,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,Initialise,The length of the statement  "					FOutputDevice.DoesSupportVideoMode(mode.DisplayModeHandle.GetDisplayMode()' mode.PixelFormat' mode.Flags' out support' out displayMode); " is 136.
Long Statement,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,Initialise,The length of the statement  "					FOutputDevice.CreateVideoFrame(FWidth' FHeight' Mode.CompressedWidth * 4' Mode.PixelFormat' _BMDFrameFlags.bmdFrameFlagDefault' out FVideoFrame); " is 145.
Long Statement,VVVV.Nodes.DeckLink,Template,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\VideoInTexture.cs,CreateTexture,The length of the statement  "			return new Texture(device' Math.Max(FCaptures[Slice].Width' 1)' Math.Max(FCaptures[Slice].Height' 1)' 1' usage' Format.A8R8G8B8' pool); " is 135.
Empty Catch Block,VVVV.Nodes.DeckLink,ModeRegister,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,Refresh,The method has an empty catch block.
Empty Catch Block,VVVV.Nodes.DeckLink,Capture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Capture.cs,VideoInputFrameArrived,The method has an empty catch block.
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following statement contains a magic number: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
Magic Number,VVVV.Nodes.DeckLink,AboutNode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\About.cs,Refresh,The following statement contains a magic number: long dlVerMajor = (deckLinkVersion & 0xFF000000) >> 24;
Magic Number,VVVV.Nodes.DeckLink,AboutNode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\About.cs,Refresh,The following statement contains a magic number: long dlVerMinor = (deckLinkVersion & 0x00FF0000) >> 16;
Magic Number,VVVV.Nodes.DeckLink,AboutNode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\About.cs,Refresh,The following statement contains a magic number: long dlVerPoint = (deckLinkVersion & 0x0000FF00) >> 8;
Magic Number,VVVV.Nodes.DeckLink,Capture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Capture.cs,Open,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() =>  			{  				this.Lock.AcquireWriterLock(10000); 				try 				{  					if (device == null)  						throw (new Exception("No device selected"));  					IDeckLink rawDevice = DeviceRegister.Singleton.GetDeviceHandle(device.Index); 					FDevice = rawDevice as IDeckLinkInput; 					FOutDevice = rawDevice as IDeckLinkOutput; 					FMode = mode; 					FFlags = flags;  					FConverter = new CDeckLinkVideoConversion();  					if (FDevice == null) 						throw (new Exception("No input device connected"));  					_BMDDisplayModeSupport displayModeSupported;  					FDevice.DoesSupportVideoMode(FMode' FPixelFormat' flags' out displayModeSupported' out FDisplayMode);  					Width = FDisplayMode.GetWidth(); 					Height = FDisplayMode.GetHeight();    					// inspiration http://dviz.googlecode.com/svn/trunk/src/livemix/CameraThread.cpp    					FOutDevice.CreateVideoFrame(Width'  												Height'  												Width * 4'  												_BMDPixelFormat.bmdFormat8BitBGRA'  												_BMDFrameFlags.bmdFrameFlagDefault'  												out rgbFrame);  					FDevice.EnableVideoInput(FMode' FPixelFormat' FFlags); 					FDevice.SetCallback(this); 					FDevice.StartStreams();  					Reinitialise = true; 					Ready = true; 					FreshData = false; 				} 				catch (Exception e) 				{ 					Ready = false; 					Reinitialise = false; 					FreshData = false; 					throw; 				} 				finally 				{ 					this.Lock.ReleaseWriterLock(); 				}  			});
Magic Number,VVVV.Nodes.DeckLink,Capture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Capture.cs,Open,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() =>  			{  				this.Lock.AcquireWriterLock(10000); 				try 				{  					if (device == null)  						throw (new Exception("No device selected"));  					IDeckLink rawDevice = DeviceRegister.Singleton.GetDeviceHandle(device.Index); 					FDevice = rawDevice as IDeckLinkInput; 					FOutDevice = rawDevice as IDeckLinkOutput; 					FMode = mode; 					FFlags = flags;  					FConverter = new CDeckLinkVideoConversion();  					if (FDevice == null) 						throw (new Exception("No input device connected"));  					_BMDDisplayModeSupport displayModeSupported;  					FDevice.DoesSupportVideoMode(FMode' FPixelFormat' flags' out displayModeSupported' out FDisplayMode);  					Width = FDisplayMode.GetWidth(); 					Height = FDisplayMode.GetHeight();    					// inspiration http://dviz.googlecode.com/svn/trunk/src/livemix/CameraThread.cpp    					FOutDevice.CreateVideoFrame(Width'  												Height'  												Width * 4'  												_BMDPixelFormat.bmdFormat8BitBGRA'  												_BMDFrameFlags.bmdFrameFlagDefault'  												out rgbFrame);  					FDevice.EnableVideoInput(FMode' FPixelFormat' FFlags); 					FDevice.SetCallback(this); 					FDevice.StartStreams();  					Reinitialise = true; 					Ready = true; 					FreshData = false; 				} 				catch (Exception e) 				{ 					Ready = false; 					Reinitialise = false; 					FreshData = false; 					throw; 				} 				finally 				{ 					this.Lock.ReleaseWriterLock(); 				}  			});
Magic Number,VVVV.Nodes.DeckLink,Capture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Capture.cs,Close,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() =>  			{ 				this.Lock.AcquireWriterLock(10000); 				try 				{ 					if (!Ready) 						return;  					Ready = false; 					FDevice.StopStreams(); 					FDevice.DisableVideoInput(); 				} 				finally 				{ 					this.Lock.ReleaseWriterLock(); 				}  			});
Magic Number,VVVV.Nodes.DeckLink,Capture,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Capture.cs,VideoInputFrameArrived,The following statement contains a magic number: this.Lock.AcquireWriterLock(5000);
Magic Number,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,Initialise,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() => {  					//--  					//attach to device  					//  					if (device == null)  						throw (new Exception("No device"));  					if (mode == null)  						throw (new Exception("No mode selected"));    					FDevice = device;    					var outputDevice = FDevice as IDeckLinkOutput;  					if (outputDevice == null)  						throw (new Exception("Device does not support output"));  					FOutputDevice = outputDevice;  					//  					//--      					//--  					//set memory allocator  					//  					FOutputDevice.SetVideoOutputFrameMemoryAllocator(FMemoryAllocator);  					//  					//--      					//--  					//select mode  					//  					_BMDDisplayModeSupport support;  					IDeckLinkDisplayMode displayMode;  					FOutputDevice.DoesSupportVideoMode(mode.DisplayModeHandle.GetDisplayMode()' mode.PixelFormat' mode.Flags' out support' out displayMode);  					if (support == _BMDDisplayModeSupport.bmdDisplayModeNotSupported)  						throw (new Exception("Mode not supported"));    					this.Mode = mode;  					this.FWidth = Mode.Width;  					this.FHeight = Mode.Height;    					Mode.DisplayModeHandle.GetFrameRate(out this.FFrameDuration' out this.FFrameTimescale);  					//  					//--      					//--  					//enable the output  					//  					FOutputDevice.EnableVideoOutput(Mode.DisplayModeHandle.GetDisplayMode()' Mode.Flags);  					//  					//--      					//--  					//generate frames  					IntPtr data;  					FOutputDevice.CreateVideoFrame(FWidth' FHeight' Mode.CompressedWidth * 4' Mode.PixelFormat' _BMDFrameFlags.bmdFrameFlagDefault' out FVideoFrame);  					FVideoFrame.GetBytes(out data);  					FillBlack(data);  					//  					//--    					//--  					//scheduled playback  					if (useDeviceCallbacks == true)  					{  						FOutputDevice.SetScheduledFrameCompletionCallback(this);  						this.FFrameIndex = 0;  						for (int i = 0; i < (int)this.Framerate; i++)  						{  							ScheduleFrame(true);  						}  						FOutputDevice.StartScheduledPlayback(0' 100' 1.0);  					}  					//  					//--    					FRunning = true;  				});
Magic Number,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,Initialise,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() => {  					//--  					//attach to device  					//  					if (device == null)  						throw (new Exception("No device"));  					if (mode == null)  						throw (new Exception("No mode selected"));    					FDevice = device;    					var outputDevice = FDevice as IDeckLinkOutput;  					if (outputDevice == null)  						throw (new Exception("Device does not support output"));  					FOutputDevice = outputDevice;  					//  					//--      					//--  					//set memory allocator  					//  					FOutputDevice.SetVideoOutputFrameMemoryAllocator(FMemoryAllocator);  					//  					//--      					//--  					//select mode  					//  					_BMDDisplayModeSupport support;  					IDeckLinkDisplayMode displayMode;  					FOutputDevice.DoesSupportVideoMode(mode.DisplayModeHandle.GetDisplayMode()' mode.PixelFormat' mode.Flags' out support' out displayMode);  					if (support == _BMDDisplayModeSupport.bmdDisplayModeNotSupported)  						throw (new Exception("Mode not supported"));    					this.Mode = mode;  					this.FWidth = Mode.Width;  					this.FHeight = Mode.Height;    					Mode.DisplayModeHandle.GetFrameRate(out this.FFrameDuration' out this.FFrameTimescale);  					//  					//--      					//--  					//enable the output  					//  					FOutputDevice.EnableVideoOutput(Mode.DisplayModeHandle.GetDisplayMode()' Mode.Flags);  					//  					//--      					//--  					//generate frames  					IntPtr data;  					FOutputDevice.CreateVideoFrame(FWidth' FHeight' Mode.CompressedWidth * 4' Mode.PixelFormat' _BMDFrameFlags.bmdFrameFlagDefault' out FVideoFrame);  					FVideoFrame.GetBytes(out data);  					FillBlack(data);  					//  					//--    					//--  					//scheduled playback  					if (useDeviceCallbacks == true)  					{  						FOutputDevice.SetScheduledFrameCompletionCallback(this);  						this.FFrameIndex = 0;  						for (int i = 0; i < (int)this.Framerate; i++)  						{  							ScheduleFrame(true);  						}  						FOutputDevice.StartScheduledPlayback(0' 100' 1.0);  					}  					//  					//--    					FRunning = true;  				});
Magic Number,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,Stop,The following statement contains a magic number: WorkerThread.Singleton.PerformBlocking(() =>  			{  				int scheduledPlayback;  				FOutputDevice.IsScheduledPlaybackRunning(out scheduledPlayback);  				if (scheduledPlayback != 0)  				{  					long unused;  					FOutputDevice.StopScheduledPlayback(0' out unused' 1000);  				}  				FOutputDevice.DisableVideoOutput();  			});
Magic Number,VVVV.Nodes.DeckLink,Source,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\Source.cs,FillBlack,The following statement contains a magic number: MemSet(data' 0' (IntPtr)(Mode.CompressedWidth * Mode.Height * 4));
Magic Number,VVVV.Nodes.DeckLink,Template,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Nodes\VideoInTexture.cs,UpdateTexture,The following statement contains a magic number: FCaptures[Slice].Lock.AcquireReaderLock(500);
Missing Default,VVVV.Nodes.DeckLink,Mode,D:\research\architectureSmells\repos\elliotwoods_VVVV.Packs.Image\src\nodes\plugins\Image\DeckLink\Lib\ModeRegister.cs,CalcPixelBoundaries,The following switch statement is missing a default case: switch (this.PixelFormat)  				{  					case _BMDPixelFormat.bmdFormat8BitYUV:  						PixelGroupSizeOfSet = 2;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitYUV:  						PixelGroupSizeOfSet = 6;  						PixelGroupSizeInMemory = 16;  						break;    					case _BMDPixelFormat.bmdFormat8BitBGRA:  					case _BMDPixelFormat.bmdFormat8BitRGBA:  					case _BMDPixelFormat.bmdFormat8BitARGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat10BitRGB:  						PixelGroupSizeOfSet = 1;  						PixelGroupSizeInMemory = 4;  						break;    					case _BMDPixelFormat.bmdFormat12BitYUV:  						PixelGroupSizeOfSet = 4;  						PixelGroupSizeInMemory = 6;  						throw (new Exception("12bit modes are undocumented"));  						break;  				}
