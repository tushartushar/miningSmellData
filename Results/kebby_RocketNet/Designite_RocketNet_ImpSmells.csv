Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,Update,Cyclomatic complexity of the method is 24
Complex Method,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,Cyclomatic complexity of the method is 13
Complex Conditional,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,Update,The conditional expression  "IsPlaying != null && IsPlaying () && row != this.row && sock != null"  is complex.
Magic Number,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,Update,The following statement contains a magic number: while (sock != null && sock.Poll (0' SelectMode.SelectRead)) {  	if (!Receive (1))  		return false;  	var cmd = (Command)buffer [0];  	switch (cmd) {  	case Command.SetKey:  		OnSetKey ();  		break;  	case Command.DeleteKey:  		OnDelKey ();  		break;  	case Command.SetRow:  		if (!Receive (4))  			return false;  		if (SetRow != null)  			SetRow (IPAddress.NetworkToHostOrder (BitConverter.ToInt32 (buffer' 0)));  		break;  	case Command.Pause:  		if (!Receive (1))  			return false;  		if (Pause != null)  			Pause (buffer [0] != 0);  		break;  	case Command.SaveTracks:  		SaveTracks ();  		break;  	default:  		Close ();  		throw new InvalidOperationException ("Unknown command " + buffer [0]);  	}  }  
Magic Number,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,Update,The following statement contains a magic number: switch (cmd) {  case Command.SetKey:  	OnSetKey ();  	break;  case Command.DeleteKey:  	OnDelKey ();  	break;  case Command.SetRow:  	if (!Receive (4))  		return false;  	if (SetRow != null)  		SetRow (IPAddress.NetworkToHostOrder (BitConverter.ToInt32 (buffer' 0)));  	break;  case Command.Pause:  	if (!Receive (1))  		return false;  	if (Pause != null)  		Pause (buffer [0] != 0);  	break;  case Command.SaveTracks:  	SaveTracks ();  	break;  default:  	Close ();  	throw new InvalidOperationException ("Unknown command " + buffer [0]);  }  
Magic Number,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,Update,The following statement contains a magic number: if (!Receive (4))  	return false;  
Magic Number,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,OnSetKey,The following statement contains a magic number: if (!Receive (13))  	return;  
Magic Number,RocketNet,Device,C:\repos\kebby_RocketNet\Device.cs,OnDelKey,The following statement contains a magic number: if (!Receive (8))  	return;  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: if (idx < 0)  	idx = -idx - 2;  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: idx = -idx - 2;  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: if (idx > keys.Count - 2) {  	sinceRows = row - keys [keys.Count - 1].row;  	return keys [keys.Count - 1].value;  }  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: switch (keys [idx].type) {  case Key.Type.Step:  	t = 0;  	break;  case Key.Type.Smooth:  	t = t * t * (3 - 2 * t);  	break;  case Key.Type.Ramp:  	t = (float)Math.Pow (t' 2.0);  	break;  }  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: switch (keys [idx].type) {  case Key.Type.Step:  	t = 0;  	break;  case Key.Type.Smooth:  	t = t * t * (3 - 2 * t);  	break;  case Key.Type.Ramp:  	t = (float)Math.Pow (t' 2.0);  	break;  }  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: switch (keys [idx].type) {  case Key.Type.Step:  	t = 0;  	break;  case Key.Type.Smooth:  	t = t * t * (3 - 2 * t);  	break;  case Key.Type.Ramp:  	t = (float)Math.Pow (t' 2.0);  	break;  }  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: t = t * t * (3 - 2 * t);  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: t = t * t * (3 - 2 * t);  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following statement contains a magic number: t = (float)Math.Pow (t' 2.0);  
Magic Number,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,FindKey,The following statement contains a magic number: while (lo < hi) {  	int mi = (lo + hi) / 2;  	if (keys [mi].row < row)  		lo = mi + 1;  	else if (keys [mi].row > row)  		hi = mi;  	else  		return mi;  	// exact hit   }  
Missing Default,RocketNet,Track,C:\repos\kebby_RocketNet\Track.cs,GetValue,The following switch statement is missing a default case: switch (keys [idx].type) {  case Key.Type.Step:  	t = 0;  	break;  case Key.Type.Smooth:  	t = t * t * (3 - 2 * t);  	break;  case Key.Type.Ramp:  	t = (float)Math.Pow (t' 2.0);  	break;  }  
