Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Skybrud.Umbraco.GridData.Extensions,TypedGridExtensionMethods,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Extensions\TypedGridExtensionMethods.Sections.cs,RenderGridSectionOrFallback,The length of the statement  "            return helper.ViewExists(partial) ? helper.RenderGridSection(section' partial) : helper.RenderGridSection(section' fallbackPartial); " is 132.
Long Statement,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,Parse,The length of the statement  "            // As of Umbraco 7.3' information about the editor is no longer saved in the JSON' since these should be read from the configuration " is 132.
Long Statement,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,Parse,The length of the statement  "            if (UmbracoVersion.Current.Major == 7 && UmbracoVersion.Current.Minor >= 3) Howdy.ReplaceEditorObjectFromConfig(control); " is 121.
Long Statement,Skybrud.Umbraco.GridData,GridPropertyValueConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridPropertyValueConverter.cs,ConvertSourceToObject,The length of the statement  "            return GridDataModel.Deserialize(str' propertyType.PropertyTypeAlias) ?? GridDataModel.GetEmptyModel(propertyType.PropertyTypeAlias); " is 133.
Magic Number,Skybrud.Umbraco.GridData,GridUtils,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridUtils.cs,GetDaysSinceStart,The following statement contains a magic number: string str = GetFileVersion().Split('.')[2];
Magic Number,Skybrud.Umbraco.GridData,GridUtils,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridUtils.cs,GetBuildDate,The following statement contains a magic number: return new DateTime(2014' 9' 18).AddDays(GetDaysSinceStart());
Magic Number,Skybrud.Umbraco.GridData,GridUtils,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridUtils.cs,GetBuildDate,The following statement contains a magic number: return new DateTime(2014' 9' 18).AddDays(GetDaysSinceStart());
Magic Number,Skybrud.Umbraco.GridData,GridUtils,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridUtils.cs,GetBuildDate,The following statement contains a magic number: return new DateTime(2014' 9' 18).AddDays(GetDaysSinceStart());
Magic Number,Skybrud.Umbraco.GridData,GridUtils,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridUtils.cs,GetBuildNumber,The following statement contains a magic number: string str = GetFileVersion().Split('.')[3];
Magic Number,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,GetHtml,The following statement contains a magic number: if (match1.Success) {                  html = GetHtml(helper' "TypedGrid/Editors/" + match1.Groups[1].Value);              } else if (match2.Success) {                  html = GetHtml(helper' "TypedGrid/Editors/" + match2.Groups[1].Value + "/" + match2.Groups[2].Value);              } else {                  html = GetHtml(helper' Editor.Alias);              }
Magic Number,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,GetHtmlOrFallback,The following statement contains a magic number: if (match1.Success) {                  partial = "TypedGrid/Editors/" + match1.Groups[1].Value;              } else if (match2.Success) {                  partial = "TypedGrid/Editors/" + match2.Groups[1].Value + "/" + match2.Groups[2].Value;              } else {                  partial = Editor.Alias;              }
Magic Number,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,Parse,The following statement contains a magic number: if (UmbracoVersion.Current.Major == 7 && UmbracoVersion.Current.Minor >= 3) Howdy.ReplaceEditorObjectFromConfig(control);
Magic Number,Skybrud.Umbraco.GridData,GridControl,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\GridControl.cs,Parse,The following statement contains a magic number: if (UmbracoVersion.Current.Major == 7 && UmbracoVersion.Current.Minor >= 3) Howdy.ReplaceEditorObjectFromConfig(control);
Missing Default,Skybrud.Umbraco.GridData.Converters.Fanoe,FanoeGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Fanoe\FanoeGridConverter.cs,ConvertControlValue,The following switch statement is missing a default case: switch (control.Editor.Alias) {                    case "media_wide":                  case "media_wide_cropped":                      value = GridControlMediaValue.Parse(control' token as JObject);                      break;                    case "banner_headline":                  case "banner_tagline":                  case "headline_centered":                  case "abstract":                  case "paragraph":                  case "quote_D":                  case "code":                      value = GridControlTextValue.Parse(control' token);                      break;                            }
Missing Default,Skybrud.Umbraco.GridData.Converters.Fanoe,FanoeGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Fanoe\FanoeGridConverter.cs,ConvertEditorConfig,The following switch statement is missing a default case: switch (editor.Alias) {                    case "media_wide":                  case "media_wide_cropped":                      config = GridEditorMediaConfig.Parse(editor' token as JObject);                      break;                    case "banner_headline":                  case "banner_tagline":                  case "headline_centered":                  case "abstract":                  case "paragraph":                  case "quote_D":                  case "code":                      config = GridEditorTextConfig.Parse(editor' token as JObject);                      break;                                    }
Missing Default,Skybrud.Umbraco.GridData.Converters.Fanoe,FanoeGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Fanoe\FanoeGridConverter.cs,GetControlWrapper,The following switch statement is missing a default case: switch (control.Editor.Alias) {                    case "media_wide":                  case "media_wide_cropped":                      wrapper = control.GetControlWrapper<GridControlMediaValue' GridEditorMediaConfig>();                      break;                    case "banner_headline":                  case "banner_tagline":                  case "headline_centered":                  case "abstract":                  case "paragraph":                  case "quote_D":                  case "code":                      wrapper = control.GetControlWrapper<GridControlTextValue' GridEditorTextConfig>();                      break;                            }
Missing Default,Skybrud.Umbraco.GridData.Converters.Umbraco,UmbracoGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Umbraco\UmbracoGridConverter.cs,ConvertControlValue,The following switch statement is missing a default case: switch (control.Editor.Alias) {                    case "media":                      value = GridControlMediaValue.Parse(control' token as JObject);                      break;                    case "embed":                      value = GridControlEmbedValue.Parse(control' token);                      break;                    case "rte":                      value = GridControlRichTextValue.Parse(control' token);                      break;                    case "macro":                      value = GridControlMacroValue.Parse(control' token as JObject);                      break;                    case "headline":                  case "quote":                      value = GridControlTextValue.Parse(control' token);                      break;                }
Missing Default,Skybrud.Umbraco.GridData.Converters.Umbraco,UmbracoGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Umbraco\UmbracoGridConverter.cs,ConvertEditorConfig,The following switch statement is missing a default case: switch (editor.Alias) {                    case "media":                      config = GridEditorMediaConfig.Parse(editor' token as JObject);                      break;                    case "headline":                  case "quote":                      config = GridEditorTextConfig.Parse(editor' token as JObject);                      break;                }
Missing Default,Skybrud.Umbraco.GridData.Converters.Umbraco,UmbracoGridConverter,C:\repos\skybrud_Skybrud.Umbraco.GridData\src\Skybrud.Umbraco.GridData\Converters\Umbraco\UmbracoGridConverter.cs,GetControlWrapper,The following switch statement is missing a default case: switch (control.Editor.Alias) {                    case "media":                      wrapper = control.GetControlWrapper<GridControlMediaValue' GridEditorMediaConfig>();                      break;                    case "embed":                      wrapper = control.GetControlWrapper<GridControlEmbedValue>();                      break;                    case "rte":                      wrapper = control.GetControlWrapper<GridControlRichTextValue>();                      break;                    case "macro":                      wrapper = control.GetControlWrapper<GridControlMacroValue>();                      break;                    case "quote":                  case "headline":                      wrapper = control.GetControlWrapper<GridControlTextValue' GridEditorTextConfig>();                      break;                }
