Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,Cyclomatic complexity of the method is 8
Empty Catch Block,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,The method has an empty catch block.
Empty Catch Block,ProcKiller,Program,C:\repos\AyrA_ProcessKiller\ProcKiller\Program.cs,kill,The method has an empty catch block.
Magic Number,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  //Minimize Form  case WM_SYSCOMMAND:  	int command = m.WParam.ToInt32 () & 0xfff0;  	if (command == SC_MINIMIZE) {  		MinimizeToTray ();  		return;  	}  	break;  case Hotkey.WM_HOTKEY_MSG_ID:  	switch ((int)m.WParam) {  	case 0:  	case 1:  		//Close+Terminate  		Program.kill (P' m.WParam.ToInt32 () == 1);  		break;  	case 2:  		//Terminate  		if (KillTwice) {  			try {  				P.Kill ();  			}  			catch {  				//Access rights?  			}  			KillTwice = false;  		}  		else {  			KillTwice = true;  		}  		break;  	}  	break;  }  
Magic Number,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,The following statement contains a magic number: switch ((int)m.WParam) {  case 0:  case 1:  	//Close+Terminate  	Program.kill (P' m.WParam.ToInt32 () == 1);  	break;  case 2:  	//Terminate  	if (KillTwice) {  		try {  			P.Kill ();  		}  		catch {  			//Access rights?  		}  		KillTwice = false;  	}  	else {  		KillTwice = true;  	}  	break;  }  
Missing Default,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg) {  //Minimize Form  case WM_SYSCOMMAND:  	int command = m.WParam.ToInt32 () & 0xfff0;  	if (command == SC_MINIMIZE) {  		MinimizeToTray ();  		return;  	}  	break;  case Hotkey.WM_HOTKEY_MSG_ID:  	switch ((int)m.WParam) {  	case 0:  	case 1:  		//Close+Terminate  		Program.kill (P' m.WParam.ToInt32 () == 1);  		break;  	case 2:  		//Terminate  		if (KillTwice) {  			try {  				P.Kill ();  			}  			catch {  				//Access rights?  			}  			KillTwice = false;  		}  		else {  			KillTwice = true;  		}  		break;  	}  	break;  }  
Missing Default,ProcKiller,frmMain,C:\repos\AyrA_ProcessKiller\ProcKiller\frmMain.cs,WndProc,The following switch statement is missing a default case: switch ((int)m.WParam) {  case 0:  case 1:  	//Close+Terminate  	Program.kill (P' m.WParam.ToInt32 () == 1);  	break;  case 2:  	//Terminate  	if (KillTwice) {  		try {  			P.Kill ();  		}  		catch {  			//Access rights?  		}  		KillTwice = false;  	}  	else {  		KillTwice = true;  	}  	break;  }  
