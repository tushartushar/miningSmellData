Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RegawMOD,Command,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Util\Command.cs,HandleOutput,The method has 5 parameters. Parameters: p' outputWaitHandle' errorWaitHandle' timeout' forceRegular
Long Statement,RegawMOD.Android,AAPT,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AAPT\AAPT.cs,DumpBadging,The length of the statement  "            return new Badging(source' Command.RunProcessReturnOutput(Path.Combine(this.resDir' "aapt.exe")' "dump badging \"" + source.FullName + "\""' true' Command.DEFAULT_TIMEOUT)); " is 173.
Long Statement,RegawMOD.Android,Badging,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AAPT\AAPT.Dump.cs,ProcessDump,The length of the statement  "                            string[] densities = line.Substring(DENSITIES.Length + 2).Split(new char[] { '\''' ' ' }' StringSplitOptions.RemoveEmptyEntries); " is 129.
Long Statement,RegawMOD.Android,Adb,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Adb.cs,ExecuteAdbCommand,The length of the statement  "                result = Command.RunProcessReturnOutput(AndroidController.Instance.ResourceDirectory + ADB_EXE' command.Command' forceRegular' command.Timeout); " is 144.
Long Statement,RegawMOD.Android,Adb,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Adb.cs,ExecuteAdbCommandReturnExitCode,The length of the statement  "                result = Command.RunProcessReturnExitCode(AndroidController.Instance.ResourceDirectory + ADB_EXE' command.Command' command.Timeout); " is 132.
Long Statement,RegawMOD.Android,Device,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Device.cs,PullDirectory,The length of the statement  "            AdbCommand adbCmd = Adb.FormAdbCommand(this' "pull"' "\"" + (location.EndsWith("/") ? location : location + "/") + "\""' "\"" + destination + "\""); " is 148.
Long Statement,RegawMOD.Android,Device,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Device.cs,InstallApk,The length of the statement  "            return !Adb.ExecuteAdbCommand(Adb.FormAdbCommand(this' "install"' "\"" + location + "\"").WithTimeout(timeout)' true).Contains("Failure"); " is 138.
Long Statement,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,WaitForDevice,The length of the statement  "             * will be more friendly to the CPU. Nonetheless checking 4 times for a connected device in each second is more than enough' " is 123.
Long Statement,RegawMOD.Android,Fastboot,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Fastboot.cs,ExecuteFastbootCommand,The length of the statement  "            return Command.RunProcessReturnOutput(AndroidController.Instance.ResourceDirectory + FASTBOOT_EXE' command.Command' command.Timeout); " is 133.
Long Statement,RegawMOD.Android,Fastboot,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\Fastboot.cs,ExecuteFastbootCommandNoReturn,The length of the statement  "            Command.RunProcessNoReturn(AndroidController.Instance.ResourceDirectory + FASTBOOT_EXE' command.Command' command.Timeout); " is 122.
Long Statement,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,RemountSystem,The length of the statement  "            AdbCommand adbCmd = Adb.FormAdbShellCommand(this.device' true' "mount"' string.Format("-o remount'{0} -t yaffs2 {1} /system"' type.ToString().ToLower()' this.systemMount.Block)); " is 178.
Long Statement,RegawMOD.Android,Signer,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Signer\Signer.cs,SignUpdateZip,The length of the statement  "            result = Java.RunJar(resDir + "signapk.jar"' "\"" + resDir + "testkey.x509.pem\""' "\"" + resDir + "testkey.pk8\""' "\"" + unsigned + "\""' "\"" + unsigned.Replace(".zip"' "_signed.zip\"")); " is 190.
Long Statement,RegawMOD,Extract,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Util\Extract.cs,Resources,The length of the statement  "                using (Stream s = assembly.GetManifestResourceStream(defaultNamespace + "." + (internalFolderPath == null ? "" : internalFolderPath + ".") + item)) " is 147.
Long Statement,RegawMOD,Extract,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Util\Extract.cs,Resources,The length of the statement  "                using (Stream s = assembly.GetManifestResourceStream(nameSpace + "." + (internalFolderPath == null ? "" : internalFolderPath + ".") + item)) " is 140.
Magic Number,RegawMOD.Android,Badging,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AAPT\AAPT.Dump.cs,ProcessDump,The following statement contains a magic number: using (StringReader r = new StringReader(dump))                  {                      string line;                        while (r.Peek() != -1)                      {                          line = r.ReadLine();                            if (line.StartsWith(PACKAGE))                          {                              //find name                              int nameStart = line.IndexOf(PACKAGE_NAME) + PACKAGE_NAME.Length;                              int nameLength = line.IndexOf(APOSTROPHE' nameStart) - nameStart;                              string name = line.Substring(nameStart' nameLength);                                //find versionCode                              int versionCodeStart = line.IndexOf(PACKAGE_VERSION_CODE) + PACKAGE_VERSION_CODE.Length;                              int versionCodeLength = line.IndexOf(APOSTROPHE' versionCodeStart) - versionCodeStart;                              string versionCode = line.Substring(versionCodeStart' versionCodeLength);                                //find versionName                              int versionNameStart = line.IndexOf(PACKAGE_VERSION_NAME) + PACKAGE_VERSION_NAME.Length;                              int versionNameLength = line.IndexOf(APOSTROPHE' versionNameStart) - versionNameStart;                              string versionName = line.Substring(versionNameStart' versionNameLength);                                this.package = new PackageInfo(name' versionCode' versionName);                          }                          else if (line.StartsWith(APPLICATION))                          {                              //find label                              int labelStart = line.IndexOf(APPLICATION_LABEL) + APPLICATION_LABEL.Length;                              int labelLength = line.IndexOf(APOSTROPHE' labelStart) - labelStart;                              string label = line.Substring(labelStart' labelLength);                                //find icon                              int iconStart = line.IndexOf(APPLICATION_ICON) + APPLICATION_ICON.Length;                              int iconLength = line.IndexOf(APOSTROPHE' iconStart) - iconStart;                              string icon = line.Substring(iconStart' iconLength);                                this.application = new ApplicationInfo(label' icon);                          }                          else if (line.StartsWith(ACTIVITY))                          {                              //find name                              int nameStart = line.IndexOf(ACTIVITY_NAME) + ACTIVITY_NAME.Length;                              int nameLength = line.IndexOf(APOSTROPHE' nameStart) - nameStart;                              string name = line.Substring(nameStart' nameLength);                                //find label                              int labelStart = line.IndexOf(ACTIVITY_LABEL) + ACTIVITY_LABEL.Length;                              int labelLength = line.IndexOf(APOSTROPHE' labelStart) - labelStart;                              string label = line.Substring(labelStart' labelLength);                                //find icon                              int iconStart = line.IndexOf(ACTIVITY_ICON) + ACTIVITY_ICON.Length;                              int iconLength = line.IndexOf(APOSTROPHE' iconStart) - iconStart;                              string icon = line.Substring(iconStart' iconLength);                                this.activity = new LaunchableActivity(name' label' icon);                          }                          else if (line.StartsWith(SDK_VERSION))                          {                              this.sdkVersion = line.Substring(SDK_VERSION.Length).Replace(APOSTROPHE' "");                          }                          else if (line.StartsWith(SDK_TARGET))                          {                              this.targetSdkVersion = line.Substring(SDK_TARGET.Length).Replace(APOSTROPHE' "");                          }                          else if (line.StartsWith(USES_PERMISSION))                          {                              this.usesPermission.Add(line.Substring(USES_PERMISSION.Length).Replace(APOSTROPHE' ""));                          }                          else if (line.StartsWith(DENSITIES))                          {                              string[] densities = line.Substring(DENSITIES.Length + 2).Split(new char[] { '\''' ' ' }' StringSplitOptions.RemoveEmptyEntries);                                for (int i = 0; i < densities.Length; i++)                                  this.densities.Add(int.Parse(densities[i]));                          }                      }                  }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,BatteryInfo,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BatteryInfo.cs,Update,The following statement contains a magic number: using (StringReader r = new StringReader(this.dump))              {                  string line = "";                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                        if (line == "")                          continue;                      else if (line.Contains("AC "))                          bool.TryParse(line.Substring(14)' out this.acPower);                      else if (line.Contains("USB"))                          bool.TryParse(line.Substring(15)' out this.usbPower);                      else if (line.Contains("Wireless"))                          bool.TryParse(line.Substring(20)' out this.wirelessPower);                      else if (line.Contains("status"))                          int.TryParse(line.Substring(10)' out this.status);                      else if (line.Contains("health"))                          int.TryParse(line.Substring(10)' out this.health);                      else if (line.Contains("present"))                          bool.TryParse(line.Substring(11)' out this.present);                      else if (line.Contains("level"))                          int.TryParse(line.Substring(9)' out this.level);                      else if (line.Contains("scale"))                          int.TryParse(line.Substring(9)' out this.scale);                      else if (line.Contains("voltage"))                          int.TryParse(line.Substring(10)' out this.voltage);                      else if (line.Contains("temp"))                          int.TryParse(line.Substring(15)' out this.temperature);                      else if (line.Contains("tech"))                          this.technology = line.Substring(14);                  }              }
Magic Number,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,CreateResourceDirectories,The following statement contains a magic number: try              {                  if (!Adb.ExecuteAdbCommand(new AdbCommand("version")).Contains(Adb.ADB_VERSION))                  {                      Adb.KillServer();                      Thread.Sleep(1000);                      ResourceFolderManager.Unregister(ANDROID_CONTROLLER_TMP_FOLDER);                      Extract_Resources = true;                  }              }              catch (Exception)              {                  Extract_Resources = true;              }
Magic Number,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,Dispose,The following statement contains a magic number: if (Adb.ServerRunning)              {                  Adb.KillServer();                  Thread.Sleep(1000);              }
Magic Number,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,UpdateDeviceList,The following statement contains a magic number: if (deviceList.Length > 29)              {                  using (StringReader s = new StringReader(deviceList))                  {                      string line;                        while (s.Peek() != -1)                      {                          line = s.ReadLine();                            if (line.StartsWith("List") || line.StartsWith("\r\n") || line.Trim() == "")                              continue;                            if (line.IndexOf('\t') != -1)                          {                              line = line.Substring(0' line.IndexOf('\t'));                              this.connectedDevices.Add(line);                          }                      }                  }              }
Magic Number,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,WaitForDevice,The following statement contains a magic number: while (!this.HasConnectedDevices && !this.CancelWait)              {                  Thread.Sleep(250);              }
Magic Number,RegawMOD.Android,BuildProp,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\BuildProp.cs,Update,The following statement contains a magic number: try              {                  this.prop.Clear();                    if (this.device.State != DeviceState.ONLINE)                      return;                    AdbCommand adbCmd = Adb.FormAdbShellCommand(this.device' false' "getprop");                  string prop = Adb.ExecuteAdbCommand(adbCmd);                    string[] lines = prop.Split(new string[] { "\r\n\r\n" }' StringSplitOptions.RemoveEmptyEntries);                    for (int i = 0; i < lines.Length; i++)                  {                      string[] entry = lines[i].Split(new string[] { "["' "]: ["' "]" }' StringSplitOptions.RemoveEmptyEntries);                        if (entry.Length == 2)                          this.prop.Add(entry[0]' entry[1]);                  }              }              catch (Exception ex)              {                  Logger.WriteLog(ex.Message' "Using: getprop in BuildProp.cs"' ex.StackTrace);              }
Magic Number,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,UpdateMountPoints,The following statement contains a magic number: using (StringReader r = new StringReader(Adb.ExecuteAdbCommand(adbCmd)))              {                  string line;                  string[] splitLine;                  string dir' mount;                  MountType type;                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                      splitLine = line.Split(' ');                        try                      {                          if (line.Contains(" on /system "))                          {                              dir = splitLine[2];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[5].Substring(1' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                            if (line.Contains(" /system "))                          {                              dir = splitLine[1];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[3].Substring(0' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                      }                      catch                      {                          dir = "/system";                          mount = "ERROR";                          type = MountType.NONE;                          this.systemMount = new MountInfo(dir' mount' type);                      }                  }              }
Magic Number,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,UpdateMountPoints,The following statement contains a magic number: using (StringReader r = new StringReader(Adb.ExecuteAdbCommand(adbCmd)))              {                  string line;                  string[] splitLine;                  string dir' mount;                  MountType type;                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                      splitLine = line.Split(' ');                        try                      {                          if (line.Contains(" on /system "))                          {                              dir = splitLine[2];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[5].Substring(1' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                            if (line.Contains(" /system "))                          {                              dir = splitLine[1];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[3].Substring(0' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                      }                      catch                      {                          dir = "/system";                          mount = "ERROR";                          type = MountType.NONE;                          this.systemMount = new MountInfo(dir' mount' type);                      }                  }              }
Magic Number,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,UpdateMountPoints,The following statement contains a magic number: using (StringReader r = new StringReader(Adb.ExecuteAdbCommand(adbCmd)))              {                  string line;                  string[] splitLine;                  string dir' mount;                  MountType type;                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                      splitLine = line.Split(' ');                        try                      {                          if (line.Contains(" on /system "))                          {                              dir = splitLine[2];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[5].Substring(1' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                            if (line.Contains(" /system "))                          {                              dir = splitLine[1];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[3].Substring(0' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                      }                      catch                      {                          dir = "/system";                          mount = "ERROR";                          type = MountType.NONE;                          this.systemMount = new MountInfo(dir' mount' type);                      }                  }              }
Magic Number,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,UpdateMountPoints,The following statement contains a magic number: using (StringReader r = new StringReader(Adb.ExecuteAdbCommand(adbCmd)))              {                  string line;                  string[] splitLine;                  string dir' mount;                  MountType type;                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                      splitLine = line.Split(' ');                        try                      {                          if (line.Contains(" on /system "))                          {                              dir = splitLine[2];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[5].Substring(1' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                            if (line.Contains(" /system "))                          {                              dir = splitLine[1];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[3].Substring(0' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                      }                      catch                      {                          dir = "/system";                          mount = "ERROR";                          type = MountType.NONE;                          this.systemMount = new MountInfo(dir' mount' type);                      }                  }              }
Magic Number,RegawMOD.Android,FileSystem,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\FileSystem.cs,UpdateMountPoints,The following statement contains a magic number: using (StringReader r = new StringReader(Adb.ExecuteAdbCommand(adbCmd)))              {                  string line;                  string[] splitLine;                  string dir' mount;                  MountType type;                    while (r.Peek() != -1)                  {                      line = r.ReadLine();                      splitLine = line.Split(' ');                        try                      {                          if (line.Contains(" on /system "))                          {                              dir = splitLine[2];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[5].Substring(1' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                            if (line.Contains(" /system "))                          {                              dir = splitLine[1];                              mount = splitLine[0];                              type = (MountType)Enum.Parse(typeof(MountType)' splitLine[3].Substring(0' 2).ToUpper());                              this.systemMount = new MountInfo(dir' mount' type);                              return;                          }                      }                      catch                      {                          dir = "/system";                          mount = "ERROR";                          type = MountType.NONE;                          this.systemMount = new MountInfo(dir' mount' type);                      }                  }              }
Duplicate Code,RegawMOD.Android,AndroidController,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\AndroidController\AndroidController.cs,UpdateDeviceList,The method contains a code clone-set at the following line numbers (starting from the method definition): ((8' 27)' (31' 50))
Missing Default,RegawMOD,Hasher,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Util\Hasher.cs,HashFile,The following switch statement is missing a default case: switch (algo)              {                  case HashType.MD5:                      hashBytes = MD5.Create().ComputeHash(new FileStream(IN_FILE' FileMode.Open));                      break;                  case HashType.SHA1:                      hashBytes = SHA1.Create().ComputeHash(new FileStream(IN_FILE' FileMode.Open));                      break;                  case HashType.SHA256:                      hashBytes = SHA256.Create().ComputeHash(new FileStream(IN_FILE' FileMode.Open));                      break;                  case HashType.SHA384:                      hashBytes = SHA384.Create().ComputeHash(new FileStream(IN_FILE' FileMode.Open));                      break;                  case HashType.SHA512:                      hashBytes = SHA512.Create().ComputeHash(new FileStream(IN_FILE' FileMode.Open));                      break;              }
Missing Default,RegawMOD,Hasher,C:\repos\regaw-leinad_AndroidLib\AndroidLib\Classes\Util\Hasher.cs,HashString,The following switch statement is missing a default case: switch (algo)              {                  case HashType.MD5:                      hashBytes = MD5.Create().ComputeHash(inStringBytes);                      break;                  case HashType.SHA1:                      hashBytes = SHA1.Create().ComputeHash(inStringBytes);                      break;                  case HashType.SHA256:                      hashBytes = SHA256.Create().ComputeHash(inStringBytes);                      break;                  case HashType.SHA384:                      hashBytes = SHA384.Create().ComputeHash(inStringBytes);                       break;                  case HashType.SHA512:                      hashBytes = SHA512.Create().ComputeHash(inStringBytes);                      break;              }
