Implementation smell,Namespace,Class,File,Method,Description
Long Method,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The method has 160 lines of code.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnassignImageFromProduct,The length of the statement  "            var response2 = _productImageFixture.Client.UnassignImageFromProduct(_productImageFixture.productId' response.Result).Result; " is 125.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var imagesForStore = _productImageFixture.Client.GetImagesForProductForStore(_productImageFixture.productId' _productImageFixture.storeId1).Result; " is 147.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var imageInfo = _productImageFixture.Client.GetImageInfoForProduct(_productImageFixture.productId' imageId).Result.Result; " is 122.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var response2 = _productImageFixture.Client.UpdateImageInfoForProduct(_productImageFixture.productId' imageId' imageInfo).Result; " is 129.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var response3 = _productImageFixture.Client.UnAssignImageFromProductForStore(_productImageFixture.productId' _productImageFixture.storeId1' imageId).Result; " is 156.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var updatedImagesForStore1 = _productImageFixture.Client.GetImagesForProductForStore(_productImageFixture.productId' _productImageFixture.storeId1).Result; " is 155.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var imageInfo2 = _productImageFixture.Client.GetImageInfoForProduct(_productImageFixture.productId' imageId).Result.Result; " is 123.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The length of the statement  "            var imageInfo3 = _productImageFixture.Client.GetImageInfoForProductForStore(_productImageFixture.productId' _productImageFixture.storeId1' imageId).Result.Result; " is 162.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProduct,The length of the statement  "            var response2 = _productImageFixture.Client.UpdateImageInfoForProduct(product.entity_id' imageInfo.id' imageInfo).Result; " is 121.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The length of the statement  "            var response2 = _productImageFixture.Client.UpdateImageInfoForProduct(_productImageFixture.productId' imageId' imageInfo).Result; " is 129.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The length of the statement  "            var response3 = _productImageFixture.Client.UpdateImageInfoForProductForStore(_productImageFixture.productId' 2' imageId' imageInfo).Result; " is 140.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The length of the statement  "            var response4 = _productImageFixture.Client.UpdateImageInfoForProductForStore(_productImageFixture.productId' 3' imageId' imageInfo).Result; " is 140.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The length of the statement  "            var response5 = _productImageFixture.Client.GetImageInfoForProductForStore(_productImageFixture.productId' 2' imageId).Result; " is 126.
Long Statement,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The length of the statement  "            var response6 = _productImageFixture.Client.GetImageInfoForProductForStore(_productImageFixture.productId' 3' imageId).Result; " is 126.
Long Statement,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenUpdatingFullStockItemShouldBeCorrect,The length of the statement  "            var backorders = stockItem.backorders != BackOrderStatus.NoBackorders ? BackOrderStatus.NoBackorders : BackOrderStatus.AllowQtyBelow0; " is 134.
Long Statement,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenUpdatingFullStockItemShouldBeCorrect,The length of the statement  "            //var stock_status_changed_auto = stockItem.stock_status_changed_auto.HasValue ? !stockItem.stock_status_changed_auto : true; " is 125.
Long Statement,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The length of the statement  "                                                             // This simulates a token rejected 1 request could get. If this happens the client should authenticate again and retry the request  " is 130.
Magic Number,Magento.RestApi.IntegrationTests,CustomerTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\CustomerTests.cs,WhenAddingANewCustomerShouldBeSaved,The following statement contains a magic number: var customer = new Customer                                     {                                         disable_auto_group_change = true'                                         email = "mary@gmail.com"'                                         firstname = "Mary"'                                         lastname = "Ann"'                                         group_id = 3'                                         middlename = "L."'                                         password = "321654b"'                                         prefix = "Ms."'                                         suffix = "Sr."'                                         taxvat = "654987321"'                                         website_id = 2                                     };
Magic Number,Magento.RestApi.IntegrationTests,CustomerTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\CustomerTests.cs,WhenAddingANewCustomerShouldBeSaved,The following statement contains a magic number: var customer = new Customer                                     {                                         disable_auto_group_change = true'                                         email = "mary@gmail.com"'                                         firstname = "Mary"'                                         lastname = "Ann"'                                         group_id = 3'                                         middlename = "L."'                                         password = "321654b"'                                         prefix = "Ms."'                                         suffix = "Sr."'                                         taxvat = "654987321"'                                         website_id = 2                                     };
Magic Number,Magento.RestApi.IntegrationTests,CustomerTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\CustomerTests.cs,WhenUpdatingCustomerShouldBeSaved,The following statement contains a magic number: var customer = new Customer                  {                      disable_auto_group_change = true'                      email = "mary@gmail.com"'                      firstname = "Mary"'                      lastname = "Ann"'                      group_id = 3'                      middlename = "L."'                      password = "321654b"'                      prefix = "Ms."'                      suffix = "Sr."'                      taxvat = "654987321"'                      website_id = 2                  };
Magic Number,Magento.RestApi.IntegrationTests,CustomerTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\CustomerTests.cs,WhenUpdatingCustomerShouldBeSaved,The following statement contains a magic number: var customer = new Customer                  {                      disable_auto_group_change = true'                      email = "mary@gmail.com"'                      firstname = "Mary"'                      lastname = "Ann"'                      group_id = 3'                      middlename = "L."'                      password = "321654b"'                      prefix = "Ms."'                      suffix = "Sr."'                      taxvat = "654987321"'                      website_id = 2                  };
Magic Number,Magento.RestApi.IntegrationTests,CustomerTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\CustomerTests.cs,WhenUpdatingCustomerShouldBeSaved,The following statement contains a magic number: newCustomer.group_id = 2;
Magic Number,Magento.RestApi.IntegrationTests,OrderTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\OrderTests.cs,WhenGettingOrderWithValidIdShouldReturnOrder,The following statement contains a magic number: var response = Client.GetOrderById(100).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductCategoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductCategoryTests.cs,ShouldGetCategoriesForProduct,The following statement contains a magic number: Assert.Equal(2' response.Result.Count);
Magic Number,Magento.RestApi.IntegrationTests,ProductCategoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductCategoryTests.cs,UnassignAndAssignCategoryToProduct,The following statement contains a magic number: Assert.Equal(2' response4.Result.Count);
Magic Number,Magento.RestApi.IntegrationTests,ProductCategoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductCategoryTests.cs,AssigningUnknownCategoryShouldBeHandled,The following statement contains a magic number: var response = Client.AssignCategoryToProduct(productId' 666).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductCategoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductCategoryTests.cs,AssigningCategoryToUnknownProductShouldBeHandled,The following statement contains a magic number: var response = Client.AssignCategoryToProduct(999999' 1).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,UnAssignImageFromProductForStore,The following statement contains a magic number: Assert.Equal(3' imageInfo2.types.Count);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: imageInfo.position = 10;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: imageInfo.position = 11;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: var response3 = _productImageFixture.Client.UpdateImageInfoForProductForStore(_productImageFixture.productId' 2' imageId' imageInfo).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: imageInfo.position = 12;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: var response4 = _productImageFixture.Client.UpdateImageInfoForProductForStore(_productImageFixture.productId' 3' imageId' imageInfo).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: var response5 = _productImageFixture.Client.GetImageInfoForProductForStore(_productImageFixture.productId' 2' imageId).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: var response6 = _productImageFixture.Client.GetImageInfoForProductForStore(_productImageFixture.productId' 3' imageId).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: Assert.Equal(3' response7.Result.types.Count);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: Assert.Equal(3' response6.Result.types.Count);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: Assert.Equal(10' response7.Result.position);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: Assert.Equal(11' response5.Result.position);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,GetAndUpdateImageInfoForProductForStore,The following statement contains a magic number: Assert.Equal(12' response6.Result.position);
Magic Number,Magento.RestApi.IntegrationTests,ProductImageFixture,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,ProductImageFixture,The following statement contains a magic number: var product = new Product              {                  description = "Guitar picks are small' and we have to admit' sometimes we lose 'em. And sometimes' you just discover you need one at the strangest times (impromptu flashmob jam sessions' raucous children's parties' boring company meetings' etc.). Well' the good news is: if you have a DIY Guitar Pick Punch and some imagination' you'll never be without a guitar pick again. Just insert the material you want a pick out of into the DIY Guitar Pick Punch' and . . . well . . . squeeze. Instant guitar pick! Make them out of expired credit cards' those grocery store club cards' plastic packaging material' and more! Hey' want to get super DIY-y? Then punch a few thin picks and glue them together into the ultimate pick of density. Keep a DIY Guitar Pick Punch in your gigbag' and you'll never be without a pick again. Now' if only someone can invent a guitar punch for punching out fully functional guitars!"'                  short_description = "Punch your own picks!"'                  price = 24.99'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "DIY Guitar Pick Punch"'                  weight = 10'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4 // default              };
Magic Number,Magento.RestApi.IntegrationTests,ProductImageFixture,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,ProductImageFixture,The following statement contains a magic number: var product = new Product              {                  description = "Guitar picks are small' and we have to admit' sometimes we lose 'em. And sometimes' you just discover you need one at the strangest times (impromptu flashmob jam sessions' raucous children's parties' boring company meetings' etc.). Well' the good news is: if you have a DIY Guitar Pick Punch and some imagination' you'll never be without a guitar pick again. Just insert the material you want a pick out of into the DIY Guitar Pick Punch' and . . . well . . . squeeze. Instant guitar pick! Make them out of expired credit cards' those grocery store club cards' plastic packaging material' and more! Hey' want to get super DIY-y? Then punch a few thin picks and glue them together into the ultimate pick of density. Keep a DIY Guitar Pick Punch in your gigbag' and you'll never be without a pick again. Now' if only someone can invent a guitar punch for punching out fully functional guitars!"'                  short_description = "Punch your own picks!"'                  price = 24.99'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "DIY Guitar Pick Punch"'                  weight = 10'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4 // default              };
Magic Number,Magento.RestApi.IntegrationTests,ProductImageFixture,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,ProductImageFixture,The following statement contains a magic number: var product = new Product              {                  description = "Guitar picks are small' and we have to admit' sometimes we lose 'em. And sometimes' you just discover you need one at the strangest times (impromptu flashmob jam sessions' raucous children's parties' boring company meetings' etc.). Well' the good news is: if you have a DIY Guitar Pick Punch and some imagination' you'll never be without a guitar pick again. Just insert the material you want a pick out of into the DIY Guitar Pick Punch' and . . . well . . . squeeze. Instant guitar pick! Make them out of expired credit cards' those grocery store club cards' plastic packaging material' and more! Hey' want to get super DIY-y? Then punch a few thin picks and glue them together into the ultimate pick of density. Keep a DIY Guitar Pick Punch in your gigbag' and you'll never be without a pick again. Now' if only someone can invent a guitar punch for punching out fully functional guitars!"'                  short_description = "Punch your own picks!"'                  price = 24.99'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "DIY Guitar Pick Punch"'                  weight = 10'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4 // default              };
Magic Number,Magento.RestApi.IntegrationTests,ProductImageFixture,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductImageTests.cs,ProductImageFixture,The following statement contains a magic number: var product = new Product              {                  description = "Guitar picks are small' and we have to admit' sometimes we lose 'em. And sometimes' you just discover you need one at the strangest times (impromptu flashmob jam sessions' raucous children's parties' boring company meetings' etc.). Well' the good news is: if you have a DIY Guitar Pick Punch and some imagination' you'll never be without a guitar pick again. Just insert the material you want a pick out of into the DIY Guitar Pick Punch' and . . . well . . . squeeze. Instant guitar pick! Make them out of expired credit cards' those grocery store club cards' plastic packaging material' and more! Hey' want to get super DIY-y? Then punch a few thin picks and glue them together into the ultimate pick of density. Keep a DIY Guitar Pick Punch in your gigbag' and you'll never be without a pick again. Now' if only someone can invent a guitar punch for punching out fully functional guitars!"'                  short_description = "Punch your own picks!"'                  price = 24.99'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "DIY Guitar Pick Punch"'                  weight = 10'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4 // default              };
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenUpdatingStockQuantityByIdShouldBeCorrect,The following statement contains a magic number: var quantity = Math.Ceiling(new Random().NextDouble() * 100);
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenUpdatingStockItemByIdShouldBeCorrect,The following statement contains a magic number: var quantity = Math.Ceiling(new Random().NextDouble() * 100);
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenUpdatingStockItemByIdShouldBeCorrect,The following statement contains a magic number: var isInStock = (quantity%2) == 1;
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenManagingStockShouldUpdate,The following statement contains a magic number: var stockItem = new StockItem              {                  qty = 10'                  min_qty = 15'                  is_in_stock = false'                  manage_stock = true              };
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenManagingStockShouldUpdate,The following statement contains a magic number: var stockItem = new StockItem              {                  qty = 10'                  min_qty = 15'                  is_in_stock = false'                  manage_stock = true              };
Magic Number,Magento.RestApi.IntegrationTests,ProductInventoryTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductInventoryTests.cs,WhenManagingStockShouldUpdate,The following statement contains a magic number: var updatedStockItem = new StockItem                                         {                                             qty = 10'                                             is_in_stock = true                                         };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenAddingANewProductShouldBeSaved,The following statement contains a magic number: var product = new Product                                {                                    description = "A long description of the new product"'                                    short_description = "A short description of the new product"'                                    price = 12.5'                                    sku = sku'                                    visibility = ProductVisibility.CatalogSearch'                                    status = ProductStatus.Enabled'                                    name = "New product"'                                    weight = 10'                                    tax_class_id = 2'                                    type_id = "simple"'                                    attribute_set_id = 4 // default                                };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenAddingANewProductShouldBeSaved,The following statement contains a magic number: var product = new Product                                {                                    description = "A long description of the new product"'                                    short_description = "A short description of the new product"'                                    price = 12.5'                                    sku = sku'                                    visibility = ProductVisibility.CatalogSearch'                                    status = ProductStatus.Enabled'                                    name = "New product"'                                    weight = 10'                                    tax_class_id = 2'                                    type_id = "simple"'                                    attribute_set_id = 4 // default                                };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenAddingANewProductShouldBeSaved,The following statement contains a magic number: var product = new Product                                {                                    description = "A long description of the new product"'                                    short_description = "A short description of the new product"'                                    price = 12.5'                                    sku = sku'                                    visibility = ProductVisibility.CatalogSearch'                                    status = ProductStatus.Enabled'                                    name = "New product"'                                    weight = 10'                                    tax_class_id = 2'                                    type_id = "simple"'                                    attribute_set_id = 4 // default                                };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenAddingANewProductShouldBeSaved,The following statement contains a magic number: var product = new Product                                {                                    description = "A long description of the new product"'                                    short_description = "A short description of the new product"'                                    price = 12.5'                                    sku = sku'                                    visibility = ProductVisibility.CatalogSearch'                                    status = ProductStatus.Enabled'                                    name = "New product"'                                    weight = 10'                                    tax_class_id = 2'                                    type_id = "simple"'                                    attribute_set_id = 4 // default                                };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenAddingANewProductShouldBeSaved,The following statement contains a magic number: Assert.Equal(12.5' newProduct.Result.price);
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenGettingProductsByCategoryShouldReturnProducts,The following statement contains a magic number: var response = Client.GetProductsByCategoryId(3).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: var product = new Product              {                  description = "A long description of the new product"'                  short_description = "A short description of the new product"'                  price = 12.5'                  sku = sku'                  visibility = ProductVisibility.CatalogSearch'                  status = ProductStatus.Enabled'                  name = "New product"'                  weight = 10.5'                  tax_class_id = 2'                  type_id = "simple"'                  attribute_set_id = 4' // default                  country_of_manufacture = "BE"'                  custom_design = "default/default"'                  custom_design_from = DateTime.Now.TrimMilliseconds()'                  custom_design_to = DateTime.Now.AddMonths(1).TrimMilliseconds()'                  custom_layout_update = "<test></test>"'                  enable_googlecheckout = true'                  gift_message_available = true'                  meta_description = "A meta description of the new product"'                  meta_keyword = "meta keyword"'                  meta_title = "meta title"'                  msrp = 121.50'                  msrp_display_actual_price_type = PriceTypeDisplay.BeforeOrderConfirmation'                  msrp_enabled = ManufacturerPriceEnablement.Yes'                  news_from_date = DateTime.Now.TrimMilliseconds()'                  news_to_date = DateTime.Now.AddDays(7).TrimMilliseconds()'                  options_container = "container2"'                  page_layout = "two_columns_left"'                  special_from_date = DateTime.Now.TrimMilliseconds()'                  special_to_date = DateTime.Now.AddDays(14).TrimMilliseconds()'                  special_price = 110.99'                  url_key = "a-new-product"              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.group_price = new List<GroupPrice>                                        {                                            new GroupPrice                                                {                                                    cust_group = 3'                                                    price = 125.63'                                                    website_id = 2                                                }                                        };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.group_price = new List<GroupPrice>                                        {                                            new GroupPrice                                                {                                                    cust_group = 3'                                                    price = 125.63'                                                    website_id = 2                                                }                                        };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.group_price = new List<GroupPrice>                                        {                                            new GroupPrice                                                {                                                    cust_group = 3'                                                    price = 125.63'                                                    website_id = 2                                                }                                        };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.stock_data = new StockData              {                  backorders = BackOrderStatus.AllowQtyBelow0'                  enable_qty_increments = false'                  is_decimal_divided = false'                  is_in_stock = true'                  is_qty_decimal = false'                  manage_stock = true'                  max_sale_qty = 10'                  min_qty = 2'                  min_sale_qty = 1'                  notify_stock_qty = 5'                  qty = 20'                  qty_increments = 1'                  use_config_backorders = false'                  use_config_enable_qty_inc = false'                  use_config_manage_stock = false'                  use_config_max_sale_qty = false'                  use_config_min_qty = false'                  use_config_min_sale_qty = false'                  use_config_notify_stock_qty = false'                  use_config_qty_increments = false              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.stock_data = new StockData              {                  backorders = BackOrderStatus.AllowQtyBelow0'                  enable_qty_increments = false'                  is_decimal_divided = false'                  is_in_stock = true'                  is_qty_decimal = false'                  manage_stock = true'                  max_sale_qty = 10'                  min_qty = 2'                  min_sale_qty = 1'                  notify_stock_qty = 5'                  qty = 20'                  qty_increments = 1'                  use_config_backorders = false'                  use_config_enable_qty_inc = false'                  use_config_manage_stock = false'                  use_config_max_sale_qty = false'                  use_config_min_qty = false'                  use_config_min_sale_qty = false'                  use_config_notify_stock_qty = false'                  use_config_qty_increments = false              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.stock_data = new StockData              {                  backorders = BackOrderStatus.AllowQtyBelow0'                  enable_qty_increments = false'                  is_decimal_divided = false'                  is_in_stock = true'                  is_qty_decimal = false'                  manage_stock = true'                  max_sale_qty = 10'                  min_qty = 2'                  min_sale_qty = 1'                  notify_stock_qty = 5'                  qty = 20'                  qty_increments = 1'                  use_config_backorders = false'                  use_config_enable_qty_inc = false'                  use_config_manage_stock = false'                  use_config_max_sale_qty = false'                  use_config_min_qty = false'                  use_config_min_sale_qty = false'                  use_config_notify_stock_qty = false'                  use_config_qty_increments = false              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.stock_data = new StockData              {                  backorders = BackOrderStatus.AllowQtyBelow0'                  enable_qty_increments = false'                  is_decimal_divided = false'                  is_in_stock = true'                  is_qty_decimal = false'                  manage_stock = true'                  max_sale_qty = 10'                  min_qty = 2'                  min_sale_qty = 1'                  notify_stock_qty = 5'                  qty = 20'                  qty_increments = 1'                  use_config_backorders = false'                  use_config_enable_qty_inc = false'                  use_config_manage_stock = false'                  use_config_max_sale_qty = false'                  use_config_min_qty = false'                  use_config_min_sale_qty = false'                  use_config_notify_stock_qty = false'                  use_config_qty_increments = false              };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.tier_price = new List<TierPrice>                                       {                                           new TierPrice                                               {                                                   cust_group = 3'                                                   price = 109.99'                                                   price_qty = 5'                                                   website_id = 2                                               }                                                                                    };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.tier_price = new List<TierPrice>                                       {                                           new TierPrice                                               {                                                   cust_group = 3'                                                   price = 109.99'                                                   price_qty = 5'                                                   website_id = 2                                               }                                                                                    };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.tier_price = new List<TierPrice>                                       {                                           new TierPrice                                               {                                                   cust_group = 3'                                                   price = 109.99'                                                   price_qty = 5'                                                   website_id = 2                                               }                                                                                    };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,CanCreateAndUpdateFullProduct,The following statement contains a magic number: product.tier_price = new List<TierPrice>                                       {                                           new TierPrice                                               {                                                   cust_group = 3'                                                   price = 109.99'                                                   price_qty = 5'                                                   website_id = 2                                               }                                                                                    };
Magic Number,Magento.RestApi.IntegrationTests,ProductTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductTests.cs,WhenGettingProductsWithLikeFilterShouldReturnProducts,The following statement contains a magic number: filter.PageSize = 5;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenAssigningWebsiteToProductShouldBeAssigned,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenAssigningWebsiteToProductShouldBeAssigned,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenAssigningInvalidWebsiteToProductShouldReturnError,The following statement contains a magic number: var response = Client.AssignWebsiteToProduct(product.Result.entity_id' 999).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenUnAssigningInvalidWebsiteFromProductShouldReturnError,The following statement contains a magic number: var response = Client.UnassignWebsiteFromProduct(product.Result.entity_id' 999).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenAssigningWebsiteToInvalidProductShouldReturnError,The following statement contains a magic number: var response = Client.AssignWebsiteToProduct(999999' 1).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenUnAssigningWebsiteFromInvalidProductShouldReturnError,The following statement contains a magic number: var response = Client.UnassignWebsiteFromProduct(999999' 1).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenUnAssigningWebsiteFromProductThatIsAlreadyUnAssignedShouldBeOk,The following statement contains a magic number: var response = Client.UnassignWebsiteFromProduct(product.Result.entity_id' 3).Result;
Magic Number,Magento.RestApi.IntegrationTests,ProductWebsiteTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ProductWebsiteTests.cs,WhenGettingWebsitesFromProductShouldReturnIds,The following statement contains a magic number: Assert.Equal(2' websites.Count);
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: var tasks = new Task[10];
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew(() =>                                                       {                                                           for (int j = 0; j < 5; j++)                                                           {                                                               // get the product                                                               var response = Client.GetProductBySku("100000").Result;                                                               response.Result.price = (i1*10) + j;                                                               // This simulates a token rejected 1 request could get. If this happens the client should authenticate again and retry the request                                                                // while locking the client for the other threads so that only 1 authentication process is ongoing                                                               if (response.Result.price == 51) Client.AuthenticateAdmin(UserName' Password);                                                               // update the product                                                               var response2 = Client.UpdateProduct(response.Result).Result;                                                               if (response2.HasErrors) throw new Exception(response2.Errors.First().Message);                                                               count++;                                                           }                                                       }' _cancellationSource.Token);
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew(() =>                                                       {                                                           for (int j = 0; j < 5; j++)                                                           {                                                               // get the product                                                               var response = Client.GetProductBySku("100000").Result;                                                               response.Result.price = (i1*10) + j;                                                               // This simulates a token rejected 1 request could get. If this happens the client should authenticate again and retry the request                                                                // while locking the client for the other threads so that only 1 authentication process is ongoing                                                               if (response.Result.price == 51) Client.AuthenticateAdmin(UserName' Password);                                                               // update the product                                                               var response2 = Client.UpdateProduct(response.Result).Result;                                                               if (response2.HasErrors) throw new Exception(response2.Errors.First().Message);                                                               count++;                                                           }                                                       }' _cancellationSource.Token);
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew(() =>                                                       {                                                           for (int j = 0; j < 5; j++)                                                           {                                                               // get the product                                                               var response = Client.GetProductBySku("100000").Result;                                                               response.Result.price = (i1*10) + j;                                                               // This simulates a token rejected 1 request could get. If this happens the client should authenticate again and retry the request                                                                // while locking the client for the other threads so that only 1 authentication process is ongoing                                                               if (response.Result.price == 51) Client.AuthenticateAdmin(UserName' Password);                                                               // update the product                                                               var response2 = Client.UpdateProduct(response.Result).Result;                                                               if (response2.HasErrors) throw new Exception(response2.Errors.First().Message);                                                               count++;                                                           }                                                       }' _cancellationSource.Token);
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: i < 10
Magic Number,Magento.RestApi.IntegrationTests,ThreadingTests,C:\research\architectureSmells\repos\nickvane_Magento-RestApi\Magento.RestApi.IntegrationTests\ThreadingTests.cs,WhenUsingClientFromDifferentThreadsShouldDoEverythingSuccesfully,The following statement contains a magic number: Assert.Equal(50' count);
