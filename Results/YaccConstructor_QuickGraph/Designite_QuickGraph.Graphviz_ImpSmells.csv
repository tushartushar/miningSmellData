Implementation smell,Namespace,Class,File,Method,Description
Long Method,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The method has 103 lines of code.
Long Method,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,ToDot,The method has 87 lines of code.
Complex Method,QuickGraph.Graphviz,GraphvizAlgorithm,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\GraphvizAlgorithm.cs,Generate,Cyclomatic complexity of the method is 12
Complex Method,QuickGraph.Graphviz,GraphvizAlgorithm,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\GraphvizAlgorithm.cs,WriteClusters,Cyclomatic complexity of the method is 7
Complex Method,QuickGraph.Graphviz.Dot,GraphvizArrow,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizArrow.cs,ToDot,Cyclomatic complexity of the method is 9
Complex Method,QuickGraph.Graphviz.Dot,GraphvizEdge,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizEdge.cs,GenerateDot,Cyclomatic complexity of the method is 7
Complex Method,QuickGraph.Graphviz.Dot,GraphvizEdge,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizEdge.cs,ToDot,Cyclomatic complexity of the method is 19
Complex Method,QuickGraph.Graphviz.Dot,GraphvizEdgeExtremity,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizEdgeExtremity.cs,AddParameters,Cyclomatic complexity of the method is 8
Complex Method,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,Cyclomatic complexity of the method is 34
Complex Method,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,GenerateDot,Cyclomatic complexity of the method is 8
Complex Method,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,ToDot,Cyclomatic complexity of the method is 29
Long Statement,QuickGraph.Graphviz,GraphvizAlgorithm,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\GraphvizAlgorithm.cs,OnFormatCluster,The length of the statement  "		FormatClusterEventArgs<TVertex' TEdge> args = new FormatClusterEventArgs<TVertex' TEdge> (cluster' new GraphvizGraph ()); " is 121.
Long Statement,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,DumpHtml,The length of the statement  "		html.WriteLine ("<object data=\"{0}\" type=\"image/svg+xml\" width=\"{1}\" height=\"{2}\">"' svgFileName' size.Width' size.Height); " is 131.
Long Statement,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,DumpHtml,The length of the statement  "		html.WriteLine ("  <embed src=\"{0}\" type=\"image/svg+xml\" width=\"{1}\" height=\"{2}\">"' svgFileName' size.Width' size.Height); " is 131.
Long Statement,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,GenerateDot,The length of the statement  "			writer.Write ("{0}=\"#{1}{2}{3}{4}\""' entry.Key' color.R.ToString ("x2").ToUpper ()' color.G.ToString ("x2").ToUpper ()' color.B.ToString ("x2").ToUpper ()' color.A.ToString ("x2").ToUpper ()); " is 194.
Long Statement,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,ToDot,The length of the statement  "	if (((this.Style == GraphvizVertexStyle.Diagonals) || (this.Shape == GraphvizVertexShape.MCircle)) || ((this.Shape == GraphvizVertexShape.MDiamond) || (this.Shape == GraphvizVertexShape.MSquare))) { " is 198.
Complex Conditional,QuickGraph.Graphviz.Dot,GraphvizVertex,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizVertex.cs,ToDot,The conditional expression  "((this.Style == GraphvizVertexStyle.Diagonals) || (this.Shape == GraphvizVertexShape.MCircle)) || ((this.Shape == GraphvizVertexShape.MDiamond) || (this.Shape == GraphvizVertexShape.MSquare))"  is complex.
Magic Number,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,ParseSize,The following statement contains a magic number: if (!m.Success)  	return new Size (400' 400);  else {  	int size = int.Parse (m.Groups ["Width"].Value);  	int height = int.Parse (m.Groups ["Height"].Value);  	return new Size (size' height);  }  
Magic Number,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,ParseSize,The following statement contains a magic number: if (!m.Success)  	return new Size (400' 400);  else {  	int size = int.Parse (m.Groups ["Width"].Value);  	int height = int.Parse (m.Groups ["Height"].Value);  	return new Size (size' height);  }  
Magic Number,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,ParseSize,The following statement contains a magic number: return new Size (400' 400);  
Magic Number,QuickGraph.Graphviz,SvgHtmlWrapper,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\SvgHtmlWrapper.cs,ParseSize,The following statement contains a magic number: return new Size (400' 400);  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizEdgeLabel,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizEdgeLabel.cs,AddParameters,The following statement contains a magic number: if (this.Value != null) {  	dic ["label"] = this.Value;  	if (this.Angle != -25) {  		dic ["labelangle"] = this.Angle;  	}  	if (this.Distance != 1) {  		dic ["labeldistance"] = this.Distance;  	}  	if (!this.Float) {  		dic ["labelfloat"] = this.Float;  	}  	if (this.Font != null) {  		dic ["labelfontname"] = this.Font.Name;  		dic ["labelfontsize"] = this.Font.SizeInPoints;  	}  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizEdgeLabel,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizEdgeLabel.cs,AddParameters,The following statement contains a magic number: if (this.Angle != -25) {  	dic ["labelangle"] = this.Angle;  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The following statement contains a magic number: if (this.NodeSeparation != 0.25) {  	pairs ["nodesep"] = this.NodeSeparation;  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The following statement contains a magic number: if (this.RankSeparation != 0.5) {  	pairs ["ranksep"] = this.RankSeparation;  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The following statement contains a magic number: if (this.Resolution != 0.96) {  	pairs ["resolution"] = this.Resolution;  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The following statement contains a magic number: if (this.SamplePoints != 8) {  	pairs ["samplepoints"] = this.SamplePoints;  }  
Magic Number,QuickGraph.Graphviz.Dot,GraphvizGraph,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizGraph.cs,ToDot,The following statement contains a magic number: if (this.SearchSize != 30) {  	pairs ["searchsize"] = this.SearchSize;  }  
Missing Default,QuickGraph.Graphviz.Dot,GraphvizArrow,D:\newReposJune17\YaccConstructor_QuickGraph\src\QuickGraph.Graphviz\Dot\GraphvizArrow.cs,ToDot,The following switch statement is missing a default case: switch (this.clipping) {  case GraphvizArrowClipping.Left:  	writer.Write ('l');  	break;  case GraphvizArrowClipping.Right:  	writer.Write ('r');  	break;  }  
