Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TestEasy.WebServer.Test,Deploy,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\ApplicationExtensionsFacts.cs,WhenSourceDoesNotExist_ShouldThrow,The length of the statement  "                Assert.Equal(@"Failed to deploy files to application' source directory does not exist: 'c:\Temp\MySite'."' exception.Message); " is 126.
Long Statement,TestEasy.WebServer.Test,Deploy,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\ApplicationExtensionsFacts.cs,WhenVirtualDirectoryDoesNotExist_ShouldThrow,The length of the statement  "                Assert.Equal(string.Format(@"Application '{0}' does not have a virtual directory."' mock.MockApplicationName)' exception.Message); " is 130.
Long Statement,TestEasy.WebServer.Test,Deploy,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\ApplicationExtensionsFacts.cs,WhenDeployingListOfFiles_IfVirtualDirectoryDoesNotExist_ShouldThrow,The length of the statement  "                Assert.Equal(string.Format(@"Application '{0}' does not have a virtual directory."' mock.MockApplicationName)' exception.Message); " is 130.
Long Statement,TestEasy.WebServer.Test,AddApplication,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenAddApplication_IfAppDoesNotExist_ShouldAdd,The length of the statement  "                Assert.True(xapplications.Any(a => a.Attribute("path").Value.Equals("/MyApp"' StringComparison.InvariantCultureIgnoreCase))); " is 125.
Long Statement,TestEasy.WebServer.Test,AddApplication,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenAddApplication_IfAppExist_ShouldOverwrite,The length of the statement  "                Assert.True(xapplications.Any(a => a.Attribute("path").Value.Equals("/"' StringComparison.InvariantCultureIgnoreCase))); " is 120.
Long Statement,TestEasy.WebServer.Test,RemoveApplication,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenRemoveApplication_ShouldRemove,The length of the statement  "                Assert.False(xapplications.Any(a => a.Attribute("path").Value.Equals("/"' StringComparison.InvariantCultureIgnoreCase))); " is 121.
Long Statement,TestEasy.WebServer.Test,RemoveAllApplications,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenRemoveAllApplications_ShouldRemove,The length of the statement  "                Assert.False(xapplications.Any(a => a.Attribute("path").Value.Equals("/"' StringComparison.InvariantCultureIgnoreCase))); " is 121.
Long Statement,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIisExpress_IfRemote_ShouldThrow,The length of the statement  "                Assert.Equal(@"For tests using remote browsers' IISExpress web server type is not supported' please use IIS."' exception.Message); " is 130.
Long Statement,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIis_IfInetInfoDoesNotExistAndOsVersionUnknown_ShouldThrow,The length of the statement  "                Assert.Equal(@"Unable to determine version of IIS. Check if IIS is installed and if tests are executed as a process with native OS architecture."' exception.Message); " is 166.
Long Statement,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfTypeIsUnknown_ShouldThrow,The length of the statement  "                Assert.Equal(string.Format("WebServer type is unsupported '{0}'' type info: '{1}'. Make sure your web server type is registered in webServerTypes collection in default.config or testsuite.config."' " is 197.
Long Statement,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfTypeInfoIsEmpty_ShouldThrow,The length of the statement  "                Assert.Equal(string.Format("WebServer type is unsupported '{0}'' type info: '{1}'. Make sure your web server type is registered in webServerTypes collection in default.config or testsuite.config."' " is 197.
Long Statement,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfIisNotRegistered_ShouldUseItAutomatically,The length of the statement  "                Assert.Equal(string.Format("WebServer type is unsupported '{0}'' type info: '{1}'. Make sure your web server type is registered in webServerTypes collection in default.config or testsuite.config."' " is 197.
Long Statement,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfIisExpressNotRegistered_ShouldUseItAutomatically,The length of the statement  "                Assert.Equal(string.Format("WebServer type is unsupported '{0}'' type info: '{1}'. Make sure your web server type is registered in webServerTypes collection in default.config or testsuite.config."' " is 197.
Long Statement,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfWebServerFromCustomAssembly_ShouldCreate,The length of the statement  "                Assert.Equal(string.Format("WebServer type is unsupported '{0}'' type info: '{1}'. Make sure your web server type is registered in webServerTypes collection in default.config or testsuite.config."' " is 197.
Long Statement,TestEasy.WebServer.Test,GetVirtualPath,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\SiteExtensionsFacts.cs,WhenNoBindings_ShouldThrow,The length of the statement  "                var exception = Assert.Throws<Exception>(() => SiteExtensions.GetVirtualPath(mock.ServerManager.Sites[0]' "http"' "myhost")); " is 125.
Long Statement,TestEasy.WebServer.Test,GetVirtualPath,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\SiteExtensionsFacts.cs,WhenNoBindings_ShouldThrow,The length of the statement  "                Assert.Equal(string.Format("Binding for protocol 'http' is not defined for the website '{0}'."' mock.ServerManager.Sites[0].Name)' exception.Message); " is 150.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockSetCustomHeadersNoWebConfig,The length of the statement  "            FileSystem.Setup(f => f.FileWrite(MockWebConfigPath' @"<configuration><system.webServer><httpProtocol><customHeaders><clear /><add name=""header1"" value=""value1"" /><add name=""header2"" value=""value2"" /></customHeaders></httpProtocol></system.webServer></configuration>")); " is 278.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockSetCustomHeadersWithWebConfig,The length of the statement  "            FileSystem.Setup(f => f.FileWrite(MockWebConfigPath' @"<configuration><system.webServer><httpProtocol><customHeaders><clear /><add name=""header1"" value=""value1"" /><add name=""header2"" value=""value2"" /></customHeaders></httpProtocol></system.webServer></configuration>")); " is 278.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileExists,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%windir%\Sysnative\inetsrv\inetinfo.exe")).Returns(MockInetInfoPath); " is 129.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileExists,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%SystemDrive%\Windows\System32\inetsrv\config\applicationHost.config")).Returns(MockApplicationHostConfig); " is 167.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileDoesNotExist_OSVersion,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%windir%\Sysnative\inetsrv\inetinfo.exe")).Returns(MockInetInfoPath); " is 129.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileDoesNotExist_OSVersion,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%SystemDrive%\Windows\System32\inetsrv\config\applicationHost.config")).Returns(MockApplicationHostConfig); " is 167.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileDoesNotExist_OSVersionUnknown,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%windir%\Sysnative\inetsrv\inetinfo.exe")).Returns(MockInetInfoPath); " is 129.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisCtor_InetInfoFileDoesNotExist_OSVersionUnknown,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%SystemDrive%\Windows\System32\inetsrv\config\applicationHost.config")).Returns(MockApplicationHostConfig); " is 167.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressCtor_LocateIisExpress_ProgramFiles,The length of the statement  "            EnvironmentSystem.Setup(f => f.ExpandEnvironmentVariables(@"%PROGRAMFILES%\IIS Express\iisexpress.exe")).Returns(MockIisExpressPath); " is 133.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressCtor_CreateApplicationHostConfigFromTemplate_Found,The length of the statement  "            var template = Path.Combine(Path.GetDirectoryName(path) ?? ""' @"config\templates\PersonalWebServer\applicationhost.config"); " is 125.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressCtor_CreateApplicationHostConfigFromTemplate_Found,The length of the statement  "            MockApplicationHostConfigPath = Path.Combine(Path.GetDirectoryName(MockCurrentExecutableDir)' "applicationhost.config"); " is 120.
Long Statement,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressCtor_CreateApplicationHostConfigFromTemplate_Found_UniqueAppPath,The length of the statement  "            var template = Path.Combine(Path.GetDirectoryName(path) ?? ""' @"config\templates\PersonalWebServer\applicationhost.config"); " is 125.
Magic Number,TestEasy.WebServer.Test,RemoveBinding,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenRemoveBinding_IfAppDoesNotExist_ShouldAdd,The following statement contains a magic number: Assert.Equal(2' xbindings.Descendants().Count());
Magic Number,TestEasy.WebServer.Test,AddApplicationPool,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenAddApplicationPool_IfAppPoolDoesNotExist_ShouldAdd,The following statement contains a magic number: Assert.Equal(2' xapppools.Descendants().Count());
Magic Number,TestEasy.WebServer.Test,AddApplicationPool,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\IisExpressConfigFacts.cs,WhenAddApplicationPool_IfAppPoolExist_ShouldOverwrite,The following statement contains a magic number: Assert.Equal(8' xapppools.Descendants().Count());
Magic Number,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIisExpressAndRemoteFalse_IfLocateIisExpressAndArchitectureDefault_ShouldUseProgramFiles,The following statement contains a magic number: Assert.Equal("11.0"' server.Version.ToString(2));
Magic Number,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIisExpressAndRemoteFalse_IfLocateIisExpressAndArchitectureDefault1_ShouldUseProgramFiles,The following statement contains a magic number: Assert.Equal("11.0"' server.Version.ToString(2));
Magic Number,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIis_IfInetInfoFound_ShouldTakeItsVersion,The following statement contains a magic number: Assert.Equal("11.0"' server.Version.ToString(2));
Magic Number,TestEasy.WebServer.Test,Constructor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenIis_IfInetInfoDoesNotExist_ShouldTakeOsVersion,The following statement contains a magic number: Assert.Equal(expectedIisVersion' server.Version.ToString(2));
Magic Number,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfCustomWebserverAndWebSiteProvided_ShouldCreate,The following statement contains a magic number: Assert.Equal(100000' settings.StartupTimeout);
Magic Number,TestEasy.WebServer.Test,Create,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerIisExpressFacts.cs,WhenCreate_IfCustomWebserverAndWebSiteProvidedAndRemoteTrue_ShouldCreate,The following statement contains a magic number: Assert.Equal(100000' settings.StartupTimeout);
Magic Number,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerCreateWithWebSiteProvided,The following statement contains a magic number: TestEasyConfig.Instance.WebServer.StartupTimeout = 100000;
Magic Number,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerCreateWithWebSiteProvidedRemoteTrue,The following statement contains a magic number: TestEasyConfig.Instance.WebServer.StartupTimeout = 100000;
Magic Number,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressCtor_GetNextAvailablePort,The following statement contains a magic number: EnvironmentSystem.Setup(f => f.GetNextAvailablePort(0)).Returns(1000);
Magic Number,TestEasy.WebServer.Test,WebServerMockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.WebServer.Test\WebServerMockGenerator.cs,MockWebServerIisExpressStart,The following statement contains a magic number: ProcessRunner.Setup(f => f.WaitForExit(It.Is<Process>(                  p => p.StartInfo.FileName.Equals(path)                       && p.StartInfo.Arguments.Equals(MockIssExpressProcessArguments))' 5000)).Returns(false);
