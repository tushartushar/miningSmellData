Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallToPackageManagerBeforeAddingToProjectManager,The length of the parameter calledProjectManagerAfterPackageManager is 39.
Long Identifier,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallNewPackageToPackageManagerBeforeProjectManager,The length of the parameter calledProjectManagerAfterPackageManager is 39.
Long Identifier,TestEasy.Nuget.Test,UninstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,RemoveFromPackageManagerAfterRemovingFromProjectManager,The length of the parameter calledPackageManagerAfterProjectManager is 39.
Long Statement,TestEasy.Nuget.Test.Mocks,MockGenerator,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\Mocks\MockGenerator.cs,CreateProjectManagerFactory,The length of the statement  "            mockFactory.Setup(f => f.CreateProjectManager(It.IsAny<IEnumerable<string>>()' It.IsAny<string>()' It.IsAny<IProjectSystem>())).Returns(pm); " is 140.
Long Statement,TestEasy.Nuget.Test.Mocks,MockPackageRepository,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\Mocks\MockPackageRepository.cs,GetPackages,The length of the statement  "            return installedPackages.Values.Aggregate(new List<IPackage>()' (a' l) => { a.AddRange(l); return a; }' (a) => a).AsQueryable<IPackage>(); " is 138.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,PackageAvailableFromRemote_InstallAddsPackageToLocalRepository,The length of the statement  "                var warnings = core.InstallPackage(@"C:\DummyPath"' MockPackage.DefaultId' "http://dummyFeed"' MockPackage.DefaultVersion.ToString()); " is 134.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,PackageAvailableFromLocal_InstallSucceeds,The length of the statement  "                var warnings = core.InstallPackage(@"C:\DummyPath"' MockPackage.DefaultId' "http://dummyFeed"' MockPackage.DefaultVersion.ToString()); " is 134.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,SourcesEmpty_NugetDefaultFeedUsed,The length of the statement  "                mockNugetCore.Setup(n => n.InstallPackage("DummyPath"' "DummyPackage"' It.Is<string>(s => s.Contains(NuGetManager.NUGET_DEFAULT_SOURCE))' ""' null)) " is 148.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,SourcesProvided_NugetDefaultFeedIncluded,The length of the statement  "                mockNugetCore.Setup(n => n.InstallPackage("DummyPath"' "DummyPackage"' It.Is<string>(s => s.Contains(NuGetManager.NUGET_DEFAULT_SOURCE))' ""' null)) " is 148.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallToPackageManagerBeforeAddingToProjectManager,The length of the statement  "                mockPackageMan.Setup(packMan => packMan.InstallPackage(It.IsAny<IPackage>()' It.IsAny<bool>()' It.IsAny<bool>())).Callback(() => calledPackageManager = true); " is 158.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallToPackageManagerBeforeAddingToProjectManager,The length of the statement  "                mockProjectMan.Setup(projMan => projMan.AddPackageReference(It.IsAny<IPackage>()' false' true)).Callback(() => calledProjectManagerAfterPackageManager = calledPackageManager); " is 175.
Long Statement,TestEasy.Nuget.Test,InstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallToPackageManagerBeforeAddingToProjectManager,The length of the statement  "                WebNuGetProject project = new WebNuGetProject(new string[] {}' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 133.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,PackageAvailableFromRemote_UpdateSucceeds,The length of the statement  "                mockProjectManager.Setup(pm => pm.UpdatePackageReference(updatedPackage.Id' updatedPackage.Version' It.IsAny<bool>()' It.IsAny<bool>())).Verifiable(); " is 150.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,DontSpecifyVersion_UpdatesToLatestPackage,The length of the statement  "                mockProjectManager.Setup(pm => pm.UpdatePackageReference(latestPackage.Id' latestPackage.Version' It.IsAny<bool>()' It.IsAny<bool>())).Verifiable(); " is 148.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,SpecifyVersion_UpdatesToSpecifiedPackage,The length of the statement  "                mockProjectManager.Setup(pm => pm.UpdatePackageReference(targetPackage.Id' targetPackage.Version' It.IsAny<bool>()' It.IsAny<bool>())).Verifiable(); " is 148.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,PackageAvailableFromLocal_UpdateSucceeds,The length of the statement  "                mockProjectManager.Setup(pm => pm.UpdatePackageReference(targetPackage.Id' targetPackage.Version' It.IsAny<bool>()' It.IsAny<bool>())).Verifiable(); " is 148.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,SourcesEmpty_NugetDefaultFeedUsed,The length of the statement  "                mockNugetCore.Setup(n => n.UpdatePackage("DummyPath"' "DummyPackage"' It.Is<string>(s => s.Contains(NuGetManager.NUGET_DEFAULT_SOURCE))' ""' null)) " is 147.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,SourcesProvided_NugetDefaultFeedIncluded,The length of the statement  "                mockNugetCore.Setup(n => n.UpdatePackage("DummyPath"' "DummyPackage"' It.Is<string>(s => s.Contains(NuGetManager.NUGET_DEFAULT_SOURCE))' ""' null)) " is 147.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallNewPackageToPackageManagerBeforeProjectManager,The length of the statement  "                mockProjectMan.Setup(projMan => projMan.UpdatePackageReference(package.Id' package.Version' It.IsAny<bool>()' It.IsAny<bool>())) " is 128.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,InstallNewPackageToPackageManagerBeforeProjectManager,The length of the statement  "                WebNuGetProject project = new WebNuGetProject(new string[] {}' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 133.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,OldVersionOfPackageUninstalled,The length of the statement  "                WebNuGetProject project = new WebNuGetProject(new string[] { }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 134.
Long Statement,TestEasy.Nuget.Test,UpdatePackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetCoreTests.cs,UninstallOldPackageFails_HandleGracefully,The length of the statement  "                WebNuGetProject project = new WebNuGetProject(new string[] { }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 134.
Long Statement,TestEasy.Nuget.Test,CreateProjectManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetManagerFactoryTests.cs,WhenRemoteSourcesEmpty_Throws,The length of the statement  "                Assert.Throws<ArgumentException>(() => pmf.CreateProjectManager(Enumerable.Empty<string>()' "dummy"' mockProjectSystem.Object)); " is 128.
Long Statement,TestEasy.Nuget.Test,InstallPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetManagerTests.cs,PackagesConfigPathDoesNotExist_Throws,The length of the statement  "                var mockFileSystem = new Mock<Core.Abstractions.IFileSystem>(MockBehavior.Strict); // strict ensures we don't use any other FileSystem APIs " is 139.
Long Statement,TestEasy.Nuget.Test,InstallPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetManagerTests.cs,ReadFromPackagesConfig_UseCustomSources,The length of the statement  "                    mockNugetCore.Setup(n => n.InstallPackage("DummyPath"' packageId' It.Is<string>(s => s.Contains(customSources))' It.IsAny<string>()' null)) " is 139.
Long Statement,TestEasy.Nuget.Test,Ctor,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,RootIsContainingFolder,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory()); " is 125.
Long Statement,TestEasy.Nuget.Test,AddFrameworkReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,IfNameNullOrEmpty_Throws,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory()); " is 125.
Long Statement,TestEasy.Nuget.Test,AddFrameworkReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,AddingFrameworkReference_CallSaveProject,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,AddReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,IfNameNullOrEmpty_Throws,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory()); " is 125.
Long Statement,TestEasy.Nuget.Test,AddReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,UseRelativeHintPath,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,AddReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,AddingReference_CallSaveProject,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,AddReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,EmptyReferencePath,The length of the statement  "                NuGetWebProjectSystem projSystem = new NuGetWebProjectSystem(@"C:\TestRoot"' mockFileSystem.Object' Dependencies.AssemblyResolver); " is 131.
Long Statement,TestEasy.Nuget.Test,ReferenceExists,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,IfNameNullOrEmpty_Throws,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory()); " is 125.
Long Statement,TestEasy.Nuget.Test,ReferenceExists,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,StripExtensionFromReferenceName,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,ReferenceExists,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,OnlySearchReferenceItemType,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,RemoveReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,RemovingReference_CallSaveProject,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,RemoveReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,IfReferenceDoesntExist_NoOp,The length of the statement  "                mockProject.Setup(p => p.ReferenceExists(It.Is<string>(s => s == "Dummy" || s == "Dummy.dll"))).Returns(false).Verifiable(); " is 124.
Long Statement,TestEasy.Nuget.Test,RemoveReference,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,IfReferenceDoesntExist_NoOp,The length of the statement  "                var projectSystem = new NuGetMsBuildProjectSystem(@"C:\DummyPath\Dummy.csproj"' MockGenerator.CreateMSBuildProjectFactory(mockProject.Object)); " is 143.
Long Statement,TestEasy.Nuget.Test,GetAssemblyReferencePaths,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,ReturnsFullPaths,The length of the statement  "                mockMSBuildProject.Setup(p => p.GetItemsWithMetadataProperty("Reference"' "HintPath")).Returns(new Dictionary<string' string>() { " is 129.
Long Statement,TestEasy.Nuget.Test,GetAssemblyReferencePaths,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetMSBuildProjectSystemTests.cs,OnlyIncludeFilesWhichExist,The length of the statement  "                mockMSBuildProject.Setup(p => p.GetItemsWithMetadataProperty("Reference"' "HintPath")).Returns(new Dictionary<string' string>() { " is 129.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,SingleAssembly,The length of the statement  "                NuGetWebProjectSystem projSystem = new NuGetWebProjectSystem(@"C:\TestRoot"' mockFileSystem.Object' Dependencies.AssemblyResolver); " is 131.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,IncludeSatelliteAssembly,The length of the statement  "                mockFileSystem.Setup(fs => fs.DirectoryGetFiles(mockLocDirectory)).Returns(new string[] { Path.Combine(mockLocDirectory' "FooPackage.resources.dll") }); " is 152.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,IncludeSatelliteAssembly,The length of the statement  "                NuGetWebProjectSystem projSystem = new NuGetWebProjectSystem(@"C:\TestRoot"' mockFileSystem.Object' Dependencies.AssemblyResolver); " is 131.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,IncludeSatelliteAssembly,The length of the statement  "                    {@"C:\TestRoot\packages\FooPackage.1.0\lib\ja-JP\FooPackage.resources.dll"' @"C:\TestRoot\bin\ja-JP\FooPackage.resources.dll" }' " is 128.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,FileDoesNotExist,The length of the statement  "                mockFileSystem.Setup(fs => fs.FileExists(@"C:\TestRoot\packages\DoesNotExist.1.0\lib\DoesNotExist.dll")).Returns(false); " is 120.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,FileDoesNotExist,The length of the statement  "                NuGetWebProjectSystem projSystem = new NuGetWebProjectSystem(@"C:\TestRoot"' mockFileSystem.Object' Dependencies.AssemblyResolver); " is 131.
Long Statement,TestEasy.Nuget.Test,GetReferenceFilesToAdd,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,FileDoesNotExist,The length of the statement  "                Assert.Throws<FileNotFoundException>(() => projSystem.GetReferenceFilesToAdd(@"TestRoot\packages\DoesNotExist.1.0\lib\DoesNotExist.dll")); " is 138.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,AddOnlyAssembly,The length of the statement  "                mockFileSystem.Setup(fs => fs.OpenFile("web.config")).Returns(new MemoryStream(System.Text.Encoding.Default.GetBytes(originalWebConfig))); " is 138.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,AddOnlyAssembly,The length of the statement  "                string expected = @"<configuration><system.web><compilation><assemblies><add assembly=""FooAssembly"" /></assemblies></compilation></system.web></configuration>"; " is 162.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,AddToExistingAssemblies,The length of the statement  "                mockFileSystem.Setup(fs => fs.OpenFile("web.config")).Returns(new MemoryStream(System.Text.Encoding.Default.GetBytes(originalWebConfig))); " is 138.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,AddToExistingAssemblies,The length of the statement  "                string expected = @"<configuration><system.web><compilation><assemblies><add assembly=""FooAssembly"" /><add assembly=""BarAssembly"" /></assemblies></compilation></system.web></configuration>"; " is 194.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,NoChangeIfAssemblyExists,The length of the statement  "                string configContent = @"<configuration><system.web><compilation><assemblies><add assembly=""FooAssembly"" /></assemblies></compilation></system.web></configuration>"; " is 167.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,NoChangeIfAssemblyExists,The length of the statement  "                mockFileSystem.Setup(fs => fs.OpenFile("web.config")).Returns(new MemoryStream(System.Text.Encoding.Default.GetBytes(configContent))); " is 134.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,InsertBeforeClearTag,The length of the statement  "                string configContent = @"<configuration><system.web><compilation><assemblies><clear /></assemblies></compilation></system.web></configuration>"; " is 144.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,InsertBeforeClearTag,The length of the statement  "                mockFileSystem.Setup(fs => fs.OpenFile("web.config")).Returns(new MemoryStream(System.Text.Encoding.Default.GetBytes(configContent))); " is 134.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,InsertBeforeClearTag,The length of the statement  "                string expected = @"<configuration><system.web><compilation><assemblies><add assembly=""FooAssembly"" /><clear /></assemblies></compilation></system.web></configuration>"; " is 171.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,NoWebConfig,The length of the statement  "                string expected = @"<configuration><system.web><compilation><assemblies><add assembly=""FooAssembly"" /></assemblies></compilation></system.web></configuration>"; " is 162.
Long Statement,TestEasy.Nuget.Test,AddReferencesToConfig,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\NuGetWebProjectSystemTests.cs,EmptyWebConfig,The length of the statement  "                mockFileSystem.Setup(fs => fs.OpenFile("web.config")).Returns(new MemoryStream(System.Text.Encoding.Unicode.GetBytes(configContent))); " is 134.
Long Statement,TestEasy.Nuget.Test,UninstallPackage,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,RemoveFromPackageManagerAfterRemovingFromProjectManager,The length of the statement  "                WebNuGetProject project = new WebNuGetProject(new string[] { }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 134.
Long Statement,TestEasy.Nuget.Test,GetPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,ReturnMultipleVersionsOfPackage,The length of the statement  "                var repoPackages = new IPackage[] { new MockPackage("A"' "1.0")' new MockPackage("A"' "2.0")' new MockPackage("B"' "2.0") }; " is 124.
Long Statement,TestEasy.Nuget.Test,GetPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,ReturnMultiplePackages,The length of the statement  "                var repoPackages = new IPackage[] { new MockPackage("A"' "1.0")' new MockPackage("AB"' "2.0")' new MockPackage("B"' "2.0") }; " is 125.
Long Statement,TestEasy.Nuget.Test,GetInstalledPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,EmptySearchTerms_ReturnsAllLocalPackages,The length of the statement  "                Dependencies.NuGetProjectManagerFactory = MockGenerator.CreateProjectManagerFactory(MockGenerator.CreateMockProjectManager(new MockPackageRepository()' mockRepo).Object); " is 170.
Long Statement,TestEasy.Nuget.Test,GetInstalledPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,EmptySearchTerms_ReturnsAllLocalPackages,The length of the statement  "                var project = new WebNuGetProject(new string[] {"http://dummyFeed"}' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 139.
Long Statement,TestEasy.Nuget.Test,GetInstalledPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,DoesNotReturnPackagesFromRemote,The length of the statement  "                Dependencies.NuGetProjectManagerFactory = MockGenerator.CreateProjectManagerFactory(MockGenerator.CreateMockProjectManager(mockRemoteRepo' mockLocalRepo).Object); " is 162.
Long Statement,TestEasy.Nuget.Test,GetInstalledPackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,DoesNotReturnPackagesFromRemote,The length of the statement  "                var project = new WebNuGetProject(new string[] {"http://dummyFeed"}' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 139.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,EmptySearchTerms_ReturnsAllRemotePackages,The length of the statement  "                Dependencies.NuGetProjectManagerFactory = MockGenerator.CreateProjectManagerFactory(MockGenerator.CreateMockProjectManager(mockRepo' new MockPackageRepository()).Object); " is 170.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,EmptySearchTerms_ReturnsAllRemotePackages,The length of the statement  "                var project = new WebNuGetProject(new string[] { "http://dummyFeed" }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 141.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,OrderedByDownloadCountFirst,The length of the statement  "                Dependencies.NuGetProjectManagerFactory = MockGenerator.CreateProjectManagerFactory(MockGenerator.CreateMockProjectManager(mockRepo' new MockPackageRepository()).Object); " is 170.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,OrderedByDownloadCountFirst,The length of the statement  "                var project = new WebNuGetProject(new string[] { "http://dummyFeed" }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 141.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,DoesNotReturnPackagesFromLocal,The length of the statement  "                Dependencies.NuGetProjectManagerFactory = MockGenerator.CreateProjectManagerFactory(MockGenerator.CreateMockProjectManager(mockRemoteRepo' mockLocalRepo).Object); " is 162.
Long Statement,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,DoesNotReturnPackagesFromLocal,The length of the statement  "                var project = new WebNuGetProject(new string[] { "http://dummyFeed" }' @"C:\DummyPath"' null' MockGenerator.CreateWebProjectSystemFactory()); " is 141.
Magic Number,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,OrderedByDownloadCountFirst,The following statement contains a magic number: var packageB = new MockPackage { Id = "B"' DownloadCount = 2 };
Magic Number,TestEasy.Nuget.Test,GetRemotePackages,D:\research\architectureSmells\repos\Microsoft_TestEasy\test\TestEasy.Nuget.Test\WebNuGetProjectTests.cs,OrderedByDownloadCountFirst,The following statement contains a magic number: packageA.DownloadCount = 2;
