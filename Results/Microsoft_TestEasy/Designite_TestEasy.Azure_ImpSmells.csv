Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishDirectory,Cyclomatic complexity of the method is 10
Long Parameter List,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,CreateOrUpdateDeployment,The method has 5 parameters. Parameters: hostedServiceName' packageLocation' configPath' deploymentName' deploymentSlot
Long Parameter List,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,CreateSqlDatabase,The method has 5 parameters. Parameters: databaseName' serverName' user' password' maxSize
Long Parameter List,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,PublishDatabase,The method has 5 parameters. Parameters: sourceDbType' sourceConnectionString' destinationDbType' destinationConnectionString' includeData
Long Parameter List,TestEasy.Azure,AzureVirtualMachineManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureVirtualMachineManager.cs,CreateVirtualMachine,The method has 6 parameters. Parameters: hostedServiceName' osVirtualHardDisk' configurationSets' dataVirtualHardDisks' virtualMachineName' deploymentName
Long Parameter List,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishWebSite,The method has 6 parameters. Parameters: siteRoot' siteName' publishMethod' siteRootRelativePath' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishFile,The method has 6 parameters. Parameters: file' siteName' publishMethod' siteRootRelativePath' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishDirectory,The method has 6 parameters. Parameters: directory' siteName' publishMethod' siteRootRelativePath' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,PrepareDatabaseDeployment,The method has 5 parameters. Parameters: dbType' provider' options' includeData' dropDestinationDatabase
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployDatabase,The method has 6 parameters. Parameters: sourceDbType' sourceConnectionString' destinationDbType' destinationConnectionString' includeData' dropDestinationDatabase
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployWebSite,The method has 7 parameters. Parameters: sourcePath' destinationPath' destinationAddress' user' password' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployFile,The method has 7 parameters. Parameters: sourcePath' destinationPath' destinationAddress' user' password' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployDirectory,The method has 7 parameters. Parameters: sourcePath' destinationPath' destinationAddress' user' password' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployPackage,The method has 7 parameters. Parameters: sourcePath' destinationPath' destinationAddress' user' password' deleteExisting' paramResolverFunc
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,Deploy,The method has 15 parameters. Parameters: sourcePath' destinationPath' destinationAddress' userName' password' srcProvider' srcBaseOptions' destProvider' destBaseOptions' destSyncOptions' syncParamResolver' skipDirectives' removedParameters' tracelevel' direction
Long Parameter List,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,ExecuteDeploy,The method has 9 parameters. Parameters: sourcePath' destinationPath' srcProvider' srcBaseOptions' destProvider' destBaseOptions' destSyncOptions' syncParamResolver' removedParameters
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,GetStorageAccountsUsedByHostedService,The length of the statement  "            var vhdsLeased = vhdManager.GetVirtualHardDisks().Where(vhd => vhd.UsageDetails.HostedServiceName == hostedServiceName); " is 120.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,BreakVhdLeases,The length of the statement  "            var vhdsLeased = vhdManager.GetVirtualHardDisks().Where(vhd => vhd.UsageDetails.HostedServiceName == hostedServiceName); " is 120.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,BreakVhdLeases,The length of the statement  "                var remainingVhdsLeased = vhdManager.GetVirtualHardDisks().Where(vhd => vhd.UsageDetails.HostedServiceName == hostedServiceName); " is 129.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,CreateOrUpdateDeployment,The length of the statement  "                throw new FileNotFoundException(string.Format("The file '{0}' cannot be found or the caller does not have sufficient permissions to read it."' configPath)); " is 156.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,GetDeployment,The length of the statement  "                var result = ComputeManagementClient.Deployments.GetByNameAsync(hostedServiceName' deploymentName' new CancellationToken()).Result; " is 131.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,GetDeploymentBySlot,The length of the statement  "                var result = ComputeManagementClient.Deployments.GetBySlotAsync(hostedServiceName' slot' new CancellationToken()).Result; " is 121.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,UpdateDeploymentStatus,The length of the statement  "            ComputeManagementClient.Deployments.UpdateStatusByDeploymentNameAsync(hostedServiceName' deploymentName' new DeploymentUpdateStatusParameters " is 141.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,DeleteDeployment,The length of the statement  "            ComputeManagementClient.Deployments.DeleteByNameAsync(hostedServiceName' deploymentName' true' new CancellationToken()).Wait(); " is 127.
Long Statement,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,RebootDeploymentRoleInstance,The length of the statement  "            ComputeManagementClient.Deployments.RebootRoleInstanceByDeploymentNameAsync(hostedServiceName' deploymentName' roleInstanceName' new CancellationToken()).Wait(); " is 161.
Long Statement,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,CreateSqlDatabase,The length of the statement  "            var server = string.IsNullOrEmpty(serverName) ? CreateSqlServer(user' password) : GetSqlServer(serverName' user' password); " is 123.
Long Statement,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,CreateSqlDatabase,The length of the statement  "            var existingDatabasesOnServer = SqlManagementClient.Databases.ListAsync(server.Name' new CancellationToken()).Result.Databases; " is 127.
Long Statement,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,PublishDatabase,The length of the statement  "            TestEasyLog.Instance.Info(string.Format("Publishing database '{0}' to '{1}'"' sourceConnectionString' destinationConnectionString)); " is 132.
Long Statement,TestEasy.Azure,AzureSqlManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureSqlManager.cs,PublishDatabase,The length of the statement  "            WebDeployHelper.DeployDatabase(sourceDbType' sourceConnectionString' destinationDbType' destinationConnectionString' includeData); " is 130.
Long Statement,TestEasy.Azure,StorageServiceExtensions,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\StorageServiceExtensions.cs,CreateContainer,The length of the statement  "            // there possible exception "Conflict" 409 which can be caused by independent on the code reasosns in developer environment' " is 124.
Long Statement,TestEasy.Azure,StorageServiceExtensions,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\StorageServiceExtensions.cs,CreateContainer,The length of the statement  "                    TestEasyLog.Instance.Warning(string.Format("Failed to create a container '{0}'. Message: '{1}'' Status code: '{2}'' Status Message: '{3}'"' containerName' e.Message' e.RequestInformation.HttpStatusCode' e.RequestInformation.HttpStatusMessage)); " is 244.
Long Statement,TestEasy.Azure,PublishProfileExtensions,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\PublishProfileExtensions.cs,GetWebDeployUrl,The length of the statement  "            return string.Format(AzureServiceConstants.AzureWebDeployUrl' profile.PublishUrl' HttpUtility.UrlEncode(profile.MSDeploySite)); " is 127.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,GetWebSiteConfig,The length of the statement  "            var rawResult = WebSiteManagementClient.WebSites.GetConfigurationAsync(webSpaceName' siteName' new CancellationToken()).Result; " is 127.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,UpdateWebSiteConfig,The length of the statement  "            WebSiteManagementClient.WebSites.UpdateConfigurationAsync(webSpaceName' siteName' updateConfigParams' new CancellationToken()).Wait(); " is 134.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,DeleteWebSite,The length of the statement  "            var result = WebSiteManagementClient.WebSites.DeleteAsync(webSpaceName' siteName' new WebSiteDeleteParameters()' new CancellationToken()).Result; " is 145.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,GetPublishingProfiles,The length of the statement  "            var result = WebSiteManagementClient.WebSites.GetPublishProfileAsync(webSpaceName' siteName' new CancellationToken()).Result; " is 125.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,GetPublishingProfile,The length of the statement  "            return GetPublishingProfiles(webSpaceName' siteName).FirstOrDefault(p => p.PublishMethod.Equals(publishMethod.ToString()' StringComparison.OrdinalIgnoreCase)); " is 159.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishWebSite,The length of the statement  "                throw new DirectoryNotFoundException(string.Format("Publishing error: site directory '{0}' does not exist."' siteRoot)); " is 120.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishWebSite,The length of the statement  "                    WebDeployHelper.DeployWebSite(siteRoot' siteName' publishProfile.GetWebDeployUrl()' publishProfile.UserName' publishProfile.UserPassword' deleteExisting' paramResolverFunc); " is 173.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishFile,The length of the statement  "                    WebDeployHelper.DeployFile(file' fileRelativePath' publishProfile.GetWebDeployUrl()' publishProfile.UserName' publishProfile.UserPassword' deleteExisting' paramResolverFunc); " is 174.
Long Statement,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishDirectory,The length of the statement  "                    TestEasyLog.Instance.Info(string.Format("Publishing directory '{0}' to website path '{1}'"' directory' destinationUrl)); " is 120.
Long Statement,TestEasy.Azure,AzureStorageServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureStorageServiceManager.cs,IsStorageServiceNameAvailable,The length of the statement  "            return StorageManagementClient.StorageAccounts.CheckNameAvailabilityAsync(storageServiceName' new CancellationToken()).Result.IsAvailable; " is 138.
Long Statement,TestEasy.Azure,Subscription,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Subscription.cs,Initialize,The length of the statement  "            Credentials = new CertificateCloudCredentials(SubscriptionId' new X509Certificate2(Convert.FromBase64String(certString)));             " is 122.
Long Statement,TestEasy.Azure,TestResourcesCollector,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\TestResourcesCollector.cs,SafeExecute,The length of the statement  "                TestEasyLog.Instance.Warning(string.Format("There was an exception while cleaning up {0}: '{1}'"' objectName' message)); " is 120.
Long Statement,TestEasy.Azure,TestEasyLogExtensions,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\TestEasyLogExtensions.cs,LogObject,The length of the statement  "            log.Info(string.Format("Deployment Results \n  Added: {0}\n  Updated: {1}\n  Deleted: {2}\n  Total Errors: {3}\n  Total Changes: {4}"' " is 134.
Long Statement,TestEasy.Azure,TestEasyLogExtensions,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\TestEasyLogExtensions.cs,LogObject,The length of the statement  "            log.Info(string.Format("HostedService Label:{0}"' Base64EncodingHelper.DecodeFromBase64String(hostedServiceProperties.Label))); " is 127.
Long Statement,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,ResetPassword,The length of the statement  "            wamlClient.Servers.ChangeAdministratorPasswordAsync(this.Name' new WAML.Sql.Models.ServerChangeAdministratorPasswordParameters {  " is 128.
Long Statement,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,CreateFirewallRule,The length of the statement  "                TestEasyLog.Instance.Info(string.Format("Updating existing firewall rule '{1}' for azure sql server '{0}'"' this.Name' ruleName)); " is 130.
Long Statement,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,CreateFirewallRule,The length of the statement  "                TestEasyLog.Instance.Info(string.Format("Creating firewall rule '{1}' for azure sql server '{0}'"' this.Name' ruleName)); " is 121.
Long Statement,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,CreateFirewallRuleAutoDetect,The length of the statement  "            //return new SqlAzureServerFirewallRule { Name = result.Name' StartIpAddress = result.StartIPAddress' EndIpAddress = result.EndIPAddress }; " is 139.
Long Statement,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,DeleteFirewallRule,The length of the statement  "            TestEasyLog.Instance.Info(string.Format("Deleting firewall rule '{1}' for azure sql server '{0}'"' this.Name' ruleName)); " is 121.
Long Statement,TestEasy.Azure.Sql,SqlAzureDatabase,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureDatabase.cs,BuildConnectionString,The length of the statement  "            return string.Format(AzureServiceConstants.AzureSqlConnectionString' serverName' databaseName' user' password' Dependencies.Subscription.DatabaseDomain); " is 153.
Long Statement,TestEasy.Azure.Helpers,SqlHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\SqlHelper.cs,ExecuteQuery,The length of the statement  "                                "There was some exception while executing sql query: '{0}'' Stack trace: '{1}'' connectionString: '{2}'' sqlQuery:'{3}'"' " is 121.
Long Statement,TestEasy.Azure.Helpers,SqlHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\SqlHelper.cs,SafeExecuteQuery,The length of the statement  "                throw new Exception(string.Format("There was some problem while running SQL query after {0} retries. See exceptions in the log."' RetryCount)); " is 143.
Long Statement,TestEasy.Azure.Helpers,SqlHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\SqlHelper.cs,ExecuteSelectQuery,The length of the statement  "                                "There was some exception while executing sql query: '{0}'' Stack trace: '{1}'' connectionString: '{2}'' sqlQuery:'{3}'"' " is 121.
Long Statement,TestEasy.Azure.Helpers,SqlHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\SqlHelper.cs,ExecuteFunction,The length of the statement  "                                "There was some exception while executing sql query: '{0}'' Stack trace: '{1}'' connectionString: '{2}'' sqlQuery:'{3}'"' " is 121.
Long Statement,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,DeployDatabase,The length of the statement  "            PrepareDatabaseDeployment(destinationDbType' out destProvider' out destBaseOptions' includeData' dropDestinationDatabase); " is 122.
Long Statement,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,Deploy,The length of the statement  "            // We want to ignore errors to delete files because this is what WebMatrix does.  This may result in a partial deployment " is 121.
Long Statement,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,Deploy,The length of the statement  "            destBaseOptions.AddDefaultProviderSetting(DeploymentWellKnownProvider.FilePath.ToString()' "ignoreErrors"' "0x80070005;0x80070020;0x80070091"); " is 143.
Long Statement,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,Deploy,The length of the statement  "            destBaseOptions.AddDefaultProviderSetting(DeploymentWellKnownProvider.DirPath.ToString()' "ignoreErrors"' "0x80070005;0x80070020;0x80070091"); " is 142.
Long Statement,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,Deploy,The length of the statement  "            ExecuteDeploy(sourcePath' destinationPath' srcProvider' srcBaseOptions' destProvider' destBaseOptions' destSyncOptions' syncParamResolver' removedParameters); " is 158.
Empty Catch Block,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,GetDeployment,The method has an empty catch block.
Empty Catch Block,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,GetDeploymentBySlot,The method has an empty catch block.
Magic Number,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,BreakVhdLeases,The following statement contains a magic number: RetryHelper.RetryUntil(() =>              {                  var remainingVhdsLeased = vhdManager.GetVirtualHardDisks().Where(vhd => vhd.UsageDetails.HostedServiceName == hostedServiceName);                  return !remainingVhdsLeased.Any();              }' 30' TimeSpan.FromSeconds(5));
Magic Number,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,BreakVhdLeases,The following statement contains a magic number: RetryHelper.RetryUntil(() =>              {                  var remainingVhdsLeased = vhdManager.GetVirtualHardDisks().Where(vhd => vhd.UsageDetails.HostedServiceName == hostedServiceName);                  return !remainingVhdsLeased.Any();              }' 30' TimeSpan.FromSeconds(5));
Magic Number,TestEasy.Azure,AzureCloudServiceManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureCloudServiceManager.cs,WaitForRoleToRespond,The following statement contains a magic number: return RetryHelper.RetryUntil(() => _webRequestor.PingUrl(url)' timeoutInMilliSeconds / 1000' TimeSpan.FromSeconds(1));
Magic Number,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishDirectory,The following statement contains a magic number: levelUpRequested = 2;
Magic Number,TestEasy.Azure,AzureWebSiteManager,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\AzureWebSiteManager.cs,PublishDirectory,The following statement contains a magic number: levelUpRequested > 2
Magic Number,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,GetDatabases,The following statement contains a magic number: database.MaxSize = (SqlAzureDatabaseMaxSize)(((Int64)obj)/1024/1024/1024);
Magic Number,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,GetDatabases,The following statement contains a magic number: database.MaxSize = (SqlAzureDatabaseMaxSize)(((Int64)obj)/1024/1024/1024);
Magic Number,TestEasy.Azure.Sql,SqlAzureServer,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Sql\SqlAzureServer.cs,GetDatabases,The following statement contains a magic number: database.MaxSize = (SqlAzureDatabaseMaxSize)(((Int64)obj)/1024/1024/1024);
Missing Default,TestEasy.Azure.Helpers,WebDeployHelper,D:\research\architectureSmells\repos\Microsoft_TestEasy\src\TestEasy.Azure\Helpers\WebDeployHelper.cs,PrepareDatabaseDeployment,The following switch statement is missing a default case: switch (dbType)              {                  case WebDeployDatabaseType.SqlCe:                  case WebDeployDatabaseType.FullSql:                      provider = DeploymentWellKnownProvider.DBDacFx;                      break;                  case WebDeployDatabaseType.MySql:                      provider = DeploymentWellKnownProvider.DBMySql;                      break;              }
