Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,Cyclomatic complexity of the method is 11
Complex Method,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,FixedUpdate,Cyclomatic complexity of the method is 7
Long Parameter List,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,HasAntennaParameter,The method has 8 parameters.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "coverage"' x => coverage = x' this' 1.0' x => Validation.BetweenInclusive (x' 0.0' 1.0)); " is 146.
Long Statement,ContractConfigurator.RemoteTech,ActiveVesselRangeRequirement,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\ActiveVesselRangeRequirement.cs,RequirementText,The length of the statement  "	string output = "Must " + (invertRequirement ? "not " : "") + "have a RemoteTech constellation orbiting " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName (true)) + " with an antenna or dish aimed at the active vessel with a range of at least " + (range / 1000.0).ToString ("N0") + " km"; " is 311.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,LoadFromConfig,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "minCoverage"' x => minCoverage = x' this' 0.0' x => Validation.BetweenInclusive (x' 0.0' 1.0)); " is 152.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,LoadFromConfig,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "maxCoverage"' x => maxCoverage = x' this' 1.0' x => Validation.BetweenInclusive (x' 0.0' 1.0)); " is 152.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,RequirementText,The length of the statement  "	string output = "Must " + (invertRequirement ? "not " : "") + "have between " + (minCoverage * 100).ToString ("N0") + "% and " + (maxCoverage * 100).ToString ("N0") + "% RemoteTech coverage of " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName (true)); " is 275.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The length of the statement  "		AddParameter (new ParameterDelegate<IAntenna> ("Target: Active vessel"' a => a.Target == NetworkManager.ActiveVesselGuid || a.Omni > 0.0' matchType)); " is 150.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The length of the statement  "		AddParameter (new ParameterDelegate<IAntenna> ("Target: " + targetBody.CleanDisplayName ()' a => a.Target == targetBody.Guid ()' matchType)); " is 141.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The length of the statement  "			output += "Between " + RemoteTechAssistant.RangeString (minRange) + " and " + RemoteTechAssistant.RangeString (maxRange); " is 121.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The length of the statement  "		AddParameter (new ParameterDelegate<IAntenna> (output' a => Math.Max (a.Omni' a.Dish) >= minRange && Math.Max (a.Omni' a.Dish) <= maxRange' matchType)); " is 152.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The length of the statement  "		AddParameter (new ParameterDelegate<IAntenna> ("Range: In range of " + targetBody.CleanDisplayName (true)' a => Math.Max (a.Omni' a.Dish) >= distance' matchType' true)); " is 169.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "		valid &= ConfigNodeUtil.ParseValue<CelestialBody> (configNode' "targetBody"' x => _targetBody = x' this' (CelestialBody)null); " is 126.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<int> (configNode' "minCount"' x => minCount = x' this' 1' x => Validation.GE (x' 0)); " is 120.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<int> (configNode' "maxCount"' x => maxCount = x' this' int.MaxValue' x => Validation.GE (x' 0)); " is 131.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "minRange"' x => minRange = x' this' 0.0' x => Validation.GE (x' 0.0)); " is 127.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "maxRange"' x => maxRange = x' this' double.MaxValue' x => Validation.GE (x' 0.0)); " is 139.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<HasAntennaParameter.AntennaType?> (configNode' "antennaType"' x => antennaType = x' this' (HasAntennaParameter.AntennaType?)null); " is 165.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Generate,The length of the statement  "	HasAntennaParameter param = new HasAntennaParameter (minCount' maxCount' _targetBody' activeVessel' antennaType' minRange' maxRange' title); " is 140.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The length of the statement  "	fakeSatellite.Position = body.GetWorldSurfacePosition (Math.Sin ((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0); " is 170.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,OnLoad,The length of the statement  "		ExceptionLogWindow.DisplayFatalException (ExceptionLogWindow.ExceptionSituation.SCENARIO_MODULE_LOAD' e' "RemoteTechProgressTracker"); " is 134.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,OnSave,The length of the statement  "		ExceptionLogWindow.DisplayFatalException (ExceptionLogWindow.ExceptionSituation.SCENARIO_MODULE_SAVE' e' "RemoteTechProgressTracker"); " is 134.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,Start,The length of the statement  "	if (HighLogic.LoadedScene != GameScenes.FLIGHT && HighLogic.LoadedScene != GameScenes.SPACECENTER && HighLogic.LoadedScene != GameScenes.TRACKSTATION) { " is 152.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,FixedUpdate,The length of the statement  "	foreach (VesselSatellite s in RTCore.Instance.Satellites.Concat (RTCore.Instance.Satellites).Skip (mTickIndex).Take (takeCount)) { " is 130.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnRegister,The length of the statement  "	ContractVesselTracker.OnVesselAssociation.Add (new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent (OnVesselAssociation)); " is 137.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnRegister,The length of the statement  "	ContractVesselTracker.OnVesselDisassociation.Add (new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent (OnVesselDisassociation)); " is 143.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnUnregister,The length of the statement  "	ContractVesselTracker.OnVesselAssociation.Remove (new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent (OnVesselAssociation)); " is 140.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnUnregister,The length of the statement  "	ContractVesselTracker.OnVesselDisassociation.Remove (new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent (OnVesselDisassociation)); " is 146.
Long Statement,ContractConfigurator.RemoteTech,SignalDelayFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\SignalDelayFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "minSignalDelay"' x => minSignalDelay = x' this' 0.0' x => Validation.GE (x' 0.0)); " is 139.
Long Statement,ContractConfigurator.RemoteTech,SignalDelayFactory,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\SignalDelayFactory.cs,Load,The length of the statement  "	valid &= ConfigNodeUtil.ParseValue<double> (configNode' "maxSignalDelay"' x => maxSignalDelay = x' this' double.MaxValue' x => Validation.GE (x' 0.0)); " is 151.
Complex Conditional,ContractConfigurator.RemoteTech,HasAntennaParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The conditional expression  "minCount != 0 || maxCount != int.MaxValue && !(minCount == maxCount && maxCount == 0)"  is complex.
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: if (string.IsNullOrEmpty (title)) {  	output = targetBody.name + ": Communication coverage: ";  	if (currentCoverage >= 0.0 && state != ParameterState.Complete) {  		output += (currentCoverage * 100).ToString ("F0") + "% / ";  	}  	output += (coverage * 100).ToString ("F0") + "%";  } else {  	output = title;  }  
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: if (string.IsNullOrEmpty (title)) {  	output = targetBody.name + ": Communication coverage: ";  	if (currentCoverage >= 0.0 && state != ParameterState.Complete) {  		output += (currentCoverage * 100).ToString ("F0") + "% / ";  	}  	output += (coverage * 100).ToString ("F0") + "%";  } else {  	output = title;  }  
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: if (currentCoverage >= 0.0 && state != ParameterState.Complete) {  	output += (currentCoverage * 100).ToString ("F0") + "% / ";  }  
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: output += (currentCoverage * 100).ToString ("F0") + "% / ";  
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: output += (coverage * 100).ToString ("F0") + "%";  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: if (tick++ % UPDATE_INTERVAL != 0) {  	if (priorityList.Count > 0 && tick % UPDATE_INTERVAL == UPDATE_INTERVAL / 2) {  		priorityUpdate = true;  	} else {  		return;  	}  }  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: if (priorityList.Count > 0 && tick % UPDATE_INTERVAL == UPDATE_INTERVAL / 2) {  	priorityUpdate = true;  } else {  	return;  }  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition (Math.Sin ((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition (Math.Sin ((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition (Math.Sin ((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition (Math.Sin ((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0) {  	range /= 1000.0;  	unit++;  }  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0) {  	range /= 1000.0;  	unit++;  }  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0) {  	range /= 1000.0;  	unit++;  }  
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,D:\newReposJune17\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: range /= 1000.0;  
