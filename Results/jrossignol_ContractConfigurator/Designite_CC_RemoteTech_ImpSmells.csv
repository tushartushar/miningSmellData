Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ContractConfigurator.RemoteTech,HasAntennaParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,Cyclomatic complexity of the method is 8
Complex Method,ContractConfigurator.RemoteTech,RemoteTechAssistant,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,FixedUpdate,Cyclomatic complexity of the method is 8
Long Parameter List,ContractConfigurator.RemoteTech,HasAntennaParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,HasAntennaParameter,The method has 8 parameters. Parameters: minCount' maxCount' targetBody' activeVessel' antennaType' minRange' maxRange' title
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "coverage"' x => coverage = x' this' 1.0' x => Validation.BetweenInclusive(x' 0.0' 1.0)); " is 144.
Long Statement,ContractConfigurator.RemoteTech,ActiveVesselRangeRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\ActiveVesselRangeRequirement.cs,RequirementText,The length of the statement  "            string output = "Must " + (invertRequirement ? "not " : "") + "have a RemoteTech constellation orbiting " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName(true)) + " with an antenna or dish aimed at the active vessel with a range of at least " + (range / 1000.0).ToString("N0") + " km"; " is 309.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,LoadFromConfig,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "minCoverage"' x => minCoverage = x' this' 0.0' x => Validation.BetweenInclusive(x' 0.0' 1.0)); " is 150.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,LoadFromConfig,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "maxCoverage"' x => maxCoverage = x' this' 1.0' x => Validation.BetweenInclusive(x' 0.0' 1.0)); " is 150.
Long Statement,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,RequirementText,The length of the statement  "            string output = "Must " + (invertRequirement ? "not " : "") + "have between " + (minCoverage*100).ToString("N0") + "% and " + (maxCoverage*100).ToString("N0") + "% RemoteTech coverage of " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName(true)); " is 268.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "                valid &= ConfigNodeUtil.ParseValue<CelestialBody>(configNode' "targetBody"' x => _targetBody = x' this' (CelestialBody)null); " is 125.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<int>(configNode' "maxCount"' x => maxCount = x' this' int.MaxValue' x => Validation.GE(x' 0)); " is 129.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "minRange"' x => minRange = x' this' 0.0' x => Validation.GE(x' 0.0)); " is 125.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "maxRange"' x => maxRange = x' this' double.MaxValue' x => Validation.GE(x' 0.0)); " is 137.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<HasAntennaParameter.AntennaType?>(configNode' "antennaType"' x => antennaType = x' this' (HasAntennaParameter.AntennaType?)null); " is 164.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.MutuallyExclusive(configNode' new string[] { "activeVessel" }' new string[] { "targetBody" }' this); " is 124.
Long Statement,ContractConfigurator.RemoteTech,HasAntennaFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaFactory.cs,Generate,The length of the statement  "            HasAntennaParameter param = new HasAntennaParameter(minCount' maxCount' _targetBody' activeVessel' antennaType' minRange' maxRange' title); " is 139.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The length of the statement  "            fakeSatellite.Position = body.GetWorldSurfacePosition(Math.Sin((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0); " is 168.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,OnLoad,The length of the statement  "                ExceptionLogWindow.DisplayFatalException(ExceptionLogWindow.ExceptionSituation.SCENARIO_MODULE_LOAD' e' "RemoteTechProgressTracker"); " is 133.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,OnSave,The length of the statement  "                ExceptionLogWindow.DisplayFatalException(ExceptionLogWindow.ExceptionSituation.SCENARIO_MODULE_SAVE' e' "RemoteTechProgressTracker"); " is 133.
Long Statement,ContractConfigurator.RemoteTech,RemoteTechAssistant,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,FixedUpdate,The length of the statement  "            foreach (VesselSatellite s in RTCore.Instance.Satellites.Concat(RTCore.Instance.Satellites).Skip(mTickIndex).Take(takeCount)) " is 125.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnRegister,The length of the statement  "            ContractVesselTracker.OnVesselAssociation.Add(new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent(OnVesselAssociation)); " is 135.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnRegister,The length of the statement  "            ContractVesselTracker.OnVesselDisassociation.Add(new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent(OnVesselDisassociation)); " is 141.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnUnregister,The length of the statement  "            ContractVesselTracker.OnVesselAssociation.Remove(new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent(OnVesselAssociation)); " is 138.
Long Statement,ContractConfigurator.RemoteTech,VesselConnectivityParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\VesselConnectivityParameter.cs,OnUnregister,The length of the statement  "            ContractVesselTracker.OnVesselDisassociation.Remove(new EventData<GameEvents.HostTargetAction<Vessel' string>>.OnEvent(OnVesselDisassociation)); " is 144.
Long Statement,ContractConfigurator.RemoteTech,SignalDelayFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\SignalDelayFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "minSignalDelay"' x => minSignalDelay = x' this' 0.0' x => Validation.GE(x' 0.0)); " is 137.
Long Statement,ContractConfigurator.RemoteTech,SignalDelayFactory,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\SignalDelayFactory.cs,Load,The length of the statement  "            valid &= ConfigNodeUtil.ParseValue<double>(configNode' "maxSignalDelay"' x => maxSignalDelay = x' this' double.MaxValue' x => Validation.GE(x' 0.0)); " is 149.
Complex Conditional,ContractConfigurator.RemoteTech,HasAntennaParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\HasAntennaParameter.cs,CreateDelegates,The conditional expression  "minCount != 0 || maxCount != int.MaxValue && !(minCount == maxCount && maxCount == 0)"  is complex.
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: if (string.IsNullOrEmpty(title))              {                  output = targetBody.name + ": Communication coverage: ";                  if (currentCoverage >= 0.0 && state != ParameterState.Complete)                  {                      output += (currentCoverage * 100).ToString("F0") + "% / ";                  }                  output += (coverage * 100).ToString("F0") + "%";              }              else              {                  output = title;              }
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageParameter,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageParameter.cs,GetParameterTitle,The following statement contains a magic number: if (string.IsNullOrEmpty(title))              {                  output = targetBody.name + ": Communication coverage: ";                  if (currentCoverage >= 0.0 && state != ParameterState.Complete)                  {                      output += (currentCoverage * 100).ToString("F0") + "% / ";                  }                  output += (coverage * 100).ToString("F0") + "%";              }              else              {                  output = title;              }
Magic Number,ContractConfigurator.RemoteTech,ActiveVesselRangeRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\ActiveVesselRangeRequirement.cs,RequirementText,The following statement contains a magic number: string output = "Must " + (invertRequirement ? "not " : "") + "have a RemoteTech constellation orbiting " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName(true)) + " with an antenna or dish aimed at the active vessel with a range of at least " + (range / 1000.0).ToString("N0") + " km";
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,RequirementText,The following statement contains a magic number: string output = "Must " + (invertRequirement ? "not " : "") + "have between " + (minCoverage*100).ToString("N0") + "% and " + (maxCoverage*100).ToString("N0") + "% RemoteTech coverage of " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName(true));
Magic Number,ContractConfigurator.RemoteTech,CelestialBodyCoverageRequirement,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\CelestialBodyCoverageRequirement.cs,RequirementText,The following statement contains a magic number: string output = "Must " + (invertRequirement ? "not " : "") + "have between " + (minCoverage*100).ToString("N0") + "% and " + (maxCoverage*100).ToString("N0") + "% RemoteTech coverage of " + (targetBody == null ? "the target body" : targetBody.CleanDisplayName(true));
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: if (tick++ % UPDATE_INTERVAL != 0)              {                  if (priorityList.Count > 0 && tick % UPDATE_INTERVAL == UPDATE_INTERVAL / 2)                  {                      priorityUpdate = true;                  }                  else                  {                      return;                  }              }
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition(Math.Sin((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition(Math.Sin((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition(Math.Sin((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);
Magic Number,ContractConfigurator.RemoteTech,RemoteTechProgressTracker,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechProgressTracker.cs,FixedUpdate,The following statement contains a magic number: fakeSatellite.Position = body.GetWorldSurfacePosition(Math.Sin((i * LAT_OFFSET) / POINT_COUNT * 2.0 * Math.PI) * 45.0' (i * LON_OFFSET) / POINT_COUNT * 360.0' 10000.0);
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0)              {                  range /= 1000.0;                  unit++;              }
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0)              {                  range /= 1000.0;                  unit++;              }
Magic Number,ContractConfigurator.RemoteTech,RemoteTechAssistant,C:\repos\jrossignol_ContractConfigurator\source\CC_RemoteTech\RemoteTechAssistant.cs,RangeString,The following statement contains a magic number: while (unit < 4 && range >= 10000.0)              {                  range /= 1000.0;                  unit++;              }
